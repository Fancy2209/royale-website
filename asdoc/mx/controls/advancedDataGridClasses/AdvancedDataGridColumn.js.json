{ "type": "class",
  "qname": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "baseClassname": "mx.controls.dataGridClasses.DataGridColumn"
  ,
    "description": "The AdvancedDataGridColumn class describes a column in an AdvancedDataGrid control. There is one AdvancedDataGridColumn per displayable column, even if a column is hidden or off-screen. The data provider items of an AdvancedDataGrid control can contain properties that are not displayed, and therefore, do not need an AdvancedDataGridColumn. An AdvancedDataGridColumn allows specification of the color and font of the text in a column; specification of what kind of component displays the data for the column; specification of whether the column is editable, sortable, or resizeable; and specification of the text for the column header.  <p><strong>Notes:</strong><ul> <li>An AdvancedDataGridColumn only holds information about a column; it is not the parent of the item renderers in the column.</li> <li>If you specify an AdvancedDataGridColumn class without a <code>dataField</code> property, you must specify a <code>sortCompareFunction</code> property. Otherwise, sort operations may cause run-time errors.</li></ul> </p>   <p>You use the <code>&lt;mx.AdvancedDataGridcolumn&gt;</code> tag to configure a column of a AdvancedDataGrid control. You specify the <code>&lt;mx.AdvancedDataGridcolumn&gt;</code> tag as a child of the <code>columns</code> property in MXML. The <code>&lt;mx.AdvancedDataGridcolumn&gt;</code> tag inherits all of the tag attributes of its superclass, and adds the following tag attributes:</p>  <pre> &lt;mx:AdvancedDataGridColumn <b>Properties </b> dataField=\\&quot;<i>No default</i>\\&quot; dataTipField=\\&quot;<i>No default</i>\\&quot; dataTipFunction=\\&quot;<i>No default</i>\\&quot; editable=\\&quot;true|false\\&quot; editorDataField=\\&quot;text\\&quot; editorHeightOffset=\\&quot;0\\&quot; editorUsesEnterKey=\\&quot;false|true\\&quot; editorWidthOffset=\\&quot;0\\&quot; editorXOffset=\\&quot;0\\&quot; editorYOffset=\\&quot;0\\&quot; formatter=\\&quot;null\\&quot; headerRenderer=\\&quot;AdvancedDataGridHeaderRenderer\\&quot; headerText=\\&quot;<i>No default</i>\\&quot; headerWordWrap=\\&quot;undefined\\&quot; imeMode=\\&quot;null\\&quot; itemEditor=\\&quot;TextInput\\&quot; itemRenderer=\\&quot;AdvancedDataGridItemRenderer\\&quot; labelFunction=\\&quot;<i>No default</i>\\&quot; minWidth=\\&quot;20\\&quot; rendererIsEditor=\\&quot;false|true\\&quot; resizable=\\&quot;true|false\\&quot; showDataTips=\\&quot;false|true\\&quot; sortable=\\&quot;true|false\\&quot; sortCompareFunction=\\&quot;<i>No default</i>\\&quot; sortDescending=\\&quot;false|true\\&quot; styleFunction=\\&quot;<i>No default</i>\\&quot; visible=\\&quot;true|false\\&quot; width=\\&quot;100\\&quot; wordWrap=\\&quot;false|true\\&quot;  <b>Styles</b> backgroundColor=\\&quot;0xFFFFFF\\&quot; color=\\&quot;<i>No default.</i>\\&quot; disabledColor=\\&quot;0xAAB3B3\\&quot; fontAntiAliasType=\\&quot;advanced\\&quot; fontFamily=\\&quot;<i>No default</i>\\&quot; fontGridFitType=\\&quot;pixel\\&quot; fontSharpness=\\&quot;0\\&quot; fontSize=\\&quot;<i>No default</i>\\&quot; fontStyle=\\&quot;normal|italic\\&quot; fontThickness=\\&quot;0\\&quot; fontWeight=\\&quot;normal|bold\\&quot; headerStyleName=\\&quot;<i>No default</i>\\&quot; kerning=\\&quot;false|true\\&quot; letterSpacing=\\&quot;0\\&quot; paddingLeft=\\&quot;0\\&quot; paddingRight=\\&quot;0\\&quot; textAlign=\\&quot;right|center|left\\&quot; textDecoration=\\&quot;none|underline\\&quot; textIndent=\\&quot;0\\&quot; /&gt; </pre>",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.controls.AdvancedDataGrid", "mx.styles.CSSStyleDeclaration"]},
      {  "tagName": "royalesuppresspublicvarwarning",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  associated with the column, and the text for the header cell of this column.  This is equivalent to setting the <code>dataField</code> and <code>headerText</code> properties.",
        "tags": [
        {  "tagName": "param",
               "values": ["columnName The name of the field in the data provider"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "columnName", "type": "String"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "fontWeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "fontSize",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "accessor",
        "access": "read-write",
        "return": "uint",
        "qname": "color",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "textAlign",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Indicates whether the column sort is in ascending order, <code>false</code>, or descending order, <code>true</code>.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "editable",
        "return": "Boolean",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A flag that indicates whether the items in the column are editable. If <code>true</code>, and the AdvancedDataGrid's <code>editable</code> property is also <code>true</code>, the items in a column are editable and can be individually edited by clicking an item or by navigating to the item with the Tab and Arrow keys.",
        "tags": [
        {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "itemEditor",
        "return": "mx.core.IFactory",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A class factory for the instances of the item editor to use for the column, when it is editable.  <p>The default value is the mx.controls.TextInput control.</p>",
        "tags": [
        {  "tagName": "see",
               "values": ["mx.controls.TextInput"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "editorDataField",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The name of the property of the item editor that contains the new data for the list item. For example, the default <code>itemEditor</code> is TextInput, so the default value of the <code>editorDataField</code> property is <code>\\&quot;text\\&quot;</code>, which specifies the <code>text</code> property of the TextInput control.",
        "tags": [
        {  "tagName": "default",
               "values": ["&quot;text&quot;"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "editorUsesEnterKey",
        "return": "Boolean",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A flag that indicates whether the item editor uses Enter key. If <code>true</code> the item editor uses the Enter key and the AdvancedDataGrid will not look for the Enter key and move the editor in response. Note that changing this value while the editor is displayed will have no effect on the current editor, but will affect the next item renderer that opens an editor.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.core.IFactory",
        "qname": "headerRenderer",
        "namespace": "public",
        "bindable": ["headerRendererChanged"],
        "details": [],
        "deprecated": {},
          "description": "The class factory for item renderer instances that display the column header for the column. You can specify a drop-in item renderer, an inline item renderer, or a custom item renderer component as the value of this property.  <p>The default item renderer is the AdvancedDataGridItemRenderer class, which displays the item data as text. </p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "headerWordWrap",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Set to <code>true</code> to wrap the text in the column header if it does not fit on one line. If <code>undefined</code>, the AdvancedDataGrid control's <code>wordWrap</code> property is used. This property overrides the <code>headerWordWrap</code> property of the AdvancedDataGrid control.",
        "tags": [
        {  "tagName": "default",
               "values": ["undefined"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "minWidth",
        "namespace": "public",
        "bindable": ["minWidthChanged"],
        "details": [],
        "deprecated": {},
          "description": "The minimum width of the column, in pixels.",
        "tags": [
        {  "tagName": "default",
               "values": ["20"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "resizable",
        "return": "Boolean",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Set to <code>true</code> if the user is allowed to resize the width of the column. If <code>true</code>, the user can drag the grid lines between the column headers to resize the column.",
        "tags": [
        {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "showDataTips",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Set to <code>true</code> to show data tips in the column. If <code>true</code>, datatips are displayed for text in the rows. Datatips are tooltips designed to show the text that is too long for the row.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "sortable",
        "return": "Boolean",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Set to <code>true</code> to indicate that the user can click on the header of this column to sort the data provider. If this property and the AdvancedDataGrid <code>sortableColumns</code> property are both <code>true</code>, the AdvancedDataGrid control dispatches a <code>headerRelease</code> event when a user releases the mouse button on this column's header. If no other handler calls the <code>preventDefault()</code> method on the <code>headerRelease</code> event, the <code>dataField</code> property or <code>sortCompareFunction</code> in the column is used to reorder the items in the data provider.",
        "tags": [
        {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Function",
        "qname": "sortCompareFunction",
        "namespace": "public",
        "bindable": ["sortCompareFunctionChanged"],
        "details": [],
        "deprecated": {},
          "description": "A callback function that gets called when sorting the data in the column.  If this property is not specified, the sort tries to use a basic string or number sort on the data. If the data is not a string or number or if the <code>dataField</code> property is not a valid property of the data provider, the sort does not work or will generate an exception. If you specify a value of the <code>labelFunction</code> property, you typically also provide a function to the <code>sortCompareFunction</code> property, unless sorting is not allowed on this column. That means you specify a function when the value from the column's <code>dataField</code> does not sort in the same way as the computed value from the <code>labelFunction</code> property.  <p>The AdvancedDataGrid control uses this function to sort the elements of the data provider collection. The function signature of the callback function takes two parameters and has the following form:</p>  <pre>mySortCompareFunction(obj1:Object, obj2:Object):int </pre>  <p><code>obj1</code> &#x2014; A data element to compare.</p>  <p><code>obj2</code> &#x2014; Another data element to compare with <code>obj1</code>.</p>  <p>The function should return a value based on the comparison of the objects: </p> <ul> <li>-1 if obj1 should appear before obj2 in ascending order. </li> <li>0 if obj1 = obj2. </li> <li>1 if obj1 should appear after obj2 in ascending order.</li> </ul>  <p><strong>Note:</strong> The <code>obj1</code> and <code>obj2</code> parameters are entire data provider elements and not just the data for the item.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["null"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "visible",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "If <code>true</code>, the column is visible. Set to <code>false</code> to hide the column.",
        "tags": [
        {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "wordWrap",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Set to <code>false</code> to wrap the text in a row of this column because it does not fit on one line If <code>undefined</code>, the AdvancedDataGrid control's <code>wordWrap</code> property is used.",
        "tags": [
        {  "tagName": "default",
               "values": ["undefined"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Function",
        "qname": "styleFunction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A callback function that is called when rendering each cell. The signature of the function should be:  <pre>function myStyleFunction(data:Object, column:AdvancedDataGridColumn):Object</pre>  <p><code>data</code> - data object associated with the item being rendered.</p> <p><code>column</code> - AdvancedDataGridColumn instance with which the item renderer is associated.</p>  <p>The return value should be a object with styles as properties having the required values. For example: </p>  <pre>{ color:0xFF0000, fontWeight:\\&quot;bold\\&quot; }</pre>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "clone",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Clone this column and return a new Column with the same properties and styles as this one.  It does not set all the available properties",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "return",
               "values": ["col AdvancedDataGridColumn."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
          "params": []}
      ]
  }
