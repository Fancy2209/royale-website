{ "type": "class",
  "qname": "spark.components.ComboBox",
  "baseClassname": "spark.components.supportClasses.DropDownListBase"
  ,
    "description": "The ComboBox control is a child class of the DropDownListBase control. Like the DropDownListBase control, when the user selects an item from the drop-down list in the ComboBox control, the data item appears in the prompt area of the control.  <p>One difference between the controls is that the prompt area of the ComboBox control is implemented by using the TextInput control, instead of the Label control for the DropDownList control. Therefore, a user can edit the prompt area of the control to enter a value that is not one of the predefined options.</p>  <p>For example, the DropDownList control only lets the user select from a list of predefined items in the control. The ComboBox control lets the user either select a predefined item, or enter a new item into the prompt area. When the user enters a new item, the <code>selectedIndex</code> property is set to -3. Your application can recognize that a new item has been entered and, optionally, add it to the list of items in the control.</p>  <p>The ComboBox control also searches the item list as the user enters characters into the prompt area. As the user enters characters, the drop-down area of the control opens. It then scrolls to and highlights the closest match in the item list.</p>  <p>To use this component in a list-based component, such as a List or DataGrid, create an item renderer. For information about creating an item renderer, see <a href=\\&quot;http://help.adobe.com/en_US/flex/using/WS4bebcd66a74275c3-fc6548e124e49b51c4-8000.html\\&quot;> Custom Spark item renderers</a>. </p>  <p><b>Note: </b>The Spark list-based controls (the Spark ListBase class and its subclasses such as ButtonBar, ComboBox, DropDownList, List, and TabBar) do not support the BasicLayout class as the value of the <code>layout</code> property. Do not use BasicLayout with the Spark list-based controls.</p>  <p>The ComboBox control has the following default characteristics:</p> <table class=\\&quot;innertable\\&quot;> <tr> <th>Characteristic</th> <th>Description</th> </tr> <tr> <td>Default size</td> <td>146 pixels wide by 23 pixels high</td> </tr> <tr> <td>Minimum size</td> <td>20 pixels wide by 23 pixels high</td> </tr> <tr> <td>Maximum size</td> <td>10000 pixels wide and 10000 pixels high</td> </tr> <tr> <td>Default skin class</td> <td>spark.skins.spark.ComboBoxSkin <p>spark.skins.spark.ComboBoxTextInputSkin</p></td> </tr> </table>  attributes of its superclass and adds the following tag attributes:</p>  <pre> &lt;s:ComboBox <strong>Properties</strong> itemMatchingFunction=\\&quot;null\\&quot; labelToItemFunction=\\&quot;null\\&quot; maxChars=\\&quot;0\\&quot; openOnInput=\\&quot;true\\&quot; prompt=\\&quot;null\\&quot; restrict=\\&quot;\\&quot;  <strong>Styles</strong> paddingBottom=\\&quot;3\\&quot; paddingLeft=\\&quot;3\\&quot; paddingRight=\\&quot;3\\&quot; paddingTop=\\&quot;5\\&quot; /&gt; </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/ComboBoxExample.mxml"]},
      {  "tagName": "see",
         "values": ["spark.skins.spark.ComboBoxSkin", "spark.skins.spark.ComboBoxTextInputSkin"]},
      {  "tagName": "mxml",
         "values": ["<p>The <code>&lt;s:ComboBox&gt;</code> tag inherits all of the tag"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.ComboBox",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.collections.IList",
        "qname": "dataProvider",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "see",
               "values": ["#itemRenderer", "#itemRendererFunction", "mx.collections.IList", "mx.collections.ArrayCollection", "mx.collections.ArrayList", "mx.collections.XMLListCollection", "#itemRenderer", "#itemRendererFunction", "mx.collections.IList", "mx.collections.ArrayCollection", "mx.collections.ArrayList", "mx.collections.XMLListCollection", "#itemRenderer", "#itemRendererFunction", "mx.collections.IList", "mx.collections.ArrayCollection", "mx.collections.ArrayList", "mx.collections.XMLListCollection"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["spark.components.DataGroup#dataProvider", "spark.components.DataGroup#dataProvider", "spark.components.DataGroup#dataProvider"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4", "Royale 0.9.4", "Royale 0.9.4"]},
            {  "tagName": "royaleignorecoercion",
               "values": ["spark.components.DataGroup", "spark.components.beads.SkinnableContainerView", "spark.components.DataGroup", "spark.components.beads.SkinnableContainerView", "spark.components.DataGroup", "spark.components.beads.SkinnableContainerView"]},
            {  "tagName": "langversion",
               "values": ["3.0", "3.0", "3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "selectedItem",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "The item that is currently selected. Setting this property deselects the currently selected item and selects the newly specified item.  <p>Setting <code>selectedItem</code> to an item that is not in this component results in no selection, and <code>selectedItem</code> being set to <code>undefined</code>.</p>  <p>If the selected item is removed, the selected item is set to:</p>  <ul> <li><code>undefined</code> if <code>requireSelection</code> = <code>false</code> or there are no remaining items.</li> <li>The first item if <code>requireSelection</code> = <code>true</code> and there is at least one item.</li> </ul>  <p>When the user changes the <code>selectedItem</code> property by interacting with the control, the control dispatches the <code>change</code> and <code>changing</code> events. When you change the value of the <code>selectedItem</code> property programmatically, it dispatches the <code>valueCommit</code> event.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["undefined", "undefined"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4", "Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0", "3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "enabled",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.core.IUIComponent#enabled", "mx.core.IUIComponent#enabled", "mx.core.IUIComponent#enabled", "mx.core.IUIComponent#enabled", "mx.core.IUIComponent#enabled", "mx.core.IUIComponent#enabled", "mx.core.IUIComponent#enabled"]},
            {  "tagName": "productversion",
               "values": ["Flex 3", "Flex 3", "Flex 3", "Flex 3", "Flex 3", "Flex 3", "Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0", "3.0", "3.0", "3.0", "3.0", "3.0", "3.0"]}  ]}]
  }
