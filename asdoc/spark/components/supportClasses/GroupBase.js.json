{ "type": "class",
  "qname": "spark.components.supportClasses.GroupBase",
  "baseClassname": "mx.core.UIComponent"
  ,
    "description": "The GroupBase class defines the base class for components that display visual elements. A group component does not control the layout of the visual items that it contains. Instead, the layout is handled by a separate layout component.   <p>The <code>&lt;s:GroupBase&gt;</code> tag inherits all of the tag attributes of its superclass and adds the following tag attributes:</p>  <pre> &lt;s:GroupBase <strong>Properties</strong> autoLayout=\\&quot;true\\&quot; clipAndEnableScrolling=\\&quot;false\\&quot; horizontalScrollPosition=\\&quot;null\\&quot; luminosityClip=\\&quot;false\\&quot; luminosityInvert=\\&quot;false\\&quot; layout=\\&quot;BasicLayout\\&quot; mask=\\&quot;\\&quot; maskType=\\&quot;clip\\&quot; mouseEnabledWhereTransparent=\\&quot;true\\&quot; resizeMode=\\&quot;noScale\\&quot; verticalScrollPosition=\\&quot;no default\\&quot;  <strong>Styles</strong> accentColor=\\&quot;0x0099FF\\&quot; alignmentBaseline=\\&quot;useDominantBaseline\\&quot; alternatingItemColors=\\&quot;undefined\\&quot; baselineShift=\\&quot;0\\&quot; blockProgression=\\&quot;tb\\&quot; breakOpportunity=\\&quot;auto\\&quot; cffHinting=\\&quot;horizontalStem\\&quot; chromeColor=\\&quot;0xCCCCCC\\&quot; color=\\&quot;0x000000\\&quot; contentBackgroundAlpha=\\&quot;1.0\\&quot; contentBackgroundColor=\\&quot;0xFFFFFF\\&quot; clearFloats=\\&quot;none\\&quot; digitCase=\\&quot;default\\&quot; digitWidth=\\&quot;default\\&quot; direction=\\&quot;ltr\\&quot; disabledAlpha=\\&quot;0.5\\&quot; dominantBaseline=\\&quot;auto\\&quot; firstBaselineOffset=\\&quot;auto\\&quot; focusColor=\\&quot;0x70B2EE\\&quot; focusedTextSelectionColor=\\&quot;A8C6EE\\&quot; fontFamily=\\&quot;Arial\\&quot; fontLookup=\\&quot;device\\&quot; fontSize=\\&quot;12\\&quot; fontStyle=\\&quot;normal\\&quot; fontWeight=\\&quot;normal\\&quot; inactiveTextSelectionColor=\\&quot;E8E8E8\\&quot; justificationRule=\\&quot;auto\\&quot; justificationStyle=\\&quot;auto\\&quot; kerning=\\&quot;auto\\&quot; leadingModel=\\&quot;auto\\&quot; ligatureLevel=\\&quot;common\\&quot; lineHeight=\\&quot;120%\\&quot; lineThrough=\\&quot;false\\&quot; listAutoPadding=\\&quot;40\\&quot; listStylePosition=\\&quot;outside\\&quot; listStyleType=\\&quot;disc\\&quot; locale=\\&quot;en\\&quot; paragraphEndIndent=\\&quot;0\\&quot; paragraphSpaceAfter=\\&quot;0\\&quot; paragraphSpaceBefore=\\&quot;0\\&quot; paragraphStartIndent=\\&quot;0\\&quot; renderingMode=\\&quot;cff\\&quot; rollOverColor=\\&quot;0xCEDBEF\\&quot; symbolColor=\\&quot;0x000000\\&quot; tabStops=\\&quot;null\\&quot; textAlign=\\&quot;start\\&quot; textAlignLast=\\&quot;start\\&quot; textAlpha=\\&quot;1\\&quot; textDecoration=\\&quot;none\\&quot; textIndent=\\&quot;0\\&quot; textJustify=\\&quot;interWord\\&quot; textRotation=\\&quot;auto\\&quot; trackingLeft=\\&quot;0\\&quot; trackingRight=\\&quot;0\\&quot; typographicCase=\\&quot;default\\&quot; unfocusedTextSelectionColor=\\&quot;0xE8E8E8\\&quot; whiteSpaceCollapse=\\&quot;collapse\\&quot; wordSpacing=\\&quot;100%,50%,150%\\&quot; /&gt; </pre>",
  "tags": [
  {  "tagName": "see",
         "values": ["spark.layouts.supportClasses.LayoutBase", "spark.components.ResizeMode"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.supportClasses.GroupBase",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.core.IParent",
        "qname": "strandChildren",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.core.IContentViewHost#strandChildren"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "layout",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The layout object for this container. This object is responsible for the measurement and layout of the visual elements in the container.",
        "tags": [
        {  "tagName": "default",
               "values": ["spark.layouts.BasicLayout"]},
            {  "tagName": "see",
               "values": ["spark.layouts.supportClasses.LayoutBase"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "getLayoutHost",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the ILayoutHost which is its view. From ILayoutParent.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.core.ILayoutHost",
          "params": []}
      ,
      { "type": "method",
        "qname": "getLayoutChildAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "mx.core.IUIComponent",
          "params": [{ "name": "index", "type": "int"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "measuredWidth",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "measuredHeight",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Number",
        "qname": "horizontalScrollPosition",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["spark.core.IViewport#horizontalScrollPosition"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Number",
        "qname": "verticalScrollPosition",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["spark.core.IViewport#verticalScrollPosition"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "clipAndEnableScrolling",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["spark.core.IViewport#clipAndEnableScrolling"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "autoLayout",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "If <code>true</code>, measurement and layout are done when the position or size of a child is changed. If <code>false</code>, measurement and layout are done only once, when children are added to or removed from the container.",
        "tags": [
        {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "createChildren",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "<p>If the layout object has not been set yet, createChildren() assigns this container a default layout object, BasicLayout.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.5"]},
            {  "tagName": "copy",
               "values": ["mx.core.UIComponent:createChildren()"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "MXMLDescriptor",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.core.Application#MXMLDescriptor"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "generateMXMLAttributes",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.core.Application#generateMXMLAttributes()"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "data", "type": "Array"}]}
      ,
      { "type": "field",
        "qname": "mxmlContent",
        "return": "Array",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royalesuppresspublicvarwarning",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.core.ItemRendererClassFactory#mxmlContent"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Number",
        "qname": "contentWidth",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["spark.core.IViewport#contentWidth"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Number",
        "qname": "contentHeight",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["spark.core.IViewport#contentHeight"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "setContentSize",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the <code>contentWidth</code> and <code>contentHeight</code> properties.  This method is intended for layout class developers who should call it from <code>updateDisplayList()</code> methods.",
        "tags": [
        {  "tagName": "param",
               "values": ["width The new value of <code>contentWidth</code>.", "height The new value of <code>contentHeight</code>."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "width", "type": "Number"},
        { "name": "height", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getVirtualElementAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Layouts that honor the <code>useVirtualLayout</code> flag will use this method at updateDisplayList() time to get layout elements that are \\&quot;in view\\&quot;, i.e. that overlap the Group's scrollRect.  <p>If the element to be returned wasn't already a visible child, i.e. if it was created or recycled, and either eltWidth or eltHeight is specified, then the element's initial size is set with setLayoutBoundsSize() before it's validated.  This is important for components, like text, that reflow when the layout is justified to the Group's width or height.</p>  <p>The returned layout element will have been validated.</p>  <p>This method will lazily create or \\&quot;recycle\\&quot; and validate layout elements as needed.</p>  <p>This method is not intended to be called directly, layouts that support virutalization will call it.</p>",
        "tags": [
        {  "tagName": "param",
               "values": ["index The index of the element to retrieve.", "eltWidth If specified, the newly created or recycled element's initial width.", "eltHeight If specified, the newly created or recycled element's initial height."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "return",
               "values": ["The validated element at the specified index."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.core.IVisualElement",
          "params": [{ "name": "index", "type": "int"},
        { "name": "eltWidth", "type": "Number"},
        { "name": "eltHeight", "type": "Number"}]}
      ]
  }
