{  "index": [{ "name": "$addElement",
  "type": "Method",
  "class": "org.apache.royale.core.IContainerBaseStrandChildrenHost",
  "description": ""},
{ "name": "$addElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Wizard",
  "description": ""},
{ "name": "$addElement",
  "type": "Method",
  "class": "org.apache.royale.html.Panel",
  "description": ""},
{ "name": "$addElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.FormItem",
  "description": ""},
{ "name": "$addElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.IContainerBaseStrandChildrenHost",
  "description": ""},
{ "name": "$getElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.IContainerBaseStrandChildrenHost",
  "description": ""},
{ "name": "$getElementAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.Wizard",
  "description": ""},
{ "name": "$getElementAt",
  "type": "Method",
  "class": "org.apache.royale.html.Panel",
  "description": ""},
{ "name": "$getElementAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.FormItem",
  "description": ""},
{ "name": "$getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.core.IContainerBaseStrandChildrenHost",
  "description": ""},
{ "name": "$numElements",
  "type": "Property",
  "class": "org.apache.royale.core.IContainerBaseStrandChildrenHost",
  "description": ""},
{ "name": "$numElements",
  "type": "Property",
  "class": "org.apache.royale.core.ContainerBase",
  "description": "Support strandChildren."},
{ "name": "$numElements",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "Support strandChildren."},
{ "name": "$numElements",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": ""},
{ "name": "$numElements",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "Support strandChildren."},
{ "name": "$numElements",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": "Support strandChildren."},
{ "name": "$numElements",
  "type": "Property",
  "class": "org.apache.royale.html.Panel",
  "description": ""},
{ "name": "$numElements",
  "type": "Property",
  "class": "org.apache.royale.jewel.FormItem",
  "description": ""},
{ "name": "$removeElement",
  "type": "Method",
  "class": "org.apache.royale.core.IContainerBaseStrandChildrenHost",
  "description": ""},
{ "name": "$sprite_numChildren",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "This property allows access to the Player's native implementation of the numChildren property, which can be useful since components can override numChildren and thereby hide the native implementation."},
{ "name": "$uibase_addChild",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "$uibase_addChildAt",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "$uibase_removeChild",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "$uibase_removeChildAt",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "A",
  "type": "Method",
  "class": "org.apache.royale.html.elements.A",
  "description": "constructor."},
{ "name": "A",
  "type": "Class",
  "description": "The A(Anchor) class represents an HTML <a> anchor element"},
{ "name": "A",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "* [static] Constant associated with the key code value for the A key (65)."},
{ "name": "ABOVE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "The top side only."},
{ "name": "ABSOLUTE",
  "type": "Property",
  "class": "mx.core.ContainerLayout",
  "description": "Use absolute layout for the contents of this container."},
{ "name": "ACCEPT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Accept, Commit, or OK key or button."},
{ "name": "ACCESSIBILITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCESSIBILITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACCESSIBLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCESSIBLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACCESSOR",
  "type": "Property",
  "class": "mx.binding.BindabilityInfo",
  "description": "Name of describeType() <accessor> element."},
{ "name": "ACCESS_ALARM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCESS_ALARM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACCESS_ALARMS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCESS_ALARMS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACCESS_TIME",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCESS_TIME",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACCOUNT_BALANCE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCOUNT_BALANCE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACCOUNT_BALANCE_WALLET",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCOUNT_BALANCE_WALLET",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACCOUNT_BOX",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCOUNT_BOX",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACCOUNT_CIRCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ACCOUNT_CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ACEEditor",
  "type": "Method",
  "class": "org.apache.royale.ace.ACEEditor",
  "description": "<inject_html> <script src=\"https://cdn."},
{ "name": "ACEEditor",
  "type": "Class",
  "description": ""},
{ "name": "ACKNOWLEDGE",
  "type": "Property",
  "class": "mx.messaging.events.MessageAckEvent",
  "description": "The ACKNOWLEDGE event type; dispatched upon receipt of an acknowledgement."},
{ "name": "ACTION",
  "type": "Property",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": "Action event name."},
{ "name": "ACTIVATE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ActivateEvent",
  "description": ""},
{ "name": "ACTIVE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkState",
  "description": "Value for the active state, which occurs when you hold the mouse down over a link."},
{ "name": "AC_UNIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AC_UNIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADB",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADB",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD",
  "type": "Property",
  "class": "mx.events.CollectionEventKind",
  "description": "Indicates that the collection added an item or items."},
{ "name": "ADD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_ALARM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_ALARM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_ALERT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_ALERT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_A_PHOTO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_A_PHOTO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_BOX",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_BOX",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_CELL",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that this cell should be added to the current selection."},
{ "name": "ADD_CIRCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_LOCATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_LOCATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_ROW",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that this row should be added to the current selection."},
{ "name": "ADD_SHOPING_CART",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_SHOPING_CART",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_SUBSCRIPTIONS",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Header used in a MULTI_SUBSCRIBE message to specify an Array of subtopic/selector pairs to add to the existing set of subscriptions."},
{ "name": "ADD_SUBSCRIPTIONS",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Header used in a MULTI_SUBSCRIBE message to specify an Array of subtopic/selector pairs to add to the existing set of subscriptions."},
{ "name": "ADD_TO_PHOTOS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_TO_PHOTOS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADD_TO_QUEUE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADD_TO_QUEUE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ADJUST",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ADJUST",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AGAIN",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Again key."},
{ "name": "AIRLINE_SEAT_FLAT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_FLAT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_FLAT_ANGLED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_FLAT_ANGLED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_INDIVIDUAL_SUITE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_INDIVIDUAL_SUITE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_LEGROOM_EXTRA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_LEGROOM_EXTRA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_LEGROOM_NORMAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_LEGROOM_NORMAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_LEGROOM_REDUCED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_LEGROOM_REDUCED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_RECLINE_EXTRA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_RECLINE_EXTRA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_RECLINE_NORMAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRLINE_SEAT_RECLINE_NORMAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRPLANEMODE_ACTIVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRPLANEMODE_ACTIVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRPLANEMODE_INACTIVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRPLANEMODE_INACTIVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRPLAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRPLAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AIRPORT_SHUTTLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AIRPORT_SHUTTLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ALARM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ALARM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ALARM_ADD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ALARM_ADD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ALARM_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ALARM_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ALARM_ON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ALARM_ON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ALBUM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ALBUM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ALL",
  "type": "Property",
  "class": "mx.logging.LogEventLevel",
  "description": "Tells a target to process all messages."},
{ "name": "ALL",
  "type": "Property",
  "class": "org.apache.royale.text.engine.BreakOpportunity",
  "description": ""},
{ "name": "ALL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableRules",
  "description": "Rules will appear between all rows and columns."},
{ "name": "ALL",
  "type": "Property",
  "class": "mx.core.ContainerCreationPolicy",
  "description": "Immediately create all descendants."},
{ "name": "ALL_BUT_LAST",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LineJustification",
  "description": ""},
{ "name": "ALL_BUT_MANDATORY_BREAK",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LineJustification",
  "description": ""},
{ "name": "ALL_INBOX",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ALL_INCLUDING_LAST",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LineJustification",
  "description": ""},
{ "name": "ALL_INCLUSIVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ALL_INCLUSIVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ALL_ITEMS_REMOVED",
  "type": "Property",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": ""},
{ "name": "ALL_OUT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ALL_OUT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ALPHANUMERIC_FULL",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "ALPHANUMERIC_HALF",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "ALT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Alt (Alternative) key."},
{ "name": "ALTERNATE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Alternate (Option) key (18)."},
{ "name": "ALT_GRAPH",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The AltGr or AltGraph (Alternate Graphics) key."},
{ "name": "ALWAYS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BreakStyle",
  "description": ""},
{ "name": "AMF0",
  "type": "Property",
  "class": "mx.net.ObjectEncoding",
  "description": "AMF0"},
{ "name": "AMF3",
  "type": "Property",
  "class": "mx.net.ObjectEncoding",
  "description": "AMF3"},
{ "name": "AMFBinaryData",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.amf.AMFBinaryData",
  "description": ""},
{ "name": "AMFBinaryData",
  "type": "Class",
  "description": "A version of BinaryData specific to AMF."},
{ "name": "AMFChannel",
  "type": "Method",
  "class": "mx.messaging.channels.AMFChannel",
  "description": "Constructor."},
{ "name": "AMFChannel",
  "type": "Class",
  "description": "The AMFChannel class provides the AMF support for messaging."},
{ "name": "AMFNetConnection",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.amf.AMFNetConnection",
  "description": "Constructor"},
{ "name": "AMFNetConnection",
  "type": "Class",
  "description": "Send data via AMF to a server."},
{ "name": "ANDROID",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ANDROID",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ANDROID_OS",
  "type": "Property",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "ANGULAR_AXIS",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarTransform",
  "description": "A string representing the angular axis."},
{ "name": "ANNOUNCEMENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ANNOUNCEMENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ANY",
  "type": "Property",
  "class": "org.apache.royale.text.engine.BreakOpportunity",
  "description": ""},
{ "name": "ANY_INDEX_MODE",
  "type": "Property",
  "class": "org.apache.royale.collections.Sort",
  "description": "When executing a find return the index any matching item."},
{ "name": "ANY_INDEX_MODE",
  "type": "Property",
  "class": "mx.collections.Sort",
  "description": "When executing a find return the index any matching item."},
{ "name": "ANY_INDEX_MODE",
  "type": "Property",
  "class": "spark.collections.Sort",
  "description": "When executing a find return the index any matching item."},
{ "name": "APPROXIMATE",
  "type": "Property",
  "class": "google.maps.GeocoderLocationType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "APPROXIMATE_TEXT_FIELD",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies a leading model that approximates the line spacing behavior of <code>TextField</code>."},
{ "name": "APPS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "APPS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AQUA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "ARABIC_INDIC",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Arabic script."},
{ "name": "ARCHIVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARCHIVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ARROW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.MouseCursor",
  "description": ""},
{ "name": "ARROW_BACK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_BACK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ARROW_BACK_IOS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_DOWNWARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_DOWNWARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ARROW_DROP_DOWN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_DROP_DOWN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ARROW_DROP_DOWN_CIRCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_DROP_DOWN_CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ARROW_DROP_UP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_DROP_UP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ARROW_FORWARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_FORWARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ARROW_FORWARD_IOS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_UPWARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ARROW_UPWARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ART_TRACK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ART_TRACK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AS3Array",
  "type": "Method",
  "class": "org.apache.royale.reflection.nativejs",
  "description": "Provides data for a stand-in TypeDefinition of the native as3 type for javascript"},
{ "name": "AS3Boolean",
  "type": "Method",
  "class": "org.apache.royale.reflection.nativejs",
  "description": "Provides data for a stand-in TypeDefinition of the native as3 type for javascript"},
{ "name": "AS3Number",
  "type": "Method",
  "class": "org.apache.royale.reflection.nativejs",
  "description": "Provides data for a stand-in TypeDefinition of the native as3 type for javascript"},
{ "name": "AS3String",
  "type": "Method",
  "class": "org.apache.royale.reflection.nativejs",
  "description": "Provides data for a stand-in TypeDefinition of the native as3 type for javascript"},
{ "name": "AS3Vector",
  "type": "Method",
  "class": "org.apache.royale.reflection.nativejs",
  "description": "Provides data for a stand-in TypeDefinition of the native as3 type for javascript"},
{ "name": "AS3int",
  "type": "Method",
  "class": "org.apache.royale.reflection.nativejs",
  "description": "Provides data for a stand-in TypeDefinition of the native as3 type for javascript"},
{ "name": "AS3uint",
  "type": "Method",
  "class": "org.apache.royale.reflection.nativejs",
  "description": "Provides data for a stand-in TypeDefinition of the native as3 type for javascript"},
{ "name": "ASCENT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BaselineOffset",
  "description": "Specifies an offset equal to the ascent of the line, that is, the ascent of the tallest font in the line, accounting for inline graphics as having the bottom of the graphic on the baseline."},
{ "name": "ASCENT",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextBaseline",
  "description": ""},
{ "name": "ASCENT_DESCENT_UP",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies that leading basis is ASCENT/DESCENT and leading direction is UP."},
{ "name": "ASPECT_RATIO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASPECT_RATIO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSESSMENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSESSMENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_IND",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_IND",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_LATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_LATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_RETURN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_RETURN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_RETURNED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_RETURNED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_TURNED_IN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSIGNMENT_TURNED_IN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSISTANT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSISTANT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASSISTANT_PHOTO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ASSISTANT_PHOTO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ASYNC_ERROR",
  "type": "Property",
  "class": "mx.events.AsyncErrorEvent",
  "description": ""},
{ "name": "ATTACHMENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ATTACHMENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ATTACH_FILE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ATTACH_FILE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ATTACH_MONEY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ATTACH_MONEY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ATTN",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Attn (Attention) key."},
{ "name": "AUDIO",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for selecting the audio mode."},
{ "name": "AUDIOTRACK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AUDIOTRACK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AUTHENTICATION_MESSAGE_REF_TYPE",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "The server message type for authentication commands."},
{ "name": "AUTHENTICATION_MESSAGE_REF_TYPE",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "The server message type for authentication commands."},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BreakStyle",
  "description": ""},
{ "name": "AUTO",
  "type": "Property",
  "class": "mx.core.ScrollPolicy",
  "description": "Show the scrollbar if the children exceed the owner's dimension."},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies that leading model is chosen automatically based on the paragraph's <code>locale</code> property."},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextRotation",
  "description": ""},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BaselineOffset",
  "description": "Aligns the ascent of the line with the container top inset."},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.text.engine.BreakOpportunity",
  "description": ""},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.MouseCursor",
  "description": ""},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ScrollPolicy",
  "description": "Specifies that scrolling is to occur if the content exceeds the container's dimension."},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Suffix",
  "description": "Specifies that the auto suffix is appended to the list marker after the content."},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.FormatValue",
  "description": "Specifies that a property's value is automatically generated."},
{ "name": "AUTO",
  "type": "Property",
  "class": "mx.core.ContainerCreationPolicy",
  "description": "Delay creating some or all descendants until they are needed."},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.text.engine.Kerning",
  "description": ""},
{ "name": "AUTO",
  "type": "Property",
  "class": "org.apache.royale.css2.Cursors",
  "description": ""},
{ "name": "AUTORENEW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AUTORENEW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AV_TIMER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "AV_TIMER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "AbsoluteLayoutTweener",
  "type": "Method",
  "class": "org.apache.royale.utils.AbsoluteLayoutTweener",
  "description": ""},
{ "name": "AbsoluteLayoutTweener",
  "type": "Class",
  "description": ""},
{ "name": "AbsolutePositioningViewBeadBase",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AbsolutePositioningViewBeadBase",
  "description": "Constructor."},
{ "name": "AbsolutePositioningViewBeadBase",
  "type": "Class",
  "description": "Use AbsolutePositioningViewBeadBase as the base class for custom control view beads."},
{ "name": "AbstractConsumer",
  "type": "Method",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Constructs a Consumer."},
{ "name": "AbstractConsumer",
  "type": "Class",
  "description": "The AbstractConsumer is the base class for both the Consumer and MultiTopicConsumer classes."},
{ "name": "AbstractEvent",
  "type": "Class",
  "description": "The base class for events that RPC services dispatch."},
{ "name": "AbstractInvoker",
  "type": "Class",
  "description": "An invoker is an object that actually executes a remote procedure call (RPC)."},
{ "name": "AbstractMessage",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Constructs an instance of an AbstractMessage with an empty body and header."},
{ "name": "AbstractMessage",
  "type": "Class",
  "description": "Abstract base class for all messages."},
{ "name": "AbstractMessage",
  "type": "Method",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "Constructs an instance of an AbstractMessage with an empty body and header."},
{ "name": "AbstractMessage",
  "type": "Class",
  "description": "Abstract base class for all messages."},
{ "name": "AbstractOperation",
  "type": "Method",
  "class": "mx.rpc.AbstractOperation",
  "description": "Creates a new Operation."},
{ "name": "AbstractOperation",
  "type": "Class",
  "description": "The AbstractOperation class represents an individual method on a service."},
{ "name": "AbstractOperation",
  "type": "Method",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Creates a new Operation."},
{ "name": "AbstractOperation",
  "type": "Class",
  "description": "An Operation used specifically by HTTPService or HTTPMultiService."},
{ "name": "AbstractProducer",
  "type": "Class",
  "description": "The AbstractProducer is the base class for the Producer and MultiTopicConsumer classes."},
{ "name": "AbstractService",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": "Constructor."},
{ "name": "AbstractService",
  "type": "Class",
  "description": "The AbstractService class is the base class for the HTTPMultiService, WebService, and RemoteObject classes."},
{ "name": "AbstractTarget",
  "type": "Method",
  "class": "mx.logging.AbstractTarget",
  "description": "Constructor."},
{ "name": "AbstractTarget",
  "type": "Class",
  "description": "This class provides the basic functionality required by the logging framework for a target implementation."},
{ "name": "AccessibilityAltBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AccessibilityAltBead",
  "description": "constructor."},
{ "name": "AccessibilityAltBead",
  "type": "Class",
  "description": "The AccessibilityAltBead class is a bead that can be used with any Image control."},
{ "name": "AccessorDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.AccessorDefinition",
  "description": ""},
{ "name": "AccessorDefinition",
  "type": "Class",
  "description": "The description of a Class or Interface accessor (get and/or set)"},
{ "name": "Accordion",
  "type": "Method",
  "class": "org.apache.royale.html.Accordion",
  "description": "Constructor."},
{ "name": "Accordion",
  "type": "Class",
  "description": "The Accordion class used to display a list of collapsible components All but the selected item are expected to be collapsed."},
{ "name": "AccordionCollapseBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AccordionCollapseBead",
  "description": ""},
{ "name": "AccordionCollapseBead",
  "type": "Class",
  "description": ""},
{ "name": "AccordionItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "AccordionItemRenderer",
  "type": "Class",
  "description": ""},
{ "name": "AccordionItemRendererMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.AccordionItemRendererMouseController",
  "description": ""},
{ "name": "AccordionItemRendererMouseController",
  "type": "Class",
  "description": ""},
{ "name": "AccordionItemRendererView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AccordionItemRendererView",
  "description": "The AccordionItemRendererView class is the default view for the org."},
{ "name": "AccordionItemRendererView",
  "type": "Class",
  "description": "This class creates and manages the contents of an AccordionItemRenderer"},
{ "name": "AccordionView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AccordionView",
  "description": "Constructor."},
{ "name": "AccordionView",
  "type": "Class",
  "description": "The AccordionView sets up the components for the Accordion component."},
{ "name": "AcknowledgeMessage",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.AcknowledgeMessage",
  "description": "Constructs an instance of an AcknowledgeMessage with an empty body and header."},
{ "name": "AcknowledgeMessage",
  "type": "Class",
  "description": "An AcknowledgeMessage acknowledges the receipt of a message that was sent previously."},
{ "name": "AcknowledgeMessage",
  "type": "Method",
  "class": "mx.messaging.messages.AcknowledgeMessage",
  "description": "Constructs an instance of an AcknowledgeMessage with an empty body and header."},
{ "name": "AcknowledgeMessage",
  "type": "Class",
  "description": "An AcknowledgeMessage acknowledges the receipt of a message that was sent previously."},
{ "name": "AcknowledgeMessageExt",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.AcknowledgeMessageExt",
  "description": ""},
{ "name": "AcknowledgeMessageExt",
  "type": "Class",
  "description": ""},
{ "name": "AcknowledgeMessageExt",
  "type": "Method",
  "class": "mx.messaging.messages.AcknowledgeMessageExt",
  "description": ""},
{ "name": "AcknowledgeMessageExt",
  "type": "Class",
  "description": ""},
{ "name": "ActionMessage",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.ActionMessage",
  "description": "Constructs an instance of an ActionMessage with an empty array of bodies and headers."},
{ "name": "ActionMessage",
  "type": "Class",
  "description": "The CommandMessage class provides a mechanism for sending commands to the server infrastructure, such as commands related to publish/subscribe messaging scenarios, ping operations, and cluster operations."},
{ "name": "ActivateEvent",
  "type": "Class",
  "description": ""},
{ "name": "ActiveCalls",
  "type": "Method",
  "class": "mx.rpc.ActiveCalls",
  "description": ""},
{ "name": "ActiveCalls",
  "type": "Class",
  "description": ""},
{ "name": "AdFormat",
  "type": "Property",
  "class": "google.maps.adsense",
  "description": ""},
{ "name": "AdFormat",
  "type": "Class",
  "description": ""},
{ "name": "AdUnitOptions",
  "type": "Method",
  "class": "google.maps.adsense",
  "description": ""},
{ "name": "AdaptiveToolTipBead",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.AdaptiveToolTipBead",
  "description": "constructor."},
{ "name": "AdaptiveToolTipBead",
  "type": "Class",
  "description": "The AdaptiveToolTipBead class is a specialty bead that can be used with any control."},
{ "name": "AddElementMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.AddElementMemento",
  "description": ""},
{ "name": "AddElementMemento",
  "type": "Class",
  "description": ""},
{ "name": "AddItems",
  "type": "Method",
  "class": "org.apache.royale.states.AddItems",
  "description": "Constructor."},
{ "name": "AddItems",
  "type": "Class",
  "description": "The AddItems class is one of the classes in the view states subsystem."},
{ "name": "AddListItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "AddListItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the adding of an itemRenderer in a List component once the corresponding datum has been added from the IDataProviderModel."},
{ "name": "AddTableRowForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": "Constructor"},
{ "name": "AddTableRowForArrayListData",
  "type": "Class",
  "description": "Handles the adding of an itemRenderer in a Table component once the corresponding datum has been added from the IDataProviderModel."},
{ "name": "AdjustBrightnessFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.AdjustBrightnessFilterElement",
  "description": ""},
{ "name": "AdjustBrightnessFilterElement",
  "type": "Class",
  "description": "The AdjustBrightnessFilterElement adjusts the brightness of the filter"},
{ "name": "AdornmentUtils",
  "type": "Class",
  "description": ""},
{ "name": "AdvancedDataGrid",
  "type": "Method",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "Constructor."},
{ "name": "AdvancedDataGrid",
  "type": "Class",
  "description": "The AdvancedDataGrid control expands on the functionality of the standard DataGrid control to add data visualization features to your Apache Flex application."},
{ "name": "AdvancedDataGridColumn",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "Constructor."},
{ "name": "AdvancedDataGridColumn",
  "type": "Class",
  "description": "The AdvancedDataGridColumn class describes a column in an AdvancedDataGrid control."},
{ "name": "AdvancedDataGridColumnGroup",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumnGroup",
  "description": "Constructor."},
{ "name": "AdvancedDataGridColumnGroup",
  "type": "Class",
  "description": "Use the AdvancedDataGridColumnGroup class to specify column groups for the AdvancedDataGrid control."},
{ "name": "AdvancedDataGridColumnList",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumnList",
  "description": ""},
{ "name": "AdvancedDataGridColumnList",
  "type": "Class",
  "description": "The AdvancedDataGridColumnList class represnts a column in an AdvancedDataGrid control."},
{ "name": "AdvancedDataGridEvent",
  "type": "Method",
  "class": "mx.events.AdvancedDataGridEvent",
  "description": "Constructor."},
{ "name": "AdvancedDataGridEvent",
  "type": "Class",
  "description": "The AdvancedDataGridEvent class represents event objects that are specific to the AdvancedDataGrid control, such as the event that is dispatched when an editable grid item gets the focus."},
{ "name": "AdvancedDataGridHeaderRenderer",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridHeaderRenderer",
  "description": "Constructor."},
{ "name": "AdvancedDataGridHeaderRenderer",
  "type": "Class",
  "description": "The AdvancedDataGridHeaderRenderer class defines the default header renderer for a AdvancedDataGrid control."},
{ "name": "AdvancedDataGridItemRenderer",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridItemRenderer",
  "description": "Constructor."},
{ "name": "AdvancedDataGridItemRenderer",
  "type": "Class",
  "description": "The AdvancedDataGridItemRenderer class defines the default item renderer for a AdvancedDataGrid control."},
{ "name": "AdvancedDataGridListData",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridListData",
  "description": "Constructor."},
{ "name": "AdvancedDataGridListData",
  "type": "Class",
  "description": "The AdvancedDataGridListData class defines the data type of the <code>listData</code> property implemented by drop-in item renderers or drop-in item editors for the AdvancedDataGrid control."},
{ "name": "AdvancedDataGridSingleSelectionMouseController",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridSingleSelectionMouseController",
  "description": "Constructor."},
{ "name": "AdvancedDataGridSingleSelectionMouseController",
  "type": "Class",
  "description": "The TreeSingleSelectionMouseController class is a controller for org."},
{ "name": "AdvancedLayoutFeatures",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "Constructor."},
{ "name": "AdvancedLayoutFeatures",
  "type": "Class",
  "description": "Transform Offsets can be assigned to any Component or GraphicElement to modify the transform of the object beyond where its parent layout places it."},
{ "name": "AdvancedListBase",
  "type": "Method",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "Constructor."},
{ "name": "AdvancedListBase",
  "type": "Class",
  "description": "The AdvancedListBase class is the base class for controls, such as the AdvancedDataGrid and OLAPDataGrid controls, that represent lists of items that can have one or more selected items and can scroll through the items."},
{ "name": "AirApplication",
  "type": "Method",
  "class": "org.apache.royale.core.AirApplication",
  "description": "Constructor."},
{ "name": "AirApplication",
  "type": "Class",
  "description": "The AirApplication class should be used by Air applications as their main entry point."},
{ "name": "AirStorageProvider",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AirStorageProvider",
  "description": "Constructor."},
{ "name": "AirStorageProvider",
  "type": "Class",
  "description": "The AirStorageProvider class implements the IPermanentStorageProvider interface for saving files to a mobile device using the Adobe(tm) AIR platform."},
{ "name": "Alert",
  "type": "Method",
  "class": "org.apache.royale.html.Alert",
  "description": "constructor."},
{ "name": "Alert",
  "type": "Class",
  "description": "The Alert class is a component that displays a message and one or more buttons in a view that pops up over all other controls and views."},
{ "name": "Alert",
  "type": "Method",
  "class": "mx.controls.Alert",
  "description": "Constructor."},
{ "name": "Alert",
  "type": "Class",
  "description": "The Alert control is a pop-up dialog box that can contain a message, a title, buttons (any combination of OK, Cancel, Yes, and No) and an icon."},
{ "name": "Alert",
  "type": "Method",
  "class": "org.apache.royale.jewel.Alert",
  "description": "constructor."},
{ "name": "Alert",
  "type": "Class",
  "description": "The Alert class is a component that displays a message and one or more buttons in a view that pops up over all other controls and views."},
{ "name": "AlertController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.AlertController",
  "description": "constructor."},
{ "name": "AlertController",
  "type": "Class",
  "description": "The AlertControler class bead handles the close event on the org."},
{ "name": "AlertController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.AlertController",
  "description": "constructor."},
{ "name": "AlertController",
  "type": "Class",
  "description": "The AlertControler class bead handles the close event on the org."},
{ "name": "AlertMeasurementBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AlertMeasurementBead",
  "description": "constructor."},
{ "name": "AlertMeasurementBead",
  "type": "Class",
  "description": "The AlertMeasureBead class provides boundary measurements for an org."},
{ "name": "AlertModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "constructor."},
{ "name": "AlertModel",
  "type": "Class",
  "description": "The AlertModel class bead implements the org."},
{ "name": "AlertModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "constructor."},
{ "name": "AlertModel",
  "type": "Class",
  "description": "The AlertModel class bead implements the org."},
{ "name": "AlertView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": "constructor."},
{ "name": "AlertView",
  "type": "Class",
  "description": "The AlertView class creates the visual elements of the org."},
{ "name": "AlertView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": "constructor."},
{ "name": "AlertView",
  "type": "Class",
  "description": "The AlertView class creates the visual elements of the org."},
{ "name": "AlertView",
  "type": "Method",
  "class": "mx.controls.beads.AlertView",
  "description": "Constructor."},
{ "name": "AlertView",
  "type": "Class",
  "description": "The AlertView class."},
{ "name": "AllCSSStyles",
  "type": "Class",
  "description": "The AllCSSStyles class contains all CSS style supported in HTML."},
{ "name": "AllCSSValuesImpl",
  "type": "Method",
  "class": "org.apache.royale.core.AllCSSValuesImpl",
  "description": "Constructor."},
{ "name": "AllCSSValuesImpl",
  "type": "Class",
  "description": "The AllCSSValuesImpl class will eventually implement a full set of CSS lookup rules."},
{ "name": "AlternatingBackgroundColorStringItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.AlternatingBackgroundColorStringItemRenderer",
  "description": "constructor."},
{ "name": "AlternatingBackgroundColorStringItemRenderer",
  "type": "Class",
  "description": "The AlternatingBackgroundColorStringItemRenderer class displays data in string form using the data's toString() function and alternates between two background colors."},
{ "name": "AndroidExternalStorageProvider",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AndroidExternalStorageProvider",
  "description": "Constructor."},
{ "name": "AndroidExternalStorageProvider",
  "type": "Class",
  "description": "The AndroidStorageProvider class implements the IPermanentStorageProvider interface for saving files to a Android external storage."},
{ "name": "Animation",
  "type": "Class",
  "description": ""},
{ "name": "AnimationUtil",
  "type": "Class",
  "description": "The AnimationUtil class wraps callbacks to be called when the platform is ready for the next draw."},
{ "name": "Application",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": "Constructor."},
{ "name": "Application",
  "type": "Class",
  "description": "The Application class is the main class and entry point for a Royale application."},
{ "name": "Application",
  "type": "Method",
  "class": "org.apache.royale.express.Application",
  "description": ""},
{ "name": "Application",
  "type": "Class",
  "description": "This class extends the standard Application and sets up the SimpleCSSValuesImpl (implementation) for convenience."},
{ "name": "Application",
  "type": "Method",
  "class": "mx.core.Application",
  "description": "Constructor."},
{ "name": "Application",
  "type": "Class",
  "description": "Flex defines a default, or Application, container that lets you start adding content to your application without explicitly defining another container."},
{ "name": "Application",
  "type": "Method",
  "class": "org.apache.royale.cordova.Application",
  "description": "The Royale Compiler will inject html into the index."},
{ "name": "Application",
  "type": "Class",
  "description": "A customized Application that dispatches the Cordova deviceReady event"},
{ "name": "Application",
  "type": "Method",
  "class": "org.apache.royale.createjs.Application",
  "description": "The Royale Compiler will inject html into the index."},
{ "name": "Application",
  "type": "Class",
  "description": ""},
{ "name": "Application",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": "Constructor."},
{ "name": "Application",
  "type": "Class",
  "description": "Jewel Application holds specific Jewel need in a Royale Application."},
{ "name": "Application",
  "type": "Method",
  "class": "spark.components.Application",
  "description": "Constructor."},
{ "name": "Application",
  "type": "Class",
  "description": "Flex defines a default, or Application, container that lets you start adding content to your application without explicitly defining another container."},
{ "name": "Application",
  "type": "Method",
  "class": "org.apache.royale.mdl.Application",
  "description": "constructor."},
{ "name": "Application",
  "type": "Class",
  "description": "MDL Application holds specific MDL need in a Royale Application."},
{ "name": "Application",
  "type": "Method",
  "class": "org.apache.royale.jquery.Application",
  "description": "The Royale Compiler will inject html into the index."},
{ "name": "Application",
  "type": "Class",
  "description": ""},
{ "name": "ApplicationBase",
  "type": "Method",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": "Constructor."},
{ "name": "ApplicationBase",
  "type": "Class",
  "description": ""},
{ "name": "ApplicationDataBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.ApplicationDataBinding",
  "description": "Constructor."},
{ "name": "ApplicationDataBinding",
  "type": "Class",
  "description": "The ApplicationDataBinding class implements databinding for Application instances."},
{ "name": "ApplicationDomain",
  "type": "Method",
  "class": "mx.system.ApplicationDomain",
  "description": "Constructor."},
{ "name": "ApplicationDomain",
  "type": "Class",
  "description": ""},
{ "name": "ApplicationLayout",
  "type": "Method",
  "class": "mx.containers.beads.ApplicationLayout",
  "description": "Constructor."},
{ "name": "ApplicationLayout",
  "type": "Class",
  "description": "The ApplicationLayout class is for internal use only."},
{ "name": "ApplicationMainContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.ApplicationMainContent",
  "description": "constructor."},
{ "name": "ApplicationMainContent",
  "type": "Class",
  "description": "The ApplicationMainContent class is a Container component capable of parenting the other organized content that implements ISelectableContent interface (i."},
{ "name": "ApplicationParametersBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ApplicationParametersBead",
  "description": ""},
{ "name": "ApplicationParametersBead",
  "type": "Class",
  "description": "The ApplicationParametersBead is used to get URL parameter values specified when loading an application."},
{ "name": "ApplicationParametersCaseInsensitiveBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ApplicationParametersCaseInsensitiveBead",
  "description": ""},
{ "name": "ApplicationParametersCaseInsensitiveBead",
  "type": "Class",
  "description": "The ApplicationParametersCaseInsensitiveBead is used to get URL parameter values specified when loading an application."},
{ "name": "ApplicationResponsiveView",
  "type": "Method",
  "class": "org.apache.royale.jewel.ApplicationResponsiveView",
  "description": "constructor."},
{ "name": "ApplicationResponsiveView",
  "type": "Class",
  "description": "The ApplicationResponsiveView class is the main Container component capable of parenting other components in an Application It normaly can host a TopAppBar, a Drawer and a Container with other organized content for navigation"},
{ "name": "ApplyElementIDOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ApplyElementIDOperation",
  "description": "Creates a ChangeElementIDOperation object."},
{ "name": "ApplyElementIDOperation",
  "type": "Class",
  "description": "The ChangeElementIDOperation class encapsulates an element ID change."},
{ "name": "ApplyElementStyleNameOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ApplyElementStyleNameOperation",
  "description": "Creates a ApplyElementStyleNameOperation object."},
{ "name": "ApplyElementStyleNameOperation",
  "type": "Class",
  "description": "The ApplyElementStyleNameOperation class encapsulates a style name change."},
{ "name": "ApplyElementTypeNameOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ApplyElementTypeNameOperation",
  "description": "Creates a ApplyElementTypeNameOperation object."},
{ "name": "ApplyElementTypeNameOperation",
  "type": "Class",
  "description": "The ApplyElementTypeNameOperation class encapsulates a type name change."},
{ "name": "ApplyElementUserStyleOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ApplyElementUserStyleOperation",
  "description": "Creates a ApplyElementUserStyleOperation object."},
{ "name": "ApplyElementUserStyleOperation",
  "type": "Class",
  "description": "The ApplyElementUserStyleOperation class encapsulates a change in a style value of an element."},
{ "name": "ApplyFormatOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ApplyFormatOperation",
  "description": "Creates an ApplyFormatOperation object."},
{ "name": "ApplyFormatOperation",
  "type": "Class",
  "description": "The ApplyFormatOperation class encapsulates a style change."},
{ "name": "ApplyFormatToElementOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ApplyFormatToElementOperation",
  "description": "Creates an ApplyFormatToElementOperation object."},
{ "name": "ApplyFormatToElementOperation",
  "type": "Class",
  "description": "The ApplyFormatToElementOperation class encapsulates a style change to an element."},
{ "name": "ApplyLinkOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ApplyLinkOperation",
  "description": "Creates an ApplyLinkOperation object."},
{ "name": "ApplyLinkOperation",
  "type": "Class",
  "description": "The ApplyLinkOperation class encapsulates a link creation or modification operation."},
{ "name": "ApplyTCYOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ApplyTCYOperation",
  "description": "Creates an ApplyTCYOperation object."},
{ "name": "ApplyTCYOperation",
  "type": "Class",
  "description": "The ApplyTCYOperation class encapsulates a TCY transformation."},
{ "name": "AreaChart",
  "type": "Method",
  "class": "mx.charts.AreaChart",
  "description": "Constructor."},
{ "name": "AreaChart",
  "type": "Class",
  "description": "The AreaChart control represents data as an area bounded by a line connecting the values in the data."},
{ "name": "AreaRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.AreaRenderer",
  "description": "Constructor."},
{ "name": "AreaRenderer",
  "type": "Class",
  "description": "The default class used to render the area beneath the dataPoints of an AreaSeries object."},
{ "name": "AreaSeries",
  "type": "Method",
  "class": "mx.charts.series.AreaSeries",
  "description": "Constructor."},
{ "name": "AreaSeries",
  "type": "Class",
  "description": "Defines a data series for an AreaChart control."},
{ "name": "AreaSeriesItem",
  "type": "Method",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "Constructor."},
{ "name": "AreaSeriesItem",
  "type": "Class",
  "description": "Represents the information required to render an item as part of an AreaSeries."},
{ "name": "AreaSeriesRenderData",
  "type": "Method",
  "class": "mx.charts.series.renderData.AreaSeriesRenderData",
  "description": "Constructor."},
{ "name": "AreaSeriesRenderData",
  "type": "Class",
  "description": "Represents all the information needed by the AreaSeries to render."},
{ "name": "AreaSet",
  "type": "Method",
  "class": "mx.charts.series.AreaSet",
  "description": "Constructor."},
{ "name": "AreaSet",
  "type": "Class",
  "description": "A grouping set that can be used to stack AreaSeries objects in any chart."},
{ "name": "ArgumentError",
  "type": "Method",
  "class": "mx.messaging.errors.ArgumentError",
  "description": "Constructs a new instance of a ArgumentError with the specified message."},
{ "name": "ArgumentError",
  "type": "Class",
  "description": "This is the base class for any messaging related error."},
{ "name": "ArrayCollection",
  "type": "Method",
  "class": "mx.collections.ArrayCollection",
  "description": "Constructor."},
{ "name": "ArrayCollection",
  "type": "Class",
  "description": "The ArrayCollection class is a wrapper class that exposes an Array as a collection that can be accessed and manipulated using the methods and properties of the <code>ICollectionView</code> or <code>IList</code> interfaces."},
{ "name": "ArrayColorSelectionModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ArrayColorSelectionModel",
  "description": "Constructor."},
{ "name": "ArrayColorSelectionModel",
  "type": "Class",
  "description": "The ArrayColorSelectionModel class is a color selection model for a dataProvider that is an array."},
{ "name": "ArrayList",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Construct a new ArrayList using the specified array as its source."},
{ "name": "ArrayList",
  "type": "Class",
  "description": "The ArrayList class is a simple implementation of IList that uses a backing Array as the source of the data."},
{ "name": "ArrayList",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Constructor."},
{ "name": "ArrayList",
  "type": "Class",
  "description": "The ArrayList class provides an event-driven wrapper for the standard Array."},
{ "name": "ArrayListSelectionModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": "Constructor."},
{ "name": "ArrayListSelectionModel",
  "type": "Class",
  "description": "The ArrayListSelectionModel class is a selection model for a dataProvider that is an ArrayList."},
{ "name": "ArrayListSelectionModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": "Constructor."},
{ "name": "ArrayListSelectionModel",
  "type": "Class",
  "description": "The ArrayListSelectionModel class is a selection model for a dataProvider that is an ArrayList."},
{ "name": "ArrayListView",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "The ArrayListView constructor."},
{ "name": "ArrayListView",
  "type": "Class",
  "description": ""},
{ "name": "ArrayProperty",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.ArrayProperty",
  "description": ""},
{ "name": "ArrayProperty",
  "type": "Class",
  "description": "A property description with an Array value."},
{ "name": "ArraySelectionModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": "Constructor."},
{ "name": "ArraySelectionModel",
  "type": "Class",
  "description": "The ArraySelectionModel class is a selection model for a dataProvider that is an array."},
{ "name": "ArrayUtil",
  "type": "Class",
  "description": "The ArrayUtil utility class is an all-static class with methods for working with arrays within Flex."},
{ "name": "Assert",
  "type": "Class",
  "description": "A set of assertion methods."},
{ "name": "AssertionError",
  "type": "Method",
  "class": "org.apache.royale.test.AssertionError",
  "description": "Constructor."},
{ "name": "AssertionError",
  "type": "Class",
  "description": "Error class used when assertions fail."},
{ "name": "AssignTabContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": "constructor."},
{ "name": "AssignTabContent",
  "type": "Class",
  "description": "The Disabled bead class is a specialty bead that can be used to disable a Jewel control."},
{ "name": "AsyncDispatcher",
  "type": "Class",
  "description": "This class provides a mechanism for dispatching a method asynchronously."},
{ "name": "AsyncErrorEvent",
  "type": "Method",
  "class": "mx.events.AsyncErrorEvent",
  "description": "Constructor."},
{ "name": "AsyncErrorEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when focus changes."},
{ "name": "AsyncMessage",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.AsyncMessage",
  "description": "Constructs an instance of an AsyncMessage with an empty body and header."},
{ "name": "AsyncMessage",
  "type": "Class",
  "description": "AsyncMessage is the base class for all asynchronous messages."},
{ "name": "AsyncMessage",
  "type": "Method",
  "class": "mx.messaging.messages.AsyncMessage",
  "description": "Constructs an instance of an AsyncMessage with an empty body and header."},
{ "name": "AsyncMessage",
  "type": "Class",
  "description": "AsyncMessage is the base class for all asynchronous messages."},
{ "name": "AsyncMessageExt",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.AsyncMessageExt",
  "description": ""},
{ "name": "AsyncMessageExt",
  "type": "Class",
  "description": "A special serialization wrapper for AsyncMessages."},
{ "name": "AsyncMessageExt",
  "type": "Method",
  "class": "mx.messaging.messages.AsyncMessageExt",
  "description": ""},
{ "name": "AsyncMessageExt",
  "type": "Class",
  "description": "A special serialization wrapper for AsyncMessages."},
{ "name": "AsyncRequest",
  "type": "Method",
  "class": "mx.rpc.AsyncRequest",
  "description": "Constructs a new asynchronous request."},
{ "name": "AsyncRequest",
  "type": "Class",
  "description": "The AsyncRequest class provides an abstraction of messaging for RPC call invocation."},
{ "name": "AsyncResponder",
  "type": "Method",
  "class": "mx.rpc.AsyncResponder",
  "description": "Constructs an instance of the responder with the specified data and handlers."},
{ "name": "AsyncResponder",
  "type": "Class",
  "description": "This class provides an RPC specific implementation of <code>mx."},
{ "name": "AsyncTask",
  "type": "Method",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "AsyncTask",
  "type": "Class",
  "description": ""},
{ "name": "AsyncToken",
  "type": "Method",
  "class": "mx.rpc.AsyncToken",
  "description": "Constructs an instance of the token with the specified message."},
{ "name": "AsyncToken",
  "type": "Class",
  "description": "This class provides a place to set additional or token-level data for asynchronous RPC operations."},
{ "name": "AutocompleteOptions",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "AutocompletePrediction",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "AutocompletionRequest",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "AxisBase",
  "type": "Method",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": "Constructor."},
{ "name": "AxisBase",
  "type": "Class",
  "description": "The AxisBase class serves as a base class for the various axis types supported in Flex."},
{ "name": "AxisBaseBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": "Constructor."},
{ "name": "AxisBaseBead",
  "type": "Class",
  "description": "The AxisBaseBead is the base class for the chart axis beads."},
{ "name": "AxisLabel",
  "type": "Method",
  "class": "mx.charts.AxisLabel",
  "description": "Constructor."},
{ "name": "AxisLabel",
  "type": "Class",
  "description": "An AxisLabel object represents a single label on the chart axis."},
{ "name": "AxisLabelSet",
  "type": "Method",
  "class": "mx.charts.chartClasses.AxisLabelSet",
  "description": "Constructor."},
{ "name": "AxisLabelSet",
  "type": "Class",
  "description": "An AxisLabelSet represents the label and tick data generated by an implementation of IAxis."},
{ "name": "AxisRenderer",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": "Constructor."},
{ "name": "AxisRenderer",
  "type": "Class",
  "description": "You use the AxisRenderer class to describe the horizontal and vertical axes of a chart."},
{ "name": "B",
  "type": "Method",
  "class": "org.apache.royale.html.elements.B",
  "description": "constructor."},
{ "name": "B",
  "type": "Class",
  "description": "The B(Bold) class represents an HTML <b> element"},
{ "name": "B",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the B key (66)."},
{ "name": "BACK",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for returning to the previous page in the application."},
{ "name": "BACKGROUND_MANAGER_CACHE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "BACKGROUND_MANAGER_CACHE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.utils.BackgroundHelper",
  "description": ""},
{ "name": "BACKQUOTE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the ` key (192)."},
{ "name": "BACKSLASH",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the &#92; key (220)."},
{ "name": "BACKSPACE",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "BACKSPACE",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "The Backspace key."},
{ "name": "BACKSPACE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Backspace key (8)."},
{ "name": "BACKSPACE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BACKSPACE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BACKUP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BACKUP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BACKWARD_CLOSED_ARROW",
  "type": "Property",
  "class": "google.maps.SymbolPath",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BACKWARD_OPEN_ARROW",
  "type": "Property",
  "class": "google.maps.SymbolPath",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BANNER",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BASELINE",
  "type": "Property",
  "class": "spark.layouts.VerticalAlign",
  "description": "Vertically position the children so that their text is aligned to the base line of the container."},
{ "name": "BATTERY_ALERT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BATTERY_ALERT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BATTERY_CHARGING_FULL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BATTERY_CHARGING_FULL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BATTERY_FULL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BATTERY_FULL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BATTERY_STD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BATTERY_STD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BATTERY_UNKNOWN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BATTERY_UNKNOWN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BEACH_ACCESS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BEACH_ACCESS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BEENHERE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BEENHERE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BELOW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "The bottom side only."},
{ "name": "BENGALI",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Bengali script."},
{ "name": "BEVEL",
  "type": "Property",
  "class": "org.apache.royale.graphics.LineStyle",
  "description": ""},
{ "name": "BICYCLING",
  "type": "Property",
  "class": "google.maps.TravelMode",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BIG_ENDIAN",
  "type": "Property",
  "class": "org.apache.royale.utils.Endian",
  "description": "Indicates the most significant byte of the multibyte number appears first in the sequence of bytes."},
{ "name": "BINDABLE",
  "type": "Property",
  "class": "mx.binding.BindabilityInfo",
  "description": "Name of [Bindable] metadata."},
{ "name": "BINDING",
  "type": "Property",
  "class": "mx.core.EventPriority",
  "description": "Autogenerated event handlers that evaluate data-binding expressions need to be executed before any others, so they have a higher priority than the default."},
{ "name": "BINDING_RESULT",
  "type": "Property",
  "class": "mx.rpc.AbstractInvoker",
  "description": "Event dispatched for binding when the <code>result</code> property changes."},
{ "name": "BLACK",
  "type": "Property",
  "class": "google.maps.weather.LabelColor",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BLACK",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": "Below are supported colorName values"},
{ "name": "BLOCK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLOCK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLOCKED",
  "type": "Property",
  "class": "org.apache.royale.promises.enums.PromiseState",
  "description": ""},
{ "name": "BLOCK_MASK",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": ""},
{ "name": "BLOCK_SHIFT",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": ""},
{ "name": "BLOCK_SIZE",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": ""},
{ "name": "BLUE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "BLUE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the blue function key button."},
{ "name": "BLUETOOTH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH_AUDIO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH_AUDIO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH_CONNECTED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH_CONNECTED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH_DISABLED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH_DISABLED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH_SEARCHING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUETOOTH_SEARCHING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLUR_CIRCULAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUR_CIRCULAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLUR_LINEAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUR_LINEAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLUR_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUR_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BLUR_ON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BLUR_ON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BOLD",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontWeight",
  "description": ""},
{ "name": "BOOK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BOOK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BOOKMARK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BOOKMARK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BOOKMARK_BORDER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BOOKMARK_BORDER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "All four sides."},
{ "name": "BORDER_ALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_ALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_BOTTOM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_BOTTOM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_CLEAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_CLEAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_COLOR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_COLOR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_HORIZONTAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_HORIZONTAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_INNER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_INNER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_LEFT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_LEFT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_OUTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_OUTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_RIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_RIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_STYLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_STYLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_TOP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_TOP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BORDER_VERTICAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BORDER_VERTICAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BOTH",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ClearFloats",
  "description": "Specifies that text skips over any float."},
{ "name": "BOTTOM",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "BOTTOM",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": ""},
{ "name": "BOTTOM",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "BOTTOM",
  "type": "Property",
  "class": "mx.controls.ProgressBarLabelPlacement",
  "description": "Specifies to place the label below the progress bar."},
{ "name": "BOTTOM",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.AdaptiveToolTipBead",
  "description": ""},
{ "name": "BOTTOM",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.VerticalAlign",
  "description": "Specifies alignment with the bottom edge of the frame."},
{ "name": "BOTTOM",
  "type": "Property",
  "class": "spark.layouts.VerticalAlign",
  "description": "Vertically align children to the bottom of the container."},
{ "name": "BOTTOM_CENTER",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BOTTOM_EXCLUDED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "BOTTOM_LEFT",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BOTTOM_RIGHT",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BOUNCE",
  "type": "Property",
  "class": "google.maps.Animation",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BOX",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies a leading model based on the CSS inline formatting model, which involves stacking <i>line boxes</i> contiguously."},
{ "name": "BOX",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "All four sides."},
{ "name": "BOX",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "A square marker that is not filled."},
{ "name": "BRANDING_WATERMARK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRANDING_WATERMARK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_1",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_1",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_2",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_2",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_3",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_3",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_4",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_4",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_5",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_5",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_6",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_6",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_7",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_7",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_AUTO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_AUTO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_HIGH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_HIGH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_LOW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_LOW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_MEDIUM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRIGHTNESS_MEDIUM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BROKEN_IMAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BROKEN_IMAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BRUSH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BRUSH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BUBBLE_CHART",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BUBBLE_CHART",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BUG_REPORT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BUG_REPORT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BUILD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BUILD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BURST_MODE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BURST_MODE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BUSINESS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BUSINESS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BUSINESS_CENTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "BUSINESS_CENTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "BUTT",
  "type": "Property",
  "class": "org.apache.royale.graphics.LineStyle",
  "description": ""},
{ "name": "BUTTON",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "BUTTON",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.MouseCursor",
  "description": ""},
{ "name": "BackgroundColor",
  "type": "Class",
  "description": "Defines a constant for specifying that the value of the <code>backgroundColor</code> property of the <code>TextLayoutFormat</code> class is \"transparent\"."},
{ "name": "BackgroundHelper",
  "type": "Class",
  "description": ""},
{ "name": "BackgroundManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "BackgroundManager",
  "type": "Class",
  "description": "@private Manages bounds calculation and rendering of backgroundColor character format."},
{ "name": "BackgroundUtil",
  "type": "Class",
  "description": ""},
{ "name": "Badge",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.Badge",
  "description": "constructor."},
{ "name": "Badge",
  "type": "Class",
  "description": "The Badge class provides a small status descriptors for UI elements."},
{ "name": "Badge",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.Badge",
  "description": "constructor."},
{ "name": "Badge",
  "type": "Class",
  "description": "The Badge class provides a small status descriptors for UI elements."},
{ "name": "Bar",
  "type": "Method",
  "class": "org.apache.royale.jewel.Bar",
  "description": "constructor."},
{ "name": "Bar",
  "type": "Class",
  "description": "The Bar class is a container component for different items like a title, navigation icon, and/or icon buttons."},
{ "name": "BarChart",
  "type": "Method",
  "class": "org.apache.royale.charts.BarChart",
  "description": "constructor."},
{ "name": "BarChart",
  "type": "Class",
  "description": "The BarChart class draws a multi-series graph of data using vertical columns."},
{ "name": "BarChart",
  "type": "Method",
  "class": "mx.charts.BarChart",
  "description": "Constructor."},
{ "name": "BarChart",
  "type": "Class",
  "description": "The BarChart control represents data as a series of horizontal bars whose length is determined by values in the data."},
{ "name": "BarChartLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.BarChartLayout",
  "description": "constructor."},
{ "name": "BarChartLayout",
  "type": "Class",
  "description": "The BarChartLayout class calculates the size and position of all of the itemRenderers for all of the series in a BarChart."},
{ "name": "BarChartLayoutForArrayList",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.BarChartLayoutForArrayList",
  "description": "constructor."},
{ "name": "BarChartLayoutForArrayList",
  "type": "Class",
  "description": "The BarChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for all of the series in a BarChart."},
{ "name": "BarRow",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.bar.BarRow",
  "description": "constructor."},
{ "name": "BarRow",
  "type": "Class",
  "description": "The BarRow class is a container component used with Bar or TopAppBar It represent a row."},
{ "name": "BarSection",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.bar.BarSection",
  "description": "constructor."},
{ "name": "BarSection",
  "type": "Class",
  "description": "The BarSection class is a container component for items in an Bar or TopAppBar row."},
{ "name": "BarSeries",
  "type": "Method",
  "class": "mx.charts.series.BarSeries",
  "description": "Constructor."},
{ "name": "BarSeries",
  "type": "Class",
  "description": "Defines a data series for a BarChart control."},
{ "name": "BarSeries",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.BarSeries",
  "description": "constructor."},
{ "name": "BarSeries",
  "type": "Class",
  "description": "The BarSeries defines what field is being plotted from the chart's dataProvider."},
{ "name": "BarSeriesItem",
  "type": "Method",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "Constructor."},
{ "name": "BarSeriesItem",
  "type": "Class",
  "description": "Represents the information required to render an item as part of a BarSeries."},
{ "name": "BarSeriesRenderData",
  "type": "Method",
  "class": "mx.charts.series.renderData.BarSeriesRenderData",
  "description": "Constructor."},
{ "name": "BarSeriesRenderData",
  "type": "Class",
  "description": "Represents all the information needed by the BarSeries to render."},
{ "name": "BarSet",
  "type": "Method",
  "class": "mx.charts.series.BarSet",
  "description": "Constructor."},
{ "name": "BarSet",
  "type": "Class",
  "description": "A grouping set that can be used to stack or cluster BarSeries objects in any chart."},
{ "name": "BarTitle",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.bar.BarTitle",
  "description": "constructor."},
{ "name": "BarTitle",
  "type": "Class",
  "description": "The BarTitle class is the title to use with a Bar or TopAppBar."},
{ "name": "Base64",
  "type": "Class",
  "description": "Base64 encoding/decoding that works cross browsers"},
{ "name": "Base64Decoder",
  "type": "Method",
  "class": "mx.utils.Base64Decoder",
  "description": ""},
{ "name": "Base64Decoder",
  "type": "Class",
  "description": "A utility class to decode a Base64 encoded String to a ByteArray."},
{ "name": "Base64Encoder",
  "type": "Method",
  "class": "mx.utils.Base64Encoder",
  "description": ""},
{ "name": "Base64Encoder",
  "type": "Class",
  "description": "A utility class to encode a String or ByteArray as a Base64 encoded String."},
{ "name": "Base64JSWrapper",
  "type": "Method",
  "class": "mx.utils.Base64JSWrapper",
  "description": "The Royale Compiler will inject html into the index."},
{ "name": "Base64JSWrapper",
  "type": "Class",
  "description": ""},
{ "name": "BaseCompose",
  "type": "Class",
  "description": "Common composer base class"},
{ "name": "BaseListData",
  "type": "Method",
  "class": "mx.controls.listClasses.BaseListData",
  "description": "Constructor."},
{ "name": "BaseListData",
  "type": "Class",
  "description": "The BaseListData class defines the data type of the <code>listData</code> property implemented by drop-in item renderers or drop-in item editors."},
{ "name": "BaseMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.BaseMemento",
  "description": ""},
{ "name": "BaseMemento",
  "type": "Class",
  "description": ""},
{ "name": "BaseTextLayoutExporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "BaseTextLayoutExporter",
  "type": "Class",
  "description": "Base export converter for TextLayout format."},
{ "name": "BaselineOffset",
  "type": "Class",
  "description": "Defines values for the <code>firstBaselineOffset</code> property of the <code>TextLayoutFormat</code> and <code>ContainerFormattedElement</code> classes."},
{ "name": "BaselineShift",
  "type": "Class",
  "description": "Defines constants for specifying subscript or superscript in the <code>baselineShift</code> property of the <code>TextLayoutFormat</code> class."},
{ "name": "BasicLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.BasicLayout",
  "description": "Constructor."},
{ "name": "BasicLayout",
  "type": "Class",
  "description": "The BasicLayout class is a simple layout bead."},
{ "name": "BasicLayout",
  "type": "Method",
  "class": "spark.layouts.BasicLayout",
  "description": "Constructor."},
{ "name": "BasicLayout",
  "type": "Class",
  "description": "The BasicLayout class arranges the layout elements according to their individual settings, independent of each-other."},
{ "name": "BasicLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.BasicLayout",
  "description": "Constructor."},
{ "name": "BasicLayout",
  "type": "Class",
  "description": "The BasicLayout class is a simple layout bead."},
{ "name": "BeadViewBase",
  "type": "Method",
  "class": "org.apache.royale.core.BeadViewBase",
  "description": "Constructor."},
{ "name": "BeadViewBase",
  "type": "Class",
  "description": "The BeadViewBase class is the base class for most view beads."},
{ "name": "BevelFilter",
  "type": "Method",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "BevelFilter",
  "type": "Class",
  "description": "BevelFilter is a bead that injects a series of beads in the correct order and initialized them."},
{ "name": "BinaryData",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "BinaryData",
  "type": "Class",
  "description": "The BinaryData class is a class that represents binary data."},
{ "name": "BinaryImage",
  "type": "Method",
  "class": "org.apache.royale.html.BinaryImage",
  "description": "constructor."},
{ "name": "BinaryImage",
  "type": "Class",
  "description": "The Image class is a component that displays a bitmap."},
{ "name": "BinaryImage",
  "type": "Method",
  "class": "org.apache.royale.svg.BinaryImage",
  "description": "constructor."},
{ "name": "BinaryImage",
  "type": "Class",
  "description": "The Image class is a component that displays a bitmap."},
{ "name": "BinaryImageLoader",
  "type": "Method",
  "class": "org.apache.royale.html.beads.BinaryImageLoader",
  "description": "constructor."},
{ "name": "BinaryImageLoader",
  "type": "Class",
  "description": "The ImageView class creates the visual elements of the org."},
{ "name": "BinaryImageModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.BinaryImageModel",
  "description": "constructor."},
{ "name": "BinaryImageModel",
  "type": "Class",
  "description": "The ImageModel class bead defines the data associated with an org."},
{ "name": "BinaryUploader",
  "type": "Method",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": ""},
{ "name": "BinaryUploader",
  "type": "Class",
  "description": "The BinaryUploader class is a class designed to upload binary data over HTTP."},
{ "name": "BindabilityInfo",
  "type": "Method",
  "class": "mx.binding.BindabilityInfo",
  "description": "Constructor."},
{ "name": "BindabilityInfo",
  "type": "Class",
  "description": "Bindability information for children (properties or methods) of a given class, based on the describeType() structure for that class."},
{ "name": "BindableCSSStyles",
  "type": "Method",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": "Constructor."},
{ "name": "BindableCSSStyles",
  "type": "Class",
  "description": "The BindableCSSStyles class contains CSS style properties supported by SimpleCSSValuesImpl but dispatch change events when modified  The class implements IStyleObject which means the host object sets a reference onto this one, allowing us to reapply the styles to the host component when the style is changed."},
{ "name": "BindableCSSStylesWithFlex",
  "type": "Method",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": "Constructor."},
{ "name": "BindableCSSStylesWithFlex",
  "type": "Class",
  "description": "The BindableCSSStyles class contains CSS style properties supported by SimpleCSSValuesImpl but dispatch change events when modified  The class implements IStyleObject which means the host object sets a reference onto this one, allowing us to reapply the styles to the host component when the style is changed."},
{ "name": "BitmapData",
  "type": "Method",
  "class": "org.apache.royale.textLayout.dummy.BitmapData",
  "description": ""},
{ "name": "BitmapData",
  "type": "Class",
  "description": ""},
{ "name": "BitmapFilter",
  "type": "Method",
  "class": "mx.filters.BitmapFilter",
  "description": ""},
{ "name": "BitmapFilter",
  "type": "Class",
  "description": ""},
{ "name": "BitmapImage",
  "type": "Method",
  "class": "spark.primitives.BitmapImage",
  "description": "Constructor."},
{ "name": "BitmapImage",
  "type": "Class",
  "description": "A BitmapImage element defines a rectangular region in its parent element's coordinate space, filled with bitmap data drawn from a source file or source URL."},
{ "name": "BlendBead",
  "type": "Method",
  "class": "org.apache.royale.graphics.beads.BlendBead",
  "description": "Constructor."},
{ "name": "BlendBead",
  "type": "Class",
  "description": "The BlendBead class translates HTML mixBlendMode CSS values to flash."},
{ "name": "BlendFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.BlendFilterElement",
  "description": ""},
{ "name": "BlendFilterElement",
  "type": "Class",
  "description": "The BlendFilterElement blends several filter elements"},
{ "name": "Block",
  "type": "Method",
  "class": "spark.layouts.supportClasses.Block",
  "description": ""},
{ "name": "Block",
  "type": "Class",
  "description": "A LinearLayoutVector block of layout element heights or widths."},
{ "name": "BlockProgression",
  "type": "Class",
  "description": "Defines values for the <code>blockProgression</code> property of the <code>TextLayouFormat</code> class."},
{ "name": "BlurFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.BlurFilterElement",
  "description": ""},
{ "name": "BlurFilterElement",
  "type": "Class",
  "description": "The BlurFilterElement bead adds a blur to a filtered SVG element"},
{ "name": "BooleanPropertyHandler",
  "type": "Class",
  "description": "A property description with a Boolean value."},
{ "name": "Border",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.Border",
  "description": "Constructor."},
{ "name": "Border",
  "type": "Class",
  "description": "The Border class is a class used internally by many controls to draw a border."},
{ "name": "Border",
  "type": "Method",
  "class": "mx.skins.Border",
  "description": "Constructor."},
{ "name": "Border",
  "type": "Class",
  "description": "The Border class is an abstract base class for various classes that draw borders, either rectangular or non-rectangular, around UIComponents."},
{ "name": "BorderColor",
  "type": "Class",
  "description": "Defines a constant for specifying that the value of the <code>borderColor</code> property of the <code>TextLayoutFormat</code> class is \"transparent\"."},
{ "name": "BorderContainer",
  "type": "Method",
  "class": "spark.components.BorderContainer",
  "description": "Constructor."},
{ "name": "BorderContainer",
  "type": "Class",
  "description": "The BorderContainer class defines a set of CSS styles that control the appearance of the border and background fill of the container."},
{ "name": "BorderContainerSkin",
  "type": "Method",
  "class": "spark.skins.spark.BorderContainerSkin",
  "description": "Constructor."},
{ "name": "BorderContainerSkin",
  "type": "Class",
  "description": "The default skin class for a Spark BorderContainer component."},
{ "name": "BorderStyle",
  "type": "Class",
  "description": "Defines a constant for specifying that the value of the <code>borderStyle</code> property of the <code>TextLayoutFormat</code> class."},
{ "name": "BorderStyles",
  "type": "Method",
  "class": "org.apache.royale.core.styles.BorderStyles",
  "description": ""},
{ "name": "BorderStyles",
  "type": "Class",
  "description": "The BorderStyles class is a utility class for getting the 3 main border styles (width, color, style)"},
{ "name": "Bounce",
  "type": "Class",
  "description": "The Bounce class defines three easing functions to implement bounce motion with Flex effect classes."},
{ "name": "BoundedValue",
  "type": "Method",
  "class": "mx.charts.chartClasses.BoundedValue",
  "description": "Constructor."},
{ "name": "BoundedValue",
  "type": "Class",
  "description": "A bounded value is used to represent a datapoint that a chart element intends to render on screen."},
{ "name": "BoundsUtil",
  "type": "Class",
  "description": ""},
{ "name": "Box",
  "type": "Method",
  "class": "mx.containers.Box",
  "description": "Constructor."},
{ "name": "Box",
  "type": "Class",
  "description": "A Halo Box container lays out its children in a single vertical column or a single horizontal row."},
{ "name": "BoxDirection",
  "type": "Class",
  "description": "The BoxDirection class specifies constant values for the <code>direction</code> property of the Box container."},
{ "name": "BoxItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.BoxItemRenderer",
  "description": "Constructor."},
{ "name": "BoxItemRenderer",
  "type": "Class",
  "description": "A simple chart itemRenderer implementation that fills a rectangular area."},
{ "name": "BoxItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": "constructor."},
{ "name": "BoxItemRenderer",
  "type": "Class",
  "description": "The BoxItemRenderer displays a colored rectangular area suitable for use as an itemRenderer for a BarChartSeries."},
{ "name": "BoxLayout",
  "type": "Method",
  "class": "mx.containers.beads.BoxLayout",
  "description": "Constructor."},
{ "name": "BoxLayout",
  "type": "Class",
  "description": "The BoxLayout class is for internal use only."},
{ "name": "BreakElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BreakElement",
  "description": "Constructor."},
{ "name": "BreakElement",
  "type": "Class",
  "description": "The BreakElement class defines a line break, which provides for creating a line break in the text without creating a new paragraph."},
{ "name": "BreakOpportunity",
  "type": "Method",
  "class": "org.apache.royale.text.engine.BreakOpportunity",
  "description": ""},
{ "name": "BreakOpportunity",
  "type": "Class",
  "description": ""},
{ "name": "BreakStyle",
  "type": "Class",
  "description": ""},
{ "name": "BrowserEvent",
  "type": "Class",
  "description": "<pre> The patched event object contains the following members: - type           {string}    Event type, e."},
{ "name": "BrowserInfo",
  "type": "Method",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": ""},
{ "name": "BrowserInfo",
  "type": "Class",
  "description": "The BrowserInfo class is a convenience class for getting info about the current browser environment."},
{ "name": "BrowserManager",
  "type": "Class",
  "description": "The BrowserManager is a Singleton manager that acts as a proxy between the browser and the application."},
{ "name": "BrowserOrientation",
  "type": "Method",
  "class": "org.apache.royale.core.BrowserOrientation",
  "description": "Constructor."},
{ "name": "BrowserOrientation",
  "type": "Class",
  "description": "The BrowserOrientation class listens for browser resizing (only in devices) and dispatchh orientation change events."},
{ "name": "BrowserResizeListener",
  "type": "Method",
  "class": "org.apache.royale.core.BrowserResizeListener",
  "description": "Constructor."},
{ "name": "BrowserResizeListener",
  "type": "Class",
  "description": "The BrowserResizeListener class listens for browser resizing and resizes the application accordingly."},
{ "name": "BrowserScroller",
  "type": "Method",
  "class": "org.apache.royale.core.BrowserScroller",
  "description": "Constructor."},
{ "name": "BrowserScroller",
  "type": "Class",
  "description": "The BrowserScroller class enables browser scrollbars when the application is larger than the screen."},
{ "name": "BrowserUtils",
  "type": "Method",
  "class": "org.apache.royale.utils.BrowserUtils",
  "description": ""},
{ "name": "BrowserUtils",
  "type": "Class",
  "description": "The BrowserUtils class has convenience methods abstracting differences in executing browser code in Flash and HTML."},
{ "name": "BrowserWindow",
  "type": "Method",
  "class": "org.apache.royale.core.BrowserWindow",
  "description": "Constructor."},
{ "name": "BrowserWindow",
  "type": "Class",
  "description": "The BrowserWindow class opens a new browser window."},
{ "name": "BubbleChart",
  "type": "Method",
  "class": "mx.charts.BubbleChart",
  "description": "Constructor."},
{ "name": "BubbleChart",
  "type": "Class",
  "description": "The BubbleChart control represents data with three values for each data point."},
{ "name": "BubbleSeries",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": "Constructor."},
{ "name": "BubbleSeries",
  "type": "Class",
  "description": "Defines a data series for a BubbleChart control."},
{ "name": "BubbleSeriesItem",
  "type": "Method",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "Constructor."},
{ "name": "BubbleSeriesItem",
  "type": "Class",
  "description": "Represents the information required to render an item as part of a BubbleSeries."},
{ "name": "BubbleSeriesRenderData",
  "type": "Method",
  "class": "mx.charts.series.renderData.BubbleSeriesRenderData",
  "description": "Constructor."},
{ "name": "BubbleSeriesRenderData",
  "type": "Class",
  "description": "Represents all the information needed by the BubbleSeries to render."},
{ "name": "Button",
  "type": "Method",
  "class": "org.apache.royale.html.Button",
  "description": "Constructor."},
{ "name": "Button",
  "type": "Class",
  "description": "The Button class is a simple button."},
{ "name": "Button",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Button",
  "description": "constructor."},
{ "name": "Button",
  "type": "Class",
  "description": "The Button class represents an HTML <button> element"},
{ "name": "Button",
  "type": "Method",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "Button",
  "type": "Class",
  "description": "The Button control is a commonly used rectangular button."},
{ "name": "Button",
  "type": "Method",
  "class": "org.apache.royale.jewel.Button",
  "description": "Constructor."},
{ "name": "Button",
  "type": "Class",
  "description": "The Button class that should show text."},
{ "name": "Button",
  "type": "Method",
  "class": "org.apache.royale.mdl.Button",
  "description": "Constructor."},
{ "name": "Button",
  "type": "Class",
  "description": "The Button class provides a Material Design Library UI-like appearance for a Button."},
{ "name": "Button",
  "type": "Method",
  "class": "spark.components.Button",
  "description": "Constructor."},
{ "name": "Button",
  "type": "Class",
  "description": "The Button component is a commonly used rectangular button."},
{ "name": "Button",
  "type": "Class",
  "description": ""},
{ "name": "ButtonAutoRepeatController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ButtonAutoRepeatController",
  "description": "Constructor."},
{ "name": "ButtonAutoRepeatController",
  "type": "Class",
  "description": "The ButtonAutoRepeatController class adds autorepeat functionality to a button."},
{ "name": "ButtonBar",
  "type": "Method",
  "class": "org.apache.royale.html.ButtonBar",
  "description": "constructor."},
{ "name": "ButtonBar",
  "type": "Class",
  "description": "The ButtonBar class is a component that displays a set of Buttons."},
{ "name": "ButtonBar",
  "type": "Method",
  "class": "spark.components.ButtonBar",
  "description": "Constructor."},
{ "name": "ButtonBar",
  "type": "Class",
  "description": "The ButtonBar control defines a horizontal group of logically related buttons with a common look and navigation."},
{ "name": "ButtonBarBase",
  "type": "Method",
  "class": "spark.components.supportClasses.ButtonBarBase",
  "description": "Constructor."},
{ "name": "ButtonBarBase",
  "type": "Class",
  "description": "The ButtonBarBase class defines the common behavior for the ButtonBar, TabBar and similar subclasses."},
{ "name": "ButtonBarButtonItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ButtonBarButtonItemRenderer",
  "description": "constructor."},
{ "name": "ButtonBarButtonItemRenderer",
  "type": "Class",
  "description": "The ButtonBarButtonItemRenderer class handles the display of each item for the org."},
{ "name": "ButtonBarLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.ButtonBarLayout",
  "description": "constructor."},
{ "name": "ButtonBarLayout",
  "type": "Class",
  "description": "The ButtonBarLayout class bead sizes and positions the button elements that make up a org."},
{ "name": "ButtonBarModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ButtonBarModel",
  "description": "Constructor."},
{ "name": "ButtonBarModel",
  "type": "Class",
  "description": "The ArraySelectionModel class is a selection model for a dataProvider that is an array."},
{ "name": "ButtonBarReorderBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ButtonBarReorderBead",
  "description": "Constructor"},
{ "name": "ButtonBarReorderBead",
  "type": "Class",
  "description": "The ButtonBarReorderBead bead can be added to a ButtonBar to re-order the buttons using drag-and-drop."},
{ "name": "ButtonBarView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ButtonBarView",
  "description": "constructor."},
{ "name": "ButtonBarView",
  "type": "Class",
  "description": "The ButtonBarView class creates the visual elements of the org."},
{ "name": "ButtonBase",
  "type": "Class",
  "description": ""},
{ "name": "ButtonBase",
  "type": "Method",
  "class": "spark.components.supportClasses.ButtonBase",
  "description": "Constructor."},
{ "name": "ButtonBase",
  "type": "Class",
  "description": "The ButtonBase class is the base class for the all Spark button components."},
{ "name": "ButtonChip",
  "type": "Method",
  "class": "org.apache.royale.mdl.ButtonChip",
  "description": ""},
{ "name": "ButtonChip",
  "type": "Class",
  "description": "ButtonChip class represents a MDL button chip variant Chips are complex entities in small blocks."},
{ "name": "C",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the C key (67)."},
{ "name": "CACHED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CACHED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAKE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAKE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL_END",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL_END",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL_MADE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL_MADE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL_MERGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL_MERGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL_MISSED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL_MISSED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL_MISSED_OUTGOING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL_MISSED_OUTGOING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL_RECEIVED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL_RECEIVED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL_SPLIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL_SPLIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CALL_TO_ACTION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CALL_TO_ACTION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAMERA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAMERA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAMERA_ALT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAMERA_ALT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAMERA_ENHANCE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAMERA_ENHANCE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAMERA_FRONT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAMERA_FRONT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAMERA_REAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAMERA_REAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAMERA_ROLL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAMERA_ROLL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CANCEL",
  "type": "Property",
  "class": "org.apache.royale.html.Alert",
  "description": "The bitmask button flag to show the Cancel button."},
{ "name": "CANCEL",
  "type": "Property",
  "class": "org.apache.royale.core.DropType",
  "description": "The drop should be cancelled."},
{ "name": "CANCEL",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": "Value that enables a Cancel button on the Alert control when passed as the <code>flags</code> parameter of the <code>show()</code> method."},
{ "name": "CANCEL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CANCEL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CANCEL",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Cancel key."},
{ "name": "CANCEL",
  "type": "Property",
  "class": "org.apache.royale.jewel.Alert",
  "description": "The bitmask button flag to show the Cancel button."},
{ "name": "CANCELED",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "CAPS",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TypographicCase",
  "description": ""},
{ "name": "CAPS_AND_SMALL_CAPS",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TypographicCase",
  "description": ""},
{ "name": "CAPS_LOCK",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Caps Lock key (20)."},
{ "name": "CAPS_LOCK",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Caps Lock key."},
{ "name": "CAPS_TO_SMALL_CAPS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TLFTypographicCase",
  "description": "Specifies that uppercase characters use small-caps glyphs on output."},
{ "name": "CARD_GIFTCARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CARD_GIFTCARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CARD_MEMBERSHIP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CARD_MEMBERSHIP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CARD_TRAVEL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CARD_TRAVEL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CARET_CHANGE",
  "type": "Property",
  "class": "spark.events.GridCaretEvent",
  "description": "The <code>GridSelectionEvent."},
{ "name": "CASINO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CASINO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAST",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAST",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CAST_CONNECTED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CAST_CONNECTED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CELL",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDoubleClickMode",
  "description": "Specifies that the doubleClick event should be based on a cell."},
{ "name": "CELLS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionType",
  "description": ""},
{ "name": "CELSIUS",
  "type": "Property",
  "class": "google.maps.weather.TemperatureUnit",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "CENTER",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": ""},
{ "name": "CENTER",
  "type": "Property",
  "class": "mx.controls.ProgressBarLabelPlacement",
  "description": "Specifies to place at the center inside the progress bar."},
{ "name": "CENTER",
  "type": "Property",
  "class": "google.maps.StrokePosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "CENTER",
  "type": "Property",
  "class": "spark.layouts.HorizontalAlign",
  "description": "Align children in the center of the container."},
{ "name": "CENTER",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TabAlignment",
  "description": ""},
{ "name": "CENTER",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextAlign",
  "description": "Specifies center alignment within the container."},
{ "name": "CENTER",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.TextAlign",
  "description": ""},
{ "name": "CENTER_FOCUS_STRONG",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CENTER_FOCUS_STRONG",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CENTER_FOCUS_WEAK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CENTER_FOCUS_WEAK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CFF",
  "type": "Property",
  "class": "org.apache.royale.text.engine.RenderingMode",
  "description": ""},
{ "name": "CFFHinting",
  "type": "Method",
  "class": "org.apache.royale.text.engine.CFFHinting",
  "description": ""},
{ "name": "CFFHinting",
  "type": "Class",
  "description": ""},
{ "name": "CHANGE",
  "type": "Property",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "CHANGE",
  "type": "Property",
  "class": "mx.events.NumericStepperEvent",
  "description": "The <code>NumericStepperEvent."},
{ "name": "CHANGE",
  "type": "Property",
  "class": "org.apache.royale.core.TransformModel",
  "description": ""},
{ "name": "CHANGE",
  "type": "Property",
  "class": "spark.events.TextOperationEvent",
  "description": "The <code>TextOperationEvent."},
{ "name": "CHANGE",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "The <code>SliderEvent."},
{ "name": "CHANGE",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Event type constant; indicates that the selection in the chart has changed."},
{ "name": "CHANGE",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "CHANGE",
  "type": "Property",
  "class": "spark.events.IndexChangeEvent",
  "description": "The <code>IndexChangeEvent."},
{ "name": "CHANGE",
  "type": "Property",
  "class": "mx.events.CalendarLayoutChangeEvent",
  "description": "The <code>CalendarLayoutChangeEvent."},
{ "name": "CHANGE",
  "type": "Property",
  "class": "mx.events.IndexChangedEvent",
  "description": "The IndexChangedEvent."},
{ "name": "CHANGE_EVENT",
  "type": "Property",
  "class": "mx.binding.BindabilityInfo",
  "description": "Name of [ChangeEvent] metadata."},
{ "name": "CHANGE_HISTORY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHANGE_HISTORY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHANGING",
  "type": "Property",
  "class": "spark.events.TextOperationEvent",
  "description": "The <code>TextOperationEvent."},
{ "name": "CHANNEL_DOWN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the channel down button."},
{ "name": "CHANNEL_UP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the channel up button."},
{ "name": "CHARACTER",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "CHARSET_UTF_8",
  "type": "Property",
  "class": "mx.utils.Base64Encoder",
  "description": "Constant definition for the string \"UTF-8\"."},
{ "name": "CHART_CLICK",
  "type": "Property",
  "class": "mx.charts.events.ChartEvent",
  "description": "Indicates that the user clicked the mouse button over a chart control but not on a chart item."},
{ "name": "CHART_DOUBLE_CLICK",
  "type": "Property",
  "class": "mx.charts.events.ChartEvent",
  "description": "Indicates that the user double-clicked the mouse button over a chart control but not on a chart item."},
{ "name": "CHAT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHAT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHAT_BUBBLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHAT_BUBBLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHAT_BUBBLE_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHAT_BUBBLE_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHECK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHECK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHECK",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "A check mark."},
{ "name": "CHECK_BOX",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHECK_BOX",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHECK_BOX_OUTLINE_BLANK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHECK_BOX_OUTLINE_BLANK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHECK_CIRCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHECK_CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHECK_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHECK_INDEX",
  "type": "Property",
  "class": "org.apache.royale.utils.Language",
  "description": ""},
{ "name": "CHEVRON_LEFT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHEVRON_LEFT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHEVRON_RIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHEVRON_RIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHILD_CARE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHILD_CARE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHILD_FRIENDLY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHILD_FRIENDLY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CHILD_INDEX_CHANGE",
  "type": "Property",
  "class": "mx.events.IndexChangedEvent",
  "description": "The IndexChangedEvent."},
{ "name": "CHINESE",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "CHORME_READER_MODE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CHORME_READER_MODE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CIListener",
  "type": "Method",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": "Constructor."},
{ "name": "CIListener",
  "type": "Class",
  "description": ""},
{ "name": "CIRCLE",
  "type": "Property",
  "class": "google.maps.drawing.OverlayType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "A circle character marker that is not filled."},
{ "name": "CIRCLE",
  "type": "Property",
  "class": "google.maps.SymbolPath",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "CJK_EARTHLY_BRANCH",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering for CJK."},
{ "name": "CJK_HEAVENLY_STEM",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering for CJK."},
{ "name": "CLASS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLASS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLEAR",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "The Clear key."},
{ "name": "CLEAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLEAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLEAR",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.EditEvent",
  "description": ""},
{ "name": "CLEAR_ALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLEAR_ALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLEAR_SELECTION",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that current selection should be cleared."},
{ "name": "CLICK",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "CLICK",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "CLICK",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>click</code> event object."},
{ "name": "CLICK_SOMEWHERE",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Mouse was clicked somewhere outside your sandbox."},
{ "name": "CLIENT_PING_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to test connectivity over the current channel to the remote endpoint."},
{ "name": "CLIENT_PING_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to test connectivity over the current channel to the remote endpoint."},
{ "name": "CLIENT_SYNC_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used by a remote destination to sync missed or cached messages back to a client as a result of a client issued poll command."},
{ "name": "CLIENT_SYNC_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used by a remote destination to sync missed or cached messages back to a client as a result of a client issued poll command."},
{ "name": "CLOSE",
  "type": "Property",
  "class": "org.apache.royale.events.CloseEvent",
  "description": ""},
{ "name": "CLOSE",
  "type": "Property",
  "class": "spark.events.PopUpEvent",
  "description": "The PopUpEvent."},
{ "name": "CLOSE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOSE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLOSE",
  "type": "Property",
  "class": "mx.events.CloseEvent",
  "description": "The <code>CloseEvent."},
{ "name": "CLOSED_CAPTION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOSED_CAPTION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLOUD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOUD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLOUD_CIRCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOUD_CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLOUD_DONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOUD_DONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLOUD_DOWNLOAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOUD_DOWNLOAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLOUD_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOUD_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLOUD_QUEUE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOUD_QUEUE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLOUD_UPLOAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CLOUD_UPLOAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CLUSTER_REQUEST_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to request a list of failover endpoint URIs for the remote destination based on cluster membership."},
{ "name": "CLUSTER_REQUEST_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to request a list of failover endpoint URIs for the remote destination based on cluster membership."},
{ "name": "CODE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CODE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COLLAPSE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.WhiteSpaceCollapse",
  "description": "Collapse whitespace when importing text (default)."},
{ "name": "COLLECTIONS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COLLECTIONS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COLLECTIONS_BOOKMARK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COLLECTIONS_BOOKMARK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COLLECTION_CHANGE",
  "type": "Property",
  "class": "mx.events.CollectionEvent",
  "description": "The CollectionEvent."},
{ "name": "COLLECTION_CHANGED",
  "type": "Property",
  "class": "org.apache.royale.collections.Collection",
  "description": ""},
{ "name": "COLLECTION_CHANGED",
  "type": "Property",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": ""},
{ "name": "COLORIZE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COLORIZE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COLOR_LENS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COLOR_LENS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COLS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableRules",
  "description": "Rules will appear between columns only."},
{ "name": "COLUMNS",
  "type": "Property",
  "class": "spark.layouts.TileOrientation",
  "description": "Arranges elements column by column."},
{ "name": "COMMA",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the , key (188)."},
{ "name": "COMMAND",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the Mac command key (15)."},
{ "name": "COMMENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COMMENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COMMON",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LigatureLevel",
  "description": ""},
{ "name": "COMMUNICATION_ERROR",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "Dispatched if an error occurs in the server communication."},
{ "name": "COMPARE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COMPARE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COMPARE_ARROWS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COMPARE_ARROWS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COMPLETE",
  "type": "Property",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "COMPLETE",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "COMPLETE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineCreationResult",
  "description": ""},
{ "name": "COMPLETE",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "Dispatched when the request is complete."},
{ "name": "COMPOSITION_COMPLETE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.CompositionCompleteEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>compositionComplete</code> event object"},
{ "name": "COMPUTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COMPUTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONFIRMATION_NUMBER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONFIRMATION_NUMBER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONNECT",
  "type": "Property",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "The CONNECT event type; indicates that the Channel connected to its endpoint."},
{ "name": "CONNECTION",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPHeader",
  "description": "The Connection header."},
{ "name": "CONNECT_TIMEOUT_SECONDS",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "CONTACTS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONTACTS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONTACT_MAIL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONTACT_MAIL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONTACT_PHONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONTACT_PHONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONTAINER",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "CONTAINS",
  "type": "Property",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Specifies the use of a regex pattern matching the end with a given value."},
{ "name": "CONTENT_COPY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONTENT_COPY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONTENT_CUT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONTENT_CUT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONTENT_JUSTIFY",
  "type": "Property",
  "class": "spark.layouts.HorizontalAlign",
  "description": "Content justify the children with respect to the container."},
{ "name": "CONTENT_JUSTIFY",
  "type": "Property",
  "class": "spark.layouts.VerticalAlign",
  "description": "Content justify the children with respect to the container."},
{ "name": "CONTENT_LENGTH",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPHeader",
  "description": "The Content-length header."},
{ "name": "CONTENT_PASTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONTENT_PASTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONTENT_TYPE",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPHeader",
  "description": "The Content-type header."},
{ "name": "CONTENT_TYPE_FORM",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the content of this message is a form."},
{ "name": "CONTENT_TYPE_FORM",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Indicates that the data being sent by the HTTP service is encoded as application/x-www-form-urlencoded."},
{ "name": "CONTENT_TYPE_FORM",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Indicates that the data being sent by the HTTP service is encoded as application/x-www-form-urlencoded."},
{ "name": "CONTENT_TYPE_SOAP_XML",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the content of this message is XML meant for a SOAP request."},
{ "name": "CONTENT_TYPE_XML",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the content of this message is XML."},
{ "name": "CONTENT_TYPE_XML",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Indicates that the data being sent by the HTTP service is encoded as application/xml."},
{ "name": "CONTENT_TYPE_XML",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Indicates that the data being sent by the HTTP service is encoded as application/xml."},
{ "name": "CONTEXT_MENU",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "Shows the context menu."},
{ "name": "CONTROL",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Control key (17)."},
{ "name": "CONTROL",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Control, Ctrl, or Ctl key."},
{ "name": "CONTROL_POINT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONTROL_POINT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CONTROL_POINT_DUPLICATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CONTROL_POINT_DUPLICATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "COPY",
  "type": "Property",
  "class": "org.apache.royale.core.DropType",
  "description": "The data should be copied."},
{ "name": "COPY",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "The Copy key (on certain extended keyboards)."},
{ "name": "COPY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.EditEvent",
  "description": ""},
{ "name": "COPYRIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "COPYRIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CORSCredentialsBead",
  "type": "Method",
  "class": "org.apache.royale.net.beads.CORSCredentialsBead",
  "description": ""},
{ "name": "CORSCredentialsBead",
  "type": "Class",
  "description": "Bead to allow passing on user authentication information in a XMLHttpRequest request."},
{ "name": "CREATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CREATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CREATED",
  "type": "Property",
  "class": "org.apache.royale.events.ItemRendererEvent",
  "description": ""},
{ "name": "CREATE_NEW_FOLDER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CREATE_NEW_FOLDER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CREATION_COMPLETE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "CREDENTIALS_CHARSET_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Header to specify which character set encoding was used while encoding login credentials."},
{ "name": "CREDENTIALS_CHARSET_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Header to specify which character set encoding was used while encoding login credentials."},
{ "name": "CREDIT_CARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CREDIT_CARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_16_9",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_16_9",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_3_2",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_3_2",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_5_4",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_5_4",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_7_5",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_7_5",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_DIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_DIN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_FREE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_FREE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_LANDSCAPE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_LANDSCAPE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_ORIGINAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_ORIGINAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_PORTRAIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_PORTRAIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_ROTATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_ROTATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CROP_SQUARE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "CROP_SQUARE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "CSSCheckBox",
  "type": "Class",
  "description": ""},
{ "name": "CSSClassList",
  "type": "Method",
  "class": "org.apache.royale.core.CSSClassList",
  "description": "Constructor."},
{ "name": "CSSClassList",
  "type": "Class",
  "description": "The CSSClassList class is used to construct a list of class names to be applied."},
{ "name": "CSSFontFaceBead",
  "type": "Method",
  "class": "org.apache.royale.core.CSSFontFaceBead",
  "description": "Constructor."},
{ "name": "CSSFontFaceBead",
  "type": "Class",
  "description": "The CSSFontFaceBead class is the class that loads swfs of converted fonts so they can be used in Flash."},
{ "name": "CSSStyleDeclaration",
  "type": "Method",
  "class": "mx.styles.CSSStyleDeclaration",
  "description": "Constructor."},
{ "name": "CSSStyleDeclaration",
  "type": "Class",
  "description": "The CSSStyleDeclaration class represents a set of CSS style rules."},
{ "name": "CSSTextLayoutFormat",
  "type": "Class",
  "description": "This class is used by components such as RichText and RichEditableText which use TLF to display their text."},
{ "name": "CSSUtils",
  "type": "Class",
  "description": "The CSSUtils class is a collection of static functions that provide utility features for managing CSS values."},
{ "name": "CURRENT",
  "type": "Property",
  "class": "mx.collections.CursorBookmark",
  "description": "A bookmark representing the current item for the <code>IViewCursor</code> in an <code>ICollectionView</code>."},
{ "name": "CURRENT_VERSION",
  "type": "Property",
  "class": "org.apache.royale.textLayout.TextLayoutVersion",
  "description": "The current released version of the Text Layout Framework, encoded as a uint."},
{ "name": "CURSOR_MANAGEMENT",
  "type": "Property",
  "class": "mx.core.EventPriority",
  "description": "The CursorManager has handlers for mouse events which must be executed before other mouse event handlers, so they have a high priority."},
{ "name": "CURSOR_SELECT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "The Cursor Select key, CrSel."},
{ "name": "CUT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "The Cut key (on certain extended keyboards)."},
{ "name": "CUT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.EditEvent",
  "description": ""},
{ "name": "CYAN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "CalendarLayoutChangeEvent",
  "type": "Method",
  "class": "mx.events.CalendarLayoutChangeEvent",
  "description": "Constructor."},
{ "name": "CalendarLayoutChangeEvent",
  "type": "Class",
  "description": "The CalendarLayoutChangeEvent class represents the event object passed to the event listener for the <code>change</code> event for the DateChooser and DateField controls."},
{ "name": "CallLaterBead",
  "type": "Method",
  "class": "org.apache.royale.core.CallLaterBead",
  "description": "Constructor."},
{ "name": "CallLaterBead",
  "type": "Class",
  "description": "The CallLater bead implements ways for a method to be called after other code has finished running."},
{ "name": "CallResponder",
  "type": "Class",
  "description": "This component helps you manage the results for asynchronous calls made from RPC based services, typically from MXML components."},
{ "name": "Camera",
  "type": "Method",
  "class": "org.apache.royale.cordova.Camera",
  "description": ""},
{ "name": "Camera",
  "type": "Class",
  "description": "The Camera class implements the Cordova Camera"},
{ "name": "CandlestickChart",
  "type": "Method",
  "class": "mx.charts.CandlestickChart",
  "description": "Constructor."},
{ "name": "CandlestickChart",
  "type": "Class",
  "description": "The CandlestickChart control represents financial data as a series of candlesticks representing the high, low, opening, and closing values of a data series."},
{ "name": "CandlestickItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.CandlestickItemRenderer",
  "description": "Constructor."},
{ "name": "CandlestickItemRenderer",
  "type": "Class",
  "description": "The default itemRenderer for a CandlestickSeries object."},
{ "name": "CandlestickSeries",
  "type": "Method",
  "class": "mx.charts.series.CandlestickSeries",
  "description": "Constructor."},
{ "name": "CandlestickSeries",
  "type": "Class",
  "description": "Represents financial data as a series of candlesticks representing the high, low, opening, and closing values of a data series."},
{ "name": "Canvas",
  "type": "Method",
  "class": "mx.containers.Canvas",
  "description": "Constructor."},
{ "name": "Canvas",
  "type": "Class",
  "description": "A Halo Canvas layout container defines a rectangular region in which you place child containers and controls."},
{ "name": "CanvasLayout",
  "type": "Method",
  "class": "mx.containers.beads.CanvasLayout",
  "description": "Constructor."},
{ "name": "CanvasLayout",
  "type": "Class",
  "description": "The CanvasLayout class is for internal use only."},
{ "name": "Caption",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Caption",
  "description": "constructor."},
{ "name": "Caption",
  "type": "Class",
  "description": "The Caption class represents an HTML <caption> element"},
{ "name": "Card",
  "type": "Method",
  "class": "org.apache.royale.mdl.Card",
  "description": "constructor."},
{ "name": "Card",
  "type": "Class",
  "description": "The Card class is a self-contained pieces of paper with data."},
{ "name": "Card",
  "type": "Method",
  "class": "org.apache.royale.jewel.Card",
  "description": "constructor."},
{ "name": "Card",
  "type": "Class",
  "description": "The Card class is a container that surronds other components."},
{ "name": "CardActions",
  "type": "Method",
  "class": "org.apache.royale.mdl.CardActions",
  "description": "constructor."},
{ "name": "CardActions",
  "type": "Class",
  "description": "The CardActions class is a inner card container component."},
{ "name": "CardInner",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.CardInner",
  "description": "constructor."},
{ "name": "CardInner",
  "type": "Class",
  "description": "The CardInner class is a base class for all Card inner containers."},
{ "name": "CardMedia",
  "type": "Method",
  "class": "org.apache.royale.mdl.CardMedia",
  "description": "constructor."},
{ "name": "CardMedia",
  "type": "Class",
  "description": "The CardMedia class is a inner card container component."},
{ "name": "CardMenu",
  "type": "Method",
  "class": "org.apache.royale.mdl.CardMenu",
  "description": "constructor."},
{ "name": "CardMenu",
  "type": "Class",
  "description": "The CardMenu class is a inner card container component."},
{ "name": "CardSupportingText",
  "type": "Method",
  "class": "org.apache.royale.mdl.CardSupportingText",
  "description": "constructor."},
{ "name": "CardSupportingText",
  "type": "Class",
  "description": "The CardSupportingText class is a inner card container component."},
{ "name": "CardTitle",
  "type": "Method",
  "class": "org.apache.royale.mdl.CardTitle",
  "description": "constructor."},
{ "name": "CardTitle",
  "type": "Class",
  "description": "The CardTitle class is a inner card container component."},
{ "name": "CardTitleText",
  "type": "Method",
  "class": "org.apache.royale.mdl.CardTitleText",
  "description": "constructor."},
{ "name": "CardTitleText",
  "type": "Class",
  "description": "The CardTitleText class is an extended H2 heading used in MDL CardTitle."},
{ "name": "CartesianCanvasValue",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianCanvasValue",
  "description": "Constructor."},
{ "name": "CartesianCanvasValue",
  "type": "Class",
  "description": "Defines the position of objects on a data canvas."},
{ "name": "CartesianChart",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Constructor."},
{ "name": "CartesianChart",
  "type": "Class",
  "description": "The CartesianChart class is a base class for the common chart types."},
{ "name": "CartesianChart",
  "type": "Method",
  "class": "org.apache.royale.charts.core.CartesianChart",
  "description": "constructor."},
{ "name": "CartesianChart",
  "type": "Class",
  "description": "This class provides the basis for standard X-Y plots and anything the requires a two-dimensional function graph."},
{ "name": "CartesianDataCanvas",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Constructor."},
{ "name": "CartesianDataCanvas",
  "type": "Class",
  "description": "This class lets you use add graphical elements such as lines, ellipses, and other shapes by using a graphics API."},
{ "name": "CartesianTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianTransform",
  "description": "Constructor."},
{ "name": "CartesianTransform",
  "type": "Class",
  "description": "The CartesianTransform object represents a set of axes that maps data values to x/y Cartesian screen coordinates and vice versa."},
{ "name": "CascadingMenu",
  "type": "Method",
  "class": "org.apache.royale.html.CascadingMenu",
  "description": "Constructor."},
{ "name": "CascadingMenu",
  "type": "Class",
  "description": "The CascadingMenu class displays a list of selections with a potential for displaying a sub-list and a sub-sub-list etc."},
{ "name": "CascadingMenuFactory",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CascadingMenuFactory",
  "description": "Constructor."},
{ "name": "CascadingMenuFactory",
  "type": "Class",
  "description": "This bead class generates instances of the CascadingMenu for use with MenuBar."},
{ "name": "CascadingMenuItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.CascadingMenuItemRenderer",
  "description": "Constructor."},
{ "name": "CascadingMenuItemRenderer",
  "type": "Class",
  "description": "The CascadingMenuItemRenderer is the itemRenderer class for the elements of a CascadingMenu."},
{ "name": "CascadingMenuModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.CascadingMenuModel",
  "description": ""},
{ "name": "CascadingMenuModel",
  "type": "Class",
  "description": ""},
{ "name": "CascadingMenuSelectionMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.CascadingMenuSelectionMouseController",
  "description": "Constructor."},
{ "name": "CascadingMenuSelectionMouseController",
  "type": "Class",
  "description": "The CascadingMenuSelectionMouseController does the same job as the MenuSelectionMouseController except if the item in the menu that has been selected has children, in which case a new CascadingMenu is presented."},
{ "name": "CaseInsensitiveTLFFormatImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter",
  "description": ""},
{ "name": "CaseInsensitiveTLFFormatImporter",
  "type": "Class",
  "description": "Specialized to provide case insensitivity (as required by TEXT_FIELD_HTML_FORMAT) Keys need to be lower-cased."},
{ "name": "Category",
  "type": "Class",
  "description": "Property categories"},
{ "name": "CategoryAxis",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": "Constructor."},
{ "name": "CategoryAxis",
  "type": "Class",
  "description": "The CategoryAxis class lets charts represent data grouped by a set of discrete values along an axis."},
{ "name": "CellContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.CellContainer",
  "description": ""},
{ "name": "CellContainer",
  "type": "Class",
  "description": ""},
{ "name": "CellCoordinates",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.CellCoordinates",
  "description": ""},
{ "name": "CellCoordinates",
  "type": "Class",
  "description": "Describes the location of table cell by row and column"},
{ "name": "CellPosition",
  "type": "Method",
  "class": "spark.components.gridClasses.CellPosition",
  "description": "Constructor."},
{ "name": "CellPosition",
  "type": "Class",
  "description": "The CellPosition class defines a data structure used by the Spark data grid classes to represent selected cells in the control."},
{ "name": "CellRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.CellRange",
  "description": ""},
{ "name": "CellRange",
  "type": "Class",
  "description": "A read only class that describes a range of contiguous table cells."},
{ "name": "CellRegion",
  "type": "Method",
  "class": "spark.components.gridClasses.CellRegion",
  "description": "Constructor."},
{ "name": "CellRegion",
  "type": "Class",
  "description": "The CellRegion class defines a data structure used by the Spark data grid classes to represent a rectangular region of cells in the control."},
{ "name": "CenterElement",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CenterElement",
  "description": ""},
{ "name": "CenterElement",
  "type": "Class",
  "description": "The CenterElement bead breaks the normal layout flow and forces a particlular element to stay centered."},
{ "name": "ChainBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.ChainBinding",
  "description": "Constructor."},
{ "name": "ChainBinding",
  "type": "Class",
  "description": "The ChainBinding class is used to track changes of nested properties."},
{ "name": "ChangeWatcher",
  "type": "Method",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Constructor."},
{ "name": "ChangeWatcher",
  "type": "Class",
  "description": "The ChangeWatcher class defines utility methods that you can use with bindable Flex properties."},
{ "name": "Channel",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Constructs an instance of a generic Channel that connects to the specified endpoint URI."},
{ "name": "Channel",
  "type": "Class",
  "description": "The Channel class is the base message channel class that all channels in the messaging system must extend."},
{ "name": "ChannelError",
  "type": "Method",
  "class": "mx.messaging.errors.ChannelError",
  "description": "Constructs a new instance of a ChannelError with the specified message."},
{ "name": "ChannelError",
  "type": "Class",
  "description": "This is the base class for any channel related errors."},
{ "name": "ChannelEvent",
  "type": "Method",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "Constructs an instance of this event with the specified type and Channel instance."},
{ "name": "ChannelEvent",
  "type": "Class",
  "description": "The ChannelEvent is used to propagate channel events within the messaging system."},
{ "name": "ChannelFaultEvent",
  "type": "Method",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Constructs an instance of this event with the specified type."},
{ "name": "ChannelFaultEvent",
  "type": "Class",
  "description": "The ChannelFaultEvent class is used to propagate channel fault events within the messaging system."},
{ "name": "ChannelSet",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Constructs a ChannelSet."},
{ "name": "ChannelSet",
  "type": "Class",
  "description": "The ChannelSet is a set of Channels that are used to send messages to a target destination."},
{ "name": "CharCodeStrings",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] An array containing all the defined key name constants."},
{ "name": "CharacterUtil",
  "type": "Class",
  "description": "Utilities for managing and getting information about characters."},
{ "name": "ChartArrayListSelectionModel",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.models.ChartArrayListSelectionModel",
  "description": ""},
{ "name": "ChartArrayListSelectionModel",
  "type": "Class",
  "description": "The ArraySelectionModel class is a selection model for a dataProvider that is an array."},
{ "name": "ChartArraySelectionModel",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.models.ChartArraySelectionModel",
  "description": ""},
{ "name": "ChartArraySelectionModel",
  "type": "Class",
  "description": "The ArraySelectionModel class is a selection model for a dataProvider that is an array."},
{ "name": "ChartAxisGroup",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartAxisGroup",
  "description": "Constructor."},
{ "name": "ChartAxisGroup",
  "type": "Class",
  "description": "The ChartAxisGroup provides a space where the objects for a chart's axis can be placed."},
{ "name": "ChartBase",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Constructor."},
{ "name": "ChartBase",
  "type": "Class",
  "description": "The ChartBase class is the link between the Flex component architecture and the DualStyleObject architecture."},
{ "name": "ChartBase",
  "type": "Method",
  "class": "org.apache.royale.charts.core.ChartBase",
  "description": "constructor."},
{ "name": "ChartBase",
  "type": "Class",
  "description": "The ChartBase class contains all of the properties common to most charts."},
{ "name": "ChartBaseLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.ChartBaseLayout",
  "description": ""},
{ "name": "ChartBaseLayout",
  "type": "Class",
  "description": ""},
{ "name": "ChartDataGroup",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartDataGroup",
  "description": "constructor."},
{ "name": "ChartDataGroup",
  "type": "Class",
  "description": "The ChartDataGroup class provides the actual space for rendering the chart."},
{ "name": "ChartElement",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Constructor."},
{ "name": "ChartElement",
  "type": "Class",
  "description": "The ChartElement class is the base class for visual chart elements."},
{ "name": "ChartEvent",
  "type": "Method",
  "class": "mx.charts.events.ChartEvent",
  "description": "Constructor."},
{ "name": "ChartEvent",
  "type": "Class",
  "description": "The ChartEvent class represents events that are specific to the chart control, such as when a chart is clicked."},
{ "name": "ChartItem",
  "type": "Method",
  "class": "mx.charts.ChartItem",
  "description": "Constructor."},
{ "name": "ChartItem",
  "type": "Class",
  "description": "A ChartItem represents a single item in a ChartSeries."},
{ "name": "ChartItemDragProxy",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartItemDragProxy",
  "description": "Constructor."},
{ "name": "ChartItemDragProxy",
  "type": "Class",
  "description": "The default drag proxy used when dragging items from a chart control."},
{ "name": "ChartItemEvent",
  "type": "Method",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Constructor."},
{ "name": "ChartItemEvent",
  "type": "Class",
  "description": "The ChartItemEvent class represents events that are specific to the chart components, such as when a chart item is clicked."},
{ "name": "ChartItemRendererFactory",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.ChartItemRendererFactory",
  "description": "constructor."},
{ "name": "ChartItemRendererFactory",
  "type": "Class",
  "description": "The ChartItemRendererFactory class implements IDataProviderItemRendererMapper and creats the itemRenderers for each series in a chart."},
{ "name": "ChartLabel",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartLabel",
  "description": "Constructor."},
{ "name": "ChartLabel",
  "type": "Class",
  "description": "Draws data labels on chart controls."},
{ "name": "ChartSeriesMouseController",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": ""},
{ "name": "ChartSeriesMouseController",
  "type": "Class",
  "description": ""},
{ "name": "ChartState",
  "type": "Class",
  "description": "Describes the current state of a chart."},
{ "name": "ChartView",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.ChartView",
  "description": "Constructor"},
{ "name": "ChartView",
  "type": "Class",
  "description": "The ChartView class provides the visual elemental structure for a chart."},
{ "name": "CheckBox",
  "type": "Class",
  "description": ""},
{ "name": "CheckBox",
  "type": "Class",
  "description": ""},
{ "name": "CheckBox",
  "type": "Class",
  "description": ""},
{ "name": "CheckBox",
  "type": "Class",
  "description": ""},
{ "name": "CheckBox",
  "type": "Method",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": "Constructor."},
{ "name": "CheckBox",
  "type": "Class",
  "description": "The CheckBox class provides a MDL UI-like appearance for a CheckBox."},
{ "name": "CheckBox",
  "type": "Class",
  "description": ""},
{ "name": "CheckBox",
  "type": "Method",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": "Constructor."},
{ "name": "CheckBox",
  "type": "Class",
  "description": "The CheckBox class provides a Jewel UI-like appearance for a CheckBox."},
{ "name": "CheckBox",
  "type": "Method",
  "class": "spark.components.CheckBox",
  "description": "Constructor."},
{ "name": "CheckBox",
  "type": "Class",
  "description": "The CheckBox component consists of an optional label and a small box that can contain a check mark or not."},
{ "name": "CheckBoxIcon",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.checkbox.CheckBoxIcon",
  "description": ""},
{ "name": "CheckBoxIcon",
  "type": "Class",
  "description": ""},
{ "name": "CheckBoxIcon",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.CheckBoxIcon",
  "description": ""},
{ "name": "CheckBoxIcon",
  "type": "Class",
  "description": ""},
{ "name": "CheckBoxValidator",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.CheckBoxValidator",
  "description": "constructor."},
{ "name": "CheckBoxValidator",
  "type": "Class",
  "description": "The CheckBoxValidator class is a specialty bead that can be used with Group control."},
{ "name": "Chip",
  "type": "Method",
  "class": "org.apache.royale.mdl.Chip",
  "description": ""},
{ "name": "Chip",
  "type": "Class",
  "description": "Chip class represents a MDL basic Chip Chips are complex entities in small blocks."},
{ "name": "ChipBase",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.ChipBase",
  "description": "Constructor."},
{ "name": "ChipBase",
  "type": "Class",
  "description": "ChipBase class is the base class for Chip and ButtonChip Chips are complex entities in small blocks."},
{ "name": "Circle",
  "type": "Class",
  "description": ""},
{ "name": "Circle",
  "type": "Method",
  "class": "org.apache.royale.svg.Circle",
  "description": "constructor."},
{ "name": "Circle",
  "type": "Class",
  "description": ""},
{ "name": "CircleItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.CircleItemRenderer",
  "description": "Constructor."},
{ "name": "CircleItemRenderer",
  "type": "Class",
  "description": "A simple chart itemRenderer implementation that fills an elliptical area."},
{ "name": "ClassAliasBead",
  "type": "Method",
  "class": "org.apache.royale.reflection.beads.ClassAliasBead",
  "description": "Constructor."},
{ "name": "ClassAliasBead",
  "type": "Class",
  "description": "The ClassAliasBead class is the registers class aliases for serialization/deserialization."},
{ "name": "ClassFactory",
  "type": "Method",
  "class": "org.apache.royale.core.ClassFactory",
  "description": "Constructor."},
{ "name": "ClassFactory",
  "type": "Class",
  "description": "The ClassFactory class is the basic implementation of an IFactory that will generate multiple instances of item renderers or custom classes."},
{ "name": "ClassFactory",
  "type": "Method",
  "class": "mx.core.ClassFactory",
  "description": ""},
{ "name": "ClassFactory",
  "type": "Class",
  "description": "The ClassFactory class is the basic implementation of an IFactory that will generate multiple instances of item renderers or custom classes."},
{ "name": "ClassSelectorList",
  "type": "Method",
  "class": "org.apache.royale.utils.ClassSelectorList",
  "description": ""},
{ "name": "ClassSelectorList",
  "type": "Class",
  "description": "The ClassSelectorList class is used to manage the list of class selectors applied to a component."},
{ "name": "CleanValidationErrors",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.application.CleanValidationErrors",
  "description": "constructor."},
{ "name": "CleanValidationErrors",
  "type": "Class",
  "description": "The CleanValidationErrors listen for \"navigationAction\" event signaling some navigation was performed and we want to clean all validation errors in that could be left in the previous content"},
{ "name": "ClearFloats",
  "type": "Class",
  "description": "Defines values for setting the <code>clear</code> property of the <code>TextLayoutFormat</code> class."},
{ "name": "ClearFormatOnElementOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ClearFormatOnElementOperation",
  "description": "Creates an ClearFormatOnElementOperation object."},
{ "name": "ClearFormatOnElementOperation",
  "type": "Class",
  "description": "The ClearFormatOnElementOperation class encapsulates a style change to an element."},
{ "name": "ClearFormatOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ClearFormatOperation",
  "description": "Creates an ClearFormatOperation object."},
{ "name": "ClearFormatOperation",
  "type": "Class",
  "description": "The ClearFormatOperation class encapsulates a way to undefine formats."},
{ "name": "ClipBead",
  "type": "Method",
  "class": "org.apache.royale.svg.ClipBead",
  "description": ""},
{ "name": "ClipBead",
  "type": "Class",
  "description": "The ClipBead bead allows you to clip a graphic Shape using a an arbitrary graphic path."},
{ "name": "Clipboard",
  "type": "Class",
  "description": ""},
{ "name": "ClipboardFormats",
  "type": "Class",
  "description": ""},
{ "name": "ClippingViewport",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ClippingViewport",
  "description": "Constructor"},
{ "name": "ClippingViewport",
  "type": "Class",
  "description": "The ClippingViewport extends the Viewport class and makes sure that items extending outside the Container are hidden."},
{ "name": "CloseButton",
  "type": "Method",
  "class": "org.apache.royale.html.CloseButton",
  "description": "Constructor."},
{ "name": "CloseButton",
  "type": "Class",
  "description": "The CloseButton class is Button that displays an X and is commonly used in a Panel's TitleBar."},
{ "name": "CloseButtonView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CloseButtonView",
  "description": "Constructor."},
{ "name": "CloseButtonView",
  "type": "Class",
  "description": "The CloseButtonView class is the view for the down arrow button in a ScrollBar and other controls."},
{ "name": "CloseEvent",
  "type": "Method",
  "class": "org.apache.royale.events.CloseEvent",
  "description": ""},
{ "name": "CloseEvent",
  "type": "Class",
  "description": "The CloseEvent class represents event objects specific to popup windows, such as the Alert control."},
{ "name": "CloseEvent",
  "type": "Method",
  "class": "mx.events.CloseEvent",
  "description": "Constructor."},
{ "name": "CloseEvent",
  "type": "Class",
  "description": "The CloseEvent class represents event objects specific to popup windows, such as the Alert control."},
{ "name": "Code",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Code",
  "description": "constructor."},
{ "name": "Code",
  "type": "Class",
  "description": "The Code class represents an HTML <code> element"},
{ "name": "Col",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Col",
  "description": "constructor."},
{ "name": "Col",
  "type": "Class",
  "description": "The Col class represents an HTML <col> element"},
{ "name": "Colgroup",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Colgroup",
  "description": "constructor."},
{ "name": "Colgroup",
  "type": "Class",
  "description": "The Colgroup class represents an HTML <colgroup> element"},
{ "name": "Collection",
  "type": "Method",
  "class": "org.apache.royale.collections.Collection",
  "description": ""},
{ "name": "Collection",
  "type": "Class",
  "description": ""},
{ "name": "CollectionChangeUpdateForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.CollectionChangeUpdateForArrayListData",
  "description": "Constructor"},
{ "name": "CollectionChangeUpdateForArrayListData",
  "type": "Class",
  "description": "Handles the update of an itemRenderer in a List component once the corresponding datum has been updated from the IDataProviderModel."},
{ "name": "CollectionChangeUpdateForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CollectionChangeUpdateForArrayListData",
  "description": "Constructor"},
{ "name": "CollectionChangeUpdateForArrayListData",
  "type": "Class",
  "description": "Handles the update of an itemRenderer in a List component once the corresponding datum has been updated from the IDataProviderModel."},
{ "name": "CollectionEvent",
  "type": "Method",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": "Constructor."},
{ "name": "CollectionEvent",
  "type": "Class",
  "description": "The CollectionEvent class is used for dispatching an collection events"},
{ "name": "CollectionEvent",
  "type": "Method",
  "class": "mx.events.CollectionEvent",
  "description": "Constructor."},
{ "name": "CollectionEvent",
  "type": "Class",
  "description": "The mx."},
{ "name": "CollectionEventKind",
  "type": "Class",
  "description": "The CollectionEventKind class contains constants for the valid values of the mx."},
{ "name": "CollectionUtils",
  "type": "Class",
  "description": ""},
{ "name": "ColorBurnShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.ColorBurnShader",
  "description": "Constructor."},
{ "name": "ColorBurnShader",
  "type": "Class",
  "description": "Creates a blend shader that is equivalent to the 'Color Burn' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools."},
{ "name": "ColorDodgeShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.ColorDodgeShader",
  "description": "Constructor."},
{ "name": "ColorDodgeShader",
  "type": "Class",
  "description": "Creates a blend shader that is equivalent to the 'Color Dodge' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools."},
{ "name": "ColorItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ColorItemRenderer",
  "description": "constructor."},
{ "name": "ColorItemRenderer",
  "type": "Class",
  "description": "The ColorItemRenderer class displays a color as part of a color palette"},
{ "name": "ColorMatrixFilter",
  "type": "Method",
  "class": "mx.filters.ColorMatrixFilter",
  "description": ""},
{ "name": "ColorMatrixFilter",
  "type": "Class",
  "description": ""},
{ "name": "ColorMatrixFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": ""},
{ "name": "ColorMatrixFilterElement",
  "type": "Class",
  "description": "The ColorMatrixFilterElement bead adds an offset to a filtered SVG element"},
{ "name": "ColorModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ColorModel",
  "description": "Constructor."},
{ "name": "ColorModel",
  "type": "Class",
  "description": "The ColorModel class is the most basic data model for a component that displays or edits a color."},
{ "name": "ColorName",
  "type": "Class",
  "description": "Defines a constant for specifying that the value of the <code>color</code> property of the <code>TextLayoutFormat</code> class is \"transparent\"."},
{ "name": "ColorPalette",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ColorPalette",
  "description": "constructor."},
{ "name": "ColorPalette",
  "type": "Class",
  "description": "The ColorPalette class is used in a ColorPicker."},
{ "name": "ColorPicker",
  "type": "Method",
  "class": "org.apache.royale.html.ColorPicker",
  "description": ""},
{ "name": "ColorPicker",
  "type": "Class",
  "description": "The ColorPicker class is a component that lets you select a color"},
{ "name": "ColorPicker",
  "type": "Method",
  "class": "mx.controls.ColorPicker",
  "description": "Constructor."},
{ "name": "ColorPicker",
  "type": "Class",
  "description": "The ColorPicker control provides a way for a user to choose a color from a swatch list."},
{ "name": "ColorPickerPopUp",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUp",
  "description": "constructor."},
{ "name": "ColorPickerPopUp",
  "type": "Class",
  "description": "The ColorPickerPopUp class is used in ColorPicker."},
{ "name": "ColorPickerPopUpWithPalette",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUpWithPalette",
  "description": "constructor."},
{ "name": "ColorPickerPopUpWithPalette",
  "type": "Class",
  "description": "The ColorPickerPopUpWithPalette class is used in ColorPicker."},
{ "name": "ColorPickerView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ColorPickerView",
  "description": ""},
{ "name": "ColorPickerView",
  "type": "Class",
  "description": "The ColorPickerView class creates the visual elements of the org."},
{ "name": "ColorPickerWithEmptyView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ColorPickerWithEmptyView",
  "description": ""},
{ "name": "ColorPickerWithEmptyView",
  "type": "Class",
  "description": "The ColorPickerWithEmptyView overrides ColorPickerView methods to visibly indicate that a selection is empty"},
{ "name": "ColorShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.ColorShader",
  "description": "Constructor."},
{ "name": "ColorShader",
  "type": "Class",
  "description": "The ColorShader class creates a blend shader that is equivalent to the 'Color' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools."},
{ "name": "ColorSpectrum",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ColorSpectrum",
  "description": "Constructor."},
{ "name": "ColorSpectrum",
  "type": "Class",
  "description": "The ColorSpectrum class is use in a ColorPicker."},
{ "name": "ColorSpectrumModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ColorSpectrumModel",
  "description": "Constructor."},
{ "name": "ColorSpectrumModel",
  "type": "Class",
  "description": "The ColorSpectrumModel class is the most basic data model for a component that displays or edits a color spectrum."},
{ "name": "ColorSpectrumMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ColorSpectrumMouseController",
  "description": "Constructor."},
{ "name": "ColorSpectrumMouseController",
  "type": "Class",
  "description": "The ColorSpectrumMouseController class is a controller for the ColorSpecrum control."},
{ "name": "ColorSpectrumView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ColorSpectrumView",
  "description": "Constructor."},
{ "name": "ColorSpectrumView",
  "type": "Class",
  "description": "The ColorSpectrumView class is the view for the org."},
{ "name": "ColorTransform",
  "type": "Class",
  "description": ""},
{ "name": "ColorUtil",
  "type": "Class",
  "description": "The ColorUtil class is an all-static class with methods for working with RGB colors within Royale."},
{ "name": "ColumnAlign",
  "type": "Class",
  "description": "The ColumnAlign class defines the possible values for the <code>columnAlign</code> property of the TileLayout class."},
{ "name": "ColumnChart",
  "type": "Method",
  "class": "mx.charts.ColumnChart",
  "description": "Constructor."},
{ "name": "ColumnChart",
  "type": "Class",
  "description": "The ColumnChart control represents data as a series of vertical columns whose height is determined by values in the data."},
{ "name": "ColumnChart",
  "type": "Method",
  "class": "org.apache.royale.charts.ColumnChart",
  "description": "constructor."},
{ "name": "ColumnChart",
  "type": "Class",
  "description": "The ColumnChart displays a histogram chart where each series in in the chart is a vertical column placed side by side."},
{ "name": "ColumnChartLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.ColumnChartLayout",
  "description": ""},
{ "name": "ColumnChartLayout",
  "type": "Class",
  "description": "The ColumnChartLayout arranges the graphics in vertical columns (or whatever shape the renderer uses) using a category axis horizontally and a linear axis vertically."},
{ "name": "ColumnChartLayoutForArrayList",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.ColumnChartLayoutForArrayList",
  "description": "constructor."},
{ "name": "ColumnChartLayoutForArrayList",
  "type": "Class",
  "description": "The ColumnChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for all of the series in a BarChart."},
{ "name": "ColumnSeries",
  "type": "Method",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Constructor."},
{ "name": "ColumnSeries",
  "type": "Class",
  "description": "Defines a data series for a ColumnChart control."},
{ "name": "ColumnSeries",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ColumnSeries",
  "description": ""},
{ "name": "ColumnSeries",
  "type": "Class",
  "description": "The ColumnSeries defines what field is being plotted from the chart's dataProvider."},
{ "name": "ColumnSeriesItem",
  "type": "Method",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "Constructor."},
{ "name": "ColumnSeriesItem",
  "type": "Class",
  "description": "Represents the information required to render an item as part of a ColumnSeries."},
{ "name": "ColumnSeriesRenderData",
  "type": "Method",
  "class": "mx.charts.series.renderData.ColumnSeriesRenderData",
  "description": "Constructor."},
{ "name": "ColumnSeriesRenderData",
  "type": "Class",
  "description": "Represents all the information needed by the ColumnSeries to render."},
{ "name": "ColumnSet",
  "type": "Method",
  "class": "mx.charts.series.ColumnSet",
  "description": "Constructor."},
{ "name": "ColumnSet",
  "type": "Class",
  "description": "ColumnSet is a grouping set that can be used to stack or cluster column series in any arbitrary chart."},
{ "name": "ColumnState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": "Constructor function - creates a ColumnState object."},
{ "name": "ColumnState",
  "type": "Class",
  "description": "The ColumnState class calculates the sizes and locations of columns using the width of the container and the container attributes."},
{ "name": "ComboBase",
  "type": "Method",
  "class": "mx.controls.ComboBase",
  "description": "Constructor."},
{ "name": "ComboBase",
  "type": "Class",
  "description": "The ComboBase class is the base class for controls that display text in a text field and have a button that causes a drop-down list to appear where the user can choose which text to display."},
{ "name": "ComboBox",
  "type": "Method",
  "class": "org.apache.royale.html.ComboBox",
  "description": "Constructor."},
{ "name": "ComboBox",
  "type": "Class",
  "description": "The ComboBox class is a component that displays an input field and pop-up List with selections."},
{ "name": "ComboBox",
  "type": "Method",
  "class": "org.apache.royale.jewel.ComboBox",
  "description": "Constructor."},
{ "name": "ComboBox",
  "type": "Class",
  "description": "The ComboBox class is a component that displays an input field and pop-up List with selections."},
{ "name": "ComboBox",
  "type": "Method",
  "class": "spark.components.ComboBox",
  "description": "Constructor."},
{ "name": "ComboBox",
  "type": "Class",
  "description": "The ComboBox control is a child class of the DropDownListBase control."},
{ "name": "ComboBox",
  "type": "Method",
  "class": "mx.controls.ComboBox",
  "description": "Constructor."},
{ "name": "ComboBox",
  "type": "Class",
  "description": "The ComboBox control contains a drop-down list from which the user can select a single value."},
{ "name": "ComboBox",
  "type": "Class",
  "description": ""},
{ "name": "ComboBoxController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "ComboBoxController",
  "type": "Class",
  "description": ""},
{ "name": "ComboBoxController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": "constructor."},
{ "name": "ComboBoxController",
  "type": "Class",
  "description": "The ComboBoxController class is responsible for listening to mouse event related to ComboBox."},
{ "name": "ComboBoxDisabled",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboBoxDisabled",
  "description": "constructor."},
{ "name": "ComboBoxDisabled",
  "type": "Class",
  "description": "The ComboBoxDisabled bead class is a specialty bead that can be used to disable a Jewel ComboBox."},
{ "name": "ComboBoxList",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ComboBoxList",
  "description": "Constructor."},
{ "name": "ComboBoxList",
  "type": "Class",
  "description": "The ComboBoxList class is the List class used internally by ComboBox as the dropdown/popup."},
{ "name": "ComboBoxModel",
  "type": "Method",
  "class": "mx.controls.beads.models.ComboBoxModel",
  "description": "Constructor."},
{ "name": "ComboBoxModel",
  "type": "Class",
  "description": "MenuBar Mouse Controller"},
{ "name": "ComboBoxModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ComboBoxModel",
  "description": "constructor."},
{ "name": "ComboBoxModel",
  "type": "Class",
  "description": "The ComboBoxModel class bead extends org."},
{ "name": "ComboBoxModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.ComboBoxModel",
  "description": "constructor."},
{ "name": "ComboBoxModel",
  "type": "Class",
  "description": "The ComboBoxModel class bead extends org."},
{ "name": "ComboBoxPopUp",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.combobox.ComboBoxPopUp",
  "description": "Constructor."},
{ "name": "ComboBoxPopUp",
  "type": "Class",
  "description": "The ComboBoxPopUp class is the popup that holds the List used internally by ComboBox as the dropdown/popup."},
{ "name": "ComboBoxPopUpView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxPopUpView",
  "description": "constructor"},
{ "name": "ComboBoxPopUpView",
  "type": "Class",
  "description": "The ComboBoxPopUpView class is a view bead for the ComboBoxPopUp."},
{ "name": "ComboBoxTextPrompt",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboBoxTextPrompt",
  "description": "constructor."},
{ "name": "ComboBoxTextPrompt",
  "type": "Class",
  "description": "The ComboBoxTextPrompt class is a specialty bead that can be used with any ComboBox control."},
{ "name": "ComboBoxView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ComboBoxView",
  "description": ""},
{ "name": "ComboBoxView",
  "type": "Class",
  "description": "The ComboBoxView class creates the visual elements of the org."},
{ "name": "ComboBoxView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxView",
  "description": ""},
{ "name": "ComboBoxView",
  "type": "Class",
  "description": "The ComboBoxView class creates the visual elements of the org."},
{ "name": "ComboLowerCase",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboLowerCase",
  "description": "constructor."},
{ "name": "ComboLowerCase",
  "type": "Class",
  "description": "The ComboLowerCase class is a specialty bead that can be used with a Jewel ComboBox control."},
{ "name": "ComboUpperCase",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboUpperCase",
  "description": "constructor."},
{ "name": "ComboUpperCase",
  "type": "Class",
  "description": "The ComboUpperCase class is a specialty bead that can be used with a Jewel ComboBox control."},
{ "name": "CommandMessage",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Constructs an instance of a CommandMessage with an empty body and header and a default <code>operation</code> of <code>UNKNOWN_OPERATION</code>."},
{ "name": "CommandMessage",
  "type": "Class",
  "description": "The CommandMessage class provides a mechanism for sending commands to the server infrastructure, such as commands related to publish/subscribe messaging scenarios, ping operations, and cluster operations."},
{ "name": "CommandMessage",
  "type": "Method",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Constructs an instance of a CommandMessage with an empty body and header and a default <code>operation</code> of <code>UNKNOWN_OPERATION</code>."},
{ "name": "CommandMessage",
  "type": "Class",
  "description": "The CommandMessage class provides a mechanism for sending commands to the server infrastructure, such as commands related to publish/subscribe messaging scenarios, ping operations, and cluster operations."},
{ "name": "CommandMessageExt",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.CommandMessageExt",
  "description": ""},
{ "name": "CommandMessageExt",
  "type": "Class",
  "description": "A special serialization wrapper for CommandMessage."},
{ "name": "CommandMessageExt",
  "type": "Method",
  "class": "mx.messaging.messages.CommandMessageExt",
  "description": ""},
{ "name": "CommandMessageExt",
  "type": "Class",
  "description": "A special serialization wrapper for CommandMessage."},
{ "name": "CompareUtils",
  "type": "Class",
  "description": ""},
{ "name": "CompilationData",
  "type": "Method",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "CompilationData",
  "type": "Class",
  "description": "Information about compiletime settings used when compiling the target class or instance"},
{ "name": "ComplexFieldChangeWatcher",
  "type": "Class",
  "description": ""},
{ "name": "ComplexSortField",
  "type": "Method",
  "class": "spark.collections.ComplexSortField",
  "description": ""},
{ "name": "ComplexSortField",
  "type": "Class",
  "description": ""},
{ "name": "ComposeState",
  "type": "Class",
  "description": "Keeps track of internal state during composition."},
{ "name": "ComposeUtils",
  "type": "Class",
  "description": ""},
{ "name": "CompositeEffect",
  "type": "Method",
  "class": "mx.effects.CompositeEffect",
  "description": "Constructor."},
{ "name": "CompositeEffect",
  "type": "Class",
  "description": "The CompositeEffect class is the parent class for the Parallel and Sequence classes, which define the <code>&lt;mx:Parallel&gt;</code> and <code>&lt;mx:Sequence&gt;</code> MXML tags."},
{ "name": "CompositeEffectInstance",
  "type": "Method",
  "class": "mx.effects.effectClasses.CompositeEffectInstance",
  "description": "Constructor."},
{ "name": "CompositeEffectInstance",
  "type": "Class",
  "description": "The CompositeEffectInstance class implements the instance class for the CompositeEffect class."},
{ "name": "CompositeFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "CompositeFilterElement",
  "type": "Class",
  "description": "The CompositeFilterElement takes two objects and applies Porter/Duff operators"},
{ "name": "CompositeOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.CompositeOperation",
  "description": "Creates a CompositeOperation object."},
{ "name": "CompositeOperation",
  "type": "Class",
  "description": "The CompositeOperation class encapsulates a group of transformations managed as a unit."},
{ "name": "CompositionAttributeRange",
  "type": "Method",
  "class": "org.apache.royale.text.ime.CompositionAttributeRange",
  "description": "Creates a CompositionAttributeRange object."},
{ "name": "CompositionAttributeRange",
  "type": "Class",
  "description": "The CompositionAttributeRange class represents a range of composition attributes for use with IME events."},
{ "name": "CompositionCompleteEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.CompositionCompleteEvent",
  "description": "Constructor This event cannot be cancelled."},
{ "name": "CompositionCompleteEvent",
  "type": "Class",
  "description": "A ITextFlow instance dispatches this event after a compose operation completes."},
{ "name": "CompoundAsyncTask",
  "type": "Method",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": ""},
{ "name": "CompoundAsyncTask",
  "type": "Class",
  "description": "The CompoundAsyncTask class allows running a number of AsyncTasks in parallel and resolves when they are done."},
{ "name": "CompoundEffect",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": "Constructor."},
{ "name": "CompoundEffect",
  "type": "Class",
  "description": "CompoundEffect implements ICompoundEffect by dispatching events that should be handled by pluggable beads."},
{ "name": "CompoundGraphic",
  "type": "Class",
  "description": "CompoundGraphic is a surface on which you can draw various graphic elements such as Rect, Circle, Ellipse, Path etc."},
{ "name": "CompoundTransform",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "Constructor."},
{ "name": "CompoundTransform",
  "type": "Class",
  "description": "A CompoundTransform represents a 2D or 3D matrix transform."},
{ "name": "CompressedRemoteObject",
  "type": "Method",
  "class": "org.apache.royale.net.CompressedRemoteObject",
  "description": "Uses the pako library for the zlib compression algorithm  <inject_html> <script src=\"https://cdnjs."},
{ "name": "CompressedRemoteObject",
  "type": "Class",
  "description": "A RemoteObject that performs automatic serialization/deserialization of results."},
{ "name": "CompressedRemoteObject",
  "type": "Method",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": "Uses the pako library for the zlib compression algorithm  <inject_html> <script src=\"https://cdnjs."},
{ "name": "CompressedRemoteObject",
  "type": "Class",
  "description": "A RemoteObject that performs automatic serialization/deserialization of results."},
{ "name": "CompressedRemoteObject",
  "type": "Method",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": "Uses the pako library for the zlib compression algorithm  <inject_html> <script src=\"https://cdnjs."},
{ "name": "CompressedRemoteObject",
  "type": "Class",
  "description": "A RemoteObject that performs automatic serialization/deserialization of results."},
{ "name": "CompressionUtils",
  "type": "Method",
  "class": "org.apache.royale.utils.CompressionUtils",
  "description": "The Royale Compiler will inject html into the index."},
{ "name": "CompressionUtils",
  "type": "Class",
  "description": ""},
{ "name": "Concurrency",
  "type": "Class",
  "description": "Concurrency is set via MXML based access to RPC services to indicate how to handle multiple calls to the same service."},
{ "name": "ConfigMap",
  "type": "Method",
  "class": "mx.messaging.config.ConfigMap",
  "description": "Constructor."},
{ "name": "ConfigMap",
  "type": "Class",
  "description": "The ConfigMap class provides a mechanism to store the properties returned by the server with the ordering of the properties maintained."},
{ "name": "ConfigSettings",
  "type": "Class",
  "description": ""},
{ "name": "ConfigUtils",
  "type": "Class",
  "description": ""},
{ "name": "Configuration",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": "Constructor - creates a default configuration."},
{ "name": "Configuration",
  "type": "Class",
  "description": "The Configuration class is a primary point of integration between the Text Layout Framework and an application."},
{ "name": "ConfigurationHelper",
  "type": "Class",
  "description": ""},
{ "name": "ConstantBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": "Constructor."},
{ "name": "ConstantBinding",
  "type": "Class",
  "description": "The ConstantBinding class is lightweight data-binding class that is optimized for simple assignments of one object's constant to another object's property."},
{ "name": "Constants",
  "type": "Class",
  "description": ""},
{ "name": "ConstraintColumn",
  "type": "Method",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "Constructor."},
{ "name": "ConstraintColumn",
  "type": "Class",
  "description": "The ConstraintColumn class partitions an absolutely positioned container in the vertical plane."},
{ "name": "ConstraintRow",
  "type": "Method",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Constructor."},
{ "name": "ConstraintRow",
  "type": "Class",
  "description": "ConstraintRow class partitions an absolutely positioned container in the horizontal plane."},
{ "name": "Consumer",
  "type": "Method",
  "class": "mx.messaging.Consumer",
  "description": "Constructor."},
{ "name": "Consumer",
  "type": "Class",
  "description": "A Consumer subscribes to a destination to receive messages."},
{ "name": "ConsumerMessageDispatcher",
  "type": "Method",
  "class": "mx.messaging.ConsumerMessageDispatcher",
  "description": "Constructor."},
{ "name": "ConsumerMessageDispatcher",
  "type": "Class",
  "description": "Helper class that listens for MessageEvents dispatched by ChannelSets that Consumers are subscribed over."},
{ "name": "ContactChip",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ContactChip",
  "description": "constructor."},
{ "name": "ContactChip",
  "type": "Class",
  "description": "The ContactChip bead class is a specialty bead that can be used to add additional button to Chip MDL control."},
{ "name": "ContactImageChip",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ContactImageChip",
  "description": "Constructor."},
{ "name": "ContactImageChip",
  "type": "Class",
  "description": "The ContactImageChip bead class is a specialty bead that can be used to add additional button to Chip MDL control."},
{ "name": "Container",
  "type": "Method",
  "class": "org.apache.royale.jewel.Container",
  "description": "Constructor."},
{ "name": "Container",
  "type": "Class",
  "description": "The Container class implements a basic container for other controls and containers."},
{ "name": "Container",
  "type": "Method",
  "class": "mx.core.Container",
  "description": "Constructor."},
{ "name": "Container",
  "type": "Class",
  "description": "The Container class is an abstract base class for components that controls the layout characteristics of child components."},
{ "name": "Container",
  "type": "Method",
  "class": "org.apache.royale.html.Container",
  "description": "Constructor."},
{ "name": "Container",
  "type": "Class",
  "description": "The Container class implements a basic container for other controls and containers."},
{ "name": "Container",
  "type": "Method",
  "class": "org.apache.royale.express.Container",
  "description": ""},
{ "name": "Container",
  "type": "Class",
  "description": "This class extends the standard Container and adds the ContainerDataBinding bead and ScrollingViewport beads for convenience."},
{ "name": "Container",
  "type": "Method",
  "class": "org.apache.royale.createjs.Container",
  "description": "Constructor."},
{ "name": "Container",
  "type": "Class",
  "description": "CreateJS Container"},
{ "name": "ContainerBase",
  "type": "Method",
  "class": "org.apache.royale.core.ContainerBase",
  "description": "Constructor."},
{ "name": "ContainerBase",
  "type": "Class",
  "description": "The ContainerBase class is the base class for most containers in Royale."},
{ "name": "ContainerBaseStrandChildren",
  "type": "Method",
  "class": "org.apache.royale.core.ContainerBaseStrandChildren",
  "description": "Constructor."},
{ "name": "ContainerBaseStrandChildren",
  "type": "Class",
  "description": "The ContainerBaseStrandChildren class the provides a way for advanced components to place children directly into the strand unlike the addElement() APIs on the Container which place children into the contentView."},
{ "name": "ContainerContentArea",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ContainerContentArea",
  "description": "Constructor."},
{ "name": "ContainerContentArea",
  "type": "Class",
  "description": "The ContainerContentArea class implements the contentView for a Container on the SWF platform."},
{ "name": "ContainerController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Constructor - creates a ContainerController instance."},
{ "name": "ContainerController",
  "type": "Class",
  "description": "The ContainerController class defines the relationship between a TextFlow object and a container."},
{ "name": "ContainerCreationPolicy",
  "type": "Class",
  "description": "The ContainerCreationPolicy class defines the constant values for the <code>creationPolicy</code> property of the Container class."},
{ "name": "ContainerDataBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.ContainerDataBinding",
  "description": "Constructor."},
{ "name": "ContainerDataBinding",
  "type": "Class",
  "description": "The ContainerDataBinding class implements databinding for Container instances."},
{ "name": "ContainerFormattedElement",
  "type": "Class",
  "description": "ContainerFormattedElement is the root class for all container-level block elements, such as DivElement and TextFlow objects."},
{ "name": "ContainerLayout",
  "type": "Class",
  "description": "The ContainerLayout class defines the constant values for the <code>layout</code> property of container classes."},
{ "name": "ContainerUtil",
  "type": "Class",
  "description": ""},
{ "name": "ContainerView",
  "type": "Class",
  "description": "Whenever children are added, listeners are added to detect changes in their size."},
{ "name": "ContentElement",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "ContentElement",
  "type": "Class",
  "description": ""},
{ "name": "ContextMenu",
  "type": "Class",
  "description": ""},
{ "name": "ContextMenuBuiltInItems",
  "type": "Class",
  "description": ""},
{ "name": "ContextMenuClipboardItems",
  "type": "Class",
  "description": ""},
{ "name": "ContextMenuEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.ContextMenuEvent",
  "description": ""},
{ "name": "ContextMenuEvent",
  "type": "Class",
  "description": ""},
{ "name": "ContextUtil",
  "type": "Class",
  "description": ""},
{ "name": "ControlBar",
  "type": "Method",
  "class": "org.apache.royale.jewel.ControlBar",
  "description": "constructor."},
{ "name": "ControlBar",
  "type": "Class",
  "description": "The ControlBar class is used within a Panel as a place to position additional controls."},
{ "name": "ControlBar",
  "type": "Method",
  "class": "org.apache.royale.html.ControlBar",
  "description": "constructor."},
{ "name": "ControlBar",
  "type": "Class",
  "description": "The ControlBar class is used within a Panel as a place to position additional controls."},
{ "name": "ControlBar",
  "type": "Method",
  "class": "mx.containers.ControlBar",
  "description": "Constructor."},
{ "name": "ControlBar",
  "type": "Class",
  "description": "The ControlBar container lets you place controls at the bottom of a Halo Panel or Halo TitleWindow container."},
{ "name": "ControlBarMeasurementBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ControlBarMeasurementBead",
  "description": "constructor."},
{ "name": "ControlBarMeasurementBead",
  "type": "Class",
  "description": "The ControlBarMeasurementBead class measures the size of a org."},
{ "name": "ControlPosition",
  "type": "Class",
  "description": ""},
{ "name": "ConversionConstants",
  "type": "Class",
  "description": ""},
{ "name": "ConversionType",
  "type": "Class",
  "description": "Values for the format of exported text."},
{ "name": "ConverterBase",
  "type": "Class",
  "description": "This is a base class for importers as well as exporters."},
{ "name": "CopyOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.CopyOperation",
  "description": "Creates a CopyOperation object."},
{ "name": "CopyOperation",
  "type": "Class",
  "description": "The CopyOperation class encapsulates a copy operation."},
{ "name": "CounterContentHandler",
  "type": "Class",
  "description": ""},
{ "name": "CounterPropHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.CounterPropHandler",
  "description": ""},
{ "name": "CounterPropHandler",
  "type": "Class",
  "description": ""},
{ "name": "CreateDivOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.CreateDivOperation",
  "description": "Creates an CreateDivOperation object."},
{ "name": "CreateDivOperation",
  "type": "Class",
  "description": "The CreateDivOperation class encapsulates creating IDivElement"},
{ "name": "CreateJSBase",
  "type": "Class",
  "description": ""},
{ "name": "CreateListOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.CreateListOperation",
  "description": "Creates an CreateListOperation object."},
{ "name": "CreateListOperation",
  "type": "Class",
  "description": "The CreateListOperation class encapsulates creating list"},
{ "name": "CreateSubParagraphGroupOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.CreateSubParagraphGroupOperation",
  "description": "Constructor."},
{ "name": "CreateSubParagraphGroupOperation",
  "type": "Class",
  "description": "The CreateSPGEOperation class encapsulates creating a SubPargraphGroupElement"},
{ "name": "CreateTLFUtil",
  "type": "Class",
  "description": ""},
{ "name": "CrossBrowserFireListenerOverrideBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CrossBrowserFireListenerOverrideBead",
  "description": "Constructor."},
{ "name": "CrossBrowserFireListenerOverrideBead",
  "type": "Class",
  "description": "Overrides default HTMLElementWrapper implementation to make sure events are converted on all browsers including IE."},
{ "name": "CrossItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.CrossItemRenderer",
  "description": "Constructor"},
{ "name": "CrossItemRenderer",
  "type": "Class",
  "description": "A simple chart itemRenderer implementation that fills a cross in its assigned area."},
{ "name": "CubicCurve",
  "type": "Method",
  "class": "org.apache.royale.graphics.CubicCurve",
  "description": ""},
{ "name": "CubicCurve",
  "type": "Class",
  "description": ""},
{ "name": "CurrencyFormatter",
  "type": "Method",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Constructor."},
{ "name": "CurrencyFormatter",
  "type": "Class",
  "description": "The CurrencyFormatter class formats a valid number as a currency value."},
{ "name": "CurrencyFormatter",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.CurrencyFormatter",
  "description": "constructor"},
{ "name": "CurrencyFormatter",
  "type": "Class",
  "description": "The CurrencyFormatter class formats a value in separated groups."},
{ "name": "CursorBookmark",
  "type": "Method",
  "class": "mx.collections.CursorBookmark",
  "description": "Creates a new instance of a bookmark with the specified value."},
{ "name": "CursorBookmark",
  "type": "Class",
  "description": "Encapsulates the positional aspects of a cursor in an <code>ICollectionView</code>."},
{ "name": "CursorError",
  "type": "Method",
  "class": "mx.collections.errors.CursorError",
  "description": "Constructor."},
{ "name": "CursorError",
  "type": "Class",
  "description": "This error is thrown by a collection Cursor."},
{ "name": "CursorManager",
  "type": "Class",
  "description": "The CursorManager class controls a prioritized list of cursors, where the cursor with the highest priority is currently visible."},
{ "name": "CursorManagerPriority",
  "type": "Class",
  "description": "The CursorManagerPriority class defines the constant values for the <code>priority</code> argument to the <code>CursorManager."},
{ "name": "Cursors",
  "type": "Method",
  "class": "org.apache.royale.css2.Cursors",
  "description": "Constructor."},
{ "name": "Cursors",
  "type": "Class",
  "description": "The Label class implements the basic control for labeling other controls."},
{ "name": "CustomEvent",
  "type": "Method",
  "class": "org.apache.royale.events.CustomEvent",
  "description": "Constructor."},
{ "name": "CustomEvent",
  "type": "Class",
  "description": "MXML auto-imports flash."},
{ "name": "CutOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.CutOperation",
  "description": "Creates a CutOperation object."},
{ "name": "CutOperation",
  "type": "Class",
  "description": "The CutOperation class encapsulates a cut operation."},
{ "name": "D",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the D key (68)."},
{ "name": "DAMAGE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.DamageEvent",
  "description": "Event type for DamageEvent"},
{ "name": "DASHBOARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DASHBOARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DASHED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BorderStyle",
  "description": "dashed - border is made up of dashed lines."},
{ "name": "DATA_CHANGE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "DATA_USAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DATA_USAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DATE",
  "type": "Property",
  "class": "mx.collections.SortFieldCompareTypes",
  "description": "Represents the dateCompare inside a SortField."},
{ "name": "DATE",
  "type": "Property",
  "class": "org.apache.royale.collections.SortFieldCompareTypes",
  "description": "Represents the dateCompare inside a SortField."},
{ "name": "DATE_RANGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DATE_RANGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DEACTIVATE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ActivateEvent",
  "description": ""},
{ "name": "DEAD_KEY_INPUT_STATE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IMEStatus",
  "description": "Dead key input state - in the process of entering a multi-key character, such as an accented char"},
{ "name": "DEBUG",
  "type": "Property",
  "class": "mx.logging.LogEventLevel",
  "description": "Designates informational level messages that are fine grained and most helpful when debugging an application."},
{ "name": "DECIMAL",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TabAlignment",
  "description": ""},
{ "name": "DECIMAL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using decimals: 1, 2, 3, and so on."},
{ "name": "DECIMAL_LEADING_ZERO",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using decimal with a leading zero: 01, 02, 03, and so on."},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TypographicCase",
  "description": ""},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "google.maps.MapTypeControlStyle",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "org.apache.royale.text.engine.DigitWidth",
  "description": ""},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "mx.net.ObjectEncoding",
  "description": "DEFAULT"},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TLFTypographicCase",
  "description": "Specifies default typographic case -- no special features applied."},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "org.apache.royale.text.engine.DigitCase",
  "description": ""},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "google.maps.ScaleControlStyle",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "google.maps.ZoomControlStyle",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "mx.core.EventPriority",
  "description": "Event handlers on component instances are executed with the default priority, <code>0</code>."},
{ "name": "DEFAULT",
  "type": "Property",
  "class": "org.apache.royale.css2.Cursors",
  "description": ""},
{ "name": "DEFAULT_DESTINATION_HTTP",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Indicates that the HTTPService object uses the DefaultHTTP destination."},
{ "name": "DEFAULT_DESTINATION_HTTPS",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Indicates that the HTTPService object uses the DefaultHTTPS destination."},
{ "name": "DEFAULT_HANDLER",
  "type": "Property",
  "class": "mx.core.EventPriority",
  "description": "Some components listen to events that they dispatch on themselves and let other listeners call the <code>preventDefault()</code> method to tell the component not to perform a default action."},
{ "name": "DEFAULT_MAX_HEIGHT",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default value for the <code>maxHeight</code> property."},
{ "name": "DEFAULT_MAX_WIDTH",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default value for the <code>maxWidth</code> property."},
{ "name": "DEFAULT_MEASURED_HEIGHT",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default value for the <code>measuredHeight</code> property."},
{ "name": "DEFAULT_MEASURED_MIN_HEIGHT",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default value for the <code>measuredMinHeight</code> property."},
{ "name": "DEFAULT_MEASURED_MIN_WIDTH",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default value for the <code>measuredMinWidth</code> property."},
{ "name": "DEFAULT_MEASURED_WIDTH",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default value for the <code>measuredWidth</code> property."},
{ "name": "DEFAULT_PRIORITY",
  "type": "Property",
  "class": "mx.messaging.Producer",
  "description": "The default message priority."},
{ "name": "DEHAZE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DEHAZE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DELETE",
  "type": "Property",
  "class": "mx.events.PropertyChangeEventKind",
  "description": "Indicates that the property was deleted from the object."},
{ "name": "DELETE",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "DELETE",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "The Delete key, Del."},
{ "name": "DELETE",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "HTTP delete request."},
{ "name": "DELETE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Delete key (46)."},
{ "name": "DELETE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DELETE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DELETE_FOREVER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DELETE_FOREVER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DELETE_METHOD",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the method used for this request should be \"delete\"."},
{ "name": "DELETE_SWEEP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DELETE_SWEEP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DESCENT",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextBaseline",
  "description": ""},
{ "name": "DESCRIPTION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DESCRIPTION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DESKTOP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": ""},
{ "name": "DESKTOP",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": ""},
{ "name": "DESKTOP_BREAKPOINT",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": ""},
{ "name": "DESKTOP_MAC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DESKTOP_MAC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DESKTOP_WINDOWS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DESKTOP_WINDOWS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DESTINATION_CLIENT_ID_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Messages pushed from the server may arrive in a batch, with messages in the batch potentially targeted to different Consumer instances."},
{ "name": "DESTINATION_CLIENT_ID_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "Messages pushed from the server may arrive in a batch, with messages in the batch potentially targeted to different Consumer instances."},
{ "name": "DETAILS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DETAILS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DEVANAGARI",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Devangari."},
{ "name": "DEVELOPER_BOARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DEVELOPER_BOARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DEVELOPER_MODE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DEVELOPER_MODE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DEVICE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontLookup",
  "description": ""},
{ "name": "DEVICES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DEVICES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DEVICES_OTHER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DEVICES_OTHER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DEVICE_HUB",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DEVICE_HUB",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIALER_SIP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIALER_SIP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIALPAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIALPAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIAMOND",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "A filled diamond marker."},
{ "name": "DIFFERENCE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "DIRECTIONS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_BIKE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_BIKE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_BOAT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_BOAT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_BUS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_BUS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_CAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_CAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_RAILWAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_RAILWAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_RUN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_RUN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_SUBWAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_SUBWAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_TRANSIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_TRANSIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_WALK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DIRECTIONS_WALK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DISABLED",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "Value that indicates the ChartItem appears disabled and cannot be selected."},
{ "name": "DISC",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "A bullet character marker (filled circle)."},
{ "name": "DISCONNECT",
  "type": "Property",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "The DISCONNECT event type; indicates that the Channel disconnected from its endpoint."},
{ "name": "DISCONNECT_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to indicate that a channel has disconnected."},
{ "name": "DISCONNECT_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to indicate that a channel has disconnected."},
{ "name": "DISC_FULL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DISC_FULL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DISTANCE",
  "type": "Property",
  "class": "google.maps.places.RankBy",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DISTRIBUTE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextJustify",
  "description": "Specifies that justification is to add space both to space characters and between individual letters."},
{ "name": "DIVIDER_DRAG",
  "type": "Property",
  "class": "mx.events.DividerEvent",
  "description": "The <code>DividerEvent."},
{ "name": "DIVIDER_PRESS",
  "type": "Property",
  "class": "mx.events.DividerEvent",
  "description": "The <code>DividerEvent."},
{ "name": "DIVIDER_RELEASE",
  "type": "Property",
  "class": "mx.events.DividerEvent",
  "description": "The <code>DividerEvent."},
{ "name": "DNS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DNS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DOCK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DOCK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DOCUMENT_NOT_FOUND",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DOCUMENT_TOO_LARGE",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DOMAIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DOMAIN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DOMWrapper",
  "type": "Method",
  "class": "org.apache.royale.svg.DOMWrapper",
  "description": "Constructor"},
{ "name": "DOMWrapper",
  "type": "Class",
  "description": ""},
{ "name": "DONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DONE_ALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DONE_ALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DONUT_LARGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DONUT_LARGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DONUT_SMALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DONUT_SMALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DOTTED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BorderStyle",
  "description": "dotted - border is made up of dotted lines."},
{ "name": "DOUBLE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BorderStyle",
  "description": "double - border is made up of double lines."},
{ "name": "DOUBLE_CLICK",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemEditorActivationMouseEvent",
  "description": "A double click mouse event."},
{ "name": "DOUBLE_CLICK",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "DOUBLE_CLICK",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "DOUBLE_CLICK_SOMEWHERE",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Mouse was double-clicked somewhere outside your sandbox."},
{ "name": "DOUBLE_CLICK_TIME",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "DOWN",
  "type": "Property",
  "class": "org.apache.royale.events.utils.NavigationKeys",
  "description": "The down arrow key."},
{ "name": "DOWN",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate one line or \"step\" downwards."},
{ "name": "DOWN",
  "type": "Property",
  "class": "mx.formatters.NumberBaseRoundType",
  "description": "Rounds a number down to an integer that is both closest to, and less than or equal to, the input number."},
{ "name": "DOWN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Down Arrow key (40)."},
{ "name": "DO_NOT_DISTURB",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DO_NOT_DISTURB",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DO_NOT_DISTURB_ALT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DO_NOT_DISTURB_ALT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DO_NOT_DISTURB_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DO_NOT_DISTURB_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DO_NOT_DISTURB_ON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DO_NOT_DISTURB_ON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DRAFTS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DRAFTS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DRAG_COMPLETE",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_DROP",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_DROP",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_END",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_ENTER",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_ENTER",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_EXIT",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_EXIT",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_HANDLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DRAG_HANDLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DRAG_MOVE",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_OVER",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_OVER",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_START",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The <code>DragEvent."},
{ "name": "DRAG_START",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The DragEvent."},
{ "name": "DRIVE_ETA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DRIVE_ETA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DRIVING",
  "type": "Property",
  "class": "google.maps.TravelMode",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DROP",
  "type": "Property",
  "class": "google.maps.Animation",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DROPDOWN_MENU",
  "type": "Property",
  "class": "google.maps.MapTypeControlStyle",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "DVR",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging DVR application mode."},
{ "name": "DVR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "DVR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "DamageEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.DamageEvent",
  "description": "Constructor"},
{ "name": "DamageEvent",
  "type": "Class",
  "description": "A TextFlow instance dispatches this each time it is marked as damaged."},
{ "name": "DataBindingBase",
  "type": "Method",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": "Constructor."},
{ "name": "DataBindingBase",
  "type": "Class",
  "description": "The DataBindingBase class is the base class for custom data binding implementations that can be cross-compiled."},
{ "name": "DataContainer",
  "type": "Method",
  "class": "org.apache.royale.html.DataContainer",
  "description": "constructor."},
{ "name": "DataContainer",
  "type": "Class",
  "description": "The DataContainer class is a component that displays multiple data items."},
{ "name": "DataContainer",
  "type": "Method",
  "class": "org.apache.royale.jewel.DataContainer",
  "description": "constructor."},
{ "name": "DataContainer",
  "type": "Class",
  "description": "The DataContainer class is a component that displays multiple data items."},
{ "name": "DataContainerBase",
  "type": "Method",
  "class": "org.apache.royale.core.DataContainerBase",
  "description": "Constructor."},
{ "name": "DataContainerBase",
  "type": "Class",
  "description": "The DataContainerBase class is the base class for components that that have generated content, like lists."},
{ "name": "DataContainerBase",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.DataContainerBase",
  "description": "Constructor."},
{ "name": "DataContainerBase",
  "type": "Class",
  "description": ""},
{ "name": "DataContainerView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": ""},
{ "name": "DataContainerView",
  "type": "Class",
  "description": "The DataContainerView provides the visual elements for the DataContainer."},
{ "name": "DataDescription",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "Constructor."},
{ "name": "DataDescription",
  "type": "Class",
  "description": "The DataDescription structure is used by ChartElements to describe the characteristics of the data they represent to Axis objects that auto-generate values from the data represented in the chart."},
{ "name": "DataFieldProviderBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataFieldProviderBead",
  "description": "Constructor."},
{ "name": "DataFieldProviderBead",
  "type": "Class",
  "description": "The DataFieldProviderBead class is a model that holds dataField used mostly in item renderers for retrieve some value from dataProvider items."},
{ "name": "DataFieldProviderBead",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataFieldProviderBead",
  "description": "Constructor."},
{ "name": "DataFieldProviderBead",
  "type": "Class",
  "description": "The DataFieldProviderBead class is a model that holds dataField used mostly in item renderers for retrieve some value from dataProvider items."},
{ "name": "DataGrid",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Constructor."},
{ "name": "DataGrid",
  "type": "Class",
  "description": "The DataGrid displays a row of column headings above a scrollable grid."},
{ "name": "DataGrid",
  "type": "Method",
  "class": "mx.controls.DataGrid",
  "description": "Constructor."},
{ "name": "DataGrid",
  "type": "Class",
  "description": "The <code>DataGrid</code> control is like a List except that it can show more than one column of data making it suited for showing objects with multiple properties."},
{ "name": "DataGrid",
  "type": "Method",
  "class": "org.apache.royale.html.DataGrid",
  "description": "constructor."},
{ "name": "DataGrid",
  "type": "Class",
  "description": "The DataGrid class displays a collection of data using columns and rows."},
{ "name": "DataGrid",
  "type": "Method",
  "class": "org.apache.royale.express.DataGrid",
  "description": ""},
{ "name": "DataGrid",
  "type": "Class",
  "description": "This class extends DataGrid and adds beads for drag and drop and column reordering."},
{ "name": "DataGridButtonBar",
  "type": "Method",
  "class": "org.apache.royale.html.DataGridButtonBar",
  "description": "constructor."},
{ "name": "DataGridButtonBar",
  "type": "Class",
  "description": "The DataGridButtonBar class extends ButtonBar and provides a class for styling the header region of the DataGrid."},
{ "name": "DataGridButtonBarButtonItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataGridButtonBarButtonItemRenderer",
  "description": "constructor."},
{ "name": "DataGridButtonBarButtonItemRenderer",
  "type": "Class",
  "description": "The ButtonBarButtonItemRenderer class handles the display of each item for the org."},
{ "name": "DataGridButtonBarTextButton",
  "type": "Method",
  "class": "org.apache.royale.html.DataGridButtonBarTextButton",
  "description": "Constructor."},
{ "name": "DataGridButtonBarTextButton",
  "type": "Class",
  "description": "The DataGridButtonBarTextButton class extends TextButton so that the buttons used in the DataGrid header can be styled separately from normal TextButtons."},
{ "name": "DataGridButtonBarViewForMovableColumns",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridButtonBarViewForMovableColumns",
  "description": "Constructor"},
{ "name": "DataGridButtonBarViewForMovableColumns",
  "type": "Class",
  "description": ""},
{ "name": "DataGridCollectionViewModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.DataGridCollectionViewModel",
  "description": "constructor."},
{ "name": "DataGridCollectionViewModel",
  "type": "Class",
  "description": "The DataGridCollectiomModel class bead extends org."},
{ "name": "DataGridColumn",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.DataGridColumn",
  "description": "constructor."},
{ "name": "DataGridColumn",
  "type": "Class",
  "description": "The DataGridColumn class is the collection of properties that describe a column of the org."},
{ "name": "DataGridColumn",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataGridColumn",
  "description": "constructor."},
{ "name": "DataGridColumn",
  "type": "Class",
  "description": "The DataGridColumn class is the collection of properties that describe a column of the org."},
{ "name": "DataGridColumn",
  "type": "Method",
  "class": "mx.controls.dataGridClasses.DataGridColumn",
  "description": "Constructor."},
{ "name": "DataGridColumn",
  "type": "Class",
  "description": "The DataGridColumn class describes a column in a DataGrid control."},
{ "name": "DataGridColumn",
  "type": "Method",
  "class": "org.apache.royale.express.supportClasses.DataGridColumn",
  "description": "constructor."},
{ "name": "DataGridColumn",
  "type": "Class",
  "description": "This class defines how a column in the DataGrid should look, including the label for the column and its width."},
{ "name": "DataGridColumnChangePropagator",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridColumnChangePropagator",
  "description": ""},
{ "name": "DataGridColumnChangePropagator",
  "type": "Class",
  "description": "The DataGridColumnChangePropagator picks up the dataProviderChanged event and lets the data grid columns know about it."},
{ "name": "DataGridColumnForceChangePropagator",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridColumnForceChangePropagator",
  "description": ""},
{ "name": "DataGridColumnForceChangePropagator",
  "type": "Class",
  "description": "The DataGridColumnForceChangePropagator picks up the dataProviderChanged event and lets the data grid columns know about it, whether or not the data provider object was changed."},
{ "name": "DataGridColumnList",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataGridColumnList",
  "description": "Constructor."},
{ "name": "DataGridColumnList",
  "type": "Class",
  "description": "The DataGridColumnList class is the List class used internally by DataGrid for each column."},
{ "name": "DataGridColumnReorderView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridColumnReorderView",
  "description": "constructor."},
{ "name": "DataGridColumnReorderView",
  "type": "Class",
  "description": "The DataGridColumnReorderView bead extends DataGridView and lists for changes to the model that is used to produce the column header."},
{ "name": "DataGridColumnView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridColumnView",
  "description": "constructor."},
{ "name": "DataGridColumnView",
  "type": "Class",
  "description": "The DataGridColumnView class extends org."},
{ "name": "DataGridDragDropBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridDragDropBead",
  "description": "constructor."},
{ "name": "DataGridDragDropBead",
  "type": "Class",
  "description": "The DataGridDragDropBead bead should be added to the DataGrid when drag and drop operations are required."},
{ "name": "DataGridDrawingLayerBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridDrawingLayerBead",
  "description": "Constructor"},
{ "name": "DataGridDrawingLayerBead",
  "type": "Class",
  "description": "DataGridDrawingLayerBead places a graphic space into the DataGrid that is positioned above the Container used to hold the columns."},
{ "name": "DataGridEditor",
  "type": "Method",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "Constructor"},
{ "name": "DataGridEditor",
  "type": "Class",
  "description": "The DataGridEditor contains all the logic and event handling needed to manage the life cycle of an item editor."},
{ "name": "DataGridLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.DataGridLayout",
  "description": "constructor"},
{ "name": "DataGridLayout",
  "type": "Class",
  "description": "DataGridLayout is a class that handles the size and positioning of the elements of a DataGrid."},
{ "name": "DataGridLayout",
  "type": "Method",
  "class": "org.apache.royale.express.beads.layouts.DataGridLayout",
  "description": "constructor"},
{ "name": "DataGridLayout",
  "type": "Class",
  "description": "This DataGridLayout class sizes and positions all of the elements of the DataGrid in the Express package."},
{ "name": "DataGridLinesBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridLinesBead",
  "description": "Constructor."},
{ "name": "DataGridLinesBead",
  "type": "Class",
  "description": "The DataGridLinesBead is an add on bead for the DataGrid."},
{ "name": "DataGridListArea",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridListArea",
  "description": ""},
{ "name": "DataGridListArea",
  "type": "Class",
  "description": ""},
{ "name": "DataGridListData",
  "type": "Method",
  "class": "mx.controls.dataGridClasses.DataGridListData",
  "description": "Constructor."},
{ "name": "DataGridListData",
  "type": "Class",
  "description": "The DataGridListData class defines the data type of the <code>listData</code> property that is implemented by drop-in item renderers or drop-in item editors for the DataGrid control."},
{ "name": "DataGridModel",
  "type": "Method",
  "class": "org.apache.royale.express.beads.models.DataGridModel",
  "description": ""},
{ "name": "DataGridModel",
  "type": "Class",
  "description": ""},
{ "name": "DataGridModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.DataGridModel",
  "description": "constructor."},
{ "name": "DataGridModel",
  "type": "Class",
  "description": "The DataGridModel class bead extends org."},
{ "name": "DataGridPercentageLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.DataGridPercentageLayout",
  "description": "constructor"},
{ "name": "DataGridPercentageLayout",
  "type": "Class",
  "description": "DataGridPercentageLayout is a class that handles the size and positioning of the elements of a DataGrid."},
{ "name": "DataGridPercentageView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridPercentageView",
  "description": "constructor."},
{ "name": "DataGridPercentageView",
  "type": "Class",
  "description": "The DataGridPercentageView class is the visual bead for the org."},
{ "name": "DataGridPresentationModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.DataGridPresentationModel",
  "description": "constructor."},
{ "name": "DataGridPresentationModel",
  "type": "Class",
  "description": "The DataGridPresentationModel class contains the data to label the columns of the org."},
{ "name": "DataGridView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridView",
  "description": "constructor."},
{ "name": "DataGridView",
  "type": "Class",
  "description": "The DataGridView class is the visual bead for the org."},
{ "name": "DataGridView",
  "type": "Method",
  "class": "mx.controls.beads.DataGridView",
  "description": "Constructor."},
{ "name": "DataGridView",
  "type": "Class",
  "description": "The AlertView class."},
{ "name": "DataGridWithDrawingLayerLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridWithDrawingLayerLayout",
  "description": "constructor"},
{ "name": "DataGridWithDrawingLayerLayout",
  "type": "Class",
  "description": "DataGridWithDrawingLayerLayout is a class that extends VerticalFlexLayout and positions the drawing layer created by a DataGridDrawingLayerBead."},
{ "name": "DataGroup",
  "type": "Method",
  "class": "spark.components.DataGroup",
  "description": "Constructor."},
{ "name": "DataGroup",
  "type": "Class",
  "description": "The DataGroup class is the base container class for data items."},
{ "name": "DataGroup",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataGroup",
  "description": "Constructor."},
{ "name": "DataGroup",
  "type": "Class",
  "description": "The DataGroup class is the IItemRendererParent used internally by org."},
{ "name": "DataGroup",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.list.DataGroup",
  "description": "constructor."},
{ "name": "DataGroup",
  "type": "Class",
  "description": "The DataGroup class is the IItemRendererParent used internally by org."},
{ "name": "DataInputStream",
  "type": "Method",
  "class": "org.apache.royale.storage.file.DataInputStream",
  "description": "Constructor."},
{ "name": "DataInputStream",
  "type": "Class",
  "description": "Instances of the DataInputStream by the storage provider are created when a file is opened for input streaming."},
{ "name": "DataItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataItemRenderer",
  "description": "constructor."},
{ "name": "DataItemRenderer",
  "type": "Class",
  "description": "The DataItemRenderer class is the base class for most itemRenderers."},
{ "name": "DataItemRendererFactoryForArrayData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": "Constructor."},
{ "name": "DataItemRendererFactoryForArrayData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForArrayData class reads an array of data and creates an item renderer for every item in the array."},
{ "name": "DataItemRendererFactoryForArrayData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": "Constructor."},
{ "name": "DataItemRendererFactoryForArrayData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForArrayData class reads an array of data and creates an item renderer for every item in the array."},
{ "name": "DataItemRendererFactoryForArrayList",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": "Constructor."},
{ "name": "DataItemRendererFactoryForArrayList",
  "type": "Class",
  "description": "The DataItemRendererFactoryForArrayList class uses an ArrayList and creates an item renderer for every item in the collection."},
{ "name": "DataItemRendererFactoryForCollectionView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "DataItemRendererFactoryForCollectionView",
  "type": "Class",
  "description": "This class creates itemRenderer instances from the data contained within an ICollectionView"},
{ "name": "DataItemRendererFactoryForCollectionView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "DataItemRendererFactoryForCollectionView",
  "type": "Class",
  "description": "This class creates itemRenderer instances from the data contained within an ICollectionView"},
{ "name": "DataItemRendererFactoryForColumnData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForColumnData",
  "description": "constructor."},
{ "name": "DataItemRendererFactoryForColumnData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForColumnData class implents the org."},
{ "name": "DataItemRendererFactoryForHierarchicalData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForHierarchicalData",
  "description": "Constructor."},
{ "name": "DataItemRendererFactoryForHierarchicalData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForHierarchicalData class reads a HierarchicalData object and creates an item renderer for every item in the array."},
{ "name": "DataItemRendererFactoryForICollectionViewAdvancedDataGridData",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.DataItemRendererFactoryForICollectionViewAdvancedDataGridData",
  "description": "Constructor."},
{ "name": "DataItemRendererFactoryForICollectionViewAdvancedDataGridData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForHierarchicalData class reads a HierarchicalData object and creates an item renderer for every item in the array."},
{ "name": "DataItemRendererFactoryForICollectionViewData",
  "type": "Method",
  "class": "mx.controls.listClasses.DataItemRendererFactoryForICollectionViewData",
  "description": "Constructor."},
{ "name": "DataItemRendererFactoryForICollectionViewData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForHierarchicalData class reads a HierarchicalData object and creates an item renderer for every item in the array."},
{ "name": "DataItemRendererFactoryForICollectionViewHierarchicalData",
  "type": "Method",
  "class": "mx.controls.treeClasses.DataItemRendererFactoryForICollectionViewHierarchicalData",
  "description": "Constructor."},
{ "name": "DataItemRendererFactoryForICollectionViewHierarchicalData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForHierarchicalData class reads a HierarchicalData object and creates an item renderer for every item in the array."},
{ "name": "DataItemRendererFactoryForIListData",
  "type": "Method",
  "class": "mx.controls.listClasses.DataItemRendererFactoryForIListData",
  "description": "Constructor."},
{ "name": "DataItemRendererFactoryForIListData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForHierarchicalData class reads a HierarchicalData object and creates an item renderer for every item in the array."},
{ "name": "DataItemRendererFactoryForSeriesArrayListData",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.DataItemRendererFactoryForSeriesArrayListData",
  "description": "constructor."},
{ "name": "DataItemRendererFactoryForSeriesArrayListData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForSeriesData creates the itemRenderers necessary for series-based charts."},
{ "name": "DataItemRendererFactoryForSeriesData",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.DataItemRendererFactoryForSeriesData",
  "description": "constructor."},
{ "name": "DataItemRendererFactoryForSeriesData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForSeriesData creates the itemRenderers necessary for series-based charts."},
{ "name": "DataOutputStream",
  "type": "Method",
  "class": "org.apache.royale.storage.file.DataOutputStream",
  "description": "Constructor."},
{ "name": "DataOutputStream",
  "type": "Class",
  "description": "Instances of the DataOutput stream are created by the storage provider when a file is opened for output streaming."},
{ "name": "DataProviderChangeNotifier",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataProviderChangeNotifier",
  "description": "constructor."},
{ "name": "DataProviderChangeNotifier",
  "type": "Class",
  "description": "The DataProviderChangeNotifier notifies listeners when a selection model's ArrayList dataProvider has changed."},
{ "name": "DataProviderCollectionChangeNotifier",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataProviderCollectionChangeNotifier",
  "description": "constructor."},
{ "name": "DataProviderCollectionChangeNotifier",
  "type": "Class",
  "description": "The DataProviderCollectionChangeNotifier notifies listeners when a selection model's ArrayList dataProvider disptached collectionChanged event."},
{ "name": "DataProviderItemsChangeNotifier",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataProviderItemsChangeNotifier",
  "description": "constructor."},
{ "name": "DataProviderItemsChangeNotifier",
  "type": "Class",
  "description": "The DataProviderItemsChangeNotifier notifies listeners when to selection model's ArrayList dataProvider item has been added, removed or updated."},
{ "name": "DataProviderModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.DataProviderModel",
  "description": "Constructor."},
{ "name": "DataProviderModel",
  "type": "Class",
  "description": "The DataProviderModel class is a model for a dataProvider and an optional labelField."},
{ "name": "DataProviderModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.DataProviderModel",
  "description": "Constructor."},
{ "name": "DataProviderModel",
  "type": "Class",
  "description": "The DataProviderModel class is a model for a dataProvider and an optional labelField."},
{ "name": "DataProviderNotifierBase",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": "constructor."},
{ "name": "DataProviderNotifierBase",
  "type": "Class",
  "description": "Base class for all data provider notifiers."},
{ "name": "DataRenderer",
  "type": "Method",
  "class": "spark.components.DataRenderer",
  "description": "Constructor."},
{ "name": "DataRenderer",
  "type": "Class",
  "description": "The DataRenderer class is the base class for data components in Spark."},
{ "name": "DataTip",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTip",
  "description": "Constructor."},
{ "name": "DataTip",
  "type": "Class",
  "description": "The DataTip control provides information about a data point to chart users."},
{ "name": "DataTipBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.DataTipBead",
  "description": "Constructor."},
{ "name": "DataTipBead",
  "type": "Class",
  "description": "The DataTipBead can be added to a chart to produce a helpful tip when the moves over an itemRenderer."},
{ "name": "DataTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "Constructor."},
{ "name": "DataTransform",
  "type": "Class",
  "description": "The DataTransform object represents a portion of a chart that contains glyphs and can transform values to screen coordinates and vice versa."},
{ "name": "DateAndTimeFormatter",
  "type": "Class",
  "description": "The DateFormatter class wraps an IFormatter and adds an hour."},
{ "name": "DateBase",
  "type": "Class",
  "description": "The DateBase class contains the localized string information used by the mx."},
{ "name": "DateChooser",
  "type": "Method",
  "class": "org.apache.royale.html.DateChooser",
  "description": "constructor."},
{ "name": "DateChooser",
  "type": "Class",
  "description": "The DateChooser class is a component that displays a calendar."},
{ "name": "DateChooser",
  "type": "Method",
  "class": "mx.controls.DateChooser",
  "description": "Constructor."},
{ "name": "DateChooser",
  "type": "Class",
  "description": "The DateChooser control displays the name of a month, the year, and a grid of the days of the month, with columns labeled for the day of the week."},
{ "name": "DateChooser",
  "type": "Method",
  "class": "org.apache.royale.jewel.DateChooser",
  "description": "constructor."},
{ "name": "DateChooser",
  "type": "Class",
  "description": "The DateChooser class is a component that displays a calendar."},
{ "name": "DateChooserButton",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DateChooserButton",
  "description": "constructor."},
{ "name": "DateChooserButton",
  "type": "Class",
  "description": "The DateChooserButton class is used for each button in the DateChooser."},
{ "name": "DateChooserHeader",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DateChooserHeader",
  "description": "Constructor."},
{ "name": "DateChooserHeader",
  "type": "Class",
  "description": "The DateChooserHeader is the container for the days of the week labels in the DateChooser."},
{ "name": "DateChooserList",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DateChooserList",
  "description": ""},
{ "name": "DateChooserList",
  "type": "Class",
  "description": ""},
{ "name": "DateChooserModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": ""},
{ "name": "DateChooserModel",
  "type": "Class",
  "description": "The DateChooserModel is a bead class that manages the data for a DataChooser."},
{ "name": "DateChooserModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": ""},
{ "name": "DateChooserModel",
  "type": "Class",
  "description": "The DateChooserModel is a bead class that manages the data for a DataChooser."},
{ "name": "DateChooserMouseController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DateChooserMouseController",
  "description": "constructor."},
{ "name": "DateChooserMouseController",
  "type": "Class",
  "description": "The DateChooserMouseController class is responsible for listening to mouse event related to the DateChooser."},
{ "name": "DateChooserMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.DateChooserMouseController",
  "description": "constructor."},
{ "name": "DateChooserMouseController",
  "type": "Class",
  "description": "The DateChooserMouseController class is responsible for listening to mouse event related to the DateChooser."},
{ "name": "DateChooserTable",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.datechooser.DateChooserTable",
  "description": ""},
{ "name": "DateChooserTable",
  "type": "Class",
  "description": ""},
{ "name": "DateChooserView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DateChooserView",
  "description": "constructor"},
{ "name": "DateChooserView",
  "type": "Class",
  "description": "The DateChooserView class is a view bead for the DateChooser."},
{ "name": "DateChooserView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": "constructor"},
{ "name": "DateChooserView",
  "type": "Class",
  "description": "The DateChooserView class is a view bead for the DateChooser."},
{ "name": "DateField",
  "type": "Method",
  "class": "org.apache.royale.jewel.DateField",
  "description": "constructor."},
{ "name": "DateField",
  "type": "Class",
  "description": "The DateField class provides an input field where a date can be entered and a pop-up calendar control for picking a date as an alternative to the text field."},
{ "name": "DateField",
  "type": "Method",
  "class": "org.apache.royale.html.DateField",
  "description": "constructor."},
{ "name": "DateField",
  "type": "Class",
  "description": "The DateField class provides an input field where a date can be entered and a pop-up calendar control for picking a date as an alternative to the text field."},
{ "name": "DateField",
  "type": "Class",
  "description": "The HTML5:DateField displays a date input selector when run on an HTML5-compatible browser."},
{ "name": "DateField",
  "type": "Method",
  "class": "mx.controls.DateField",
  "description": "Constructor."},
{ "name": "DateField",
  "type": "Class",
  "description": "The DateField control is a text field that shows the date with a calendar icon on its right side."},
{ "name": "DateFieldDateChooser",
  "type": "Class",
  "description": "The DateFieldDateChooser is the DateChooser dropdown for a DateField."},
{ "name": "DateFieldDateChooser",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DateFieldDateChooser",
  "description": "Constructor."},
{ "name": "DateFieldDateChooser",
  "type": "Class",
  "description": "The DateFieldDateChooser class is the DateChooser class used internally by DateField as the dropdown/popup."},
{ "name": "DateFieldDisabled",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.datefield.DateFieldDisabled",
  "description": "constructor."},
{ "name": "DateFieldDisabled",
  "type": "Class",
  "description": "The DateFieldDisabled bead class is a specialty bead that can be used to disable a Jewel DateField control."},
{ "name": "DateFieldMaskedTextInput",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.datefield.DateFieldMaskedTextInput",
  "description": "constructor."},
{ "name": "DateFieldMaskedTextInput",
  "type": "Class",
  "description": "The DateFieldMaskedTextInput class is a specialty bead that is used by DateField control."},
{ "name": "DateFieldMouseController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DateFieldMouseController",
  "description": "constructor."},
{ "name": "DateFieldMouseController",
  "type": "Class",
  "description": "The DateFieldMouseController class is responsible for monitoring the mouse events on the elements of the DateField."},
{ "name": "DateFieldMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.DateFieldMouseController",
  "description": "constructor."},
{ "name": "DateFieldMouseController",
  "type": "Class",
  "description": "The DateFieldMouseController class is responsible for monitoring the mouse events on the elements of the DateField."},
{ "name": "DateFieldTextPrompt",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.datefield.DateFieldTextPrompt",
  "description": "constructor."},
{ "name": "DateFieldTextPrompt",
  "type": "Class",
  "description": "The DateFieldTextPrompt class is a specialty bead that can be used with any DateField control."},
{ "name": "DateFieldView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DateFieldView",
  "description": "constructor."},
{ "name": "DateFieldView",
  "type": "Class",
  "description": "The DateFieldView class is a bead for DateField that creates the input and button controls."},
{ "name": "DateFieldView",
  "type": "Class",
  "description": "The NumericStepperView class overrides the Basic NumericStepperView and sets default sizes to better emulate Flex."},
{ "name": "DateFieldView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.DateFieldView",
  "description": "constructor."},
{ "name": "DateFieldView",
  "type": "Class",
  "description": "The DateFieldView class is a bead for DateField that creates the input and button controls."},
{ "name": "DateFormatDDMMYYYY",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.DateFormatDDMMYYYY",
  "description": "constructor."},
{ "name": "DateFormatDDMMYYYY",
  "type": "Class",
  "description": "The DateFormatDDMMYYYY class formats the display of a DateField using DD/MM/YYYY format."},
{ "name": "DateFormatMMDDYYYY",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.DateFormatMMDDYYYY",
  "description": "constructor."},
{ "name": "DateFormatMMDDYYYY",
  "type": "Class",
  "description": "The DateFormatMMDDYYYY class formats the display of a DateField using MM/DD/YYYY format."},
{ "name": "DateFormatYYYYMMDD",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.DateFormatYYYYMMDD",
  "description": "constructor."},
{ "name": "DateFormatYYYYMMDD",
  "type": "Class",
  "description": "The DateFormatYYYYMMDD class formats the display of a DateField using YYYY-MM-DD format."},
{ "name": "DateFormatter",
  "type": "Method",
  "class": "mx.formatters.DateFormatter",
  "description": "Constructor."},
{ "name": "DateFormatter",
  "type": "Class",
  "description": "The DateFormatter class uses a format String to return a formatted date and time String from an input String or a Date object."},
{ "name": "DateHeaderButton",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DateHeaderButton",
  "description": "constructor."},
{ "name": "DateHeaderButton",
  "type": "Class",
  "description": "The DateHeaderButton class is used for the buttons in the DateChooser's heading areas."},
{ "name": "DateItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.DateItemRenderer",
  "description": "constructor."},
{ "name": "DateItemRenderer",
  "type": "Class",
  "description": "The DateItemRenderer class renders date values for the DateChooser."},
{ "name": "DateItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DateItemRenderer",
  "description": "constructor."},
{ "name": "DateItemRenderer",
  "type": "Class",
  "description": "The DateItemRenderer class renders date values for the DateChooser."},
{ "name": "DatePicker",
  "type": "Method",
  "class": "org.apache.royale.mobile.DatePicker",
  "description": "constructor."},
{ "name": "DatePicker",
  "type": "Class",
  "description": "The DatePicker presents a control for picking a date."},
{ "name": "DatePickerView",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.DatePickerView",
  "description": "constructor."},
{ "name": "DatePickerView",
  "type": "Class",
  "description": "The DatePickerView bead creates the visual elements of the DatePicker."},
{ "name": "DateRangeUtilities",
  "type": "Class",
  "description": "A set of disabled date range utilities used by DateTimeAxis"},
{ "name": "DateTimeAxis",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": "Constructor."},
{ "name": "DateTimeAxis",
  "type": "Class",
  "description": "The DateTimeAxis class maps time values evenly between a minimum and maximum value along a chart axis."},
{ "name": "DateValidator",
  "type": "Method",
  "class": "mx.validators.DateValidator",
  "description": "Constructor."},
{ "name": "DateValidator",
  "type": "Class",
  "description": "The DateValidator class validates that a String, Date, or Object contains a proper date and matches a specified format."},
{ "name": "DateValidator",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.DateValidator",
  "description": "constructor."},
{ "name": "DateValidator",
  "type": "Class",
  "description": "The DateValidator class is a specialty bead that can be used with Group control."},
{ "name": "DayNameItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DayNameItemRenderer",
  "description": "constructor."},
{ "name": "DayNameItemRenderer",
  "type": "Class",
  "description": "The DayNameItemRenderer class renders the names of days of the week for the DateChooser."},
{ "name": "Debugging",
  "type": "Class",
  "description": "@private"},
{ "name": "DecrementButtonView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DecrementButtonView",
  "description": ""},
{ "name": "DecrementButtonView",
  "type": "Class",
  "description": ""},
{ "name": "DefaultDataDescriptor",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Constructor."},
{ "name": "DefaultDataDescriptor",
  "type": "Class",
  "description": "The DefaultDataDescriptor class provides a default implementation for accessing and manipulating data for use in controls such as Tree and Menu."},
{ "name": "DefaultItemRenderer",
  "type": "Method",
  "class": "spark.skins.spark.DefaultItemRenderer",
  "description": "Constructor."},
{ "name": "DefaultItemRenderer",
  "type": "Class",
  "description": "The DefaultItemRenderer class defines the default item renderer for a List control."},
{ "name": "DefaultSummaryCalculator",
  "type": "Class",
  "description": "The DefaultSummaryCalculator class provides summary calculation logic for <code>SUM</code>, <code>MIN</code>, <code>MAX</code>, <code>AVG</code>, and <code>COUNT</code> operations."},
{ "name": "DefinitionBase",
  "type": "Method",
  "class": "org.apache.royale.reflection.DefinitionBase",
  "description": ""},
{ "name": "DefinitionBase",
  "type": "Class",
  "description": "The base class for all definition types"},
{ "name": "DefinitionWithMetaData",
  "type": "Method",
  "class": "org.apache.royale.reflection.DefinitionWithMetaData",
  "description": ""},
{ "name": "DefinitionWithMetaData",
  "type": "Class",
  "description": "The base class for definition types that can be decorated with metadata in actionscript source code"},
{ "name": "DeletableChip",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.DeletableChip",
  "description": "constructor."},
{ "name": "DeletableChip",
  "type": "Class",
  "description": "The DeletableChip bead class is a specialty bead that can be used to add additional button to Chip MDL control."},
{ "name": "DeletableLinkChip",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.DeletableLinkChip",
  "description": "constructor."},
{ "name": "DeletableLinkChip",
  "type": "Class",
  "description": "The DeletableLinkChip bead class is a specialty bead that can be used to add additional link button to Chip MDL control."},
{ "name": "DeleteTextMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.DeleteTextMemento",
  "description": ""},
{ "name": "DeleteTextMemento",
  "type": "Class",
  "description": ""},
{ "name": "DeleteTextOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.DeleteTextOperation",
  "description": "Creates a DeleteTextOperation operation."},
{ "name": "DeleteTextOperation",
  "type": "Class",
  "description": "The DeleteTextOperation class encapsulates the deletion of a range of text."},
{ "name": "DemographicsLayerOptions",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "DemographicsPolygonOptions",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "DemographicsPropertyStyle",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "DemographicsQuery",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "DemographicsStyle",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "DetailEvent",
  "type": "Method",
  "class": "org.apache.royale.events.DetailEvent",
  "description": "Constructor."},
{ "name": "DetailEvent",
  "type": "Class",
  "description": "The DetailEvent class is used for dispatching an event that has a string with more information"},
{ "name": "DeviceSizeBead",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.DeviceSizeBead",
  "description": "Constructor."},
{ "name": "DeviceSizeBead",
  "type": "Class",
  "description": "The DeviceSizeBead."},
{ "name": "Dialog",
  "type": "Method",
  "class": "org.apache.royale.mdl.Dialog",
  "description": "constructor."},
{ "name": "Dialog",
  "type": "Class",
  "description": "The MDL Dialog class creates modal windows for dedicated user input."},
{ "name": "DialogActions",
  "type": "Method",
  "class": "org.apache.royale.mdl.DialogActions",
  "description": "constructor."},
{ "name": "DialogActions",
  "type": "Class",
  "description": "The DialogActions class is a container to use inside Dialog class that holds buttons or other components to perform user actions"},
{ "name": "DialogContent",
  "type": "Method",
  "class": "org.apache.royale.mdl.DialogContent",
  "description": "constructor."},
{ "name": "DialogContent",
  "type": "Class",
  "description": "The DialogContent class is a container to use inside Dialog class that holds content and information so the user gets notified and could take some action."},
{ "name": "DialogTitle",
  "type": "Method",
  "class": "org.apache.royale.mdl.DialogTitle",
  "description": "constructor."},
{ "name": "DialogTitle",
  "type": "Class",
  "description": "The DialogTitle class is an extended H4 heading used in Dialog."},
{ "name": "DiamondItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.DiamondItemRenderer",
  "description": "Constructor."},
{ "name": "DiamondItemRenderer",
  "type": "Class",
  "description": "A simple chart itemRenderer implementation that fills a diamond in its assigned area."},
{ "name": "DiffuseLightingFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.DiffuseLightingFilterElement",
  "description": ""},
{ "name": "DiffuseLightingFilterElement",
  "type": "Class",
  "description": "The DiffuseLightingFilterElement"},
{ "name": "DigitCase",
  "type": "Method",
  "class": "org.apache.royale.text.engine.DigitCase",
  "description": ""},
{ "name": "DigitCase",
  "type": "Class",
  "description": ""},
{ "name": "DigitWidth",
  "type": "Method",
  "class": "org.apache.royale.text.engine.DigitWidth",
  "description": ""},
{ "name": "DigitWidth",
  "type": "Class",
  "description": ""},
{ "name": "DirectHTTPChannel",
  "type": "Method",
  "class": "mx.messaging.channels.DirectHTTPChannel",
  "description": "Constructs an instance of a DirectHTTPChannel."},
{ "name": "DirectHTTPChannel",
  "type": "Class",
  "description": "The DirectHTTPChannel class is used to turn an HTTPRequestMessage object into an HTTP request."},
{ "name": "Direction",
  "type": "Class",
  "description": "Defines values for setting the <code>direction</code> property of the <code>TextLayoutFormat</code> class."},
{ "name": "DirectionsStatus",
  "type": "Class",
  "description": ""},
{ "name": "DisableBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DisableBead",
  "description": "constructor."},
{ "name": "DisableBead",
  "type": "Class",
  "description": "The DisableBead class is a specialty bead that can be used with any UIBase."},
{ "name": "DisableChildrenBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DisableChildrenBead",
  "description": "constructor."},
{ "name": "DisableChildrenBead",
  "type": "Class",
  "description": "The DisableChildrenBead class is a specialty bead that can be used with any UIBase."},
{ "name": "DisableClipBead",
  "type": "Method",
  "class": "org.apache.royale.svg.DisableClipBead",
  "description": ""},
{ "name": "DisableClipBead",
  "type": "Class",
  "description": "The DisableClipBead bead allows you to disable a ClipBead."},
{ "name": "DisableLoaderBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DisableLoaderBead",
  "description": "constructor."},
{ "name": "DisableLoaderBead",
  "type": "Class",
  "description": "The DisableLoaderBead class is a specialty bead that can be used with any UIBase control which has a DisableBead attached."},
{ "name": "Disabled",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.Disabled",
  "description": "constructor."},
{ "name": "Disabled",
  "type": "Class",
  "description": "The Disabled bead class is a specialty bead that can be used to disable a MDL control."},
{ "name": "Disabled",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.Disabled",
  "description": "constructor."},
{ "name": "Disabled",
  "type": "Class",
  "description": "The Disabled bead class is a specialty bead that can be used to disable a Jewel control."},
{ "name": "DisabledAlphaBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DisabledAlphaBead",
  "description": "constructor."},
{ "name": "DisabledAlphaBead",
  "type": "Class",
  "description": "The DisabledAlphaBead class is a specialty bead that can be used with any UIBase control which has a DisableBead attached."},
{ "name": "DispatchChangeOnStartup",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.DispatchChangeOnStartup",
  "description": "constructor."},
{ "name": "DispatchChangeOnStartup",
  "type": "Class",
  "description": "The DispatchChangeOnStartup bead class is a specialty bead that can be used with components that implements ISelectionModel and uses dataProvider to dispatch a CHANGE event when the component is initialized"},
{ "name": "DispatchInputFinishedBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DispatchInputFinishedBead",
  "description": "constructor."},
{ "name": "DispatchInputFinishedBead",
  "type": "Class",
  "description": "The DispatchInputFinishedBead class dispatched INPUT_FINISHED on strand when enter is pressed, or when foucus is out."},
{ "name": "DispatchKeyboardEventBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DispatchKeyboardEventBead",
  "description": "constructor."},
{ "name": "DispatchKeyboardEventBead",
  "type": "Class",
  "description": "The DispatchKeyboardEventBead class dispatches a KeyboardEvent from a text input."},
{ "name": "DispatchTLFKeyboardEventBead",
  "type": "Method",
  "class": "org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead",
  "description": "constructor."},
{ "name": "DispatchTLFKeyboardEventBead",
  "type": "Class",
  "description": "The DispatchKeyboardEventBead class dispatched INPUT_FINISHED on strand when enter is pressed, or when foucus is out."},
{ "name": "DisplayUtils",
  "type": "Class",
  "description": "The SpriteUtils class is a collection of static functions that are useful for geometric operations on visible objects."},
{ "name": "DistanceMatrixElementStatus",
  "type": "Class",
  "description": ""},
{ "name": "DistanceMatrixStatus",
  "type": "Class",
  "description": ""},
{ "name": "Div",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Div",
  "description": "constructor."},
{ "name": "Div",
  "type": "Class",
  "description": "The Div class represents an HTML <div> element"},
{ "name": "DivElement",
  "type": "Class",
  "description": "The DivElement class defines an element for grouping paragraphs (ParagraphElement objects)."},
{ "name": "DividedBox",
  "type": "Method",
  "class": "mx.containers.DividedBox",
  "description": "Constructor."},
{ "name": "DividedBox",
  "type": "Class",
  "description": "A DividedBox container measures and lays out its children horizontally or vertically in exactly the same way as a Box container, but it inserts draggable dividers in the gaps between the children."},
{ "name": "DividedContainer",
  "type": "Method",
  "class": "org.apache.royale.html.DividedContainer",
  "description": "Constructor"},
{ "name": "DividedContainer",
  "type": "Class",
  "description": "The DividedContainer lays out its children (either horizontally or vertically, depending on which layout is used) separated by dividers."},
{ "name": "DividedContainerDivider",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DividedContainerDivider",
  "description": "Constructor."},
{ "name": "DividedContainerDivider",
  "type": "Class",
  "description": "The DividedContainerSeparator is a control that lays between the children of a DividedContainer."},
{ "name": "DividedContainerModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.DividedContainerModel",
  "description": "Constructor."},
{ "name": "DividedContainerModel",
  "type": "Class",
  "description": "The DividedContainerModel holds the information necessary for the DividedContainer to size and layout its children as well as to respond to changes in those sizes made by the DividedContainerDividers."},
{ "name": "DividedContainerView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DividedContainerView",
  "description": "Constructor."},
{ "name": "DividedContainerView",
  "type": "Class",
  "description": "The DividedContainerView class is responsible for generating the DividedContainerSeparators between the children and placing them in the z-order between the children."},
{ "name": "Divider",
  "type": "Method",
  "class": "org.apache.royale.jewel.Divider",
  "description": "constructor."},
{ "name": "Divider",
  "type": "Class",
  "description": "The Divider class is a component that shows a clear separation between two zones"},
{ "name": "DividerEvent",
  "type": "Method",
  "class": "mx.events.DividerEvent",
  "description": "Constructor."},
{ "name": "DividerEvent",
  "type": "Class",
  "description": "Represents events that are dispatched when a divider has been pressed, dragged or released."},
{ "name": "DragDropListView",
  "type": "Class",
  "description": "DragDropListView is the view to use for Lists when you want to use drag and drop beads."},
{ "name": "DragEvent",
  "type": "Method",
  "class": "org.apache.royale.events.DragEvent",
  "description": "Constructor."},
{ "name": "DragEvent",
  "type": "Class",
  "description": "Drag and Drop Events."},
{ "name": "DragEvent",
  "type": "Method",
  "class": "mx.events.DragEvent",
  "description": "Constructor."},
{ "name": "DragEvent",
  "type": "Class",
  "description": "The DragEvent class represents event objects that are dispatched as part of a drag-and-drop operation."},
{ "name": "DragEventBase",
  "type": "Class",
  "description": "Drag and Drop Events."},
{ "name": "DragManager",
  "type": "Class",
  "description": "The DragManager class manages drag and drop operations, which let you move data from one place to another in a Flex application."},
{ "name": "DragMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": "constructor."},
{ "name": "DragMouseController",
  "type": "Class",
  "description": "The DragMouseController bead handles mouse events on the a component, looking for activity that constitutes the start of a drag drop operation."},
{ "name": "DragSource",
  "type": "Method",
  "class": "mx.core.DragSource",
  "description": "Constructor."},
{ "name": "DragSource",
  "type": "Class",
  "description": "The DragSource class contains the data being dragged."},
{ "name": "Drawer",
  "type": "Method",
  "class": "org.apache.royale.mdl.Drawer",
  "description": "constructor."},
{ "name": "Drawer",
  "type": "Class",
  "description": "The Drawer class is a container component used for navigation in smaller screens."},
{ "name": "Drawer",
  "type": "Method",
  "class": "org.apache.royale.jewel.Drawer",
  "description": "constructor."},
{ "name": "Drawer",
  "type": "Class",
  "description": "The Drawer class is a container component used for navigation can be opened with the menu icon."},
{ "name": "DrawerBase",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.drawer.DrawerBase",
  "description": "constructor."},
{ "name": "DrawerBase",
  "type": "Class",
  "description": "The DrawerBase class is the base class for a container component used for navigation."},
{ "name": "DrawerContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.drawer.DrawerContent",
  "description": "constructor."},
{ "name": "DrawerContent",
  "type": "Class",
  "description": "The DrawerContent class is a Container component mainly used in Drawer to hold content like navigation, icons, or text."},
{ "name": "DrawerHeader",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.drawer.DrawerHeader",
  "description": "constructor."},
{ "name": "DrawerHeader",
  "type": "Class",
  "description": "The DrawerHeader class is a Container component to hold Drawer Header content, for example a title or an Image icon logo"},
{ "name": "DrawingControlOptions",
  "type": "Method",
  "class": "google.maps.drawing",
  "description": ""},
{ "name": "DrawingManagerOptions",
  "type": "Method",
  "class": "google.maps.drawing",
  "description": ""},
{ "name": "DropDownList",
  "type": "Method",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": "Constructor."},
{ "name": "DropDownList",
  "type": "Class",
  "description": "The DropDownList class implements the basic equivalent of the <code>&lt;select&gt;</code> tag in HTML."},
{ "name": "DropDownList",
  "type": "Method",
  "class": "org.apache.royale.html.DropDownList",
  "description": "Constructor."},
{ "name": "DropDownList",
  "type": "Class",
  "description": "The DropDownList class implements the basic equivalent of the <code>&lt;select&gt;</code> tag in HTML."},
{ "name": "DropDownList",
  "type": "Class",
  "description": ""},
{ "name": "DropDownList",
  "type": "Method",
  "class": "spark.components.DropDownList",
  "description": "Constructor."},
{ "name": "DropDownList",
  "type": "Class",
  "description": "The DropDownList control contains a drop-down list from which the user can select a single value."},
{ "name": "DropDownList",
  "type": "Method",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": "Constructor."},
{ "name": "DropDownList",
  "type": "Class",
  "description": "The DropDownList class is a component that displays label field and Select with Options."},
{ "name": "DropDownListBase",
  "type": "Method",
  "class": "spark.components.supportClasses.DropDownListBase",
  "description": "Constructor."},
{ "name": "DropDownListBase",
  "type": "Class",
  "description": "The DropDownListBase control contains a drop-down list from which the user can select a single value."},
{ "name": "DropDownListController",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.controllers.DropDownListController",
  "description": "constructor."},
{ "name": "DropDownListController",
  "type": "Class",
  "description": "The DropDownListController class bead handles mouse events on the drop down list component parts and dispatches change event on behalf of the DropDownList"},
{ "name": "DropDownListController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": "Constructor."},
{ "name": "DropDownListController",
  "type": "Class",
  "description": "The DropDownListController class is the controller for org."},
{ "name": "DropDownListController",
  "type": "Class",
  "description": "The controller for Spark Dropdownlist."},
{ "name": "DropDownListController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.DropDownListController",
  "description": "Constructor."},
{ "name": "DropDownListController",
  "type": "Class",
  "description": "The DropDownListController class is the controller for org."},
{ "name": "DropDownListItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.DropDownListItemRenderer",
  "description": "Constructor."},
{ "name": "DropDownListItemRenderer",
  "type": "Class",
  "description": "The DropDownListItemRenderer class creates a DropDownList menu item"},
{ "name": "DropDownListItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.DropDownListItemRenderer",
  "description": "Constructor."},
{ "name": "DropDownListItemRenderer",
  "type": "Class",
  "description": "The DropDownListItemRenderer class creates a DropDownList menu item"},
{ "name": "DropDownListItemRendererFactoryForCollectionView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DropDownListItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "DropDownListItemRendererFactoryForCollectionView",
  "type": "Class",
  "description": "This class creates itemRenderer instances from the data contained within an ICollectionView"},
{ "name": "DropDownListList",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DropDownListList",
  "description": "Constructor."},
{ "name": "DropDownListList",
  "type": "Class",
  "description": "The DropDownListList class is the List class used internally by DropDownList as the dropdown/popup."},
{ "name": "DropDownListList",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.dropdownlist.DropDownListList",
  "description": "Constructor."},
{ "name": "DropDownListList",
  "type": "Class",
  "description": "The DropDownListList class is the List class used internally by DropDownList as the dropdown/popup."},
{ "name": "DropDownListModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.DropDownListModel",
  "description": ""},
{ "name": "DropDownListModel",
  "type": "Class",
  "description": "The DropDownListModel class defines the data associated with an org."},
{ "name": "DropDownListModel",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.models.DropDownListModel",
  "description": ""},
{ "name": "DropDownListModel",
  "type": "Class",
  "description": "The DropDownListModel class defines the data associated with an org."},
{ "name": "DropDownListTextPrompt",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.dropdownlist.DropDownListTextPrompt",
  "description": "constructor."},
{ "name": "DropDownListTextPrompt",
  "type": "Class",
  "description": "The DropDownListTextPrompt class is a specialty bead that can be used with any DropDownList control."},
{ "name": "DropDownListView",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.DropDownListView",
  "description": ""},
{ "name": "DropDownListView",
  "type": "Class",
  "description": "The DropDownListView class creates the visual elements of the org."},
{ "name": "DropDownListView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.DropDownListView",
  "description": ""},
{ "name": "DropDownListView",
  "type": "Class",
  "description": "The DropDownListView class creates the visual elements of the org."},
{ "name": "DropDownListView",
  "type": "Method",
  "class": "spark.components.beads.DropDownListView",
  "description": "Constructor."},
{ "name": "DropDownListView",
  "type": "Class",
  "description": "The DropDownListView for emulation."},
{ "name": "DropLocation",
  "type": "Method",
  "class": "spark.layouts.supportClasses.DropLocation",
  "description": "Constructor."},
{ "name": "DropLocation",
  "type": "Class",
  "description": "The DropLocation class contains information describing the drop location for the dragged data in a drag-and-drop operation."},
{ "name": "DropMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.DropMouseController",
  "description": "constructor."},
{ "name": "DropMouseController",
  "type": "Class",
  "description": "The DropMouseController bead handles mouse events on the a component, looking for events from a drag/drop operation."},
{ "name": "DropShadowFilter",
  "type": "Method",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": ""},
{ "name": "DropShadowFilter",
  "type": "Class",
  "description": "DropShadowFilter is a bead that injects a series of beads in the correct order and initialized them."},
{ "name": "DropType",
  "type": "Class",
  "description": "The DropType class provides a set of constant values of types of drops in a drag/drop operation"},
{ "name": "DualStyleObject",
  "type": "Method",
  "class": "mx.charts.chartClasses.DualStyleObject",
  "description": "Constructor."},
{ "name": "DualStyleObject",
  "type": "Class",
  "description": "The DualStyleObject class serves as a base class for components that have a need to assign class selectors outside of the client developer's control."},
{ "name": "DynamicAddItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "DynamicAddItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the adding of an itemRenderer once the corresponding datum has been added from the IDataProviderModel."},
{ "name": "DynamicDataGrid",
  "type": "Method",
  "class": "org.apache.royale.html.DynamicDataGrid",
  "description": ""},
{ "name": "DynamicDataGrid",
  "type": "Class",
  "description": ""},
{ "name": "DynamicDataGridColumnList",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DynamicDataGridColumnList",
  "description": ""},
{ "name": "DynamicDataGridColumnList",
  "type": "Class",
  "description": ""},
{ "name": "DynamicItemsRendererFactoryForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": ""},
{ "name": "DynamicItemsRendererFactoryForArrayListData",
  "type": "Class",
  "description": "The DynamicItemsRendererFactoryForArrayListData class reads an array of data and creates an item renderer for every ISelectableItemRenderer in the array."},
{ "name": "DynamicList",
  "type": "Method",
  "class": "org.apache.royale.html.DynamicList",
  "description": ""},
{ "name": "DynamicList",
  "type": "Class",
  "description": ""},
{ "name": "DynamicRemoveAllByNullItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllByNullItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "DynamicRemoveAllByNullItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the removal of all itemRenderers once data source is being set to null."},
{ "name": "DynamicRemoveAllItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "DynamicRemoveAllItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the removal of all itemRenderers once the all items has been removed from the IDataProviderModel."},
{ "name": "DynamicRemoveItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicRemoveItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "DynamicRemoveItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the removal of an itemRenderer once the corresponding datum has been removed from the IDataProviderModel."},
{ "name": "DynamicTabsAddItemRendererForArrayListData",
  "type": "Class",
  "description": ""},
{ "name": "DynamicUpdateItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "DynamicUpdateItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the update of an itemRenderer once the corresponding datum has been updated from the IDataProviderModel."},
{ "name": "E",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the E key (69)."},
{ "name": "EAST_ASIAN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.JustificationRule",
  "description": "Specifies East Asian justification rules."},
{ "name": "EDIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EDIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EDIT_LOCATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EDIT_LOCATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EFFECT",
  "type": "Property",
  "class": "mx.core.EventPriority",
  "description": "Autogenerated event handlers that trigger effects are executed after other event handlers on component instances, so they have a lower priority than the default."},
{ "name": "EFFECT_END",
  "type": "Property",
  "class": "org.apache.royale.effects.Effect",
  "description": "The <code>Effect."},
{ "name": "EFFECT_END",
  "type": "Property",
  "class": "mx.events.EffectEvent",
  "description": "The <code>EffectEvent."},
{ "name": "EFFECT_START",
  "type": "Property",
  "class": "org.apache.royale.effects.Effect",
  "description": "The <code>Effect."},
{ "name": "EFFECT_START",
  "type": "Property",
  "class": "mx.events.EffectEvent",
  "description": "The <code>EffectEvent."},
{ "name": "EFFECT_STOP",
  "type": "Property",
  "class": "org.apache.royale.effects.Effect",
  "description": "The <code>Effect."},
{ "name": "EFFECT_STOP",
  "type": "Property",
  "class": "mx.events.EffectEvent",
  "description": "The <code>EffectEvent."},
{ "name": "EJECT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EJECT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ELEMENT_ADDED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ModelChange",
  "description": ""},
{ "name": "ELEMENT_MODIFIED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ModelChange",
  "description": ""},
{ "name": "ELEMENT_REMOVAL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ModelChange",
  "description": ""},
{ "name": "EMAIL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EMAIL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EMBEDDED_CFF",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontLookup",
  "description": ""},
{ "name": "EMERGENCY",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineCreationResult",
  "description": ""},
{ "name": "EMPHASIZED",
  "type": "Property",
  "class": "org.apache.royale.jewel.Button",
  "description": ""},
{ "name": "EMPTY",
  "type": "Property",
  "class": "mx.core.EdgeMetrics",
  "description": "An EdgeMetrics object with a value of zero for its <code>left</code>, <code>top</code>, <code>right</code>, and <code>bottom</code> properties."},
{ "name": "ENABLE_SMALL_MESSAGES",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "END",
  "type": "Property",
  "class": "org.apache.royale.events.utils.NavigationKeys",
  "description": "The End key."},
{ "name": "END",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "END",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate to the end of the document."},
{ "name": "END",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Float",
  "description": "Graphic floats on the trailing side of the text (right if paragraph direction is \"ltr\", left if paragraph direction is \"rtl\")."},
{ "name": "END",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TabAlignment",
  "description": ""},
{ "name": "END",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the End key (35)."},
{ "name": "END",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextAlign",
  "description": "Specifies end edge alignment - text is aligned opposite from the writing order."},
{ "name": "END",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ClearFloats",
  "description": "Specifies that text skips over floats on the start side in reading order (left if direction is \"ltr\", right if direction is \"rtl\")."},
{ "name": "ENDPOINT_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Messages are tagged with the endpoint id for the Channel they are sent over."},
{ "name": "ENDPOINT_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "Messages are tagged with the endpoint id for the Channel they are sent over."},
{ "name": "ENDS_WITH",
  "type": "Property",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Specifies the use of a regex pattern matching the end with a given value."},
{ "name": "ENHANCED_ENCRYPTION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ENHANCED_ENCRYPTION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ENTER",
  "type": "Property",
  "class": "org.apache.royale.events.utils.WhitespaceKeys",
  "description": "The Enter or ↵ key (sometimes labeled Return)."},
{ "name": "ENTER",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Enter key (13)."},
{ "name": "EOFError",
  "type": "Method",
  "class": "mx.errors.EOFError",
  "description": ""},
{ "name": "EOFError",
  "type": "Class",
  "description": ""},
{ "name": "EQUAL",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the = key (187)."},
{ "name": "EQUALIZER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EQUALIZER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ERASE_EOF",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "Erase to End of Field."},
{ "name": "ERROR",
  "type": "Property",
  "class": "google.maps.MaxZoomStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ERROR",
  "type": "Property",
  "class": "mx.events.ModuleEvent",
  "description": "Dispatched when there is an error downloading the module."},
{ "name": "ERROR",
  "type": "Property",
  "class": "mx.events.ErrorEvent",
  "description": ""},
{ "name": "ERROR",
  "type": "Property",
  "class": "mx.logging.LogEventLevel",
  "description": "Designates error events that might still allow the application to continue running."},
{ "name": "ERROR",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElementStatus",
  "description": "An error occurred during loading of a referenced graphic."},
{ "name": "ERROR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ERROR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ERROR",
  "type": "Property",
  "class": "google.maps.GeocoderStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ERROR_DECODING",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Indicates that an XML formatted result could not be parsed into an XML instance or decoded into an Object."},
{ "name": "ERROR_ENCODING",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Indicates that an input parameter could not be encoded as XML."},
{ "name": "ERROR_HINT_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AcknowledgeMessage",
  "description": "Header name for the error hint header."},
{ "name": "ERROR_HINT_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AcknowledgeMessage",
  "description": "Header name for the error hint header."},
{ "name": "ERROR_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ERROR_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ERROR_TEXT",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The return value for the <code>itemToLabel()</code> or <code>itemToDataTip()</code> method  if resolving the corresponding property name (path) fails."},
{ "name": "ERROR_URL_REQUIRED",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Indicates that the useProxy property was set to false but a url was not provided."},
{ "name": "ESCAPE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Escape key (27)."},
{ "name": "ESCAPE",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Esc (Escape) key."},
{ "name": "EURO_SYMBOL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EURO_SYMBOL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EVENT",
  "type": "Property",
  "class": "mx.controls.ProgressBarMode",
  "description": "The control specified by the <code>source</code> property must dispatch <code>progress</code> and <code>completed</code> events."},
{ "name": "EVENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EVENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EVENT_AVAILABLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EVENT_AVAILABLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EVENT_BUSY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EVENT_BUSY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EVENT_NOTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EVENT_NOTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EVENT_SEAT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EVENT_SEAT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EV_STATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EV_STATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXACT",
  "type": "Property",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Specifies the use of a regex pattern matching exacly to a given value."},
{ "name": "EXECUTE",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Execute key."},
{ "name": "EXIT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for exiting the current application mode."},
{ "name": "EXIT_TO_APP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXIT_TO_APP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXOTIC",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LigatureLevel",
  "description": ""},
{ "name": "EXPAND",
  "type": "Property",
  "class": "mx.events.CollectionEventKind",
  "description": "Indicates that the collection has internally expanded."},
{ "name": "EXPAND_LESS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPAND_LESS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPAND_MORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPAND_MORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPLICIT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LineBreak",
  "description": "Specifies that lines break only at explicit return or line feed characters."},
{ "name": "EXPLICIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPLICIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPLORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPLORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPORT_PROTECTED_SYMBOLS",
  "type": "Property",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "EXPOSURE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_NEG_1",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_NEG_1",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_NEG_2",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_NEG_2",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_PLUS_1",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_PLUS_1",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_PLUS_2",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_PLUS_2",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_ZERO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXPOSURE_ZERO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "EXTEND_SELECTION",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "The ExSel (Extend Selection) key."},
{ "name": "EXTENSION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "EXTENSION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "Ease",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Constructor"},
{ "name": "Ease",
  "type": "Class",
  "description": "This is the base class for the CreateJS/TweenJS effects."},
{ "name": "EastAsianJustifier",
  "type": "Method",
  "class": "org.apache.royale.text.engine.EastAsianJustifier",
  "description": ""},
{ "name": "EastAsianJustifier",
  "type": "Class",
  "description": ""},
{ "name": "EasyAccordionCollapseBead",
  "type": "Method",
  "class": "org.apache.royale.effects.beads.EasyAccordionCollapseBead",
  "description": ""},
{ "name": "EasyAccordionCollapseBead",
  "type": "Class",
  "description": ""},
{ "name": "EasyDataProviderChangeNotifier",
  "type": "Method",
  "class": "org.apache.royale.html.beads.EasyDataProviderChangeNotifier",
  "description": "constructor."},
{ "name": "EasyDataProviderChangeNotifier",
  "type": "Class",
  "description": "The EasyDataProviderChangeNotifier is similar to DataProviderChangeNotifier but allows the user to populate the data provider after it's been added."},
{ "name": "EdgeData",
  "type": "Method",
  "class": "org.apache.royale.core.layout.EdgeData",
  "description": ""},
{ "name": "EdgeData",
  "type": "Class",
  "description": "The EdgeData class is a utility class for holding four border and or padding of a component."},
{ "name": "EdgeMetrics",
  "type": "Method",
  "class": "mx.core.EdgeMetrics",
  "description": "Constructor."},
{ "name": "EdgeMetrics",
  "type": "Class",
  "description": "The EdgeMetrics class specifies the thickness, in pixels, of the four edge regions around a visual component."},
{ "name": "EditEvent",
  "type": "Class",
  "description": ""},
{ "name": "EditManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "Creates an EditManager object."},
{ "name": "EditManager",
  "type": "Class",
  "description": "The EditManager class manages editing changes to a TextFlow."},
{ "name": "EditingKeys",
  "type": "Class",
  "description": "This class holds constants for editing keys See: https://w3c."},
{ "name": "EditingMode",
  "type": "Class",
  "description": "The EditingMode class defines constants used with EditManager class to represent the read, select, and edit permissions of a document."},
{ "name": "Effect",
  "type": "Method",
  "class": "org.apache.royale.effects.Effect",
  "description": "Constructor."},
{ "name": "Effect",
  "type": "Class",
  "description": "Effect is the base class for effects in Royale."},
{ "name": "Effect",
  "type": "Method",
  "class": "mx.effects.Effect",
  "description": "Constructor."},
{ "name": "Effect",
  "type": "Class",
  "description": "Effect is the base class for effects in Royale."},
{ "name": "Effect",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Effect",
  "description": "Constructor"},
{ "name": "Effect",
  "type": "Class",
  "description": "This is the base class for the CreateJS/TweenJS effects."},
{ "name": "EffectEvent",
  "type": "Method",
  "class": "mx.events.EffectEvent",
  "description": "Constructor."},
{ "name": "EffectEvent",
  "type": "Class",
  "description": "Represents event objects that are specific to Flex effects."},
{ "name": "EffectInstance",
  "type": "Method",
  "class": "mx.effects.EffectInstance",
  "description": "Constructor."},
{ "name": "EffectInstance",
  "type": "Class",
  "description": "The EffectInstance class represents an instance of an effect playing on a target."},
{ "name": "EffectTimer",
  "type": "Method",
  "class": "org.apache.royale.utils.EffectTimer",
  "description": "Constructor."},
{ "name": "EffectTimer",
  "type": "Class",
  "description": "The Timer class dispatches events based on a delay and repeat count."},
{ "name": "ElementConstants",
  "type": "Class",
  "description": ""},
{ "name": "ElementEvents",
  "type": "Class",
  "description": ""},
{ "name": "ElementFormat",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "ElementFormat",
  "type": "Class",
  "description": ""},
{ "name": "ElementHelper",
  "type": "Class",
  "description": ""},
{ "name": "ElementMark",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ElementMark",
  "description": ""},
{ "name": "ElementMark",
  "type": "Class",
  "description": "@private - Marks an element by its position in the hierarchy."},
{ "name": "ElementRange",
  "type": "Class",
  "description": "The ElementRange class represents the range of objects selected within a text flow."},
{ "name": "ElementWrapper",
  "type": "Class",
  "description": ""},
{ "name": "ElevationStatus",
  "type": "Class",
  "description": ""},
{ "name": "Ellipse",
  "type": "Method",
  "class": "org.apache.royale.svg.Ellipse",
  "description": "constructor."},
{ "name": "Ellipse",
  "type": "Class",
  "description": ""},
{ "name": "EllipsisOverflow",
  "type": "Method",
  "class": "org.apache.royale.html.beads.EllipsisOverflow",
  "description": "constructor."},
{ "name": "EllipsisOverflow",
  "type": "Class",
  "description": "The EllipsisOverflow class is a bead that can be used to stop the text from overflowing and display an ellipsis."},
{ "name": "Em",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Em",
  "description": "constructor."},
{ "name": "Em",
  "type": "Class",
  "description": "The Em(Emphasis) class represents an HTML <em> element"},
{ "name": "EmailValidator",
  "type": "Method",
  "class": "mx.validators.EmailValidator",
  "description": "Constructor."},
{ "name": "EmailValidator",
  "type": "Class",
  "description": "The EmailValidator class validates that a String has a single &#64; sign, a period in the domain name and that the top-level domain suffix has two, three, four, or six characters."},
{ "name": "EmailValidator",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.EmailValidator",
  "description": "constructor."},
{ "name": "EmailValidator",
  "type": "Class",
  "description": "The EmailValidator class is a specialty bead that can be used with TextInput control."},
{ "name": "Endian",
  "type": "Class",
  "description": "The endianness of the byte data."},
{ "name": "EnumPropertyHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.EnumPropertyHandler",
  "description": ""},
{ "name": "EnumPropertyHandler",
  "type": "Class",
  "description": "An property description with an enumerated string as its value."},
{ "name": "ErrorEvent",
  "type": "Method",
  "class": "mx.events.ErrorEvent",
  "description": "Constructor."},
{ "name": "ErrorEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when focus changes."},
{ "name": "ErrorMessage",
  "type": "Method",
  "class": "mx.messaging.messages.ErrorMessage",
  "description": "Constructs an ErrorMessage instance."},
{ "name": "ErrorMessage",
  "type": "Class",
  "description": "The ErrorMessage class is used to report errors within the messaging system."},
{ "name": "ErrorMessage",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.ErrorMessage",
  "description": "Constructs an uninitialized ErrorMessage."},
{ "name": "ErrorMessage",
  "type": "Class",
  "description": "ErrorMessages are sometimes returned from RPC requests to a remote endpoint."},
{ "name": "ErrorTipLabel",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.tooltip.ErrorTipLabel",
  "description": "Constructor."},
{ "name": "ErrorTipLabel",
  "type": "Class",
  "description": "The ErrorTipLabel class is the control used for ToolTip bead to popup an error text over a control"},
{ "name": "EscapedFragmentBead",
  "type": "Method",
  "class": "org.apache.royale.routing.EscapedFragmentBead",
  "description": "constructor."},
{ "name": "EscapedFragmentBead",
  "type": "Class",
  "description": "The EscapedFragmentBead class handles a special URL parameter that Google Search Crawlers use to verify search results."},
{ "name": "Event",
  "type": "Method",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "Event",
  "type": "Class",
  "description": "This class simply wraps flash."},
{ "name": "EventDispatcher",
  "type": "Method",
  "class": "org.apache.royale.events.EventDispatcher",
  "description": ""},
{ "name": "EventDispatcher",
  "type": "Class",
  "description": ""},
{ "name": "EventLoggingBead",
  "type": "Method",
  "class": "org.apache.royale.core.EventLoggingBead",
  "description": "Constructor."},
{ "name": "EventLoggingBead",
  "type": "Class",
  "description": "The EventLogging bead logs dispatches of certain events."},
{ "name": "EventPriority",
  "type": "Class",
  "description": "The EventPriority class defines constant values for the <code>priority</code> argument of the <code>addEventListener()</code> method of EventDispatcher."},
{ "name": "EventUtils",
  "type": "Class",
  "description": "Provides static methods for creating custom events in JS"},
{ "name": "ExclusionShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.ExclusionShader",
  "description": "Constructor."},
{ "name": "ExclusionShader",
  "type": "Class",
  "description": "Creates a blend shader that is equivalent to the 'Exclusion' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools."},
{ "name": "ExpandableSearch",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ExpandableSearch",
  "description": "constructor."},
{ "name": "ExpandableSearch",
  "type": "Class",
  "description": "The ExpandableSearch bead class is a specialty bead that can be used to decorate a TextField MDL control."},
{ "name": "Exponential",
  "type": "Class",
  "description": "The Exponential class defines three easing functions to implement motion with Flex effect classes, where the motion is defined by an exponentially decaying sine wave."},
{ "name": "ExternalInterface",
  "type": "Class",
  "description": "The ExternalInterface class provides a mechanism for a Royale application to communicate with other JavaScript functionality present within the web page."},
{ "name": "ExtraData",
  "type": "Class",
  "description": "Information about extra reflection definitions required in JS to optionally support extra reflection data."},
{ "name": "F",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F key (70)."},
{ "name": "F1",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F1 key (112)."},
{ "name": "F10",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F10 key (121)."},
{ "name": "F11",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F11 key (122)."},
{ "name": "F12",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F12 key (123)."},
{ "name": "F13",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F13 key (124)."},
{ "name": "F14",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F14 key (125)."},
{ "name": "F15",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F15 key (126)."},
{ "name": "F2",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F2 key (113)."},
{ "name": "F3",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F3 key (114)."},
{ "name": "F4",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F4 key (115)."},
{ "name": "F5",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F5 key (116)."},
{ "name": "F6",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F6 key (117)."},
{ "name": "F7",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F7 key (118)."},
{ "name": "F8",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F8 key (119)."},
{ "name": "F9",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the F9 key (120)."},
{ "name": "FACE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FACE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FAHRENHEIT",
  "type": "Property",
  "class": "google.maps.weather.TemperatureUnit",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "FAILED",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "FALSE",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "FAST_FORWARD",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging fast-forward transport mode."},
{ "name": "FAST_FORWARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FAST_FORWARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FAST_REWIND",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FAST_REWIND",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FATAL",
  "type": "Property",
  "class": "mx.logging.LogEventLevel",
  "description": "Designates events that are very harmful and will eventually lead to application failure."},
{ "name": "FAULT",
  "type": "Property",
  "class": "mx.rpc.events.FaultEvent",
  "description": "The FAULT event type."},
{ "name": "FAULT",
  "type": "Property",
  "class": "org.apache.royale.net.events.FaultEvent",
  "description": ""},
{ "name": "FAULT",
  "type": "Property",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "The FAULT event type; indicates that the Channel faulted."},
{ "name": "FAULT",
  "type": "Property",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "The FAULT event type; dispatched for a message fault."},
{ "name": "FAVORITE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FAVORITE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FAVORITE_BORDER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FAVORITE_BORDER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FEATURE_PLAY_LIST",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FEATURE_PLAY_LIST",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FEATURE_VIDEO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FEATURE_VIDEO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FEEDBACK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FEEDBACK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FETCH_ERROR",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "FIBER_DVR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FIBER_DVR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FIBER_MANUAL_RECORD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FIBER_MANUAL_RECORD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FIBER_NEW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FIBER_NEW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FIBER_PIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FIBER_PIN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FIBER_SMART_RECORD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FIBER_SMART_RECORD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILE_DOWNLOAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILE_DOWNLOAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILE_UPLOAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILE_UPLOAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_1",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_1",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_2",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_2",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_3",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_3",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_4",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_4",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_5",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_5",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_6",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_6",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_7",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_7",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_8",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_8",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_9",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_9",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_9_PLUS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_9_PLUS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_B_AND_W",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_B_AND_W",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_CENTER_FOCUS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_CENTER_FOCUS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_DRAMA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_DRAMA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_FRAMES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_FRAMES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_HDR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_HDR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_LIST",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_LIST",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_NONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_NONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_TILT_SHIFT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_TILT_SHIFT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FILTER_VINTAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FILTER_VINTAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FIND",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Find key."},
{ "name": "FIND_IN_PAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FIND_IN_PAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FIND_REPLACE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FIND_REPLACE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FINGERPRINT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FINGERPRINT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FINISH",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Finish key."},
{ "name": "FIRST",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLineLocation",
  "description": "Specifies the first line in a paragraph."},
{ "name": "FIRST",
  "type": "Property",
  "class": "mx.collections.CursorBookmark",
  "description": "A bookmark for the first item in an <code>ICollectionView</code>."},
{ "name": "FIRST_INDEX_MODE",
  "type": "Property",
  "class": "org.apache.royale.collections.Sort",
  "description": "When executing a find return the index for the first matching item."},
{ "name": "FIRST_INDEX_MODE",
  "type": "Property",
  "class": "mx.collections.Sort",
  "description": "When executing a find return the index for the first matching item."},
{ "name": "FIRST_INDEX_MODE",
  "type": "Property",
  "class": "spark.collections.Sort",
  "description": "When executing a find return the index for the first matching item."},
{ "name": "FIRST_PAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FIRST_PAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FITNESS_CENTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FITNESS_CENTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FIT_ANY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.OverflowPolicy",
  "description": "Fit the line in the composition area if any part of the line fits."},
{ "name": "FIT_DESCENDERS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.OverflowPolicy",
  "description": "Fit the line in the composition area if the area from the top to the baseline fits."},
{ "name": "FIXED",
  "type": "Property",
  "class": "org.apache.royale.jewel.Drawer",
  "description": ""},
{ "name": "FLAG",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLAG",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLARE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLARE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLASH_AUTO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLASH_AUTO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLASH_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLASH_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLASH_ON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLASH_ON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLEX_CLIENT_ID_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "This header is used to transport the global FlexClient Id value in outbound messages once it has been assigned by the server."},
{ "name": "FLEX_WINDOW_ACTIVATE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "FLEX_WINDOW_DEACTIVATE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "FLIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLIGHT_LAND",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLIGHT_LAND",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLIGHT_TAKEOFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLIGHT_TAKEOFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLIP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLIP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLIP_TO_BACK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLIP_TO_BACK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLIP_TO_FRONT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FLIP_TO_FRONT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FLOAT",
  "type": "Property",
  "class": "org.apache.royale.jewel.Drawer",
  "description": ""},
{ "name": "FLOW_OPERATION_BEGIN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowOperationEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>flowOperationBegin</code> event object."},
{ "name": "FLOW_OPERATION_COMPLETE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowOperationEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>flowOperationComplete</code> event object."},
{ "name": "FLOW_OPERATION_END",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowOperationEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>flowOperationEnd</code> event object."},
{ "name": "FN",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Fn (Function modifier) key."},
{ "name": "FOCUSED",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "Value that indicates the ChartItem has focus but does not appear to be selected."},
{ "name": "FOCUSED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormatState",
  "description": "default selection format state"},
{ "name": "FOCUSEDSELECTED",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "Value that indicates the ChartItem appears to have focus and appears to be selected."},
{ "name": "FOCUS_IN",
  "type": "Property",
  "class": "mx.events.FocusEvent",
  "description": ""},
{ "name": "FOCUS_IN",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "FOCUS_IN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FocusEvent",
  "description": ""},
{ "name": "FOCUS_OUT",
  "type": "Property",
  "class": "mx.events.FocusEvent",
  "description": ""},
{ "name": "FOCUS_OUT",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "FOCUS_OUT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FocusEvent",
  "description": ""},
{ "name": "FOLDER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FOLDER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FOLDER_OPEN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FOLDER_OPEN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FOLDER_SHARED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FOLDER_SHARED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FOLDER_SPECIAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FOLDER_SPECIAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FONT_DOWNLOAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FONT_DOWNLOAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ALIGN_CENTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ALIGN_CENTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ALIGN_JUSTIFY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ALIGN_JUSTIFY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ALIGN_LEFT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ALIGN_LEFT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ALIGN_RIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ALIGN_RIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_BOLD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_BOLD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_CLEAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_CLEAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_COLOR_FILL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_COLOR_FILL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_COLOR_RESET",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_COLOR_RESET",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_COLOR_TEXT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_COLOR_TEXT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_INDENT_DECREASE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_INDENT_DECREASE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_INDENT_INCREASE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_INDENT_INCREASE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ITALIC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_ITALIC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_LINE_SPACING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_LINE_SPACING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_LIST_BULLETED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_LIST_BULLETED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_LIST_NUMBERED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_LIST_NUMBERED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_PAINT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_PAINT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_QUOTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_QUOTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_SHAPES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_SHAPES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_SIZE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_SIZE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_STRIKETHROUGH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_STRIKETHROUGH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_TEXTDIRECTION_L_TO_R",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_TEXTDIRECTION_L_TO_R",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_TEXTDIRECTION_R_TO_L",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_TEXTDIRECTION_R_TO_L",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORMAT_UNDERLINED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORMAT_UNDERLINED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORM_URL_ENCODED",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "HTTP form url encoded."},
{ "name": "FORWARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORWARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORWARD_10",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORWARD_10",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORWARD_30",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORWARD_30",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORWARD_5",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FORWARD_5",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FORWARD_CLOSED_ARROW",
  "type": "Property",
  "class": "google.maps.SymbolPath",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "FORWARD_OPEN_ARROW",
  "type": "Property",
  "class": "google.maps.SymbolPath",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "FREE_BREAKFAST",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FREE_BREAKFAST",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FUCHSIA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "FULFILLED",
  "type": "Property",
  "class": "org.apache.royale.promises.enums.PromiseState",
  "description": ""},
{ "name": "FULLSCREEN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FULLSCREEN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FULLSCREEN_EXIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FULLSCREEN_EXIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FUNCTIONS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "FUNCTIONS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "FactoryBackgroundManager",
  "type": "Class",
  "description": ""},
{ "name": "FactoryComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FactoryComposer",
  "description": ""},
{ "name": "FactoryComposer",
  "type": "Class",
  "description": "@private FactoryDisplayComposer - overridable"},
{ "name": "FactoryHelper",
  "type": "Class",
  "description": ""},
{ "name": "FactoryUtil",
  "type": "Class",
  "description": ""},
{ "name": "Fade",
  "type": "Method",
  "class": "org.apache.royale.effects.Fade",
  "description": "Constructor."},
{ "name": "Fade",
  "type": "Class",
  "description": "The Fade effect animates a UI component's alpha or opacity."},
{ "name": "Failure",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.Failure",
  "description": ""},
{ "name": "Failure",
  "type": "Class",
  "description": ""},
{ "name": "FailureListener",
  "type": "Method",
  "class": "org.apache.royale.test.listeners.FailureListener",
  "description": ""},
{ "name": "FailureListener",
  "type": "Class",
  "description": "Determine if a test run fails or not."},
{ "name": "Fault",
  "type": "Method",
  "class": "mx.rpc.Fault",
  "description": "Creates a new Fault object."},
{ "name": "Fault",
  "type": "Class",
  "description": "The Fault class represents a fault in a remote procedure call (RPC) service invocation."},
{ "name": "FaultEvent",
  "type": "Method",
  "class": "mx.rpc.events.FaultEvent",
  "description": "Creates a new FaultEvent."},
{ "name": "FaultEvent",
  "type": "Class",
  "description": "This event is dispatched when an RPC call has a fault."},
{ "name": "FaultEvent",
  "type": "Method",
  "class": "org.apache.royale.net.events.FaultEvent",
  "description": ""},
{ "name": "FaultEvent",
  "type": "Class",
  "description": "FaultEvents are returned from RPC requests to a remote endpoint when the server responds with a fault."},
{ "name": "FileBrowser",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileBrowser",
  "description": "Constructor."},
{ "name": "FileBrowser",
  "type": "Class",
  "description": "The FileBrowser class is a bead which adds to UploadImageProxy the ability to browse the file system and select a file."},
{ "name": "FileBrowserWithFilter",
  "type": "Class",
  "description": "The FileBrowserWithFilter adds a filtering option to FileBrowser"},
{ "name": "FileErrorEvent",
  "type": "Method",
  "class": "org.apache.royale.storage.events.FileErrorEvent",
  "description": "Constructor."},
{ "name": "FileErrorEvent",
  "type": "Class",
  "description": "The FileErrorEvent class is used to signal varies errors that may occur while handling a permanent file."},
{ "name": "FileEvent",
  "type": "Method",
  "class": "org.apache.royale.storage.events.FileEvent",
  "description": "Constructor."},
{ "name": "FileEvent",
  "type": "Class",
  "description": "The FileEvent class is used to signal varies events in the life and use of permanent files."},
{ "name": "FileFilter",
  "type": "Method",
  "class": "mx.net.FileFilter",
  "description": ""},
{ "name": "FileFilter",
  "type": "Class",
  "description": ""},
{ "name": "FileLoader",
  "type": "Class",
  "description": "The FileLoader class is a bead which adds to UploadImageProxy the ability to browse the file system and select a file."},
{ "name": "FileLoaderAndUploader",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileLoaderAndUploader",
  "description": ""},
{ "name": "FileLoaderAndUploader",
  "type": "Class",
  "description": "The FileLoaderAndUploader is a compound bead that allows you to load a file and upload it in one operation."},
{ "name": "FileModel",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileModel",
  "description": "Constructor."},
{ "name": "FileModel",
  "type": "Class",
  "description": "The FileModel class is a bead that contains basic information on the file referenced by FileProxy"},
{ "name": "FileProxy",
  "type": "Method",
  "class": "org.apache.royale.file.FileProxy",
  "description": ""},
{ "name": "FileProxy",
  "type": "Class",
  "description": "The FileProxy class is where beads regarding file operations are added."},
{ "name": "FileReference",
  "type": "Method",
  "class": "mx.net.FileReference",
  "description": ""},
{ "name": "FileReference",
  "type": "Class",
  "description": ""},
{ "name": "FileUploader",
  "type": "Class",
  "description": "The FileUploader class is a bead which adds to FileProxy the ability to upload files."},
{ "name": "FileUploaderWithResponseData",
  "type": "Class",
  "description": "FileUploaderWithResponseData records responseData before dispatching the complete event"},
{ "name": "FilledRectangle",
  "type": "Method",
  "class": "org.apache.royale.core.FilledRectangle",
  "description": "Constructor."},
{ "name": "FilledRectangle",
  "type": "Class",
  "description": "The FilledRectangle class draws a simple filled rectangle without a border and with square corners."},
{ "name": "Filter",
  "type": "Method",
  "class": "org.apache.royale.svg.Filter",
  "description": ""},
{ "name": "Filter",
  "type": "Class",
  "description": "The Filter bead allows you to filter an SVG element."},
{ "name": "FilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "FilterElement",
  "type": "Class",
  "description": "FilterElement abstracts some methods and vars for elements that can go in an SVG filter"},
{ "name": "FlattenedList",
  "type": "Method",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": "Constructor."},
{ "name": "FlattenedList",
  "type": "Class",
  "description": "The FlattenedList class takes a HierarchicalData object and \"flattens\" it using all of the open members."},
{ "name": "Flex",
  "type": "Class",
  "description": "The Flex class is for internal use only."},
{ "name": "FlexCSSStyles",
  "type": "Class",
  "description": "The Flex styles holder."},
{ "name": "FlexChildInfo",
  "type": "Method",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": "Constructor."},
{ "name": "FlexChildInfo",
  "type": "Class",
  "description": "Helper class for the Flex."},
{ "name": "FlexEvent",
  "type": "Method",
  "class": "mx.events.FlexEvent",
  "description": "Constructor."},
{ "name": "FlexEvent",
  "type": "Class",
  "description": "The FlexEvent class represents the event object passed to the event listener for many Flex events."},
{ "name": "FlexGlobals",
  "type": "Class",
  "description": "A class that contains variables that are global to all applications within the same ApplicationDomain."},
{ "name": "FlexPrintJob",
  "type": "Method",
  "class": "mx.printing.FlexPrintJob",
  "description": "Constructor."},
{ "name": "FlexPrintJob",
  "type": "Class",
  "description": "The FlexPrintJob class is a wrapper for the flash."},
{ "name": "FlexPrintJobScaleType",
  "type": "Class",
  "description": "Values for the <code>scaleType</code> property of the FlexPrintJob."},
{ "name": "FlexVersion",
  "type": "Class",
  "description": "This class controls the backward-compatibility of the framework."},
{ "name": "FlexibleFirstChildHorizontalLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.FlexibleFirstChildHorizontalLayout",
  "description": "Constructor."},
{ "name": "FlexibleFirstChildHorizontalLayout",
  "type": "Class",
  "description": "The FlexibleFirstChildHorizontalLayout class is a simple layout bead."},
{ "name": "Float",
  "type": "Class",
  "description": "Defines values for the <code>float</code> property of the InlineGraphicElement class."},
{ "name": "FloatCompositionData",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "FloatCompositionData",
  "type": "Class",
  "description": "Contains information about the float that was generated by composition, and is used for composing and updating"},
{ "name": "FlowComposerBase",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": "Constructor."},
{ "name": "FlowComposerBase",
  "type": "Class",
  "description": "The FlowComposerBase class is the base class for Text Layout Framework flow composer classes, which control the composition of text lines in ContainerController objects."},
{ "name": "FlowDamageType",
  "type": "Class",
  "description": "The FlowDamageType class is an enumeration class that defines types of damage for damage methods and events."},
{ "name": "FlowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Base class - invoking <code>new FlowElement()</code> throws an error exception."},
{ "name": "FlowElement",
  "type": "Class",
  "description": "The text in a flow is stored in tree form with the elements of the tree representing logical divisions within the text."},
{ "name": "FlowElementEventDispatcher",
  "type": "Class",
  "description": "The ElementEventDispatcher class adds a simple tracking counter for event listeners to the core EventDispatcher class."},
{ "name": "FlowElementMouseEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "Creates an event object that contains information about mouse activity."},
{ "name": "FlowElementMouseEvent",
  "type": "Class",
  "description": "A link element dispatches this event when it detects mouse activity."},
{ "name": "FlowElementMouseEventManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEventManager",
  "description": "The constructor needs the container that contains the TextLines to be checked for visible, clicked elements."},
{ "name": "FlowElementMouseEventManager",
  "type": "Class",
  "description": "The ElementMouseEventManager class provides mouse element processing for visible FlowElements."},
{ "name": "FlowElementOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.FlowElementOperation",
  "description": "Creates a FlowElementOperation object."},
{ "name": "FlowElementOperation",
  "type": "Class",
  "description": "The FlowElementOperation class is the base class for operations that transform a FlowElement."},
{ "name": "FlowGroupElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Base class - invoking <code>new FlowGroupElement()</code> throws an error exception."},
{ "name": "FlowGroupElement",
  "type": "Class",
  "description": "The FlowGroupElement class is the base class for FlowElement objects that can have an array of children."},
{ "name": "FlowGroupHelper",
  "type": "Class",
  "description": ""},
{ "name": "FlowLeafElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowLeafElement",
  "description": "Base class - invoking new FlowLeafElement() throws an error exception."},
{ "name": "FlowLeafElement",
  "type": "Class",
  "description": "Base class for FlowElements that appear at the lowest level of the flow hierarchy."},
{ "name": "FlowOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "Creates the FlowOperation object."},
{ "name": "FlowOperation",
  "type": "Class",
  "description": "The FlowOperation class is the base class for all Text Layout Framework operations."},
{ "name": "FlowOperationEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.FlowOperationEvent",
  "description": "Creates an event object that contains information about a flow operation."},
{ "name": "FlowOperationEvent",
  "type": "Class",
  "description": "A TextFlow instance dispatches this event just before an operation commences and again just after an operation completes."},
{ "name": "FlowTextOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.FlowTextOperation",
  "description": "Creates the FlowTextOperation object."},
{ "name": "FlowTextOperation",
  "type": "Class",
  "description": "The FlowTextOperation is the base class for operations that transform a range of text."},
{ "name": "FlowValueHolder",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowValueHolder",
  "description": ""},
{ "name": "FlowValueHolder",
  "type": "Class",
  "description": "This class extends TextLayoutFormat and add capabilities to hold privateData and userStyles."},
{ "name": "FocusEvent",
  "type": "Method",
  "class": "mx.events.FocusEvent",
  "description": "Constructor."},
{ "name": "FocusEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when focus changes."},
{ "name": "FocusEvent",
  "type": "Method",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "FocusEvent",
  "type": "Class",
  "description": "An object dispatches a FocusEvent object when the user changes the focus from one object in the display list to another"},
{ "name": "FocusEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.FocusEvent",
  "description": ""},
{ "name": "FocusEvent",
  "type": "Class",
  "description": ""},
{ "name": "FocusEventConverter",
  "type": "Class",
  "description": "Converts low level focus events to Royale FocusEvents"},
{ "name": "FocusManager",
  "type": "Method",
  "class": "mx.managers.FocusManager",
  "description": ""},
{ "name": "FocusManager",
  "type": "Class",
  "description": ""},
{ "name": "FontDescription",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "FontDescription",
  "type": "Class",
  "description": ""},
{ "name": "FontIcon",
  "type": "Method",
  "class": "org.apache.royale.icons.FontIcon",
  "description": "constructor."},
{ "name": "FontIcon",
  "type": "Class",
  "description": "Icons can be used alone or in buttons and other controls  This class could be used with any icon family out there and with its text property"},
{ "name": "FontIconBase",
  "type": "Method",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": "constructor."},
{ "name": "FontIconBase",
  "type": "Class",
  "description": "FontIconBase is the base class to provide most common features for all kinds of text based icons"},
{ "name": "FontImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.FontImporter",
  "description": ""},
{ "name": "FontImporter",
  "type": "Class",
  "description": ""},
{ "name": "FontLookup",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontLookup",
  "description": ""},
{ "name": "FontLookup",
  "type": "Class",
  "description": ""},
{ "name": "FontMetrics",
  "type": "Class",
  "description": "The FontMetrics class contains metrics specific to the font."},
{ "name": "FontPosture",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontPosture",
  "description": ""},
{ "name": "FontPosture",
  "type": "Class",
  "description": ""},
{ "name": "FontWeight",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontWeight",
  "description": ""},
{ "name": "FontWeight",
  "type": "Class",
  "description": ""},
{ "name": "Fonts",
  "type": "Class",
  "description": ""},
{ "name": "Footer",
  "type": "Method",
  "class": "org.apache.royale.mdl.Footer",
  "description": "constructor."},
{ "name": "Footer",
  "type": "Class",
  "description": "The Footer class is a Container component capable of parenting other components"},
{ "name": "FooterBar",
  "type": "Method",
  "class": "org.apache.royale.jewel.FooterBar",
  "description": "constructor."},
{ "name": "FooterBar",
  "type": "Class",
  "description": "The FooterBar class is a container component for different items like navigation icons and/or buttons."},
{ "name": "FooterBottomSection",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterBottomSection",
  "description": "constructor."},
{ "name": "FooterBottomSection",
  "type": "Class",
  "description": "The FooterBottomSection class is a footer bottom container section capable of parenting other components"},
{ "name": "FooterDropDownSection",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterDropDownSection",
  "description": "constructor."},
{ "name": "FooterDropDownSection",
  "type": "Class",
  "description": "The FooterDropDownSection class is a footer drop-down container (vertical) content area."},
{ "name": "FooterHeading",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterHeading",
  "description": "constructor."},
{ "name": "FooterHeading",
  "type": "Class",
  "description": "The FooterHeading class is an extended H1 heading used in MDL footer drop down section."},
{ "name": "FooterLeftSection",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterLeftSection",
  "description": "constructor."},
{ "name": "FooterLeftSection",
  "type": "Class",
  "description": "The FooterLeftSection class is a footer left container section capable of parenting other components"},
{ "name": "FooterLinkItemMouseRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemMouseRenderer",
  "description": "constructor."},
{ "name": "FooterLinkItemMouseRenderer",
  "type": "Class",
  "description": "The FooterLinkItemMouseRenderer defines the basic Item Renderer for a MDL NavigationLink List Component and handles mouse events, notifying about them host component."},
{ "name": "FooterLinkItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemRenderer",
  "description": "constructor."},
{ "name": "FooterLinkItemRenderer",
  "type": "Class",
  "description": "The FooterLinkItemRenderer defines the basic Item Renderer for a MDL Footer Link List Component."},
{ "name": "FooterLinkList",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterLinkList",
  "description": "Constructor."},
{ "name": "FooterLinkList",
  "type": "Class",
  "description": "FooterLinkList class defines an footer unordered list as a drop-down (vertical) list and relies on an itemRenderer factory to produce its children components and on a layout to arrange them."},
{ "name": "FooterLogo",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterLogo",
  "description": "constructor."},
{ "name": "FooterLogo",
  "type": "Class",
  "description": "The FooterLogo class defines a container as a styled section heading This is used in footer bottom or left sections"},
{ "name": "FooterMiddleSection",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterMiddleSection",
  "description": "constructor."},
{ "name": "FooterMiddleSection",
  "type": "Class",
  "description": "The FooterMiddleSection class is a footer middle container section capable of parenting other components"},
{ "name": "FooterRightSection",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterRightSection",
  "description": "constructor."},
{ "name": "FooterRightSection",
  "type": "Class",
  "description": "The FooterRightSection class is a footer right container section capable of parenting other components"},
{ "name": "FooterSocialButton",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterSocialButton",
  "description": "constructor."},
{ "name": "FooterSocialButton",
  "type": "Class",
  "description": "The FooterSocialButton class defines a footer decorative square within a footer"},
{ "name": "FooterTopSection",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterTopSection",
  "description": "constructor."},
{ "name": "FooterTopSection",
  "type": "Class",
  "description": "The FooterTopSection class is a footer top container section capable of parenting other components"},
{ "name": "Form",
  "type": "Method",
  "class": "org.apache.royale.html.Form",
  "description": "Constructor."},
{ "name": "Form",
  "type": "Class",
  "description": "The Form class is a simple form."},
{ "name": "Form",
  "type": "Method",
  "class": "mx.containers.Form",
  "description": "Constructor."},
{ "name": "Form",
  "type": "Class",
  "description": "The Form container lets you control the layout of a form, mark form fields as required or optional, handle error messages, and bind your form data to the Flex data model to perform data checking and validation."},
{ "name": "Form",
  "type": "Method",
  "class": "org.apache.royale.jewel.Form",
  "description": "constructor."},
{ "name": "Form",
  "type": "Class",
  "description": "The Form class works with all validators, which implements IPopUpHost can host error tips."},
{ "name": "Form",
  "type": "Method",
  "class": "spark.components.Form",
  "description": "Constructor."},
{ "name": "Form",
  "type": "Class",
  "description": "The Spark Form container lets you control the layout of a form, mark form fields as required or optional, handle error messages, and bind your form data to the Flex data model to perform data checking and validation."},
{ "name": "Form",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Form",
  "description": "constructor."},
{ "name": "Form",
  "type": "Class",
  "description": "The Form class represents an HTML <form> element"},
{ "name": "FormHeading",
  "type": "Method",
  "class": "org.apache.royale.jewel.FormHeading",
  "description": "constructor."},
{ "name": "FormHeading",
  "type": "Class",
  "description": "FormHeading is a label, and option required indicator (no validation is implied) and a content with one or more controls"},
{ "name": "FormHeading",
  "type": "Method",
  "class": "mx.containers.FormHeading",
  "description": "Constructor."},
{ "name": "FormHeading",
  "type": "Class",
  "description": "The FormHeading container is used to display a heading for a group of controls inside a Form container."},
{ "name": "FormHeadingView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormHeadingView",
  "description": "constructor."},
{ "name": "FormHeadingView",
  "type": "Class",
  "description": "The FormHeadingView class creates the visual elements of the org."},
{ "name": "FormItem",
  "type": "Method",
  "class": "mx.containers.FormItem",
  "description": "Constructor."},
{ "name": "FormItem",
  "type": "Class",
  "description": "The FormItem container defines a label and one or more children arranged horizontally or vertically."},
{ "name": "FormItem",
  "type": "Method",
  "class": "org.apache.royale.jewel.FormItem",
  "description": "constructor."},
{ "name": "FormItem",
  "type": "Class",
  "description": "FormItem is a label, and option required indicator (no validation is implied) and a content with one or more controls"},
{ "name": "FormItem",
  "type": "Method",
  "class": "spark.components.FormItem",
  "description": "Constructor."},
{ "name": "FormItem",
  "type": "Class",
  "description": "The FormItem container defines the following in a Spark From:  <ul> <li>A single label."},
{ "name": "FormItemContainer",
  "type": "Method",
  "class": "mx.containers.beads.FormItemContainer",
  "description": "Constructor."},
{ "name": "FormItemContainer",
  "type": "Class",
  "description": "The FormItemContainer for emulation."},
{ "name": "FormItemDirection",
  "type": "Class",
  "description": "The FormItemDirection class defines the constant values for the <code>direction</code> property of the FormItem class."},
{ "name": "FormItemLabel",
  "type": "Method",
  "class": "mx.controls.FormItemLabel",
  "description": "Constructor."},
{ "name": "FormItemLabel",
  "type": "Class",
  "description": "The FormItem container uses a FormItemLabel object to display the label portion of the FormItem container."},
{ "name": "FormItemLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.FormItemLayout",
  "description": "Constructor."},
{ "name": "FormItemLayout",
  "type": "Class",
  "description": "The BasicLayout class is a simple layout bead."},
{ "name": "FormItemLayout",
  "type": "Method",
  "class": "spark.layouts.FormItemLayout",
  "description": "Constructor."},
{ "name": "FormItemLayout",
  "type": "Class",
  "description": "The FormItemLayout is used by FormItems to provide a constraint based layout."},
{ "name": "FormItemLayoutProxy",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "Constructor."},
{ "name": "FormItemLayoutProxy",
  "type": "Class",
  "description": "The FormItemLayoutProxy class is used by Wizard in order for layouts to operate on the Wizard itself."},
{ "name": "FormItemModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.FormItemModel",
  "description": "constructor."},
{ "name": "FormItemModel",
  "type": "Class",
  "description": "The FormItemModel bead class holds the values for a org."},
{ "name": "FormItemView",
  "type": "Method",
  "class": "mx.containers.beads.FormItemView",
  "description": "Constructor."},
{ "name": "FormItemView",
  "type": "Class",
  "description": "The FormItemView for emulation."},
{ "name": "FormItemView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": "constructor."},
{ "name": "FormItemView",
  "type": "Class",
  "description": "The FormItemView class creates the visual elements of the org."},
{ "name": "FormLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.FormLayout",
  "description": "Constructor."},
{ "name": "FormLayout",
  "type": "Class",
  "description": "The BasicLayout class is a simple layout bead."},
{ "name": "FormLayout",
  "type": "Method",
  "class": "spark.layouts.FormLayout",
  "description": "Constructor."},
{ "name": "FormLayout",
  "type": "Class",
  "description": "The FormLayout class defines the default layout for Spark Form skins."},
{ "name": "FormValidator",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.FormValidator",
  "description": "constructor."},
{ "name": "FormValidator",
  "type": "Class",
  "description": "The FormValidator class is a specialty bead that can be used with form control."},
{ "name": "FormatBase",
  "type": "Method",
  "class": "org.apache.royale.core.FormatBase",
  "description": ""},
{ "name": "FormatBase",
  "type": "Class",
  "description": "The FormatBase class serves as a base class for custom formatters."},
{ "name": "FormatDescriptor",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.FormatDescriptor",
  "description": "Constructor."},
{ "name": "FormatDescriptor",
  "type": "Class",
  "description": "Contains information about a format."},
{ "name": "FormatPropertyHandler",
  "type": "Class",
  "description": ""},
{ "name": "FormatValue",
  "type": "Class",
  "description": "Defines values for specifying that a formatting property is to inherit its parent's value or have it's value generated automatically."},
{ "name": "Formatter",
  "type": "Method",
  "class": "mx.formatters.Formatter",
  "description": "Constructor."},
{ "name": "Formatter",
  "type": "Class",
  "description": "The Formatter class is the base class for all data formatters."},
{ "name": "FullAlphaFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.FullAlphaFilterElement",
  "description": ""},
{ "name": "FullAlphaFilterElement",
  "type": "Class",
  "description": "The FullAlphaFilterElement"},
{ "name": "FunctionDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.FunctionDefinition",
  "description": ""},
{ "name": "FunctionDefinition",
  "type": "Class",
  "description": "The description of a Class or Interface"},
{ "name": "G",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the G key (71)."},
{ "name": "GAMEPAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GAMEPAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GAMES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GAMES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GAPS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": ""},
{ "name": "GAPS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": ""},
{ "name": "GAPS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": ""},
{ "name": "GAPS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": ""},
{ "name": "GAPS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": ""},
{ "name": "GAPS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": ""},
{ "name": "GAP_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": ""},
{ "name": "GAP_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": ""},
{ "name": "GAP_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": ""},
{ "name": "GAP_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": ""},
{ "name": "GAP_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": ""},
{ "name": "GAP_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": ""},
{ "name": "GAVEL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GAVEL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GEOMETRIC_CENTER",
  "type": "Property",
  "class": "google.maps.GeocoderLocationType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "GEOMETRY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FlowDamageType",
  "description": "Value is used to set the <code>validity</code> property if the line has been invalidated by other lines moving around."},
{ "name": "GESTURE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GESTURE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GET",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "HTTP GET request."},
{ "name": "GET_APP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GET_APP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GET_METHOD",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the method used for this request should be \"get\"."},
{ "name": "GIF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GIF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GOLF_COURSE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GOLF_COURSE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GPS_FIXED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GPS_FIXED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GPS_NOT_FIXED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GPS_NOT_FIXED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GPS_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GPS_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GRADE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GRADE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GRADIENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GRADIENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GRADIENT_DIMENSION",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": "Value of the width and height of the untransformed gradient"},
{ "name": "GRAIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GRAIN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GRAPHIC_ELEMENT",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "GRAPHIC_EQ",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GRAPHIC_EQ",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GRAY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "GREEN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "GREEN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the green function key button."},
{ "name": "GRID",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDoubleClickMode",
  "description": "Specifies that the doubleClick event should be based on the entire grid."},
{ "name": "GRID_CLICK",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>gridClick</code> GridEvent."},
{ "name": "GRID_DOUBLE_CLICK",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>gridDoubleClick</code> GridEvent."},
{ "name": "GRID_ITEM_EDITOR_SESSION_CANCEL",
  "type": "Property",
  "class": "spark.events.GridItemEditorEvent",
  "description": "The <code>GridItemEditorEvent."},
{ "name": "GRID_ITEM_EDITOR_SESSION_SAVE",
  "type": "Property",
  "class": "spark.events.GridItemEditorEvent",
  "description": "The <code>GridItemEditorEvent."},
{ "name": "GRID_ITEM_EDITOR_SESSION_START",
  "type": "Property",
  "class": "spark.events.GridItemEditorEvent",
  "description": "The <code>GridItemEditorEvent."},
{ "name": "GRID_ITEM_EDITOR_SESSION_STARTING",
  "type": "Property",
  "class": "spark.events.GridItemEditorEvent",
  "description": "The <code>GridItemEditorEvent."},
{ "name": "GRID_MOUSE_DOWN",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>gridMouseDown</code> GridEvent."},
{ "name": "GRID_MOUSE_DRAG",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>gridMouseDrag</code> GridEvent."},
{ "name": "GRID_MOUSE_UP",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>gridMouseUp</code> GridEvent."},
{ "name": "GRID_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GRID_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GRID_ON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GRID_ON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GRID_ROLL_OUT",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>gridRollOut</code> GridEvent."},
{ "name": "GRID_ROLL_OVER",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>gridRollOver</code> GridEvent."},
{ "name": "GROUP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GROUP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GROUPS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableRules",
  "description": "Rules will appear between row groups (see THEAD, TFOOT, and TBODY) and column groups (see COLGROUP and COL) only."},
{ "name": "GROUP_ADD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GROUP_ADD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GROUP_WORK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "GROUP_WORK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GUIDE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging the program guide."},
{ "name": "GUJARATI",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Gujarati."},
{ "name": "GURMUKHI",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Gurmukhi."},
{ "name": "G_TRANSLATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "G_TRANSLATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "GenericBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": "Constructor."},
{ "name": "GenericBinding",
  "type": "Class",
  "description": "The GenericBinding class is the data-binding class that applies changes to properties of source objects to a property of the destination object."},
{ "name": "Geocoder",
  "type": "Method",
  "class": "google.maps.Geocoder",
  "description": ""},
{ "name": "Geocoder",
  "type": "Class",
  "description": ""},
{ "name": "GeocoderLocationType",
  "type": "Class",
  "description": ""},
{ "name": "GeocoderStatus",
  "type": "Class",
  "description": ""},
{ "name": "Geolocation",
  "type": "Method",
  "class": "org.apache.royale.cordova.geolocation.Geolocation",
  "description": "Constructor"},
{ "name": "Geolocation",
  "type": "Class",
  "description": "The Geolocation class implements Cordova geolocation plugin"},
{ "name": "GeometricElementUtils",
  "type": "Class",
  "description": ""},
{ "name": "GeometryUtil",
  "type": "Class",
  "description": "Utilities for getting information about text geometry and bounds."},
{ "name": "GetScrollbarWidth",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GetScrollbarWidth",
  "description": ""},
{ "name": "GetScrollbarWidth",
  "type": "Class",
  "description": "The GetScrollbarWidth class detects the browser's default scrollbar width."},
{ "name": "GlobalSettings",
  "type": "Class",
  "description": "Configuration that applies to all TextFlow objects."},
{ "name": "Glow",
  "type": "Method",
  "class": "mx.effects.Glow",
  "description": "Constructor."},
{ "name": "Glow",
  "type": "Class",
  "description": "The Glow effect lets you apply a visual glow effect to a component."},
{ "name": "GlyphMetrics",
  "type": "Class",
  "description": ""},
{ "name": "GoogleMap",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "GoogleMap",
  "type": "Class",
  "description": "The Map class displays a Google Map centered on lat/lng coordinates."},
{ "name": "GoogleMapView",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Constructor."},
{ "name": "GoogleMapView",
  "type": "Class",
  "description": "The MapView bead class displays a Google Map using HTMLLoader."},
{ "name": "GradientBase",
  "type": "Class",
  "description": ""},
{ "name": "GradientEntry",
  "type": "Method",
  "class": "org.apache.royale.graphics.GradientEntry",
  "description": ""},
{ "name": "GradientEntry",
  "type": "Class",
  "description": ""},
{ "name": "GradientEntry",
  "type": "Method",
  "class": "mx.graphics.GradientEntry",
  "description": ""},
{ "name": "GradientEntry",
  "type": "Class",
  "description": "The GradientEntry class defines the objects that control a transition as part of a gradient fill."},
{ "name": "GraphicContainer",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "GraphicContainer",
  "type": "Class",
  "description": "The default property uses when additional MXML content appears within an element's definition in an MXML file."},
{ "name": "GraphicElement",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GraphicElement",
  "description": ""},
{ "name": "GraphicElement",
  "type": "Class",
  "description": ""},
{ "name": "GraphicShape",
  "type": "Class",
  "description": ""},
{ "name": "GraphicShape",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": "Constructor"},
{ "name": "GraphicShape",
  "type": "Class",
  "description": ""},
{ "name": "Graphics",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "Graphics",
  "type": "Class",
  "description": ""},
{ "name": "GraphicsItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "Constructor."},
{ "name": "GraphicsItemRenderer",
  "type": "Class",
  "description": "The GraphicsItemRenderer provides a base class for itemRenderers that use graphics rather than components."},
{ "name": "GraphicsUtilities",
  "type": "Class",
  "description": "A set of internal graphics rendering utilities used by the various chart classes."},
{ "name": "Grid",
  "type": "Method",
  "class": "mx.containers.Grid",
  "description": "Constructor."},
{ "name": "Grid",
  "type": "Class",
  "description": "A Grid container lets you arrange children as rows and columns of cells, similar to an HTML table."},
{ "name": "Grid",
  "type": "Method",
  "class": "org.apache.royale.mdl.Grid",
  "description": "constructor."},
{ "name": "Grid",
  "type": "Class",
  "description": "The Material Design Lite (MDL) grid component is a simplified method for laying out content for multiple screen sizes."},
{ "name": "Grid",
  "type": "Method",
  "class": "org.apache.royale.jewel.Grid",
  "description": "constructor."},
{ "name": "Grid",
  "type": "Class",
  "description": "The Grid class is a container that uses Grid Layout."},
{ "name": "Grid",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Constructor."},
{ "name": "Grid",
  "type": "Class",
  "description": "The Grid control displays a list of data items called its <i>data provider</i> in a scrollable table or \"grid\", one item per row."},
{ "name": "GridCaretEvent",
  "type": "Method",
  "class": "spark.events.GridCaretEvent",
  "description": "Constructor."},
{ "name": "GridCaretEvent",
  "type": "Class",
  "description": "The GridCaretEvent class represents events that are dispatched when the caret changes in a Spark DataGrid control as the result of user interaction."},
{ "name": "GridCell",
  "type": "Method",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "constructor."},
{ "name": "GridCell",
  "type": "Class",
  "description": "The GridCell class represents a cell in MDL component."},
{ "name": "GridCell",
  "type": "Method",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "constructor."},
{ "name": "GridCell",
  "type": "Class",
  "description": "The GridCell class is the inmediate container in a Grid Layout to host grid cell content."},
{ "name": "GridCellBehaviour",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.GridCellBehaviour",
  "description": "constructor."},
{ "name": "GridCellBehaviour",
  "type": "Class",
  "description": "The GridCellBehaviour bead class is used in MDL Dialog to style other components to make it play nicely inside grids instead of use a GridCell component"},
{ "name": "GridCellLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "Constructor."},
{ "name": "GridCellLayout",
  "type": "Class",
  "description": "The GridCellLayout class is the layout used for childrens in a Grid"},
{ "name": "GridColumn",
  "type": "Method",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Constructor."},
{ "name": "GridColumn",
  "type": "Class",
  "description": "The GridColumn class defines a column of a Spark grid control, such as the Spark DataGrid or Grid control."},
{ "name": "GridColumnInfo",
  "type": "Method",
  "class": "mx.containers.gridClasses.GridColumnInfo",
  "description": "Constructor."},
{ "name": "GridColumnInfo",
  "type": "Class",
  "description": "Internal helper class used to exchange information between Grid and GridRow."},
{ "name": "GridDimensions",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Constructor."},
{ "name": "GridDimensions",
  "type": "Class",
  "description": "A sparse data structure that represents the widths and heights of a grid."},
{ "name": "GridDimensionsView",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "GridDimensionsView",
  "type": "Class",
  "description": "A \"view\" of a rectangular region within a GridDimensions object."},
{ "name": "GridDoubleClickMode",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDoubleClickMode",
  "description": "Constructor."},
{ "name": "GridDoubleClickMode",
  "type": "Class",
  "description": "The GridDoubleClickMode class defines the valid constant values for the <code>doubleClickMode</code> property of the Spark DataGrid and Grid controls."},
{ "name": "GridEvent",
  "type": "Method",
  "class": "spark.events.GridEvent",
  "description": "GridEvents dispatched by the Grid class in response to mouse event are constructed with the incoming mouse event's properties."},
{ "name": "GridEvent",
  "type": "Class",
  "description": "The GridEvent class extends the MouseEvent class to includes additional grid specific information based on the event's location relative to a grid cell."},
{ "name": "GridItem",
  "type": "Method",
  "class": "mx.containers.GridItem",
  "description": "Constructor."},
{ "name": "GridItem",
  "type": "Class",
  "description": "The GridItem container defines a grid cell in GridRow container."},
{ "name": "GridItemEditorActivationMouseEvent",
  "type": "Class",
  "description": "The EditorActivationMouseEvent class defines the possible values for the the kinds of mouse events that cause an editor to be opened on a Spark DataGrid component."},
{ "name": "GridItemEditorEvent",
  "type": "Method",
  "class": "spark.events.GridItemEditorEvent",
  "description": "Constructor."},
{ "name": "GridItemEditorEvent",
  "type": "Class",
  "description": "The GridItemEditorEvent class represents events that are dispatched over the life cycle of an item editor."},
{ "name": "GridItemRenderer",
  "type": "Method",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "Constructor."},
{ "name": "GridItemRenderer",
  "type": "Class",
  "description": "The GridItemRenderer class defines the base class for custom item renderers for the Spark grid controls, such as DataGrid and Grid."},
{ "name": "GridLayer",
  "type": "Method",
  "class": "spark.components.gridClasses.GridLayer",
  "description": "Constructor."},
{ "name": "GridLayer",
  "type": "Class",
  "description": "The GridLayer class defines a container used for the layers of the Grid control's visual elements."},
{ "name": "GridLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.GridLayout",
  "description": "Constructor."},
{ "name": "GridLayout",
  "type": "Class",
  "description": "The GridLayout class sets its childrens in a grid with cells filling all the available space."},
{ "name": "GridLayout",
  "type": "Method",
  "class": "spark.components.gridClasses.GridLayout",
  "description": ""},
{ "name": "GridLayout",
  "type": "Class",
  "description": "The internal layout class used by the Grid class."},
{ "name": "GridLines",
  "type": "Method",
  "class": "mx.charts.GridLines",
  "description": "Constructor."},
{ "name": "GridLines",
  "type": "Class",
  "description": "The GridLines class draws grid lines inside the data area of the chart."},
{ "name": "GridRow",
  "type": "Method",
  "class": "mx.containers.GridRow",
  "description": "Constructor."},
{ "name": "GridRow",
  "type": "Class",
  "description": "The GridRow container defines a row in a Grid container, and contains GridCell containers."},
{ "name": "GridRowInfo",
  "type": "Method",
  "class": "mx.containers.gridClasses.GridRowInfo",
  "description": "Constructor."},
{ "name": "GridRowInfo",
  "type": "Class",
  "description": "Internal helper class used to exchange information between Grid and GridRow."},
{ "name": "GridRowList",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Constructor."},
{ "name": "GridRowList",
  "type": "Class",
  "description": "Open LinkedList implementation for representing row heights in a Grid where each GridRowNode represents a row in the Grid."},
{ "name": "GridRowNode",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": "Constructor."},
{ "name": "GridRowNode",
  "type": "Class",
  "description": "A GridRowNode represents the heights of each cell for the row at rowIndex, and keeps track of the maximum cell height."},
{ "name": "GridSelection",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "Constructor."},
{ "name": "GridSelection",
  "type": "Class",
  "description": "Use the GridSelection class to track a Grid control's <code>selectionMode</code> property and its set of selected rows, columns, or cells."},
{ "name": "GridSelectionEvent",
  "type": "Method",
  "class": "spark.events.GridSelectionEvent",
  "description": "Constructor."},
{ "name": "GridSelectionEvent",
  "type": "Class",
  "description": "The GridSelectionEvent class represents events that are dispatched when the selection changes in a Spark DataGrid control as the result of user interaction."},
{ "name": "GridSelectionEventKind",
  "type": "Class",
  "description": "The GridSelectionEventKind class defines constants for the valid values of the spark."},
{ "name": "GridSelectionMode",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelectionMode",
  "description": "Constructor."},
{ "name": "GridSelectionMode",
  "type": "Class",
  "description": "The GridSelectionMode class defines the valid constant values for the <code>selectionMode</code> property of the Spark DataGrid and Grid controls."},
{ "name": "GridSortEvent",
  "type": "Method",
  "class": "spark.events.GridSortEvent",
  "description": "Constructor."},
{ "name": "GridSortEvent",
  "type": "Class",
  "description": "The GridSortEvent class represents events that are dispatched when the data provider of a Spark DataGrid control is sorted as the result of the user clicking on the header of a column in the DataGrid."},
{ "name": "GridSortFieldComplex",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSortFieldComplex",
  "description": "Constructor."},
{ "name": "GridSortFieldComplex",
  "type": "Class",
  "description": "A subclass of SortField used by DataGrid and GridColumn to keep track of complex dataFields when trying to reverse the sort."},
{ "name": "GridSortFieldSimple",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSortFieldSimple",
  "description": ""},
{ "name": "GridSortFieldSimple",
  "type": "Class",
  "description": ""},
{ "name": "GridView",
  "type": "Method",
  "class": "spark.components.gridClasses.GridView",
  "description": "Creates a GridView group with its layout set to a private GridView specific value."},
{ "name": "GridView",
  "type": "Class",
  "description": "This class is internal to the DataGrid implementation."},
{ "name": "GridViewLayout",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "Constructor."},
{ "name": "GridViewLayout",
  "type": "Class",
  "description": "A virtual two dimensional layout for the Grid class."},
{ "name": "Group",
  "type": "Method",
  "class": "org.apache.royale.html.Group",
  "description": "Constructor."},
{ "name": "Group",
  "type": "Class",
  "description": "The Group class provides a light-weight container for visual elements."},
{ "name": "Group",
  "type": "Method",
  "class": "org.apache.royale.jewel.Group",
  "description": "Constructor."},
{ "name": "Group",
  "type": "Class",
  "description": "The Group class provides a light-weight container for visual elements."},
{ "name": "Group",
  "type": "Method",
  "class": "spark.components.Group",
  "description": "Constructor."},
{ "name": "Group",
  "type": "Class",
  "description": "The Group class is the base container class for visual elements."},
{ "name": "GroupBase",
  "type": "Method",
  "class": "org.apache.royale.core.GroupBase",
  "description": "Constructor."},
{ "name": "GroupBase",
  "type": "Class",
  "description": "The GroupBase class is the base class for most simple containers in Royale."},
{ "name": "GroupBase",
  "type": "Method",
  "class": "spark.components.supportClasses.GroupBase",
  "description": "Constructor."},
{ "name": "GroupBase",
  "type": "Class",
  "description": "The GroupBase class defines the base class for components that display visual elements."},
{ "name": "GroupElement",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "GroupElement",
  "type": "Class",
  "description": ""},
{ "name": "GroupView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "The GroupView class is the default view for the org."},
{ "name": "GroupView",
  "type": "Class",
  "description": "The GroupView is a bead that manages the layout bead (if any) attached to a Group."},
{ "name": "GroupView",
  "type": "Method",
  "class": "spark.components.beads.GroupView",
  "description": "Constructor."},
{ "name": "GroupView",
  "type": "Class",
  "description": "The PanelView for emulation."},
{ "name": "Grouping",
  "type": "Method",
  "class": "mx.collections.Grouping",
  "description": "Constructor."},
{ "name": "Grouping",
  "type": "Class",
  "description": "The Grouping class defines the fields in the data provider of the AdvancedDataGrid control used to group data."},
{ "name": "GroupingCollection",
  "type": "Method",
  "class": "mx.collections.GroupingCollection",
  "description": "Constructor."},
{ "name": "GroupingCollection",
  "type": "Class",
  "description": "The GroupingCollection class lets you create grouped data from flat data for display in the AdvancedDataGrid control."},
{ "name": "GroupingCollection2",
  "type": "Method",
  "class": "mx.collections.GroupingCollection2",
  "description": "Constructor."},
{ "name": "GroupingCollection2",
  "type": "Class",
  "description": "The GroupingCollection2 class lets you create grouped data from flat data for display in the AdvancedDataGrid control."},
{ "name": "GroupingField",
  "type": "Method",
  "class": "mx.collections.GroupingField",
  "description": "Constructor."},
{ "name": "GroupingField",
  "type": "Class",
  "description": "The GroupingField class represents individual data fields that you use to group flat data for display by the AdvancedDataGrid control."},
{ "name": "H",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the H key (72)."},
{ "name": "H1",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H1",
  "description": "constructor."},
{ "name": "H1",
  "type": "Class",
  "description": "The H1 class represents an HTML <h1> element"},
{ "name": "H2",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H2",
  "description": "constructor."},
{ "name": "H2",
  "type": "Class",
  "description": "The H2 class represents an HTML <h2> element"},
{ "name": "H3",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H3",
  "description": "constructor."},
{ "name": "H3",
  "type": "Class",
  "description": "The H3 class represents an HTML <h3> element"},
{ "name": "H4",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H4",
  "description": "constructor."},
{ "name": "H4",
  "type": "Class",
  "description": "The H4 class represents an HTML <h4> element"},
{ "name": "H5",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H5",
  "description": "constructor."},
{ "name": "H5",
  "type": "Class",
  "description": "The H5 class represents an HTML <h5> element"},
{ "name": "H6",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H6",
  "description": "constructor."},
{ "name": "H6",
  "type": "Class",
  "description": "The H6 class represents an HTML <h6> element"},
{ "name": "HALF_BANNER",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "HAND",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.MouseCursor",
  "description": ""},
{ "name": "HANGUL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering for Hangul."},
{ "name": "HANGUL_CONSTANT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering for Hangul."},
{ "name": "HAS_EXPORT_PUBLIC_SYMBOLS",
  "type": "Property",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "HAS_KEEP_AS3_METADATA",
  "type": "Property",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "HAS_KEEP_CODE_WITH_METADATA",
  "type": "Property",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "HBox",
  "type": "Method",
  "class": "mx.containers.HBox",
  "description": "Constructor."},
{ "name": "HBox",
  "type": "Class",
  "description": "The Halo HBox container lays out its children in a single horizontal row."},
{ "name": "HContainer",
  "type": "Method",
  "class": "org.apache.royale.html.HContainer",
  "description": "Constructor."},
{ "name": "HContainer",
  "type": "Class",
  "description": "A Container that has a HorizontalLayout."},
{ "name": "HContainer",
  "type": "Method",
  "class": "org.apache.royale.express.HContainer",
  "description": ""},
{ "name": "HContainer",
  "type": "Class",
  "description": "This class extends Container and adds the HorizontalLayout bead for convenience."},
{ "name": "HD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HDR_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HDR_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HDR_ON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HDR_ON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HDR_STRONG",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HDR_STRONG",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HDR_WEAK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HDR_WEAK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HDividedBox",
  "type": "Method",
  "class": "mx.containers.HDividedBox",
  "description": "Constructor."},
{ "name": "HDividedBox",
  "type": "Class",
  "description": "The HDividedBox container lays out its children horizontally in the same way as HBox container, but it inserts a draggable divider in the gap between each child."},
{ "name": "HDividedContainer",
  "type": "Method",
  "class": "org.apache.royale.html.HDividedContainer",
  "description": "Constructor"},
{ "name": "HDividedContainer",
  "type": "Class",
  "description": "This sub-class of DividedContainer organizes its children into columns separated by movable dividers."},
{ "name": "HDividedContainerDivider",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.HDividedContainerDivider",
  "description": "Constructor."},
{ "name": "HDividedContainerDivider",
  "type": "Class",
  "description": "This sub-class of DividerBoxDivider sets up a vertical divider between the columns of an HDividedContainer."},
{ "name": "HDividedContainerGripper",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.HDividedContainerGripper",
  "description": "Constructor."},
{ "name": "HDividedContainerGripper",
  "type": "Class",
  "description": "The HDividedContainerGripper is a bead added to the HDividedContainerDivider to provide a visual cue that the divider can be grabbed and moved."},
{ "name": "HDividedContainerLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HDividedContainerLayout",
  "description": "Constructor."},
{ "name": "HDividedContainerLayout",
  "type": "Class",
  "description": "This sub-class of DividedContainerLayout class is responsible for sizing and positioning the children of the DividedContainer into columns with separators between them."},
{ "name": "HDividedContainerMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.HDividedContainerMouseController",
  "description": "Constructor"},
{ "name": "HDividedContainerMouseController",
  "type": "Class",
  "description": "This is the mouse controller for the HDividedContainer."},
{ "name": "HEADER_RELEASE",
  "type": "Property",
  "class": "mx.events.AdvancedDataGridEvent",
  "description": "The AdvancedDataGridEvent."},
{ "name": "HEADER_SHIFT",
  "type": "Property",
  "class": "mx.events.IndexChangedEvent",
  "description": "The IndexChangedEvent."},
{ "name": "HEADSET",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HEADSET",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HEADSET_MIC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HEADSET_MIC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HEAD_METHOD",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the method used for this request should be \"head\"."},
{ "name": "HEALING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HEALING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HEARING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HEARING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HEARTBEAT_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Header that indicates the message is a heartbeat."},
{ "name": "HEARTBEAT_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Header that indicates the message is a heartbeat."},
{ "name": "HELP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging the help application or context-sensitive help."},
{ "name": "HELP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HELP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HELP",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Help key."},
{ "name": "HELP_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HELP_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HGroup",
  "type": "Method",
  "class": "org.apache.royale.html.HGroup",
  "description": "Constructor."},
{ "name": "HGroup",
  "type": "Class",
  "description": "This Group subclass uses HorizontalLayout as its default layout."},
{ "name": "HGroup",
  "type": "Method",
  "class": "spark.components.HGroup",
  "description": "Constructor."},
{ "name": "HGroup",
  "type": "Class",
  "description": "The HGroup container is an instance of the Group container that uses the HorizontalLayout class."},
{ "name": "HGroup",
  "type": "Method",
  "class": "org.apache.royale.jewel.HGroup",
  "description": "Constructor."},
{ "name": "HGroup",
  "type": "Class",
  "description": "This Group subclass uses HorizontalLayout as its default layout."},
{ "name": "HIDDEN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BorderStyle",
  "description": "hidden - border is hidden."},
{ "name": "HIDE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "HIDING_DATA",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartState",
  "description": "The chart is currently running transitions to hide the old chart data."},
{ "name": "HIGH",
  "type": "Property",
  "class": "mx.managers.CursorManagerPriority",
  "description": "Constant that specifies the highest cursor priority when passed as the <code>priority</code> argument to <code>setCursor()</code>."},
{ "name": "HIGHLIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HIGHLIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HIGHLIGHT_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HIGHLIGHT_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HIGH_QUALITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HIGH_QUALITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HIRAGANA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering for Hiragana."},
{ "name": "HIRAGANA_IROHA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering for Hiragana."},
{ "name": "HISTORY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HISTORY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HLOCChart",
  "type": "Method",
  "class": "mx.charts.HLOCChart",
  "description": "Constructor."},
{ "name": "HLOCChart",
  "type": "Class",
  "description": "The HLOCChart (High Low Open Close) control represents financial data as a series of elements representing the high, low, closing, and optionally opening values of a data series."},
{ "name": "HLOCItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.HLOCItemRenderer",
  "description": "Constructor."},
{ "name": "HLOCItemRenderer",
  "type": "Class",
  "description": "The default item renderer for an HLOCSeries object."},
{ "name": "HLOCSeries",
  "type": "Method",
  "class": "mx.charts.series.HLOCSeries",
  "description": "Constructor."},
{ "name": "HLOCSeries",
  "type": "Class",
  "description": "Represents financial data as a series of elements representing the high, low, closing, and, optionally, opening values of a data series."},
{ "name": "HLOCSeriesBase",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Constructor."},
{ "name": "HLOCSeriesBase",
  "type": "Class",
  "description": "HLOCSeriesBase is the base class for the two financial series types, HLOCSeries and CandlestickSeries."},
{ "name": "HLOCSeriesItem",
  "type": "Method",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "Constructor."},
{ "name": "HLOCSeriesItem",
  "type": "Class",
  "description": "Represents the information required to render an item as part of a HLOCSeries."},
{ "name": "HLOCSeriesRenderData",
  "type": "Method",
  "class": "mx.charts.series.renderData.HLOCSeriesRenderData",
  "description": "Constructor."},
{ "name": "HLOCSeriesRenderData",
  "type": "Class",
  "description": "Represents all the information needed by the HLOCSeries and CandlestickSeries objects to render."},
{ "name": "HOME",
  "type": "Property",
  "class": "org.apache.royale.events.utils.NavigationKeys",
  "description": "The Home key."},
{ "name": "HOME",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "HOME",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate to the origin of the document."},
{ "name": "HOME",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Home key (36)."},
{ "name": "HOME",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HOME",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HORIZONTAL",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "The value of this constant is passed to methods such as <code>getNextItem()</code> and <code>getPrevItem()</code>."},
{ "name": "HORIZONTAL",
  "type": "Property",
  "class": "mx.containers.BoxDirection",
  "description": "Specifies that children of the Box container are laid out horizontally."},
{ "name": "HORIZONTAL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ScrollEventDirection",
  "description": "The user scrolled horizontally."},
{ "name": "HORIZONTAL",
  "type": "Property",
  "class": "mx.core.ContainerLayout",
  "description": "Use horizontal layout for the contents of this container."},
{ "name": "HORIZONTAL",
  "type": "Property",
  "class": "mx.containers.FormItemDirection",
  "description": "Specifies that the children of the FormItem container are laid out horizontally."},
{ "name": "HORIZONTAL",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Specifies that the <code>majorAxis</code> is horizontal."},
{ "name": "HORIZONTAL",
  "type": "Property",
  "class": "mx.containers.TileDirection",
  "description": "Specifies that the children of the Tile container are laid out horizontally; that is, starting with the first row."},
{ "name": "HORIZONTAL_AXIS",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianTransform",
  "description": "A String representing the horizontal axis."},
{ "name": "HORIZONTAL_BAR",
  "type": "Property",
  "class": "google.maps.MapTypeControlStyle",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "HORIZONTAL_ELLIPSIS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TruncationOptions",
  "description": "Defines the <code>truncationIndicator</code> property value, <code>\u2026</code>, that represents a horizontal ellipsis."},
{ "name": "HORIZONTAL_GAP_STYLE",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": ""},
{ "name": "HORIZONTAL_STEM",
  "type": "Property",
  "class": "org.apache.royale.text.engine.CFFHinting",
  "description": ""},
{ "name": "HOTEL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HOTEL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HOT_TUB",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HOT_TUB",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HOURGLASS_EMPTY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HOURGLASS_EMPTY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HOURGLASS_FULL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HOURGLASS_FULL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HOVER",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkState",
  "description": "Value for the hover state, which occurs when you drag the mouse over a link."},
{ "name": "HRule",
  "type": "Method",
  "class": "org.apache.royale.html.HRule",
  "description": "Constructor."},
{ "name": "HRule",
  "type": "Class",
  "description": "The HRule class displays a horizontal line"},
{ "name": "HRule",
  "type": "Method",
  "class": "mx.controls.HRule",
  "description": "Constructor."},
{ "name": "HRule",
  "type": "Class",
  "description": "The HRule control creates a single horizontal line."},
{ "name": "HSIDES",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "The top and bottom sides only."},
{ "name": "HSV",
  "type": "Method",
  "class": "org.apache.royale.utils.HSV",
  "description": "Constructor."},
{ "name": "HSV",
  "type": "Class",
  "description": "The HSV class stores colors in HSV format"},
{ "name": "HScrollViewport",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.HScrollViewport",
  "description": "Constructor"},
{ "name": "HScrollViewport",
  "type": "Class",
  "description": "The HScrollViewport extends the ScrollingViewport class and limts scrolling to only vertical scroll bars."},
{ "name": "HSlider",
  "type": "Method",
  "class": "org.apache.royale.express.HSlider",
  "description": ""},
{ "name": "HSlider",
  "type": "Class",
  "description": ""},
{ "name": "HSliderMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.HSliderMouseController",
  "description": "constructor."},
{ "name": "HSliderMouseController",
  "type": "Class",
  "description": "The HSliderMouseController class bead handles mouse events on the org."},
{ "name": "HTMLElementWrapper",
  "type": "Class",
  "description": ""},
{ "name": "HTMLText",
  "type": "Method",
  "class": "org.apache.royale.html.HTMLText",
  "description": "Constructor."},
{ "name": "HTMLText",
  "type": "Class",
  "description": "The HTMLText class implements the basic control for adding HTML formatted text."},
{ "name": "HTMLTextFactory",
  "type": "Class",
  "description": ""},
{ "name": "HTTP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HTTP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HTTPConstants",
  "type": "Method",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": ""},
{ "name": "HTTPConstants",
  "type": "Class",
  "description": ""},
{ "name": "HTTPHeader",
  "type": "Method",
  "class": "org.apache.royale.net.HTTPHeader",
  "description": "Constructor."},
{ "name": "HTTPHeader",
  "type": "Class",
  "description": "The data class for HTTP headers in HTTP server communications."},
{ "name": "HTTPMultiService",
  "type": "Method",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "Creates a new HTTPService."},
{ "name": "HTTPMultiService",
  "type": "Class",
  "description": "You use the <code>&lt;mx:HTTPMultiService&gt;</code> tag to represent a collection of http operations."},
{ "name": "HTTPRequestMessage",
  "type": "Method",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Constructs an uninitialized HTTP request."},
{ "name": "HTTPRequestMessage",
  "type": "Class",
  "description": "HTTP requests are sent to the HTTP endpoint using this message type."},
{ "name": "HTTPS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "HTTPS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "HTTPService",
  "type": "Method",
  "class": "mx.rpc.http.HTTPService",
  "description": "Creates a new HTTPService."},
{ "name": "HTTPService",
  "type": "Class",
  "description": "You use the HTTPService class to represent an HTTPService object in ActionScript."},
{ "name": "HTTPService",
  "type": "Method",
  "class": "mx.rpc.http.mxml.HTTPService",
  "description": "Creates a new HTTPService."},
{ "name": "HTTPService",
  "type": "Class",
  "description": "You use the <code>&lt;mx:HTTPService&gt;</code> tag to represent an HTTPService object in an MXML file."},
{ "name": "HTTPService",
  "type": "Method",
  "class": "org.apache.royale.net.HTTPService",
  "description": "Constructor."},
{ "name": "HTTPService",
  "type": "Class",
  "description": "The HTTPService class is a class designed to transfer text over HTTP."},
{ "name": "HTTPServiceBase",
  "type": "Class",
  "description": ""},
{ "name": "HTTPStatusEvent",
  "type": "Method",
  "class": "mx.events.HTTPStatusEvent",
  "description": "Constructor."},
{ "name": "HTTPStatusEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when focus changes."},
{ "name": "HTTPUtils",
  "type": "Method",
  "class": "org.apache.royale.net.HTTPUtils",
  "description": "HTTP utility methods."},
{ "name": "HTTPUtils",
  "type": "Class",
  "description": ""},
{ "name": "HTTP_STATUS",
  "type": "Property",
  "class": "mx.events.HTTPStatusEvent",
  "description": ""},
{ "name": "HView",
  "type": "Method",
  "class": "org.apache.royale.express.HView",
  "description": ""},
{ "name": "HView",
  "type": "Class",
  "description": "This class extends View and adds the HorizontalLayout bead for convenience."},
{ "name": "HYBRID",
  "type": "Property",
  "class": "google.maps.MapTypeId",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "HYPHEN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "A dash mark."},
{ "name": "HaloDefaults",
  "type": "Class",
  "description": "Initializes the core default styles for the charts classes."},
{ "name": "Handler",
  "type": "Method",
  "class": "org.apache.royale.promises.vo.Handler",
  "description": ""},
{ "name": "Handler",
  "type": "Class",
  "description": "The Handler class used with Promises."},
{ "name": "HashChangeNotifierBead",
  "type": "Method",
  "class": "org.apache.royale.routing.HashChangeNotifierBead",
  "description": "constructor."},
{ "name": "HashChangeNotifierBead",
  "type": "Class",
  "description": "The HashChangeNotifierBead class allows you to respond to the hash changing on the url."},
{ "name": "HashChangeNotifierBeadWithTitle",
  "type": "Method",
  "class": "org.apache.royale.routing.HashChangeNotifierBeadWithTitle",
  "description": "constructor."},
{ "name": "HashChangeNotifierBeadWithTitle",
  "type": "Class",
  "description": "The HashChangeNotifierBead class allows you to respond to the hash changing on the url."},
{ "name": "Header",
  "type": "Method",
  "class": "org.apache.royale.mdl.Header",
  "description": "constructor."},
{ "name": "Header",
  "type": "Class",
  "description": "The Header class is a Container component mainly used in NavigationLayout and Tabs components."},
{ "name": "HeaderRow",
  "type": "Method",
  "class": "org.apache.royale.mdl.HeaderRow",
  "description": "constructor."},
{ "name": "HeaderRow",
  "type": "Class",
  "description": "The HeaderRow class is a Container component used normaly inside a Header to layout things like a title, a navigation component,."},
{ "name": "HeaderStyleName",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": ""},
{ "name": "HeatmapLayerOptions",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "HideColorSpectrumThumbWhenEmpty",
  "type": "Method",
  "class": "org.apache.royale.html.beads.HideColorSpectrumThumbWhenEmpty",
  "description": "Constructor."},
{ "name": "HideColorSpectrumThumbWhenEmpty",
  "type": "Class",
  "description": "The HideColorSpectrumThumbWhenEmpty bead can modifiy a color spectrum view to hide the thumb when it's empty"},
{ "name": "HideComboPopupOnMouseDownBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": ""},
{ "name": "HideComboPopupOnMouseDownBead",
  "type": "Class",
  "description": "The HideComboPopupOnMouseDownBead can be used with ComboBox to make sure mouse down events close an open popup."},
{ "name": "HierarchicalCollectionView",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": "Constructor."},
{ "name": "HierarchicalCollectionView",
  "type": "Class",
  "description": "This class provides a hierarchical view of a standard collection."},
{ "name": "HierarchicalCollectionView",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": "Constructor."},
{ "name": "HierarchicalCollectionView",
  "type": "Class",
  "description": "The HierarchicalCollectionView class provides a hierarchical view of a standard collection."},
{ "name": "HierarchicalCollectionViewCursor",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": "Constructor."},
{ "name": "HierarchicalCollectionViewCursor",
  "type": "Class",
  "description": "The HierarchicalCollectionViewCursor class defines a cursor for a hierarchical view of a standard collection."},
{ "name": "HierarchicalData",
  "type": "Method",
  "class": "mx.collections.HierarchicalData",
  "description": "Constructor."},
{ "name": "HierarchicalData",
  "type": "Class",
  "description": "Hierarchical data is data already in a structure of parent and child data items."},
{ "name": "HierarchicalData",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": "Constructor."},
{ "name": "HierarchicalData",
  "type": "Class",
  "description": "Hierarchical data is data already in a structure of parent and child data items."},
{ "name": "HierarchicalViewCursor",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalViewCursor",
  "description": "Constructor."},
{ "name": "HierarchicalViewCursor",
  "type": "Class",
  "description": "This class provides a heirarchical view (a tree-like) view of a standard collection."},
{ "name": "HitData",
  "type": "Method",
  "class": "mx.charts.HitData",
  "description": "Constructor."},
{ "name": "HitData",
  "type": "Class",
  "description": "The HitData class represents information about the data item at a specific location on the screen."},
{ "name": "HitTestArea",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.HitTestArea",
  "description": "Create a HitTestArea with an object containing enumerable property objects as a rectangle in a \"rect\" property, and a a FlowElement in its \"owner\" property."},
{ "name": "HitTestArea",
  "type": "Class",
  "description": "The HitTestArea class is a lightweight implementation of the Warnock algorithm for rectangles."},
{ "name": "HorizontalAlign",
  "type": "Class",
  "description": "The HorizontalAlign class defines the possible values for the <code>horizontalAlign</code> property of the VerticalLayout class."},
{ "name": "HorizontalCategoryAxisBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.HorizontalCategoryAxisBead",
  "description": "constructor."},
{ "name": "HorizontalCategoryAxisBead",
  "type": "Class",
  "description": "The HorizontalCategoryAxisBead displays a horizontal axis with tick marks corresponding to data points identified by the categoryField property."},
{ "name": "HorizontalCategoryAxisForArrayListBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.HorizontalCategoryAxisForArrayListBead",
  "description": ""},
{ "name": "HorizontalCategoryAxisForArrayListBead",
  "type": "Class",
  "description": "The HorizontalCategoryAxisForArrayListBead displays a horizontal axis with tick marks corresponding to data points identified by the categoryField property."},
{ "name": "HorizontalCenteredLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "Constructor."},
{ "name": "HorizontalCenteredLayout",
  "type": "Class",
  "description": "The HorizontalCenteredLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values."},
{ "name": "HorizontalFlexLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlexLayout",
  "description": "Constructor."},
{ "name": "HorizontalFlexLayout",
  "type": "Class",
  "description": ""},
{ "name": "HorizontalFlowLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "Constructor."},
{ "name": "HorizontalFlowLayout",
  "type": "Class",
  "description": "The HorizontalFlowLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values."},
{ "name": "HorizontalFlowLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "description": "constructor."},
{ "name": "HorizontalFlowLayout",
  "type": "Class",
  "description": "The HorizontalFlowLayout class bead sizes and positions the elements it manages into rows and columns."},
{ "name": "HorizontalLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayout",
  "description": "Constructor."},
{ "name": "HorizontalLayout",
  "type": "Class",
  "description": "The HorizontalLayout class is a simple layout bead."},
{ "name": "HorizontalLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "Constructor."},
{ "name": "HorizontalLayout",
  "type": "Class",
  "description": "The HorizontalLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values."},
{ "name": "HorizontalLayout",
  "type": "Method",
  "class": "spark.layouts.HorizontalLayout",
  "description": "Constructor."},
{ "name": "HorizontalLayout",
  "type": "Class",
  "description": "The HorizontalLayout class arranges the layout elements in a horizontal sequence, left to right, with optional gaps between the elements and optional padding around the elements."},
{ "name": "HorizontalLayoutWithPaddingAndGap",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": "Constructor."},
{ "name": "HorizontalLayoutWithPaddingAndGap",
  "type": "Class",
  "description": "The HorizontalLayoutWithPaddingAndGap class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values."},
{ "name": "HorizontalLinearAxisBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.HorizontalLinearAxisBead",
  "description": "constructor."},
{ "name": "HorizontalLinearAxisBead",
  "type": "Class",
  "description": "The HorizontalLinearAxisBead class provides a horizontal axis that uses a numeric range."},
{ "name": "HorizontalLinearAxisForArrayListBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.HorizontalLinearAxisForArrayListBead",
  "description": "constructor."},
{ "name": "HorizontalLinearAxisForArrayListBead",
  "type": "Class",
  "description": "The HorizontalLinearAxisForArrayListBead class provides a horizontal axis that uses a numeric range."},
{ "name": "HorizontalListScroll",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.list.HorizontalListScroll",
  "description": "constructor."},
{ "name": "HorizontalListScroll",
  "type": "Class",
  "description": "The HorizontalListScroll bead is a specialty bead that can be used with Jewel List control and gives horizontal scroll to the list"},
{ "name": "HorizontalSliderLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalSliderLayout",
  "description": "Constructor"},
{ "name": "HorizontalSliderLayout",
  "type": "Class",
  "description": "Use the HorizontalSliderLayout with a Slider to orient the Slider horizontally."},
{ "name": "Hr",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Hr",
  "description": "constructor."},
{ "name": "Hr",
  "type": "Class",
  "description": "The Hr class represents an HTML <hr> element"},
{ "name": "HtmlCustomParaFormatImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.HtmlCustomParaFormatImporter",
  "description": ""},
{ "name": "HtmlCustomParaFormatImporter",
  "type": "Class",
  "description": ""},
{ "name": "HueSelector",
  "type": "Method",
  "class": "org.apache.royale.html.HueSelector",
  "description": ""},
{ "name": "HueSelector",
  "type": "Class",
  "description": "The HueSelector is a slider that lets you select a hue for a color picker."},
{ "name": "HueShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.HueShader",
  "description": "Constructor."},
{ "name": "HueShader",
  "type": "Class",
  "description": "Creates a blend shader that is equivalent to the 'Hue' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools."},
{ "name": "I",
  "type": "Method",
  "class": "org.apache.royale.html.elements.I",
  "description": "constructor."},
{ "name": "I",
  "type": "Class",
  "description": "The I(Italic) class represents an HTML <i> anchor element"},
{ "name": "I",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the I key (73)."},
{ "name": "IAbstractEffect",
  "type": "Interface",
  "description": "The IAbstractEffect interface is used to denote that a property or parameter must be of type Effect, but does not actually implement any of the APIs of the IEffect interface."},
{ "name": "IAccordionCollapseBead",
  "type": "Interface",
  "description": ""},
{ "name": "IActiveWindowManager",
  "type": "Interface",
  "description": "Interface for subsystem that manages which focus manager is active when there is more than one IFocusManagerContainer on screen."},
{ "name": "IAdvancedStyleClient",
  "type": "Interface",
  "description": "This interface describes the advanced properties that a component must implement to fully participate in the advanced style subsystem."},
{ "name": "IAlertModel",
  "type": "Interface",
  "description": "The IAlertModel interface describes the minimum set of properties available to an Alert control."},
{ "name": "IAlignItemRenderer",
  "type": "Interface",
  "description": "The IAlignItemRenderer interface is the interface for for org."},
{ "name": "IApplicationView",
  "type": "Interface",
  "description": "The IApplicationView interface is the  interface for main view of the application."},
{ "name": "IArrayList",
  "type": "Interface",
  "description": "The ArrayList class provides an event-driven wrapper for the standard Array."},
{ "name": "IArrayListView",
  "type": "Interface",
  "description": ""},
{ "name": "IAssetLayoutFeatures",
  "type": "Interface",
  "description": "The IAssetLayoutFeatures interface defines the minimum properties and methods required for an Object to support advanced transforms in embedded assets."},
{ "name": "IAsyncStartupRunListener",
  "type": "Interface",
  "description": "A listener that requires extra time to startup."},
{ "name": "IAxis",
  "type": "Interface",
  "description": "The IAxis class is an abstract interface for defining label, tick mark, and data positioning properties for a chart axis."},
{ "name": "IAxisBead",
  "type": "Interface",
  "description": ""},
{ "name": "IAxisGroup",
  "type": "Interface",
  "description": "The IAxisGroup defines the interface for classes that provide drawing space for chart axis objects, such as tick marks and lines."},
{ "name": "IAxisRenderer",
  "type": "Interface",
  "description": "The IAxis class is an abstract interface for defining label, tick mark, and data positioning properties for a chart axis."},
{ "name": "IBEAM",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.MouseCursor",
  "description": ""},
{ "name": "IBackgroundBead",
  "type": "Interface",
  "description": "The IBackgroundBead interface is a marker interface for beads that draw backgrounds."},
{ "name": "IBackgroundManager",
  "type": "Interface",
  "description": ""},
{ "name": "IBar",
  "type": "Interface",
  "description": "The IBar interface is implemented by any any series that can be clustered vertically, such as a BarSeries."},
{ "name": "IBead",
  "type": "Interface",
  "description": "The IBead interface is the basic interface for plug-ins known as Beads."},
{ "name": "IBeadController",
  "type": "Interface",
  "description": "The IBeadController interface is a \"marker\" interface for beads that are controllers."},
{ "name": "IBeadLayout",
  "type": "Interface",
  "description": "The IBeadLayout interface is a \"marker\" interface for beads that manage the layout for a control."},
{ "name": "IBeadModel",
  "type": "Interface",
  "description": "The IBeadModel interface is a \"marker\" interface for beads that represent the data model for a control."},
{ "name": "IBeadTransform",
  "type": "Interface",
  "description": "The IBeadTransform interface is the basic interface for the container views that transform drawable objects that implement ITransformHost"},
{ "name": "IBeadView",
  "type": "Interface",
  "description": "The IBeadView interface is the interface for beads that represent the view for a control."},
{ "name": "IBinaryDataInput",
  "type": "Interface",
  "description": ""},
{ "name": "IBinaryDataOutput",
  "type": "Interface",
  "description": ""},
{ "name": "IBinaryImage",
  "type": "Interface",
  "description": "The IBinaryImage interface describes the minimum set of properties available to an Image control."},
{ "name": "IBinaryImageLoader",
  "type": "Interface",
  "description": "The IBinaryImageLoader interface marks classes that are used for loading binary data to image views"},
{ "name": "IBinaryImageModel",
  "type": "Interface",
  "description": "The IImageModel interface describes the minimum set of properties available to an Image control."},
{ "name": "IBinding",
  "type": "Interface",
  "description": "IBinding interface is a \"marker\" for data-binding class that is optimized for simple assignments of one object's property to another object's property."},
{ "name": "IBitmapDrawable",
  "type": "Class",
  "description": ""},
{ "name": "IBorderBead",
  "type": "Interface",
  "description": "The IBorderBead interface is a marker interface for beads that draw borders."},
{ "name": "IBorderPaddingMarginValuesImpl",
  "type": "Interface",
  "description": "The IBorderPaddingMarginValuesImpl abstracts how to get data on the border, padding and margin of a component."},
{ "name": "IBreakElement",
  "type": "Interface",
  "description": ""},
{ "name": "IBrowserEvent",
  "type": "Interface",
  "description": ""},
{ "name": "IBrowserManager",
  "type": "Interface",
  "description": "The interface that the shared instance of the BrowserManager implements."},
{ "name": "ICSSImpl",
  "type": "Interface",
  "description": "A marker interface so the compiler knows whether to emit CSS"},
{ "name": "ICartesianChartLayout",
  "type": "Interface",
  "description": "This interface is implemented by any Cartesian-style chart layout bead."},
{ "name": "IChainableFilter",
  "type": "Interface",
  "description": "The IChainableFilter interface describes a filter that can be a part of a chain of filters"},
{ "name": "IChangePropagator",
  "type": "Interface",
  "description": "The IChangePropagator is a marker interface"},
{ "name": "IChart",
  "type": "Interface",
  "description": "The IChart interface is the basic interface for every chart component."},
{ "name": "IChartDataGroup",
  "type": "Interface",
  "description": "The IChartDataGroup is the interface for the parent element of chart itemRenderers."},
{ "name": "IChartDataModel",
  "type": "Interface",
  "description": "The IChartDataModel provides extensions to the standard ISelectionModel to include the series selected (or rolled over)."},
{ "name": "IChartElement",
  "type": "Interface",
  "description": "IChartElement defines the base set of properties and methods required by a UIComponent to be representable in the data space of a chart."},
{ "name": "IChartElement2",
  "type": "Interface",
  "description": "IChartElement2 defines the base set of properties and methods required by a UIComponent to be representable in the data space of a chart."},
{ "name": "IChartItemRenderer",
  "type": "Interface",
  "description": "The IChartItemRenderer interface is the interface implemented by any class that draws chart graphics."},
{ "name": "IChartSeries",
  "type": "Interface",
  "description": "The IChartSeries interface is the basic interface for any type of chart data series."},
{ "name": "IChild",
  "type": "Interface",
  "description": "The IChild interface is the basic interface for a component that is parented by another component."},
{ "name": "IChildList",
  "type": "Interface",
  "description": "The IChildList interface defines the properties and methods for accessing and manipulating child lists, which are subsets of a DisplayObjectContainer's children."},
{ "name": "IChrome",
  "type": "Interface",
  "description": "The IChrome interface is a \"marker\" interface."},
{ "name": "ICircle",
  "type": "Interface",
  "description": ""},
{ "name": "IClassSelectorListSupport",
  "type": "Interface",
  "description": "The IClassSelectorList interface stablish the contract methods for componnets that use ClassSelectorList to deal with class selector names"},
{ "name": "ICollapsible",
  "type": "Interface",
  "description": ""},
{ "name": "ICollection",
  "type": "Interface",
  "description": "The ICollection interface is the basic interface for an iterable collection of data items."},
{ "name": "ICollectionView",
  "type": "Interface",
  "description": "An <code>ICollectionView</code> is a view onto a collection of data."},
{ "name": "ICollectionView",
  "type": "Interface",
  "description": "The ICollectionView interface is implemented by classes that provide collection data."},
{ "name": "IColorModel",
  "type": "Interface",
  "description": "The IColorModel interface describes the minimum set of properties available to a control that displays or edits color."},
{ "name": "IColorPickerPopUp",
  "type": "Interface",
  "description": "All color picker pop-ups must implement this interface."},
{ "name": "IColorSpectrumModel",
  "type": "Interface",
  "description": "The IColorSpectrumModel interface describes the minimum set of properties available to a control that displays a color spectrum"},
{ "name": "IColumn",
  "type": "Interface",
  "description": "ChartElements that can be clustered along the vertical axis should implement this interface."},
{ "name": "IComboBoxModel",
  "type": "Interface",
  "description": "The IComboBoxModel interface describes the minimum set of properties available to a ComboBox control."},
{ "name": "IComboBoxView",
  "type": "Interface",
  "description": "The IComboBoxView interface provides the protocol for any bead that creates the visual parts for a org."},
{ "name": "IComboBoxView",
  "type": "Interface",
  "description": "The IComboBoxView interface provides the protocol for any bead that creates the visual parts for a org."},
{ "name": "IComplexSortField",
  "type": "Interface",
  "description": ""},
{ "name": "IComposeState",
  "type": "Interface",
  "description": ""},
{ "name": "IComposer",
  "type": "Interface",
  "description": ""},
{ "name": "ICompoundEffect",
  "type": "Interface",
  "description": "ICompoundEffect aggregates several related effects."},
{ "name": "ICompoundGraphic",
  "type": "Interface",
  "description": ""},
{ "name": "IConfiguration",
  "type": "Interface",
  "description": "Read-only interface to a configuration object."},
{ "name": "IConnectedItemRenderer",
  "type": "Interface",
  "description": "The IConnectedItemRenderer interface is the interface used to connect data points on a chart."},
{ "name": "IConstraintLayout",
  "type": "Interface",
  "description": "IConstraintLayout is a marker interface that indicates that a container supports ConstraintColumn class and ConstraintRow class within its layout."},
{ "name": "IContainer",
  "type": "Interface",
  "description": "The IContainer interface is used to mark certain components as Containers."},
{ "name": "IContainerBaseStrandChildrenHost",
  "type": "Interface",
  "description": "The IContainerBaseStrandChildrenHost interface is implemented by components that use a ContainerBaseStrandChildren to proxy addElement/removeElement calls to an internal child and has the following APIs so the View can set up the \"chrome\" around the internal child."},
{ "name": "IContainerController",
  "type": "Interface",
  "description": ""},
{ "name": "IContainerFormattedElement",
  "type": "Interface",
  "description": ""},
{ "name": "IContainerView",
  "type": "Interface",
  "description": "The IContainerView interface should be implemented by any view bead that acts as the primary view for a ContainerBase-derived class."},
{ "name": "IContentView",
  "type": "Interface",
  "description": ""},
{ "name": "IContentViewHost",
  "type": "Interface",
  "description": "This interface is implemented by components that provide access to \"behind the scenes\" children that are not accessible through the addElement()/removeElement() APIs."},
{ "name": "ICursorManager",
  "type": "Interface",
  "description": ""},
{ "name": "IDEOGRAPHIC_BOTTOM",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextBaseline",
  "description": ""},
{ "name": "IDEOGRAPHIC_CENTER",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextBaseline",
  "description": ""},
{ "name": "IDEOGRAPHIC_CENTER_DOWN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies that leading basis is IDEOGRAPHIC_CENTER and leading direction is down."},
{ "name": "IDEOGRAPHIC_CENTER_UP",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies that leading basis is IDEOGRAPHIC_CENTER and leading direction is UP."},
{ "name": "IDEOGRAPHIC_TOP",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextBaseline",
  "description": ""},
{ "name": "IDEOGRAPHIC_TOP_DOWN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies that leading basis is IDEOGRAPHIC_TOP and leading direction is DOWN."},
{ "name": "IDEOGRAPHIC_TOP_UP",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies that leading basis is IDEOGRAPHIC_TOP and leading direction is UP."},
{ "name": "IDataCanvas",
  "type": "Interface",
  "description": "This interface is for internal use only."},
{ "name": "IDataGrid",
  "type": "Interface",
  "description": "The IDataGrid interface is implemented by any component that supports being a \"DataGrid\" which means its content is generated by a factory and whose children are item renderers (IItemRenderer)."},
{ "name": "IDataGridColumn",
  "type": "Interface",
  "description": ""},
{ "name": "IDataGridColumn",
  "type": "Interface",
  "description": ""},
{ "name": "IDataGridColumnList",
  "type": "Interface",
  "description": "The IDataGridColumnList interface is a marker interface for DataGrid Column Lists"},
{ "name": "IDataGridElement",
  "type": "Interface",
  "description": "Visual elements of the Spark DataGrid control that must remain in sync with the grid's layout and scroll position must implement this interface."},
{ "name": "IDataGridLayout",
  "type": "Interface",
  "description": "DataGridLayout is a class that handles the size and positioning of the elements of a DataGrid."},
{ "name": "IDataGridModel",
  "type": "Interface",
  "description": "The IDataGridModel interface describes the minimum set of properties available to an DataGrid control."},
{ "name": "IDataGridPresentationModel",
  "type": "Interface",
  "description": "The IDataGridPresentationModel interfaces defines the data needed to present a DataGrid."},
{ "name": "IDataGridView",
  "type": "Interface",
  "description": "The IDataGridView interface marks as a component as being the bead that can create the visual pieces for a org."},
{ "name": "IDataInput",
  "type": "Interface",
  "description": "The File class provides access to a specific file on the device."},
{ "name": "IDataInput",
  "type": "Interface",
  "description": "initial work on replacement for flash."},
{ "name": "IDataOutput",
  "type": "Interface",
  "description": "The File class provides access to a specific file on the device."},
{ "name": "IDataOutput",
  "type": "Interface",
  "description": "initial work on replacement for flash."},
{ "name": "IDataProviderEnhance",
  "type": "Interface",
  "description": "Adds functionality to list driven components."},
{ "name": "IDataProviderItemRendererMapper",
  "type": "Interface",
  "description": "The IDataProviderItemRendererMapper interface is the interface for beads that know how to iterate through a dataProvider, generate item renderers, and assign items from the dataProvider to those item renderers."},
{ "name": "IDataProviderModel",
  "type": "Interface",
  "description": "The IDataProviderModel interface describes the minimum set of properties available to control that let the user choose within a set of items in a dataProvider."},
{ "name": "IDataProviderNotifier",
  "type": "Interface",
  "description": "The IDataProviderNotifier interface is a \"marker\" interface for beads that manage that dispatch events when data providers change."},
{ "name": "IDataProviderVirtualItemRendererMapper",
  "type": "Interface",
  "description": "The IDataProviderItemRendererMapper interface is the interface for beads that know how to iterate through a dataProvider, generate item renderers, and assign items from the dataProvider to those item renderers."},
{ "name": "IDataRenderer",
  "type": "Interface",
  "description": "The IDataRenderer interface defines the interface for components that have a <code>data</code> property."},
{ "name": "IDataStream",
  "type": "Interface",
  "description": "The File class provides access to a specific file on the device."},
{ "name": "IDateChooser",
  "type": "Interface",
  "description": ""},
{ "name": "IDateChooserModel",
  "type": "Interface",
  "description": "The IDateChooserModel interface."},
{ "name": "IDateControlConfigBead",
  "type": "Interface",
  "description": "The IDateControlConfigBead interface should be implemented by any bead that provides a locale configuration for date controls like DateField and DateChooser"},
{ "name": "IDateFormatter",
  "type": "Interface",
  "description": "The IDateFormatter interface should be implemented by any bead that provides formatting of a date."},
{ "name": "IDisplayText",
  "type": "Interface",
  "description": "The IDisplayText interface defines the properties and methods for simple text display."},
{ "name": "IDivElement",
  "type": "Interface",
  "description": ""},
{ "name": "IDividedContainerDivider",
  "type": "Interface",
  "description": "All DividerBoxDividers must implement this interface."},
{ "name": "IDividedContainerGripper",
  "type": "Interface",
  "description": "This interface defines a gripper bead control for a DividedContainer."},
{ "name": "IDocument",
  "type": "Interface",
  "description": "The IDocument interface is the basic interface for objects that can be tags in an MXML document and need to know about the host document."},
{ "name": "IDragInitiator",
  "type": "Interface",
  "description": "The IDragInitiator interface is the basic interface for the object that wants to know if a drop was accepted in a drag/drop operation."},
{ "name": "IDrawable",
  "type": "Interface",
  "description": ""},
{ "name": "IDrawingLayerBead",
  "type": "Interface",
  "description": "The IDrawingLayerBead interface is implemented by beads that providing a a drawing surface within a component."},
{ "name": "IDropDownListModel",
  "type": "Interface",
  "description": "The IDropDownListModel interface is a marker interface"},
{ "name": "IDropDownListModel",
  "type": "Interface",
  "description": "The IDropDownListModel interface describes the minimum set of properties available to DropDownList control"},
{ "name": "IDropDownListView",
  "type": "Interface",
  "description": "The IDropDownListView interface is the interface for views for the org."},
{ "name": "IDropInListItemRenderer",
  "type": "Interface",
  "description": "The interface for \"drop-in\" item renderers."},
{ "name": "IDynamicPropertyOutput",
  "type": "Interface",
  "description": "This interface controls the serialization of dynamic properties of dynamic objects."},
{ "name": "IDynamicPropertyWriter",
  "type": "Interface",
  "description": "This interface controls the serialization of dynamic properties of dynamic objects."},
{ "name": "IEEventAdapterBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.IEEventAdapterBead",
  "description": ""},
{ "name": "IEEventAdapterBead",
  "type": "Class",
  "description": "The IEEventAdapterBead is used to enable correct handling of MouseEvents and KeyboardEvents in IE."},
{ "name": "IEditManager",
  "type": "Interface",
  "description": "IEditManager defines the interface for handling edit operations of a text flow."},
{ "name": "IEffect",
  "type": "Interface",
  "description": "IEffect is the lowest-level interface for effects in Royale."},
{ "name": "IEffectInstance",
  "type": "Interface",
  "description": "The IEffectInstance interface represents an instance of an effect playing on a target."},
{ "name": "IEffectTimer",
  "type": "Interface",
  "description": "The IEffectTimer interface is the basic interface for the class that updates effects like tweens."},
{ "name": "IEffectsGenerator",
  "type": "Interface",
  "description": "The IEffectsGenerator interface is the basic interface for classes generating tweener effects."},
{ "name": "IEllipse",
  "type": "Interface",
  "description": ""},
{ "name": "IEventDispatcher",
  "type": "Interface",
  "description": ""},
{ "name": "IExplicitFormatResolver",
  "type": "Interface",
  "description": "Interface to a format resolver."},
{ "name": "IExternalizable",
  "type": "Interface",
  "description": "replacement for flash."},
{ "name": "IFactory",
  "type": "Interface",
  "description": "The IFactory interface is the basic interface used as the type for properties that specify a factory for item renderers and other scenarios where multiple copies of a custom class are generated."},
{ "name": "IFactory",
  "type": "Interface",
  "description": "The IFactory interface defines the interface that factory classes such as ClassFactory must implement."},
{ "name": "IFactoryComposer",
  "type": "Interface",
  "description": ""},
{ "name": "IFileModel",
  "type": "Interface",
  "description": ""},
{ "name": "IFill",
  "type": "Interface",
  "description": ""},
{ "name": "IFill",
  "type": "Interface",
  "description": ""},
{ "name": "IFlexDisplayObject",
  "type": "Interface",
  "description": "The IFlexDisplayObject interface defines the interface for skin elements."},
{ "name": "IFlexInfo",
  "type": "Interface",
  "description": "The IFlexInfo interface is an interface used to signal to the compiler that it should generate a data structure that contains information about the application such as its size, mixins, locale, etc."},
{ "name": "IFlexModule",
  "type": "Interface",
  "description": "The IFlexModule interface is used as an optional contract with IFlexModuleFactory."},
{ "name": "IFlexModuleFactory",
  "type": "Interface",
  "description": "The IFlexModuleFactory interface represents the contract expected for bootstrapping Flex applications and dynamically loaded modules."},
{ "name": "IFlowComposer",
  "type": "Interface",
  "description": "IFlowComposer defines the interface for managing the layout and display of a text flow."},
{ "name": "IFlowElement",
  "type": "Interface",
  "description": ""},
{ "name": "IFlowGroupElement",
  "type": "Interface",
  "description": ""},
{ "name": "IFlowLeafElement",
  "type": "Interface",
  "description": ""},
{ "name": "IFocusManager",
  "type": "Interface",
  "description": "The IFocusManager interface defines the interface that components must implement to manage the focus on components in response to mouse activity or keyboard activity (Tab key), and to support a default button."},
{ "name": "IFocusManagerComplexComponent",
  "type": "Interface",
  "description": "The IFocusManagerComplexComponent interface defines the interface that components that can have more than one internal focus target should implement in order to receive focus from the FocusManager."},
{ "name": "IFocusManagerComponent",
  "type": "Interface",
  "description": "The IFocusManagerComponent interface defines the interface that focusable components must implement in order to receive focus from the FocusManager."},
{ "name": "IFocusManagerContainer",
  "type": "Interface",
  "description": "The IFocusManagerContainer interface defines the interface that containers implement to host a FocusManager."},
{ "name": "IFocusManagerGroup",
  "type": "Interface",
  "description": "The IFocusManagerGroup interface defines the interface that any component must implement if it is grouped in sets, where only one member of the set can be selected at any given time."},
{ "name": "IFont",
  "type": "Interface",
  "description": ""},
{ "name": "IFontLoader",
  "type": "Interface",
  "description": ""},
{ "name": "IFooterSection",
  "type": "Interface",
  "description": "Marker interface for all footer sections"},
{ "name": "IFormatImporter",
  "type": "Interface",
  "description": "Interface for exporting text content from a TextFlow to either a String or XML."},
{ "name": "IFormatResolver",
  "type": "Interface",
  "description": "Interface to a format resolver."},
{ "name": "IFormatter",
  "type": "Interface",
  "description": "The IFormatter interface should be implemented by any bead that provides a formatting service."},
{ "name": "IFormatter",
  "type": "Interface",
  "description": "This interface specifies the method that a formatter object must implement to allow it to be used as the formatter property for UI controls such as the <code>AdvancedDataGridColumn</code>."},
{ "name": "IGraphicElement",
  "type": "Interface",
  "description": "The IGraphicElement is implemented by IVisualElements that take advantage of the parent <code>IGraphicElementContainer</code> DisplayObject management."},
{ "name": "IGraphicElementContainer",
  "type": "Interface",
  "description": "The IGraphicElementContainer is the minimal contract for a container class to support <code>IGraphicElement</code> children."},
{ "name": "IGraphicShape",
  "type": "Interface",
  "description": ""},
{ "name": "IGraphicsDrawing",
  "type": "Interface",
  "description": "The IGraphicsDrawing interface is a marker interface for beads that draw into the graphics layer."},
{ "name": "IGridItemEditor",
  "type": "Interface",
  "description": "The IGridItemEditor interface defines the interface that item editors for the Spark DataGrid and Spark Grid controls must implement."},
{ "name": "IGridItemRenderer",
  "type": "Interface",
  "description": "The IGridItemRenderer interface must be implemented by DataGrid item renderers."},
{ "name": "IGridVisualElement",
  "type": "Interface",
  "description": "This interface provides a method that dynamically created visual elements can use to configure themselves before they're displayed."},
{ "name": "IGroupingCollection",
  "type": "Interface",
  "description": "The IGroupingCollection interface defines the interface required to create grouped data from flat data."},
{ "name": "IGroupingCollection2",
  "type": "Interface",
  "description": "The IGroupingCollection2 interface defines the interface required to create grouped data from flat data."},
{ "name": "IHTMLImporter",
  "type": "Interface",
  "description": "This interface should be implemented by converters that import HTML or HTML-structured data."},
{ "name": "IHierarchicalCollectionView",
  "type": "Interface",
  "description": "The IHierarchicalCollectionView interface defines an interface for hierarchical or grouped data."},
{ "name": "IHierarchicalCollectionViewCursor",
  "type": "Interface",
  "description": "The IHierarchicalCollectionViewCursor interface defines the interface for enumerating a hierarchical collection view bidirectionally."},
{ "name": "IHierarchicalData",
  "type": "Interface",
  "description": "The IHierarchicalData interface defines the interface used to represent hierarchical data as the data provider for a Flex component."},
{ "name": "IHierarchicalData",
  "type": "Interface",
  "description": "The IHierarchicalData interface defines the interface used to represent hierarchical data as the data provider for a Royale component."},
{ "name": "IHorizontalAxisBead",
  "type": "Interface",
  "description": "The IHorizontalAxisBead interface is a marker for any class that draws a horizontal axis."},
{ "name": "IIMEClient",
  "type": "Interface",
  "description": "Interface for IME (input method editor) clients."},
{ "name": "IIMESupport",
  "type": "Interface",
  "description": "The IIMESupport interface defines the interface for any component that supports IME (input method editor)."},
{ "name": "IIMESupport",
  "type": "Interface",
  "description": "The IIMESupport interface defines the interface for any component that supports IME (input method editor)."},
{ "name": "IIcon",
  "type": "Interface",
  "description": "IIcon interface provides abstraction for easiest way to implements custom icon class"},
{ "name": "IIconSupport",
  "type": "Interface",
  "description": "Implement if a class will need ability to display an icon"},
{ "name": "IId",
  "type": "Interface",
  "description": "The IId interface is the basic interface for components that must have an id or identifier for a concrete instance."},
{ "name": "IImage",
  "type": "Interface",
  "description": "The IBinaryImage interface describes the minimum set of properties available to an Image control."},
{ "name": "IImageModel",
  "type": "Interface",
  "description": "The IImageModel interface describes the minimum set of properties available to an Image control."},
{ "name": "IImageView",
  "type": "Interface",
  "description": "The IImageView interface is the interface for beads that represent image views."},
{ "name": "IInitialViewApplication",
  "type": "Interface",
  "description": "The IInitialViewApplication interface is the interface for applications with a single initial views."},
{ "name": "IInlineGraphicElement",
  "type": "Interface",
  "description": ""},
{ "name": "IInputParser",
  "type": "Interface",
  "description": "The IInputParser interface is the basic interface for parsing data from a server or database into an array of items."},
{ "name": "IInteractionEventHandler",
  "type": "Interface",
  "description": "The IInteractionEventHandler interface defines the event handler functions that are handled by a Text Layout Framework selection or edit manager."},
{ "name": "IInvalidating",
  "type": "Interface",
  "description": "The IInvalidating interface defines the interface for components that use invalidation to do delayed -- rather than immediate -- property commitment, measurement, drawing, and layout."},
{ "name": "IItemConverter",
  "type": "Interface",
  "description": "The IItemConverter interface is the basic interface for converting a serialized data item to a data class instance."},
{ "name": "IItemRenderer",
  "type": "Interface",
  "description": "The IItemRenderer interface is the basic interface for item renderers."},
{ "name": "IItemRendererClassFactory",
  "type": "Interface",
  "description": "The IItemRendererClassFactory interface is the basic interface for beads that generate instances of IItemRenderers."},
{ "name": "IItemRendererParent",
  "type": "Interface",
  "description": "The IItemRendererParent interface is the basic interface for the container that parents item renderers."},
{ "name": "IItemRendererProvider",
  "type": "Interface",
  "description": "The IItemRendererProvider interface is implemented by classes that provide a ClassFactory for itemRenderers."},
{ "name": "IJewelSelectionModel",
  "type": "Interface",
  "description": "The IJewelSelectionModel interface is a simple extension to core ISelectionModel"},
{ "name": "ILayoutChild",
  "type": "Interface",
  "description": "The IChild interface is the basic interface for a component that is parented by another component."},
{ "name": "ILayoutElement",
  "type": "Interface",
  "description": "The ILayoutElement interface is used primarily by the layout classes to query, size and position the elements of GroupBase containers."},
{ "name": "ILayoutHost",
  "type": "Interface",
  "description": "The ILayoutHost interface is the basic interface for the container views that have an IBeadLayout."},
{ "name": "ILayoutManagerClient",
  "type": "Interface",
  "description": "The ILayoutManagerClient interface defines the interface that a component must implement to participate in the LayoutManager's commit/measurement/layout sequence."},
{ "name": "ILayoutParent",
  "type": "Interface",
  "description": "The ILayoutParent interface is implemented by those components that allow their children to be manipulated by a layout."},
{ "name": "ILayoutStyleProperties",
  "type": "Interface",
  "description": "The ILayoutStyleProperties interface is the contract for layout beads that needs to retrieve style properties set in their host component and apply to itself."},
{ "name": "ILayoutView",
  "type": "Interface",
  "description": "The ILayoutView interface is implemented by any component that has ILayoutChild children."},
{ "name": "ILineSegmentItemRenderer",
  "type": "Interface",
  "description": "The ILineSegmentItemRenderer interface must be implemented by any class that will become an line segment itemRenderer for a LineSeries."},
{ "name": "ILinkElement",
  "type": "Interface",
  "description": ""},
{ "name": "IList",
  "type": "Interface",
  "description": "A collection of items organized in an ordinal fashion."},
{ "name": "IList",
  "type": "Interface",
  "description": "The IList interface is implemented by any component that supports being a \"list\" which means its content is generated by a factory and whose children are item renderers (IItemRenderer)."},
{ "name": "IListElement",
  "type": "Interface",
  "description": ""},
{ "name": "IListItemElement",
  "type": "Interface",
  "description": ""},
{ "name": "IListItemRenderer",
  "type": "Interface",
  "description": "Item renderers and item editors for list components must implement the IListItemRenderer interface."},
{ "name": "IListMarkerFormat",
  "type": "Interface",
  "description": "This interface provides read access to ListMarkerFormat properties."},
{ "name": "IListPresentationModel",
  "type": "Interface",
  "description": "The IListPresentationModel interface holds key values for the display of lists."},
{ "name": "IListView",
  "type": "Interface",
  "description": "The IListView interface provides the protocol for any bead that creates the visual parts for a org."},
{ "name": "IListWithPresentationModel",
  "type": "Interface",
  "description": "The IListWithPresentationModel interface is implemented by any IList that supports a separate IListPresentationModel"},
{ "name": "ILocalizedValuesImpl",
  "type": "Interface",
  "description": "The ILocalizedValuesImpl interface is the basic interface for the subsystem that provides localized values to components."},
{ "name": "ILogger",
  "type": "Interface",
  "description": "All loggers within the logging framework must implement this interface."},
{ "name": "ILoggingTarget",
  "type": "Interface",
  "description": "All logger target implementations within the logging framework must implement this interface."},
{ "name": "IMAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "IMAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "IMAGE_ASPECT_RATIO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "IMAGE_ASPECT_RATIO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "IME",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IME",
  "description": ""},
{ "name": "IME",
  "type": "Class",
  "description": ""},
{ "name": "IMEConversionMode",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "IMEConversionMode",
  "type": "Class",
  "description": ""},
{ "name": "IMEEvent",
  "type": "Method",
  "class": "org.apache.royale.text.events.IMEEvent",
  "description": ""},
{ "name": "IMEEvent",
  "type": "Class",
  "description": ""},
{ "name": "IMEStatus",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.IMEStatus",
  "description": ""},
{ "name": "IMEStatus",
  "type": "Class",
  "description": "Used internally for specifying the status of clauses in IME text during an IME text entry session."},
{ "name": "IME_CLAUSE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IMEStatus",
  "description": "The name of the IMEClause property."},
{ "name": "IME_COMPOSITION",
  "type": "Property",
  "class": "org.apache.royale.text.events.IMEEvent",
  "description": ""},
{ "name": "IME_START_COMPOSITION",
  "type": "Property",
  "class": "org.apache.royale.text.events.IMEEvent",
  "description": ""},
{ "name": "IME_STATUS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IMEStatus",
  "description": "The name of the IMEStatus property"},
{ "name": "IMPERIAL",
  "type": "Property",
  "class": "google.maps.UnitSystem",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "IMPORTANT_DEVICES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "IMPORTANT_DEVICES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "IMXMLDocument",
  "type": "Interface",
  "description": "The IMXMLDocument interface is an interface for a component that supports being written in MXML."},
{ "name": "IMXMLObject",
  "type": "Interface",
  "description": "The IMXMLObject interface defines the APIs that a non-visual component must implement in order to work properly with the MXML compiler."},
{ "name": "IMXMLSupport",
  "type": "Interface",
  "description": "Implementing this interface means that an RPC service can be used in an MXML document by using MXML tags."},
{ "name": "IMaterialIcon",
  "type": "Interface",
  "description": "IMaterialIcon interface provides abstraction for easiest way to implements custom MaterialIcon class"},
{ "name": "IMaterialIconProvider",
  "type": "Interface",
  "description": "Implement if a class will need ability to display Material icon"},
{ "name": "IMdlColor",
  "type": "Interface",
  "description": "The IMdlColor interface must be implemented by any class that will apply color and colorWeight provided by google style color."},
{ "name": "IMdlTextColor",
  "type": "Interface",
  "description": "The IMdlTextColor interface must be implemented by any class that will apply textColor and textColorWeight provided by google style color."},
{ "name": "IMeasurementBead",
  "type": "Interface",
  "description": "The IMeasurementBead interface is the basic interface for the bead that can compute and report the measurements of the contents of a component."},
{ "name": "IMemento",
  "type": "Interface",
  "description": "The IMemento interface is returned by ModelEdit for undo of a specific action that represents part of an operation."},
{ "name": "IMenu",
  "type": "Interface",
  "description": ""},
{ "name": "IMenuBarModel",
  "type": "Interface",
  "description": "The IComboBoxModel interface describes the minimum set of properties available to a ComboBox control."},
{ "name": "IMessage",
  "type": "Interface",
  "description": "This interface defines the contract for message objects."},
{ "name": "IMessage",
  "type": "Interface",
  "description": "This interface defines the contract for message objects."},
{ "name": "IModalDisplay",
  "type": "Interface",
  "description": ""},
{ "name": "IModule",
  "type": "Interface",
  "description": "The compiler checks the main class to see if it implements the IModule interface and generates bootstrapping code for a module instead of an application."},
{ "name": "IModule",
  "type": "Interface",
  "description": "An interface that marks a class as being a module."},
{ "name": "IModuleInfo",
  "type": "Interface",
  "description": "An interface that acts as a handle for a particular module."},
{ "name": "INACTIVE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormatState",
  "description": "selection state when SelectionManager is inactive"},
{ "name": "INBOX",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INBOX",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INDETERMINATE_CHECK_BOX",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INDETERMINATE_CHECK_BOX",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INFO",
  "type": "Property",
  "class": "mx.logging.LogEventLevel",
  "description": "Designates informational messages that highlight the progress of the application at coarse-grained level."},
{ "name": "INFO",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the info button."},
{ "name": "INFO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INFO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INFO_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INFO_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INHERIT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.FormatValue",
  "description": "Specifies that a property is to inherit its parent's value."},
{ "name": "INITIALIZE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "INITIALIZED",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "INLINE_GRAPHIC_STATUS_CHANGE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.StatusChangeEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>inlineGraphicStatusChanged</code> event object."},
{ "name": "INPUT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for cycling inputs."},
{ "name": "INPUT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INPUT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INPUT_FINISHED",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DispatchInputFinishedBead",
  "description": ""},
{ "name": "INSERT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "The Insert key, Ins."},
{ "name": "INSERT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Insert key (45)."},
{ "name": "INSERT_CHART",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INSERT_CHART",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INSERT_COMMENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INSERT_COMMENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INSERT_DRIVE_FILE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INSERT_DRIVE_FILE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INSERT_EMOTICON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INSERT_EMOTICON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INSERT_INVITATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INSERT_INVITATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INSERT_LINK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INSERT_LINK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INSERT_PHOTO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INSERT_PHOTO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INSIDE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStylePosition",
  "description": "Marker will appear inline with the list item."},
{ "name": "INSIDE",
  "type": "Property",
  "class": "google.maps.StrokePosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INSUFFICIENT_WIDTH",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineCreationResult",
  "description": ""},
{ "name": "INTER_WORD",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextJustify",
  "description": "Specifies that justification is to add space to space characters."},
{ "name": "INVALID",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineValidity",
  "description": ""},
{ "name": "INVALID",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "INVALID",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FlowDamageType",
  "description": "Value is used to set the <code>validity</code> property if the text content has changed since the line was originally created."},
{ "name": "INVALID",
  "type": "Property",
  "class": "mx.events.ValidationResultEvent",
  "description": "The <code>ValidationResultEvent."},
{ "name": "INVALID_DOCUMENT",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INVALID_LAYER",
  "type": "Property",
  "class": "google.maps.visualization.MapsEngineStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INVALID_REQUEST",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INVALID_REQUEST",
  "type": "Property",
  "class": "google.maps.DirectionsStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INVALID_REQUEST",
  "type": "Property",
  "class": "google.maps.places.PlacesServiceStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INVALID_REQUEST",
  "type": "Property",
  "class": "google.maps.DistanceMatrixStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INVALID_REQUEST",
  "type": "Property",
  "class": "google.maps.ElevationStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INVALID_REQUEST",
  "type": "Property",
  "class": "google.maps.GeocoderStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "INVERT_COLORS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "INVERT_COLORS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "INVOKE",
  "type": "Property",
  "class": "mx.rpc.events.InvokeEvent",
  "description": "The INVOKE event type."},
{ "name": "INavigationRenderer",
  "type": "Interface",
  "description": "INavigationRenderer is the interface that all item renderers used with Navigation List component must implement."},
{ "name": "INavigatorContent",
  "type": "Interface",
  "description": "The INavigatorContent interface defines the interface that a container must implement to be used as the child of a navigator container, such as the ViewStack, TabNavigator, and Accordion navigator containers."},
{ "name": "INumberLineFactory",
  "type": "Interface",
  "description": ""},
{ "name": "IOErrorEvent",
  "type": "Method",
  "class": "mx.events.IOErrorEvent",
  "description": "Constructor."},
{ "name": "IOErrorEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when focus changes."},
{ "name": "IOS_OS",
  "type": "Property",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "IO_ERROR",
  "type": "Property",
  "class": "mx.events.IOErrorEvent",
  "description": ""},
{ "name": "IO_ERROR",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "Detail of an error occurring in the server communication."},
{ "name": "IOneFlexibleChildLayout",
  "type": "Interface",
  "description": "IOneFlexibleChildLayout will flex one of the children to take up the space remaining in a container after the rest of the elements have been laid out according to CSS layout rules."},
{ "name": "IOperation",
  "type": "Interface",
  "description": "IOperation defines the interface for operations that can be undone and redone."},
{ "name": "IPanelModel",
  "type": "Interface",
  "description": "The IPanelModel interface describes the minimum set of properties available to a Panel control."},
{ "name": "IParagraphElement",
  "type": "Interface",
  "description": ""},
{ "name": "IParagraphFormattedElement",
  "type": "Interface",
  "description": ""},
{ "name": "IParent",
  "type": "Interface",
  "description": "The IParent interface is the basic interface for a component that contains subcomponents, including the application class."},
{ "name": "IParentIUIBase",
  "type": "Interface",
  "description": "The IParentIUIBase interface is a convenience interface for IUIBase components that contains subcomponents."},
{ "name": "IPath",
  "type": "Interface",
  "description": ""},
{ "name": "IPathCommand",
  "type": "Interface",
  "description": ""},
{ "name": "IPermanentStorage",
  "type": "Interface",
  "description": "The IPermanentStorage interface provides the template for creating an interface to a device's native file system."},
{ "name": "IPermanentStorageProvider",
  "type": "Interface",
  "description": "This interface provides the template for creating classes the work with the permanent storages API of the native system."},
{ "name": "IPlainTextExporter",
  "type": "Interface",
  "description": "This interface should be implemented by converters that export plain text."},
{ "name": "IPopUp",
  "type": "Interface",
  "description": "The IPopUp interface is a \"marker\" interface for a component that should be floated above other components that aren't an IPopUp."},
{ "name": "IPopUpHost",
  "type": "Interface",
  "description": "The IPopUpHost interface is a \"marker\" interface for a component that parents components that implement IPopUp."},
{ "name": "IPopUpHostParent",
  "type": "Interface",
  "description": "The IPopUpHostParent is the effective parent of popups."},
{ "name": "IProgrammaticSkin",
  "type": "Interface",
  "description": "The IProgrammaticSkin interface defines the interface that skin classes must implement if they use the <code>name</code> property skin interface."},
{ "name": "IPropertyChangeNotifier",
  "type": "Interface",
  "description": "The <code>IPropertyChangeNotifier</code> interface defines a marker interface."},
{ "name": "IRangeModel",
  "type": "Interface",
  "description": "The IRangeModel interface describes the minimum set of properties available to control that let the user select from within a range of numbers like NumericStepper and Slider."},
{ "name": "IRect",
  "type": "Interface",
  "description": ""},
{ "name": "IRenderedObject",
  "type": "Interface",
  "description": "The IRenderedObject interface is the basic interface for a component that has been rendered."},
{ "name": "IResourceBundle",
  "type": "Interface",
  "description": "The IResourceBundle and IResourceManager interfaces work together to provide localization support for Flex applications."},
{ "name": "IResourceManager",
  "type": "Interface",
  "description": "The APIs of the IResourceManager interface provide localization support for Flex applications."},
{ "name": "IResponder",
  "type": "Interface",
  "description": "This interface provides the contract for any service that needs to respond to remote or asynchronous calls."},
{ "name": "IRollOverModel",
  "type": "Interface",
  "description": "The IRollOverModel interface describes the minimum set of properties available to control that supports rollover highlighting of an item within a set of items."},
{ "name": "IRoyaleEvent",
  "type": "Interface",
  "description": "This class simply wraps flash."},
{ "name": "IRunListener",
  "type": "Interface",
  "description": "Responds to events that occur during a test run."},
{ "name": "IRunNotifier",
  "type": "Interface",
  "description": "Listens for notifications from an <code>ITestRunner</code>."},
{ "name": "IRuntimeSelectableItemRenderer",
  "type": "Interface",
  "description": "The IItemRenderer interface is the basic interface for item renderers."},
{ "name": "ISO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ISO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ISWFApplication",
  "type": "Interface",
  "description": "Interface for bootstrapping SWF Applications."},
{ "name": "ISWFContext",
  "type": "Interface",
  "description": "The ISWFContext interface allows a SWF file to share its context with other SWF files that load it."},
{ "name": "ISandboxSupport",
  "type": "Interface",
  "description": "Interface to support TLF content in a sub-application."},
{ "name": "IScrollBarView",
  "type": "Interface",
  "description": "The IScrollBarView interface is the interface for views for the org."},
{ "name": "IScrollingViewport",
  "type": "Interface",
  "description": "A ScrollingViewport is a Viewport that scrolls overflow content."},
{ "name": "ISelectable",
  "type": "Interface",
  "description": "The ISelectable interface is a marker interface for indicating a class has a selected property."},
{ "name": "ISelectableContent",
  "type": "Interface",
  "description": "ISelectableContent is the interface a container implements to mark as the current selected content"},
{ "name": "ISelectableItemRenderer",
  "type": "Interface",
  "description": "The IItemRenderer interface is the basic interface for item renderers."},
{ "name": "ISelectableList",
  "type": "Interface",
  "description": "The ISelectableList interface indicates that the implementor is an IList element that supports a <code>selectedIndex</code> property."},
{ "name": "ISelectionManager",
  "type": "Interface",
  "description": "The ISelectionManager interface defines the interface for handling text selection."},
{ "name": "ISelectionModel",
  "type": "Interface",
  "description": "The ISelectionModel interface describes the minimum set of properties available to control that let the user select from within a set of items in a dataProvider."},
{ "name": "ISimpleCompose",
  "type": "Interface",
  "description": ""},
{ "name": "ISimpleStyleClient",
  "type": "Interface",
  "description": "This interface describes the properties and methods that an object must implement so that it can participate in the style subsystem."},
{ "name": "ISliderView",
  "type": "Interface",
  "description": "The ISliderView interface provides the protocol for any bead that creates the visual parts for a org."},
{ "name": "ISliderView",
  "type": "Interface",
  "description": "The ISliderView interface provides the protocol for any bead that creates the visual parts for a org."},
{ "name": "ISmallMessage",
  "type": "Interface",
  "description": "A marker interface that is used to indicate that an IMessage has an alternative smaller form for serialization."},
{ "name": "ISmallMessage",
  "type": "Interface",
  "description": "A marker interface that is used to indicate that an IMessage has an alternative smaller form for serialization."},
{ "name": "ISnackbarModel",
  "type": "Interface",
  "description": "The ISnackbarModel interface describes the minimum set of properties available to Snackbar type of control"},
{ "name": "ISort",
  "type": "Interface",
  "description": "The <code>ISort</code> interface defines the interface for classes that provide the sorting information required to sort the data of a collection view."},
{ "name": "ISort",
  "type": "Interface",
  "description": "The <code>ISort</code> interface defines the interface for classes that provide the sorting information required to sort the data of a collection view."},
{ "name": "ISortField",
  "type": "Interface",
  "description": "The <code>ISortField</code> interface defines the interface for classes that are used with <code>ISort</code> classes, to provide the sorting information required to sort the specific fields or property in a collection view."},
{ "name": "ISortField",
  "type": "Interface",
  "description": "The <code>ISortField</code> interface defines the interface for classes that are used with <code>ISort</code> classes, to provide the sorting information required to sort the specific fields or property in a collection view."},
{ "name": "ISpanElement",
  "type": "Interface",
  "description": ""},
{ "name": "ISpecialCharacterElement",
  "type": "Interface",
  "description": ""},
{ "name": "ISpinnerView",
  "type": "Interface",
  "description": "The ISpinnerView interface provides the protocol for any bead that creates the visual parts for a org."},
{ "name": "ISpinnerView",
  "type": "Interface",
  "description": "The ISpinnerView interface provides the protocol for any bead that creates the visual parts for a org."},
{ "name": "IStackable",
  "type": "Interface",
  "description": "The IStackable interface is implemented by any series that can be stacked."},
{ "name": "IStackable2",
  "type": "Interface",
  "description": "The IStackable2 interface is implemented by any series that can be stacked."},
{ "name": "IState",
  "type": "Interface",
  "description": "The IState interface is a basic interface for States that are handled by various IStatesImpls."},
{ "name": "IStatesImpl",
  "type": "Interface",
  "description": "The IStatesImpl interface is a \"marker\" interface for the implementation view states in a View like ViewBase."},
{ "name": "IStatesObject",
  "type": "Interface",
  "description": "The IStatesObject interface is the interface for an object that supports states."},
{ "name": "IStrand",
  "type": "Interface",
  "description": "The IStrand interface is the basic interface for a host component for a set of plug-ins known as Beads."},
{ "name": "IStrandWithModel",
  "type": "Interface",
  "description": "The IStrand interface is the basic interface for a host component for a set of plug-ins known as Beads."},
{ "name": "IStrandWithModelView",
  "type": "Interface",
  "description": "The IStrandWithModelView interface is the basic interface for a host component for a set of plug-ins known as Beads where two of the plugins are a model and a view."},
{ "name": "IStrandWithPresentationModel",
  "type": "Interface",
  "description": "The IStrandWithPresentationModel interface is implemented by any IStrand that supports a separate bead that is a presentationModel."},
{ "name": "IStringCollection",
  "type": "Interface",
  "description": "The IStringCollection interface is the basic interface for an iterable collection of strings."},
{ "name": "IStringTextLineFactory",
  "type": "Interface",
  "description": ""},
{ "name": "IStroke",
  "type": "Interface",
  "description": ""},
{ "name": "IStroke",
  "type": "Interface",
  "description": ""},
{ "name": "IStyleClient",
  "type": "Interface",
  "description": "This interface describes the properties and methods that an object must implement so that it can fully participate in the style subsystem."},
{ "name": "IStyleManager",
  "type": "Interface",
  "description": "The IStyleManager class manages the following: <ul> <li>Which CSS style properties the class inherits</li> <li>Which style properties are colors, and therefore get special handling</li> <li>A list of strings that are aliases for color values</li> </ul>  This interface was used by Flex 2."},
{ "name": "IStyleManager2",
  "type": "Interface",
  "description": "The IStyleManager2 class manages the following: <ul> <li>Which CSS style properties the class inherits</li> <li>Which style properties are colors, and therefore get special handling</li> <li>A list of strings that are aliases for color values</li> </ul>"},
{ "name": "IStyleObject",
  "type": "Interface",
  "description": "The IStyleObject interface is the interface for objects that contain style properties."},
{ "name": "IStyleableObject",
  "type": "Interface",
  "description": "The IStyleableObject interface is the interface for objects that support style properties."},
{ "name": "ISubParagraphGroupElement",
  "type": "Interface",
  "description": ""},
{ "name": "ISubParagraphGroupElementBase",
  "type": "Interface",
  "description": ""},
{ "name": "ISummaryCalculator",
  "type": "Interface",
  "description": "The ISummaryCalculator interface defines the interface implemented by custom summary calculator classes."},
{ "name": "ISystemManager",
  "type": "Interface",
  "description": "An ISystemManager manages an \"application window\"."},
{ "name": "ITALIC",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontPosture",
  "description": ""},
{ "name": "ITCYElement",
  "type": "Interface",
  "description": ""},
{ "name": "ITEM_ADDED",
  "type": "Property",
  "class": "org.apache.royale.collections.Collection",
  "description": ""},
{ "name": "ITEM_ADDED",
  "type": "Property",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": ""},
{ "name": "ITEM_CLICK",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Event type constant; indicates that the user clicked the mouse button over a chart item representing data in the chart."},
{ "name": "ITEM_CLICK",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_CLICK",
  "type": "Property",
  "class": "mx.events.MenuEvent",
  "description": "The MenuEvent."},
{ "name": "ITEM_CLICK",
  "type": "Property",
  "class": "mx.events.ItemClickEvent",
  "description": "The <code>ItemClickEvent."},
{ "name": "ITEM_CLICK",
  "type": "Property",
  "class": "mx.charts.events.LegendMouseEvent",
  "description": "Event type constant; indicates that the user clicked the mouse button over a legend item."},
{ "name": "ITEM_CLOSE",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "The TreeEvent."},
{ "name": "ITEM_DOUBLE_CLICK",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Event type constant; indicates that the user double-clicked the mouse button over a chart item representing data in the chart."},
{ "name": "ITEM_DOUBLE_CLICK",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_EDIT_BEGIN",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_EDIT_BEGINNING",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_EDIT_END",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_FOCUS_IN",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_FOCUS_OUT",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_MOUSE_DOWN",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Event type constant; indicates that the user pressed the mouse button over a chart item representing data in the chart."},
{ "name": "ITEM_MOUSE_DOWN",
  "type": "Property",
  "class": "mx.charts.events.LegendMouseEvent",
  "description": "Event type constant; indicates that the user clicked the mouse button over a legend item."},
{ "name": "ITEM_MOUSE_MOVE",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Event type constant; indicates that the user moved the mouse pointer while hovering over a chart item representing data in the chart."},
{ "name": "ITEM_MOUSE_OUT",
  "type": "Property",
  "class": "mx.charts.events.LegendMouseEvent",
  "description": "Event type constant; indicates that the user rolled the mouse pointer away from a legend item."},
{ "name": "ITEM_MOUSE_OVER",
  "type": "Property",
  "class": "mx.charts.events.LegendMouseEvent",
  "description": "Event type constant; indicates that the user rolled the mouse pointer over  a legend item."},
{ "name": "ITEM_MOUSE_UP",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Event type constant; indicates that the user released the mouse button while over  a chart item representing data in the chart."},
{ "name": "ITEM_MOUSE_UP",
  "type": "Property",
  "class": "mx.charts.events.LegendMouseEvent",
  "description": "Event type constant; indicates that the user released the mouse button while over  a legend item."},
{ "name": "ITEM_OPEN",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "The TreeEvent."},
{ "name": "ITEM_OPENING",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "The TreeEvent."},
{ "name": "ITEM_REMOVED",
  "type": "Property",
  "class": "org.apache.royale.collections.Collection",
  "description": ""},
{ "name": "ITEM_REMOVED",
  "type": "Property",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": ""},
{ "name": "ITEM_ROLL_OUT",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Event type constant; indicates that the user rolled the mouse pointer away from a chart item representing data in the chart."},
{ "name": "ITEM_ROLL_OUT",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_ROLL_OVER",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "Event type constant; indicates that the user rolled the mouse pointer over  a chart item representing data in the chart."},
{ "name": "ITEM_ROLL_OVER",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The ListEvent."},
{ "name": "ITEM_UPDATED",
  "type": "Property",
  "class": "org.apache.royale.collections.Collection",
  "description": ""},
{ "name": "ITEM_UPDATED",
  "type": "Property",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": ""},
{ "name": "ITLFFactory",
  "type": "Interface",
  "description": ""},
{ "name": "ITabItemRenderer",
  "type": "Interface",
  "description": "The ITabItemRenderer interface is the basic interface for MDL Tabs and TabBar item renderers."},
{ "name": "ITabModel",
  "type": "Interface",
  "description": "The ITabModel interface describes the minimum set of properties available to Tabs control"},
{ "name": "ITabStopFormat",
  "type": "Interface",
  "description": "This interface provides read access to tab stop-related properties."},
{ "name": "ITableCellElement",
  "type": "Interface",
  "description": ""},
{ "name": "ITableColElement",
  "type": "Interface",
  "description": ""},
{ "name": "ITableColSetter",
  "type": "Interface",
  "description": ""},
{ "name": "ITableElement",
  "type": "Interface",
  "description": ""},
{ "name": "ITableFormattedElement",
  "type": "Interface",
  "description": ""},
{ "name": "ITableLeafElement",
  "type": "Interface",
  "description": ""},
{ "name": "ITableRowElement",
  "type": "Interface",
  "description": ""},
{ "name": "ITestRunner",
  "type": "Interface",
  "description": ""},
{ "name": "IText",
  "type": "Interface",
  "description": ""},
{ "name": "ITextBlock",
  "type": "Interface",
  "description": ""},
{ "name": "ITextContainerManager",
  "type": "Interface",
  "description": ""},
{ "name": "ITextExporter",
  "type": "Interface",
  "description": "Interface for exporting text content from a TextFlow instance to a given format, which may for example be String or XML format, or a user-defined format."},
{ "name": "ITextFactory",
  "type": "Interface",
  "description": ""},
{ "name": "ITextField",
  "type": "Interface",
  "description": "ITextField is the interface that all TextField MDL classes implement It's used mainly in org."},
{ "name": "ITextFieldFactory",
  "type": "Interface",
  "description": "Interface to create instances of TextField and FTETextField."},
{ "name": "ITextFlow",
  "type": "Interface",
  "description": ""},
{ "name": "ITextFlowLine",
  "type": "Interface",
  "description": ""},
{ "name": "ITextFlowTableBlock",
  "type": "Interface",
  "description": ""},
{ "name": "ITextImporter",
  "type": "Interface",
  "description": "Interface for importing text content into a TextFlow from an external source."},
{ "name": "ITextInput",
  "type": "Interface",
  "description": "ITextInput is the interface that all text jewel classes."},
{ "name": "ITextInput",
  "type": "Interface",
  "description": "Defines an interface for a single-line text field that is optionally editable."},
{ "name": "ITextItemRenderer",
  "type": "Interface",
  "description": "The ITextItemRenderer interface is the interface for for org."},
{ "name": "ITextItemRenderer",
  "type": "Interface",
  "description": "The ITextItemRenderer interface is the interface for for org."},
{ "name": "ITextLayoutFormat",
  "type": "Interface",
  "description": "This interface provides read access to FlowElements-related properties."},
{ "name": "ITextLayoutImporter",
  "type": "Interface",
  "description": "This interface should be implemented by converters that import TextLayout structured data."},
{ "name": "ITextLine",
  "type": "Interface",
  "description": ""},
{ "name": "ITextLineFactory",
  "type": "Interface",
  "description": ""},
{ "name": "ITextModel",
  "type": "Interface",
  "description": "The ITextModel interface describes the minimum set of properties available to control that displays text."},
{ "name": "IThenable",
  "type": "Interface",
  "description": ""},
{ "name": "ITitleBarModel",
  "type": "Interface",
  "description": "The ITitleBarModel interface describes the minimum set of properties available to control that displays a title bar."},
{ "name": "IToastModel",
  "type": "Interface",
  "description": "The IToastModel interface describes the minimum set of properties available to simple version of Snackbar - Toast"},
{ "name": "IToggleButtonModel",
  "type": "Interface",
  "description": "The IToggleButtonModel interface describes the minimum set of properties available to ToggleButton that displays a text label."},
{ "name": "IToolTip",
  "type": "Interface",
  "description": "The IToolTip interface defines the API that tooltip-like components must implement in order to work with the ToolTipManager."},
{ "name": "IToolTipManager2",
  "type": "Interface",
  "description": "This interface is used internally by Flex 3."},
{ "name": "IToolTipManagerClient",
  "type": "Interface",
  "description": "Components that implement IToolTipManagerClient can have tooltips and must have a toolTip getter/setter."},
{ "name": "ITransformHost",
  "type": "Interface",
  "description": "The ITransformHost interface is the basic interface for the container views that have an IBeadTransform."},
{ "name": "ITransformModel",
  "type": "Interface",
  "description": "The ITransformModel interface describes the minimum set of properties needed to define a transformation on an object."},
{ "name": "ITreeData",
  "type": "Interface",
  "description": "The ITreeData interface is the basic interface for determining which items in a hierarchical collection should be displayed in the tree."},
{ "name": "ITreeDataDescriptor",
  "type": "Interface",
  "description": "Interface providing methods for parsing and adding nodes to a collection of data that is displayed by a Tree control."},
{ "name": "ITreeDataDescriptor2",
  "type": "Interface",
  "description": "The ITreeDataDescriptor2 Interface defines methods for parsing and adding nodes to a collection of data that is displayed by a Tree control."},
{ "name": "IUIBase",
  "type": "Interface",
  "description": "The IUIBase interface is the basic interface for user interface components."},
{ "name": "IUIComponent",
  "type": "Interface",
  "description": "The IUIComponent interface defines the basic set of APIs that you must implement to create a child of a Flex container or list."},
{ "name": "IUID",
  "type": "Interface",
  "description": "The IUID interface defines the interface for objects that must have Unique Identifiers (UIDs) to uniquely identify the object."},
{ "name": "IUITextField",
  "type": "Interface",
  "description": "The IUITextField interface defines the basic set of APIs for UITextField instances."},
{ "name": "IUndoManager",
  "type": "Interface",
  "description": "IUndoManager defines the interface for managing the undo and redo stacks."},
{ "name": "IValidator",
  "type": "Interface",
  "description": "This interface specifies the methods and properties that a Validator object must implement."},
{ "name": "IValidatorListener",
  "type": "Interface",
  "description": "The interface that components implement to support the Flex data validation mechanism."},
{ "name": "IValueToggleButtonModel",
  "type": "Interface",
  "description": "The IValueToggleButtonModel interface describes the minimum set of properties available each ToggleButton in a group of ToggleButtons of which only one can be selected at a time."},
{ "name": "IValuesImpl",
  "type": "Interface",
  "description": "The IValuesImpl interface is the basic interface for the subsystem that provides default values to components."},
{ "name": "IVerticalAxisBead",
  "type": "Interface",
  "description": "The IHorizontalAxisBead interface is a marker for any class that draws a verical axis."},
{ "name": "IVerticalJustificationLine",
  "type": "Interface",
  "description": "The IVerticalJustificationLine interface defines the methods and properties required to allow the vertical justification of text lines."},
{ "name": "IViewCursor",
  "type": "Interface",
  "description": "Defines the interface for enumerating a collection view bi-directionally."},
{ "name": "IViewManager",
  "type": "Interface",
  "description": "The IViewManager interface is implemented by classes that manage or control IViews."},
{ "name": "IViewManagerView",
  "type": "Interface",
  "description": "The IViewManagerView interface is implemented by any class that can be managed by an IViewManager."},
{ "name": "IViewWithPopUp",
  "type": "Interface",
  "description": "The IViewWithPopUp interface provides the protocol for any bead that creates visual parts that includes a popup."},
{ "name": "IViewport",
  "type": "Interface",
  "description": "A Viewport is a window onto an area of content."},
{ "name": "IViewportModel",
  "type": "Interface",
  "description": "A Viewport is the area of a Container set aside for displaying content and any scrolling controls."},
{ "name": "IVisualElement",
  "type": "Interface",
  "description": "The IVisualElement interface defines the minimum properties and methods required for a visual element to be laid out and displayed in a Spark container."},
{ "name": "IVisualElementContainer",
  "type": "Interface",
  "description": "The IVisualElementContainer interface defines the minimum properties and methods required for a container to manage Spark components for display."},
{ "name": "IWebStorage",
  "type": "Interface",
  "description": "The IWebStorage interface provides a template for classes to use that wish to allow storage of small amounts of data into a web browser or perhaps on a mobile device."},
{ "name": "IWedgeItemRenderer",
  "type": "Interface",
  "description": "The IWedgeItemRenderer interface must be implemented by any class that is used as an itemRenderer for a PieSeries."},
{ "name": "IXMLNotifiable",
  "type": "Interface",
  "description": "The IXMLNotifiable interface."},
{ "name": "IconButton",
  "type": "Method",
  "class": "org.apache.royale.jewel.IconButton",
  "description": "Constructor."},
{ "name": "IconButton",
  "type": "Class",
  "description": ""},
{ "name": "IconTextInput",
  "type": "Method",
  "class": "org.apache.royale.jewel.IconTextInput",
  "description": "Constructor."},
{ "name": "IconTextInput",
  "type": "Class",
  "description": "The IconTextInput class implements is a TextInput that supports an icon that can be positionend to the left or to the right of text content"},
{ "name": "IconToggle",
  "type": "Method",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": "constructor."},
{ "name": "IconToggle",
  "type": "Class",
  "description": "The Material Design Lite (MDL) icon-toggle component is an enhanced version of the standard HTML <input type=\"checkbox\"> element."},
{ "name": "IllegalOperationError",
  "type": "Method",
  "class": "mx.errors.IllegalOperationError",
  "description": ""},
{ "name": "IllegalOperationError",
  "type": "Class",
  "description": ""},
{ "name": "Image",
  "type": "Method",
  "class": "spark.components.Image",
  "description": "Constructor."},
{ "name": "Image",
  "type": "Class",
  "description": "The Spark Image control is a skinnable component that provides a customizable loading state, chrome, and error state."},
{ "name": "Image",
  "type": "Method",
  "class": "org.apache.royale.html.Image",
  "description": "constructor."},
{ "name": "Image",
  "type": "Class",
  "description": "Load Images."},
{ "name": "Image",
  "type": "Method",
  "class": "org.apache.royale.svg.Image",
  "description": "constructor."},
{ "name": "Image",
  "type": "Class",
  "description": ""},
{ "name": "Image",
  "type": "Method",
  "class": "mx.controls.Image",
  "description": "Constructor."},
{ "name": "Image",
  "type": "Class",
  "description": "The Image control lets you import JPEG, PNG, GIF, and SWF files at runtime."},
{ "name": "Image",
  "type": "Method",
  "class": "org.apache.royale.jewel.Image",
  "description": "constructor."},
{ "name": "Image",
  "type": "Class",
  "description": "Load Images."},
{ "name": "ImageAndTextButton",
  "type": "Method",
  "class": "org.apache.royale.html.ImageAndTextButton",
  "description": "Constructor."},
{ "name": "ImageAndTextButton",
  "type": "Class",
  "description": "The ImageTextButton class implements a basic button that displays and image and text."},
{ "name": "ImageAndTextButton",
  "type": "Method",
  "class": "org.apache.royale.express.ImageAndTextButton",
  "description": ""},
{ "name": "ImageAndTextButton",
  "type": "Class",
  "description": "This class extends ImageAndTextButton and adds the toolTip bead as a convenience."},
{ "name": "ImageAndTextModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ImageAndTextModel",
  "description": "Constructor."},
{ "name": "ImageAndTextModel",
  "type": "Class",
  "description": "The ImageAndTextModel class is associates and image with some text."},
{ "name": "ImageBase",
  "type": "Method",
  "class": "org.apache.royale.core.ImageBase",
  "description": "constructor."},
{ "name": "ImageBase",
  "type": "Class",
  "description": "The ImageBase class serves as a base class for components that displays a bitmap."},
{ "name": "ImageButton",
  "type": "Method",
  "class": "org.apache.royale.html.ImageButton",
  "description": "Constructor."},
{ "name": "ImageButton",
  "type": "Class",
  "description": "The ImageButton class presents an image as a button."},
{ "name": "ImageButton",
  "type": "Method",
  "class": "org.apache.royale.express.ImageButton",
  "description": ""},
{ "name": "ImageButton",
  "type": "Class",
  "description": "This class extends ImageButton and adds the toolTip bead as a convenience."},
{ "name": "ImageButton",
  "type": "Method",
  "class": "org.apache.royale.jewel.ImageButton",
  "description": "Constructor."},
{ "name": "ImageButton",
  "type": "Class",
  "description": "The ImageButton class presents an image as a button."},
{ "name": "ImageButtonView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ImageButtonView",
  "description": "Constructor."},
{ "name": "ImageButtonView",
  "type": "Class",
  "description": "The ImageButtonView class provides an image-only view for the standard Button."},
{ "name": "ImageModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ImageModel",
  "description": "constructor."},
{ "name": "ImageModel",
  "type": "Class",
  "description": "The ImageModel class bead defines the data associated with an org."},
{ "name": "ImageModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.ImageModel",
  "description": "constructor."},
{ "name": "ImageModel",
  "type": "Class",
  "description": "The ImageModel class bead defines the data associated with an org."},
{ "name": "ImageView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.ImageView",
  "description": "constructor."},
{ "name": "ImageView",
  "type": "Class",
  "description": "The ImageView class creates the visual elements of the org."},
{ "name": "ImageView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ImageView",
  "description": "constructor."},
{ "name": "ImageView",
  "type": "Class",
  "description": "The ImageView class creates the visual elements of the org."},
{ "name": "ImageView",
  "type": "Method",
  "class": "org.apache.royale.svg.beads.ImageView",
  "description": "constructor."},
{ "name": "ImageView",
  "type": "Class",
  "description": "The ImageView class creates the visual elements of the org."},
{ "name": "ImageViewBase",
  "type": "Method",
  "class": "org.apache.royale.core.ImageViewBase",
  "description": "constructor."},
{ "name": "ImageViewBase",
  "type": "Class",
  "description": "The ImageView class creates the visual elements of the org."},
{ "name": "Img",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Img",
  "description": "constructor."},
{ "name": "Img",
  "type": "Class",
  "description": "The Img class represents an HTML <img> element"},
{ "name": "ImportExportConfiguration",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.ImportExportConfiguration",
  "description": "Constructor."},
{ "name": "ImportExportConfiguration",
  "type": "Class",
  "description": "Configure for import/export of standard components."},
{ "name": "IncrementButtonView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.IncrementButtonView",
  "description": ""},
{ "name": "IncrementButtonView",
  "type": "Class",
  "description": ""},
{ "name": "IndexChangeEvent",
  "type": "Method",
  "class": "spark.events.IndexChangeEvent",
  "description": "Constructor."},
{ "name": "IndexChangeEvent",
  "type": "Class",
  "description": "The IndexChangeEvent class represents events that are dispatched when an index changes in a Spark component."},
{ "name": "IndexChangedEvent",
  "type": "Method",
  "class": "mx.events.IndexChangedEvent",
  "description": "Constructor."},
{ "name": "IndexChangedEvent",
  "type": "Class",
  "description": "The IndexChangedEvent class represents events that are dispatched when an index changes."},
{ "name": "InfiniteVScroller",
  "type": "Method",
  "class": "org.apache.royale.html.beads.InfiniteVScroller",
  "description": "Constructor."},
{ "name": "InfiniteVScroller",
  "type": "Class",
  "description": "InfiniteVScroller dispatches an event when the component scrolls to the bottom to allow loading more content dynamically."},
{ "name": "InlineGraphicElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "Constructor - create new InlineGraphicElement object"},
{ "name": "InlineGraphicElement",
  "type": "Class",
  "description": "The InlineGraphicElement class handles graphic objects that display inline in the text."},
{ "name": "InlineGraphicElementStatus",
  "type": "Class",
  "description": "The InlineGraphicElementStatus class defines a set of constants for checking the value of <code>InlineGraphicElement."},
{ "name": "InnerHTML",
  "type": "Method",
  "class": "org.apache.royale.html.beads.InnerHTML",
  "description": "constructor."},
{ "name": "InnerHTML",
  "type": "Class",
  "description": "The InnerText bead class adds innetHTML text to a html tag."},
{ "name": "Input",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Input",
  "description": "constructor."},
{ "name": "Input",
  "type": "Class",
  "description": "The Input class represents an HTML <input> element"},
{ "name": "InsertInlineGraphicOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.InsertInlineGraphicOperation",
  "description": "Creates an InsertInlineGraphicsOperation object."},
{ "name": "InsertInlineGraphicOperation",
  "type": "Class",
  "description": "The InsertInlineGraphicOperation class encapsulates the insertion of an inline graphic into a text flow."},
{ "name": "InsertTableElementOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.InsertTableElementOperation",
  "description": ""},
{ "name": "InsertTableElementOperation",
  "type": "Class",
  "description": ""},
{ "name": "InsertTextOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.InsertTextOperation",
  "description": "Creates an InsertTextOperation object."},
{ "name": "InsertTextOperation",
  "type": "Class",
  "description": "The InsertTextOperation class encapsulates a text insertion operation."},
{ "name": "InstanceCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "Constructor."},
{ "name": "InstanceCache",
  "type": "Class",
  "description": "InstanceCache is a utility that governs the task of creating and managing a set of <i>n</i> object instances, where <i>n</i> changes frequently."},
{ "name": "IntPropertyHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.IntPropertyHandler",
  "description": ""},
{ "name": "IntPropertyHandler",
  "type": "Class",
  "description": "A property description with a Number as its value."},
{ "name": "IntUtil",
  "type": "Class",
  "description": "Contains reusable methods for operations pertaining to int values."},
{ "name": "InteractionMode",
  "type": "Class",
  "description": "The InteractionMode class defines the alues for the <code>interactionMode</code> property of the UIComponent class."},
{ "name": "InternalSplitFGEMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento",
  "description": ""},
{ "name": "InternalSplitFGEMemento",
  "type": "Class",
  "description": ""},
{ "name": "InvalidCategoryError",
  "type": "Method",
  "class": "mx.logging.errors.InvalidCategoryError",
  "description": "Constructor."},
{ "name": "InvalidCategoryError",
  "type": "Class",
  "description": "This error is thrown when a category specified for a logger contains invalid characters or is malformed."},
{ "name": "InvalidChannelError",
  "type": "Method",
  "class": "mx.messaging.errors.InvalidChannelError",
  "description": "Constructs a new instance of an InvalidChannelError with the specified message."},
{ "name": "InvalidChannelError",
  "type": "Class",
  "description": "This error is thrown when a Channel can't be accessed or is not valid for the current destination."},
{ "name": "InvalidDestinationError",
  "type": "Method",
  "class": "mx.messaging.errors.InvalidDestinationError",
  "description": "Constructs a new instance of an InvalidDestinationError with the specified message."},
{ "name": "InvalidDestinationError",
  "type": "Class",
  "description": "This error is thrown when a destination can't be accessed or is not valid."},
{ "name": "InvalidFilterError",
  "type": "Method",
  "class": "mx.logging.errors.InvalidFilterError",
  "description": "Constructor."},
{ "name": "InvalidFilterError",
  "type": "Class",
  "description": "This error is thrown when a filter specified for a target contains invalid characters or is malformed."},
{ "name": "InvertFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.InvertFilterElement",
  "description": ""},
{ "name": "InvertFilterElement",
  "type": "Class",
  "description": "The InvertFilterElement makes a filter inset"},
{ "name": "InvokeEvent",
  "type": "Method",
  "class": "mx.rpc.events.InvokeEvent",
  "description": "Create a new InvokeEvent."},
{ "name": "InvokeEvent",
  "type": "Class",
  "description": "The event that indicates an RPC operation has been invoked."},
{ "name": "ItemAddedEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ItemAddedEvent",
  "description": "Constructor."},
{ "name": "ItemAddedEvent",
  "type": "Class",
  "description": "The ItemAddedEvent is dispatched by IItemRendererParent objects whenenver an itemRenderer is added."},
{ "name": "ItemAndDescriptor",
  "type": "Method",
  "class": "org.apache.royale.states.ItemAndDescriptor",
  "description": "Constructor."},
{ "name": "ItemAndDescriptor",
  "type": "Class",
  "description": "A data structure to store an instance and its descriptor array."},
{ "name": "ItemClickEvent",
  "type": "Method",
  "class": "mx.events.ItemClickEvent",
  "description": "Constructor."},
{ "name": "ItemClickEvent",
  "type": "Class",
  "description": "Represents events that are dispatched when a navigation item on a navigator bar, such as a ButtonBar, LinkBar, or TabBar control, has been clicked."},
{ "name": "ItemClickedEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ItemClickedEvent",
  "description": "Constructor."},
{ "name": "ItemClickedEvent",
  "type": "Class",
  "description": "The ItemClickedEvent is a custom event issued by an itemRenderer to convey information about itself when it has determined that the event(s) happening to it constitute a 'click' on itself."},
{ "name": "ItemRemovedEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ItemRemovedEvent",
  "description": "Constructor."},
{ "name": "ItemRemovedEvent",
  "type": "Class",
  "description": "The ItemRemovedEvent is dispatched by IItemRendererParent objects whenenver an itemRenderer is removed."},
{ "name": "ItemRenderer",
  "type": "Method",
  "class": "spark.components.supportClasses.ItemRenderer",
  "description": "Constructor."},
{ "name": "ItemRenderer",
  "type": "Class",
  "description": "The ItemRenderer class is the base class for Spark item renderers."},
{ "name": "ItemRendererClassFactory",
  "type": "Method",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": "Constructor."},
{ "name": "ItemRendererClassFactory",
  "type": "Class",
  "description": "The ItemRendererClassFactory class is the default implementation of IItemRendererClassFactory."},
{ "name": "ItemRendererDataBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.ItemRendererDataBinding",
  "description": "Constructor."},
{ "name": "ItemRendererDataBinding",
  "type": "Class",
  "description": "The ItemRendererDataBinding class implements databinding for ItemRenderer instances."},
{ "name": "ItemRendererEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ItemRendererEvent",
  "description": "Constructor."},
{ "name": "ItemRendererEvent",
  "type": "Class",
  "description": "The ItemRendererEvent is dispatched by DataItemRendererFactory classes under various conditions."},
{ "name": "ItemRendererMouseController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ItemRendererMouseController",
  "description": "constructor."},
{ "name": "ItemRendererMouseController",
  "type": "Class",
  "description": "The ItemRendererMouseController class can mouse events in itemRenderers."},
{ "name": "ItemRendererMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ItemRendererMouseController",
  "description": "constructor."},
{ "name": "ItemRendererMouseController",
  "type": "Class",
  "description": "The ItemRendererMouseController class can mouse events in itemRenderers."},
{ "name": "ItemRendererSimpleBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": "Constructor."},
{ "name": "ItemRendererSimpleBinding",
  "type": "Class",
  "description": "The SimpleBinding class is lightweight data-binding class that is optimized for simple assignments of one object's property to another object's property."},
{ "name": "J",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the J key (74)."},
{ "name": "JAPANESE_HIRAGANA",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "JAPANESE_KATAKANA_FULL",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "JAPANESE_KATAKANA_HALF",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "JSONInputParser",
  "type": "Class",
  "description": "The JSONInputParser class parses a JSON structure into an array of JSON sub-structures."},
{ "name": "JSONItemConverter",
  "type": "Class",
  "description": "The JSONItemConverter class parses a JSON structure into an ActionScript object."},
{ "name": "JSONReviver",
  "type": "Method",
  "class": "org.apache.royale.reflection.beads.JSONReviver",
  "description": ""},
{ "name": "JSONReviver",
  "type": "Class",
  "description": "The JSONReviver creates ActionScript classes when parsing JSON."},
{ "name": "JUSTIFY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.VerticalAlign",
  "description": "Specifies vertical line justification within the frame"},
{ "name": "JUSTIFY",
  "type": "Property",
  "class": "spark.layouts.HorizontalAlign",
  "description": "Justify the children with respect to the container."},
{ "name": "JUSTIFY",
  "type": "Property",
  "class": "spark.layouts.VerticalAlign",
  "description": "Justify the children with respect to the container."},
{ "name": "JUSTIFY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextAlign",
  "description": "Specifies that text is justified within the lines so they fill the container space."},
{ "name": "JUSTIFY_USING_GAP",
  "type": "Property",
  "class": "spark.layouts.RowAlign",
  "description": "Justify the rows by increasing the vertical gap."},
{ "name": "JUSTIFY_USING_GAP",
  "type": "Property",
  "class": "spark.layouts.ColumnAlign",
  "description": "Justify the rows by increasing the vertical gap."},
{ "name": "JUSTIFY_USING_HEIGHT",
  "type": "Property",
  "class": "spark.layouts.RowAlign",
  "description": "Justify the rows by increasing the row height."},
{ "name": "JUSTIFY_USING_WIDTH",
  "type": "Property",
  "class": "spark.layouts.ColumnAlign",
  "description": "Justify the rows by increasing the row height."},
{ "name": "JXON",
  "type": "Method",
  "class": "org.apache.royale.utils.JXON",
  "description": ""},
{ "name": "JXON",
  "type": "Class",
  "description": "JXON is a lightweight class for parsing and using simple XML."},
{ "name": "JoinMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.JoinMemento",
  "description": ""},
{ "name": "JoinMemento",
  "type": "Class",
  "description": ""},
{ "name": "JustificationRule",
  "type": "Class",
  "description": "Defines values for setting the <code>justificationRule</code> property of the TextLayoutFormat class."},
{ "name": "JustificationStyle",
  "type": "Method",
  "class": "org.apache.royale.text.engine.JustificationStyle",
  "description": ""},
{ "name": "JustificationStyle",
  "type": "Class",
  "description": ""},
{ "name": "K",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the K key (75)."},
{ "name": "KANNADA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Kannada."},
{ "name": "KATAKANA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering for Katagana."},
{ "name": "KATAKANA_IROHA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering for Katagana."},
{ "name": "KEYBOARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_ARROW_DOWN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_ARROW_DOWN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_ARROW_LEFT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_ARROW_LEFT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_ARROW_RIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_ARROW_RIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_ARROW_UP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_ARROW_UP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_BACKSPACE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_BACKSPACE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_CAPSLOCK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_CAPSLOCK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_HIDE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_HIDE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_RETURN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_RETURN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_TAB",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_TAB",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_VOICE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KEYBOARD_VOICE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KEYCODE_DOWN",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEYCODE_END",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEYCODE_HOME",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEYCODE_LEFT",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEYCODE_PAGEDOWN",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEYCODE_PAGEUP",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEYCODE_RIGHT",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEYCODE_UP",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEYNAME_BEGIN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Begin key"},
{ "name": "KEYNAME_BREAK",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Break key"},
{ "name": "KEYNAME_CLEARDISPLAY",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Clear Display key"},
{ "name": "KEYNAME_CLEARLINE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Clear Line key"},
{ "name": "KEYNAME_DELETE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Delete key"},
{ "name": "KEYNAME_DELETECHAR",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Delete Character key"},
{ "name": "KEYNAME_DELETELINE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Delete Line key"},
{ "name": "KEYNAME_DOWNARROW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The down arrow"},
{ "name": "KEYNAME_END",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The End key"},
{ "name": "KEYNAME_EXECUTE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Execute key"},
{ "name": "KEYNAME_F1",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F1 key"},
{ "name": "KEYNAME_F10",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F10 key"},
{ "name": "KEYNAME_F11",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F11 key"},
{ "name": "KEYNAME_F12",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F12 key"},
{ "name": "KEYNAME_F13",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F13 key"},
{ "name": "KEYNAME_F14",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F14 key"},
{ "name": "KEYNAME_F15",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F15 key"},
{ "name": "KEYNAME_F16",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F16 key"},
{ "name": "KEYNAME_F17",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F17 key"},
{ "name": "KEYNAME_F18",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F18 key"},
{ "name": "KEYNAME_F19",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F19 key"},
{ "name": "KEYNAME_F2",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F2 key"},
{ "name": "KEYNAME_F20",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F20 key"},
{ "name": "KEYNAME_F21",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F21 key"},
{ "name": "KEYNAME_F22",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F22 key"},
{ "name": "KEYNAME_F23",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F23 key"},
{ "name": "KEYNAME_F24",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F24 key"},
{ "name": "KEYNAME_F25",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F25 key"},
{ "name": "KEYNAME_F26",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F26 key"},
{ "name": "KEYNAME_F27",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F27 key"},
{ "name": "KEYNAME_F28",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F28 key"},
{ "name": "KEYNAME_F29",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F29 key"},
{ "name": "KEYNAME_F3",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F3 key"},
{ "name": "KEYNAME_F30",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F30 key"},
{ "name": "KEYNAME_F31",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F31 key"},
{ "name": "KEYNAME_F32",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F32 key"},
{ "name": "KEYNAME_F33",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F33 key"},
{ "name": "KEYNAME_F34",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F34 key"},
{ "name": "KEYNAME_F35",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F35 key"},
{ "name": "KEYNAME_F4",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F4 key"},
{ "name": "KEYNAME_F5",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F5 key"},
{ "name": "KEYNAME_F6",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F6 key"},
{ "name": "KEYNAME_F7",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F7 key"},
{ "name": "KEYNAME_F8",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F8 key"},
{ "name": "KEYNAME_F9",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The F9 key"},
{ "name": "KEYNAME_FIND",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Find key"},
{ "name": "KEYNAME_HELP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Help key"},
{ "name": "KEYNAME_HOME",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Home key"},
{ "name": "KEYNAME_INSERT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Insert key"},
{ "name": "KEYNAME_INSERTCHAR",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Insert Character key"},
{ "name": "KEYNAME_INSERTLINE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Insert Line key"},
{ "name": "KEYNAME_LEFTARROW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The left arrow"},
{ "name": "KEYNAME_MENU",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Menu key"},
{ "name": "KEYNAME_MODESWITCH",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Mode Switch key"},
{ "name": "KEYNAME_NEXT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Next key"},
{ "name": "KEYNAME_PAGEDOWN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Page Down key"},
{ "name": "KEYNAME_PAGEUP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Page Up key"},
{ "name": "KEYNAME_PAUSE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Pause key"},
{ "name": "KEYNAME_PLAYPAUSE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Play_Pause key"},
{ "name": "KEYNAME_PREV",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Previous key"},
{ "name": "KEYNAME_PRINT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Print key"},
{ "name": "KEYNAME_PRINTSCREEN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Print Screen"},
{ "name": "KEYNAME_REDO",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Redo key"},
{ "name": "KEYNAME_RESET",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Reset key"},
{ "name": "KEYNAME_RIGHTARROW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The right arrow"},
{ "name": "KEYNAME_SCROLLLOCK",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Scroll Lock key"},
{ "name": "KEYNAME_SELECT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Select key"},
{ "name": "KEYNAME_STOP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Stop key"},
{ "name": "KEYNAME_SYSREQ",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The System Request key"},
{ "name": "KEYNAME_SYSTEM",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The System key"},
{ "name": "KEYNAME_UNDO",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The Undo key"},
{ "name": "KEYNAME_UPARROW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The up arrow"},
{ "name": "KEYNAME_USER",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The User key"},
{ "name": "KEY_DOWN",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEY_DOWN",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "KEY_DOWN",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "KEY_FOCUS_CHANGE",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "KEY_FOCUS_CHANGE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FocusEvent",
  "description": ""},
{ "name": "KEY_UP",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KEY_UP",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "KILOMETERS_PER_HOUR",
  "type": "Property",
  "class": "google.maps.weather.WindSpeedUnit",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "KITCHEN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "KITCHEN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "KOREAN",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "KeepComboPopupWithinParentBounds",
  "type": "Method",
  "class": "org.apache.royale.html.beads.KeepComboPopupWithinParentBounds",
  "description": ""},
{ "name": "KeepComboPopupWithinParentBounds",
  "type": "Class",
  "description": "The KeepComboPopupWithinParentBounds can be used with ComboBox to make sure its popup does not overflow its parent bounds."},
{ "name": "Kerning",
  "type": "Method",
  "class": "org.apache.royale.text.engine.Kerning",
  "description": ""},
{ "name": "Kerning",
  "type": "Class",
  "description": ""},
{ "name": "KeyConverter",
  "type": "Class",
  "description": "Converts Keyboard Codes and key values into rational string equivalents."},
{ "name": "Keyboard",
  "type": "Class",
  "description": "This class holds constants for special keys See: See:"},
{ "name": "KeyboardEvent",
  "type": "Method",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "KeyboardEvent",
  "type": "Class",
  "description": "Keyboard events"},
{ "name": "KeyboardEvent",
  "type": "Method",
  "class": "mx.events.KeyboardEvent",
  "description": "Constructor."},
{ "name": "KeyboardEvent",
  "type": "Class",
  "description": ""},
{ "name": "KeyboardEventConverter",
  "type": "Class",
  "description": "Converts low level keyboard events to Royale KeyboardEvents"},
{ "name": "KeyboardEventConverter",
  "type": "Class",
  "description": "Converts low level keyboard events to Royale KeyboardEvents"},
{ "name": "KmlLayerStatus",
  "type": "Class",
  "description": ""},
{ "name": "L",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the L key (76)."},
{ "name": "LABEL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LABEL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LABEL_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LABEL_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LANDSCAPE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LANDSCAPE",
  "type": "Property",
  "class": "org.apache.royale.core.BrowserOrientation",
  "description": ""},
{ "name": "LANDSCAPE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LANGUAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LANGUAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LAPTOP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LAPTOP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LAPTOP_CHROMEBOOK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LAPTOP_CHROMEBOOK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LAPTOP_MAC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LAPTOP_MAC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LAPTOP_WINDOWS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LAPTOP_WINDOWS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LARGE",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.SizeControl",
  "description": ""},
{ "name": "LARGE",
  "type": "Property",
  "class": "google.maps.ZoomControlStyle",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LARGE_HORIZONTAL_LINK_UNIT",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LARGE_RECTANGLE",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LARGE_VERTICAL_LINK_UNIT",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LAST",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLineLocation",
  "description": "Specifies the last line in a paragraph."},
{ "name": "LAST",
  "type": "Property",
  "class": "mx.collections.CursorBookmark",
  "description": "A bookmark for the last item in an <code>ICollectionView</code>."},
{ "name": "LAST",
  "type": "Property",
  "class": "mx.rpc.mxml.Concurrency",
  "description": "Making a request causes the client to ignore a result or fault for any current outstanding request."},
{ "name": "LAST",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for watching the last channel or show watched."},
{ "name": "LAST_INDEX_MODE",
  "type": "Property",
  "class": "org.apache.royale.collections.Sort",
  "description": "When executing a find return the index for the last matching item."},
{ "name": "LAST_INDEX_MODE",
  "type": "Property",
  "class": "mx.collections.Sort",
  "description": "When executing a find return the index for the last matching item."},
{ "name": "LAST_INDEX_MODE",
  "type": "Property",
  "class": "spark.collections.Sort",
  "description": "When executing a find return the index for the last matching item."},
{ "name": "LAST_PAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LAST_PAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LAUNCH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LAUNCH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LAYERS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LAYERS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LAYERS_CLEAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LAYERS_CLEAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.SimpleHorizontalLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.SimpleVerticalLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.FormLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TableLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.FormItemLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": ""},
{ "name": "LAYOUT_TYPE_NAMES",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.BasicLayout",
  "description": ""},
{ "name": "LEADERBOARD",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LEAK_ADD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LEAK_ADD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LEAK_REMOVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LEAK_REMOVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": ""},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.NavigationKeys",
  "description": "The left arrow key."},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": ""},
{ "name": "LEFT",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "LEFT",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate one line or \"step\" to the left."},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "LEFT",
  "type": "Property",
  "class": "mx.controls.ProgressBarLabelPlacement",
  "description": "Specifies to place the label to the left of the progress bar."},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.AdaptiveToolTipBead",
  "description": ""},
{ "name": "LEFT",
  "type": "Property",
  "class": "mx.controls.ProgressBarDirection",
  "description": "Specifies to fill the progress bar from the right to the left."},
{ "name": "LEFT",
  "type": "Property",
  "class": "spark.layouts.HorizontalAlign",
  "description": "Align children to the left of the container."},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Float",
  "description": "Graphic floats on the left side of the text."},
{ "name": "LEFT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Left Arrow key (37)."},
{ "name": "LEFT",
  "type": "Property",
  "class": "spark.layouts.ColumnAlign",
  "description": "Do not justify the rows."},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextAlign",
  "description": "Specifies left edge alignment."},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ClearFloats",
  "description": "Specifies that text skips over left floats."},
{ "name": "LEFT",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.TextAlign",
  "description": ""},
{ "name": "LEFTBRACKET",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the [ key (219)."},
{ "name": "LEFT_BOTTOM",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LEFT_CENTER",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LEFT_EFFECT",
  "type": "Property",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": ""},
{ "name": "LEFT_TOP",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LENS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LENS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LHS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "The left-hand side only."},
{ "name": "LIBRARY_ADD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LIBRARY_ADD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LIBRARY_BOOKS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LIBRARY_BOOKS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LIBRARY_MUSIC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LIBRARY_MUSIC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LIGHTBULB_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LIGHTBULB_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LIME",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "LIMITS_EXCEEDED",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "LINEAR_SCALE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LINEAR_SCALE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LINE_HEIGHT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BaselineOffset",
  "description": "Specifies an offset equal to the height of the line."},
{ "name": "LINE_STYLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LINE_STYLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LINE_WEIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LINE_WEIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LINING",
  "type": "Property",
  "class": "org.apache.royale.text.engine.DigitCase",
  "description": ""},
{ "name": "LINK",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkState",
  "description": "Value for the normal, default link state."},
{ "name": "LINK",
  "type": "Property",
  "class": "mx.managers.DragManager",
  "description": "Constant that specifies that the type of drag action is \"link\"."},
{ "name": "LINK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LINK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LINK",
  "type": "Property",
  "class": "org.apache.royale.text.events.TextEvent",
  "description": ""},
{ "name": "LINKED_CAMERA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LINKED_CAMERA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LINUX_OS",
  "type": "Property",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "LIST",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "LIST",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LIST",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LIST_ALT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LITTLE_ENDIAN",
  "type": "Property",
  "class": "org.apache.royale.utils.Endian",
  "description": "Indicates the least significant byte of the multibyte number appears first in the sequence of bytes."},
{ "name": "LIVE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for returning to live [position in broadcast]."},
{ "name": "LIVE_TV",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LIVE_TV",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOADING",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElementStatus",
  "description": "Load has been initiated (but not completed) on a graphic element that is a URL."},
{ "name": "LOAD_PENDING",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElementStatus",
  "description": "Graphic element is an URL that has not been loaded."},
{ "name": "LOCAL_ACTIVITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_ACTIVITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_AIRPORT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_AIRPORT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_ATM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_ATM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_BAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_BAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_CAFE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_CAFE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_CAR_WASH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_CAR_WASH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_CONVENIENCE_STORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_CONVENIENCE_STORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_DINING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_DINING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_DRINK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_DRINK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_FLORIST",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_FLORIST",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_GAS_STATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_GAS_STATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_GROCERY_STORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_GROCERY_STORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_HOSPITAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_HOSPITAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_HOTEL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_HOTEL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_LAUNDRY_SERVICE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_LAUNDRY_SERVICE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_LIBRARY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_LIBRARY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_MALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_MALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_MOVIES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_MOVIES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_OFFER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_OFFER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PARKING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PARKING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PHARMACY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PHARMACY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PHONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PHONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PIZZA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PIZZA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PLAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PLAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_POST_OFFICE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_POST_OFFICE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PRINTSHOP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_PRINTSHOP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_SEE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_SEE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_SHIPPING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_SHIPPING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCAL_TAXI",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCAL_TAXI",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCATION_CITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCATION_CITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCATION_DISABLED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCATION_DISABLED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCATION_SEARCHING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCATION_SEARCHING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCK_OPEN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCK_OPEN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOCK_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOCK_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOG",
  "type": "Property",
  "class": "mx.logging.LogEvent",
  "description": "Event type constant; identifies a logging event."},
{ "name": "LOGIN_AFTER_DISCONNECT",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "LOGIN_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to send credentials to the endpoint so that the user can be logged in over the current channel."},
{ "name": "LOGIN_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to send credentials to the endpoint so that the user can be logged in over the current channel."},
{ "name": "LOGOUT_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to log the user out of the current channel, and will invalidate the server session if the channel is HTTP based."},
{ "name": "LOGOUT_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to log the user out of the current channel, and will invalidate the server session if the channel is HTTP based."},
{ "name": "LOOKS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOOKS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOOKS_3",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOOKS_3",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOOKS_4",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOOKS_4",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOOKS_5",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOOKS_5",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOOKS_6",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOOKS_6",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOOKS_ONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOOKS_ONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOOKS_TWO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOOKS_TWO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOOP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOOP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOUPE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOUPE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOW",
  "type": "Property",
  "class": "mx.managers.CursorManagerPriority",
  "description": "Constant that specifies the lowest cursor priority when passed as the <code>priority</code> argument to <code>setCursor()</code>."},
{ "name": "LOWERCASE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TypographicCase",
  "description": ""},
{ "name": "LOWERCASE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TLFTypographicCase",
  "description": "Specifies that all characters use lowercase glyphs on output."},
{ "name": "LOWERCASE_TO_SMALL_CAPS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TLFTypographicCase",
  "description": "Converts all lowercase characters to uppercase, then applies small caps to only the characters that the conversion changed."},
{ "name": "LOWER_ALPHA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Lower-case alphabetic \"numbering\": a-z, aa-zz, and so on."},
{ "name": "LOWER_GREEK",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Lower-case Greek alphabetic \"numering\"."},
{ "name": "LOWER_LATIN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Lower-case alphabetic \"numbering\": a-z, aa-zz, and so on."},
{ "name": "LOWER_ROMAN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Lower-case Roman numbering: i, ii, iii, iv, and so on."},
{ "name": "LOW_PRIORITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOW_PRIORITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LOYALTY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "LOYALTY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "LTR",
  "type": "Property",
  "class": "mx.core.LayoutDirection",
  "description": "Specifies left-to-right layout direction for a style client or a visual element."},
{ "name": "LTR",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Direction",
  "description": "Specifies left-to-right direction for text."},
{ "name": "Label",
  "type": "Method",
  "class": "org.apache.royale.html.Label",
  "description": "Constructor."},
{ "name": "Label",
  "type": "Class",
  "description": "The Label class implements the basic control for labeling other controls."},
{ "name": "Label",
  "type": "Method",
  "class": "mx.controls.Label",
  "description": "Constructor."},
{ "name": "Label",
  "type": "Class",
  "description": "The Label control displays a single line of noneditable text."},
{ "name": "Label",
  "type": "Method",
  "class": "spark.components.Label",
  "description": "Constructor."},
{ "name": "Label",
  "type": "Class",
  "description": "Label is a low-level UIComponent that can render one or more lines of uniformly-formatted text."},
{ "name": "Label",
  "type": "Class",
  "description": ""},
{ "name": "Label",
  "type": "Method",
  "class": "org.apache.royale.jewel.Label",
  "description": "Constructor."},
{ "name": "Label",
  "type": "Class",
  "description": "The Label class implements the basic control for labeling other controls."},
{ "name": "Label",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Label",
  "description": "constructor."},
{ "name": "Label",
  "type": "Class",
  "description": "The Label class represents an HTML <label> element"},
{ "name": "Label",
  "type": "Class",
  "description": "Label probably should extend TextField directly, but the player's APIs for TextLine do not allow direct instantiation, and we might want to allow Labels to be declared and have their actual view be swapped out."},
{ "name": "LabelColor",
  "type": "Class",
  "description": ""},
{ "name": "LabelColor",
  "type": "Property",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "Language",
  "type": "Class",
  "description": ""},
{ "name": "LatLng",
  "type": "Method",
  "class": "google.maps.LatLng",
  "description": ""},
{ "name": "LatLng",
  "type": "Class",
  "description": ""},
{ "name": "LatLngBounds",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "LatLngBounds",
  "type": "Class",
  "description": ""},
{ "name": "LayoutBase",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Constructor."},
{ "name": "LayoutBase",
  "type": "Class",
  "description": "This class is the base class for most, if not all, layouts."},
{ "name": "LayoutBase",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Constructor."},
{ "name": "LayoutBase",
  "type": "Class",
  "description": "The LayoutBase class defines the base class for all Spark layouts."},
{ "name": "LayoutChangeNotifier",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.LayoutChangeNotifier",
  "description": "constructor."},
{ "name": "LayoutChangeNotifier",
  "type": "Class",
  "description": "The LayoutChangeNotifier notifies layouts when a property it is watching changes."},
{ "name": "LayoutData",
  "type": "Method",
  "class": "org.apache.royale.core.layout.LayoutData",
  "description": ""},
{ "name": "LayoutData",
  "type": "Class",
  "description": "The LayoutData class is a utility class for holding margins, border and padding of a component."},
{ "name": "LayoutDirection",
  "type": "Class",
  "description": "The LayoutDirection class defines the constant values for the <code>layoutDirection</code> style of an IStyleClient and the <code>layoutDirection</code> property of an ILayoutDirectionElement."},
{ "name": "LayoutElementHelper",
  "type": "Class",
  "description": "The LayoutElementHelper class is for internal use only."},
{ "name": "LayoutElementUIComponentUtils",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "LayoutElementUIComponentUtils",
  "type": "Class",
  "description": "Helper class to implement the ILayoutElement interface for IUIComponent classes."},
{ "name": "LayoutManager",
  "type": "Class",
  "description": "The LayoutManager class is an all static class which allows queing up measuring of components and layouts to prevent layout thrashing"},
{ "name": "LayoutOnShow",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.LayoutOnShow",
  "description": "Constructor."},
{ "name": "LayoutOnShow",
  "type": "Class",
  "description": "This bead ensures that IUIBase objects that are displayed are also laid out."},
{ "name": "LayoutTitle",
  "type": "Method",
  "class": "org.apache.royale.mdl.LayoutTitle",
  "description": "constructor."},
{ "name": "LayoutTitle",
  "type": "Class",
  "description": "The LayoutTitle class is an extended Span used in MDL Layout Header inside a HeaderRow in a Drawer to style the title."},
{ "name": "LayoutTweener",
  "type": "Method",
  "class": "org.apache.royale.utils.LayoutTweener",
  "description": ""},
{ "name": "LayoutTweener",
  "type": "Class",
  "description": ""},
{ "name": "LazyCollection",
  "type": "Method",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": "Constructor."},
{ "name": "LazyCollection",
  "type": "Class",
  "description": "The LazyCollection class implements a collection whose items require conversion from a source data format to some other data type."},
{ "name": "LeadingModel",
  "type": "Class",
  "description": "Defines values for setting the <code>leadingModel</code> property of the <code>TextLayoutFormat</code> class, composed of valid combinations of leading basis and leading direction."},
{ "name": "LeadingUtils",
  "type": "Class",
  "description": ""},
{ "name": "LeafNodeCursor",
  "type": "Method",
  "class": "mx.collections.LeafNodeCursor",
  "description": "Constructor."},
{ "name": "LeafNodeCursor",
  "type": "Class",
  "description": "This class provides a heirarchical view (a tree-like) view of a standard collection."},
{ "name": "Legend",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Constructor."},
{ "name": "Legend",
  "type": "Class",
  "description": "The Legend control adds a legend to your charts, where the legend displays the label for each data series in the chart and a key showing the chart element for the series."},
{ "name": "LegendData",
  "type": "Method",
  "class": "mx.charts.chartClasses.LegendData",
  "description": "Constructor."},
{ "name": "LegendData",
  "type": "Class",
  "description": "The LegendData structure is used by charts to describe the items that should be displayed in an auto-generated legend."},
{ "name": "LegendItem",
  "type": "Method",
  "class": "mx.charts.LegendItem",
  "description": "Constructor."},
{ "name": "LegendItem",
  "type": "Class",
  "description": "Controls the individual legend elements in a chart legend."},
{ "name": "LegendMouseEvent",
  "type": "Method",
  "class": "mx.charts.events.LegendMouseEvent",
  "description": "Constructor."},
{ "name": "LegendMouseEvent",
  "type": "Class",
  "description": "The LegendMouseEvent class represents event objects that are specific to the chart legend components."},
{ "name": "Li",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Li",
  "description": "constructor."},
{ "name": "Li",
  "type": "Class",
  "description": "The Li class represents an HTML <li> element"},
{ "name": "LigatureLevel",
  "type": "Method",
  "class": "org.apache.royale.text.engine.LigatureLevel",
  "description": ""},
{ "name": "LigatureLevel",
  "type": "Class",
  "description": ""},
{ "name": "Line",
  "type": "Method",
  "class": "spark.primitives.Line",
  "description": "Constructor."},
{ "name": "Line",
  "type": "Class",
  "description": "The Line class is a graphic element that draws a line between two points."},
{ "name": "LineBreak",
  "type": "Class",
  "description": "Defines values for setting the <code>lineBreak</code> property of <code>TextLayoutFormat</code> to specify how lines are broken within wrapping text."},
{ "name": "LineChart",
  "type": "Method",
  "class": "mx.charts.LineChart",
  "description": "Constructor."},
{ "name": "LineChart",
  "type": "Class",
  "description": "The LineChart control represents a data series as points connected by a continuous line."},
{ "name": "LineChart",
  "type": "Method",
  "class": "org.apache.royale.charts.LineChart",
  "description": "constructor."},
{ "name": "LineChart",
  "type": "Class",
  "description": "The LineChart displays a series of line graphs with optional graphics at each vertex."},
{ "name": "LineChartCategoryVsLinearLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.LineChartCategoryVsLinearLayout",
  "description": ""},
{ "name": "LineChartCategoryVsLinearLayout",
  "type": "Class",
  "description": "The LineChartCategoryVsLinearLayout displays a line graph of plot points where the horizontal axis is category value and the vertical axis is numeric."},
{ "name": "LineChartLinearVsLinearLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.LineChartLinearVsLinearLayout",
  "description": ""},
{ "name": "LineChartLinearVsLinearLayout",
  "type": "Class",
  "description": "The LineChartLinearVsLinearLayout displays a line graph of plot points where both axes are numeric values."},
{ "name": "LineFormattedTarget",
  "type": "Method",
  "class": "mx.logging.targets.LineFormattedTarget",
  "description": "Constructor."},
{ "name": "LineFormattedTarget",
  "type": "Class",
  "description": "All logger target implementations that have a formatted line style output should extend this class."},
{ "name": "LineJustification",
  "type": "Method",
  "class": "org.apache.royale.text.engine.LineJustification",
  "description": ""},
{ "name": "LineJustification",
  "type": "Class",
  "description": ""},
{ "name": "LineRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.LineRenderer",
  "description": "Constructor."},
{ "name": "LineRenderer",
  "type": "Class",
  "description": "A simple implementation of a line segment renderer that is used by LineSeries objects."},
{ "name": "LineSegmentItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": ""},
{ "name": "LineSegmentItemRenderer",
  "type": "Class",
  "description": "The LineSegmentItemRenderer class draws a line between the vertices of a LineSeries."},
{ "name": "LineSeries",
  "type": "Method",
  "class": "mx.charts.series.LineSeries",
  "description": "Constructor."},
{ "name": "LineSeries",
  "type": "Class",
  "description": "Defines a data series for a LineChart control."},
{ "name": "LineSeries",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.LineSeries",
  "description": ""},
{ "name": "LineSeries",
  "type": "Class",
  "description": "The LineChartSeries represents a pair of X and Y values to be drawn within a org."},
{ "name": "LineSeriesItem",
  "type": "Method",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "Constructor."},
{ "name": "LineSeriesItem",
  "type": "Class",
  "description": "Represents the information required to render an item as part of a LineSeries."},
{ "name": "LineSeriesRenderData",
  "type": "Method",
  "class": "mx.charts.series.renderData.LineSeriesRenderData",
  "description": "Constructor."},
{ "name": "LineSeriesRenderData",
  "type": "Class",
  "description": "Represents all the information needed by the LineSeries to render."},
{ "name": "LineSeriesSegment",
  "type": "Method",
  "class": "mx.charts.series.items.LineSeriesSegment",
  "description": "Constructor."},
{ "name": "LineSeriesSegment",
  "type": "Class",
  "description": "Represents the information required to render a segment in a LineSeries."},
{ "name": "LineStyle",
  "type": "Class",
  "description": ""},
{ "name": "LineTo",
  "type": "Method",
  "class": "org.apache.royale.graphics.LineTo",
  "description": ""},
{ "name": "LineTo",
  "type": "Class",
  "description": ""},
{ "name": "LinearAxis",
  "type": "Method",
  "class": "mx.charts.LinearAxis",
  "description": "Constructor."},
{ "name": "LinearAxis",
  "type": "Class",
  "description": "The LinearAxis class maps numeric values evenly between a minimum and maximum value along a chart axis."},
{ "name": "LinearGradient",
  "type": "Class",
  "description": ""},
{ "name": "LinearGradient",
  "type": "Class",
  "description": ""},
{ "name": "LinearGradientStroke",
  "type": "Method",
  "class": "mx.graphics.LinearGradientStroke",
  "description": "Constructor."},
{ "name": "LinearGradientStroke",
  "type": "Class",
  "description": "The LinearGradientStroke class lets you specify a gradient filled stroke."},
{ "name": "LinearLayoutVector",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": ""},
{ "name": "LinearLayoutVector",
  "type": "Class",
  "description": "A sparse array of \"major dimension\" sizes that represent VerticalLayout item heights or HorizontalLayout item widths, and the current \"minor dimension\" maximum size."},
{ "name": "LinkBar",
  "type": "Method",
  "class": "mx.controls.LinkBar",
  "description": "Constructor."},
{ "name": "LinkBar",
  "type": "Class",
  "description": "A LinkBar control defines a horizontal or vertical row of LinkButton controls that designate a series of link destinations."},
{ "name": "LinkButton",
  "type": "Method",
  "class": "mx.controls.LinkButton",
  "description": "Constructor."},
{ "name": "LinkButton",
  "type": "Class",
  "description": "The LinkButton control is a borderless Button control whose contents are highlighted when a user moves the mouse over it."},
{ "name": "LinkElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "Constructor - creates a new LinkElement instance."},
{ "name": "LinkElement",
  "type": "Class",
  "description": "The LinkElement class defines a link to a URI (Universal Resource Identifier), which is executed when the user clicks it."},
{ "name": "LinkState",
  "type": "Class",
  "description": "The LinkState class defines a set of constants for the <code>linkState</code> property of the LinkElement class."},
{ "name": "List",
  "type": "Method",
  "class": "org.apache.royale.html.List",
  "description": "constructor."},
{ "name": "List",
  "type": "Class",
  "description": "The List class is a component that displays multiple data items."},
{ "name": "List",
  "type": "Method",
  "class": "org.apache.royale.jewel.List",
  "description": "constructor."},
{ "name": "List",
  "type": "Class",
  "description": "The List class is a component that displays multiple data items."},
{ "name": "List",
  "type": "Method",
  "class": "mx.controls.List",
  "description": "Constructor."},
{ "name": "List",
  "type": "Class",
  "description": "The List control displays a vertical list of items."},
{ "name": "List",
  "type": "Method",
  "class": "org.apache.royale.mdl.List",
  "description": ""},
{ "name": "List",
  "type": "Class",
  "description": "List in MDL are customizable scrollable lists."},
{ "name": "List",
  "type": "Class",
  "description": "Label probably should extend TextField directly, but the player's APIs for TextLine do not allow direct instantiation, and we might want to allow Labels to be declared and have their actual view be swapped out."},
{ "name": "List",
  "type": "Method",
  "class": "org.apache.royale.express.List",
  "description": ""},
{ "name": "List",
  "type": "Class",
  "description": "The List class is a component that displays multiple data items take from a data source."},
{ "name": "List",
  "type": "Method",
  "class": "spark.components.List",
  "description": "Constructor."},
{ "name": "List",
  "type": "Class",
  "description": "The List control displays a vertical list of items."},
{ "name": "ListBase",
  "type": "Method",
  "class": "mx.controls.listClasses.ListBase",
  "description": "Constructor."},
{ "name": "ListBase",
  "type": "Class",
  "description": ""},
{ "name": "ListBase",
  "type": "Method",
  "class": "spark.components.supportClasses.ListBase",
  "description": "Constructor."},
{ "name": "ListBase",
  "type": "Class",
  "description": "The ListBase class is the base class for all components that support selection."},
{ "name": "ListBaseStrandChildren",
  "type": "Method",
  "class": "org.apache.royale.core.ListBaseStrandChildren",
  "description": "Constructor."},
{ "name": "ListBaseStrandChildren",
  "type": "Class",
  "description": "The ListBaseStrandChildren exists so that Lists are compatible with the ListView/ContainerView beads."},
{ "name": "ListCollectionView",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "The ListCollectionView constructor."},
{ "name": "ListCollectionView",
  "type": "Class",
  "description": "The ListCollectionView class adds the properties and methods of the <code>ICollectionView</code> interface to an object that conforms to the <code>IList</code> interface."},
{ "name": "ListDrawingLayerBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ListDrawingLayerBead",
  "description": "Constructor"},
{ "name": "ListDrawingLayerBead",
  "type": "Class",
  "description": "ListDrawingLayerBead places a graphic space into the List that is positioned the item renderers."},
{ "name": "ListElement",
  "type": "Class",
  "description": "The List class is used for grouping together items into a numbered or unnumbered list."},
{ "name": "ListEvent",
  "type": "Method",
  "class": "mx.events.ListEvent",
  "description": "Constructor."},
{ "name": "ListEvent",
  "type": "Class",
  "description": "The ListEvent class represents events associated with items in list-based controls such as List, Tree, Menu, and DataGrid."},
{ "name": "ListItemElement",
  "type": "Class",
  "description": "<p> ListItemElement is an item in a list."},
{ "name": "ListItemPrimaryContent",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ListItemPrimaryContent",
  "description": "constructor."},
{ "name": "ListItemPrimaryContent",
  "type": "Class",
  "description": "The ListItemPrimaryContent class decorates a tag element in a list item renderer Defines the primary content sub-division"},
{ "name": "ListItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.ListItemRenderer",
  "description": "constructor."},
{ "name": "ListItemRenderer",
  "type": "Class",
  "description": "The ListItemRenderer defines the basic Item Renderer for a MDL List Component."},
{ "name": "ListItemRenderer",
  "type": "Method",
  "class": "mx.controls.listClasses.ListItemRenderer",
  "description": ""},
{ "name": "ListItemRenderer",
  "type": "Class",
  "description": "The ListItemRenderer is the default renderer for mx."},
{ "name": "ListItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.ListItemRenderer",
  "description": "constructor."},
{ "name": "ListItemRenderer",
  "type": "Class",
  "description": "The ListItemRenderer defines the basic Item Renderer for a Jewel List Component."},
{ "name": "ListItemSecondaryAction",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ListItemSecondaryAction",
  "description": "constructor."},
{ "name": "ListItemSecondaryAction",
  "type": "Class",
  "description": "The ListItemSecondaryAction class decorates a tag element in a list item renderer Defines the Action sub-division Requires the host ListItemrenderer to have \"twoLine\" or \"threeLine\" set to true"},
{ "name": "ListItemSecondaryContent",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ListItemSecondaryContent",
  "description": "constructor."},
{ "name": "ListItemSecondaryContent",
  "type": "Class",
  "description": "The ListItemSecondaryContent class decorates a tag element in a list item renderer Defines the secondary content sub-division Requires the host ListItemrenderer to have \"twoLine\" or \"threeLine\" set to true"},
{ "name": "ListItemSecondaryInfo",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ListItemSecondaryInfo",
  "description": "constructor."},
{ "name": "ListItemSecondaryInfo",
  "type": "Class",
  "description": "The ListItemSecondaryInfo class decorates a tag element in a list item renderer Defines the information sub-division Requires the host ListItemrenderer to have \"twoLine\" or \"threeLine\" set to true"},
{ "name": "ListItemSubTitle",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ListItemSubTitle",
  "description": "constructor."},
{ "name": "ListItemSubTitle",
  "type": "Class",
  "description": "The ListItemSubTitle class decorates a tag element in a list item renderer Requires the host ListItemrenderer to have \"twoLine\" set to true"},
{ "name": "ListItemTextBody",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.ListItemTextBody",
  "description": "constructor."},
{ "name": "ListItemTextBody",
  "type": "Class",
  "description": "The ListItemTextBody class decorates a tag element in a list item renderer Requires the host ListItemrenderer to have \"threeLine\" set to true"},
{ "name": "ListMarkerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Create a ListMarkerFormat that holds all the properties possible for a list marker."},
{ "name": "ListMarkerFormat",
  "type": "Class",
  "description": "Defines the marker format in a ListItemElement."},
{ "name": "ListPresentationModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.ListPresentationModel",
  "description": "constructor."},
{ "name": "ListPresentationModel",
  "type": "Class",
  "description": "The ListPresentationModel holds values used by list controls for presenting their user interfaces."},
{ "name": "ListPresentationModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ListPresentationModel",
  "description": "constructor."},
{ "name": "ListPresentationModel",
  "type": "Class",
  "description": "The ListPresentationModel holds values used by list controls for presenting their user interfaces."},
{ "name": "ListSingleSelectionMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": "Constructor."},
{ "name": "ListSingleSelectionMouseController",
  "type": "Class",
  "description": "The ListSingleSelectionMouseController class is a controller for org."},
{ "name": "ListSingleSelectionMouseController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": "Constructor."},
{ "name": "ListSingleSelectionMouseController",
  "type": "Class",
  "description": "The ListSingleSelectionMouseController class is a controller for org."},
{ "name": "ListStylePosition",
  "type": "Class",
  "description": "Defines values for setting the <code>listStylePosition</code> property."},
{ "name": "ListStyleType",
  "type": "Class",
  "description": "Defines values for setting the <code>listStyleType</code> property of a TextLayoutFormat object."},
{ "name": "ListView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ListView",
  "description": ""},
{ "name": "ListView",
  "type": "Class",
  "description": "The List class creates the visual elements of the org."},
{ "name": "ListView",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.ListView",
  "description": ""},
{ "name": "ListView",
  "type": "Class",
  "description": "ListView makes sure the itemRendererFactory and the layout beads are installed."},
{ "name": "ListView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.ListView",
  "description": ""},
{ "name": "ListView",
  "type": "Class",
  "description": "The ListView class creates the visual elements of the org."},
{ "name": "LoadIndicator",
  "type": "Method",
  "class": "org.apache.royale.html.LoadIndicator",
  "description": ""},
{ "name": "LoadIndicator",
  "type": "Class",
  "description": "The loader class provides an animated indicator"},
{ "name": "LoaderConfig",
  "type": "Method",
  "class": "mx.messaging.config.LoaderConfig",
  "description": "Constructor."},
{ "name": "LoaderConfig",
  "type": "Class",
  "description": "This class acts as a context for the messaging framework so that it has access the URL and arguments of the SWF without needing access to the root MovieClip's LoaderInfo or Flex's Application class."},
{ "name": "LocalStorage",
  "type": "Method",
  "class": "org.apache.royale.storage.LocalStorage",
  "description": "Constructor."},
{ "name": "LocalStorage",
  "type": "Class",
  "description": "The LocalStorage class allows apps to store small amounts of data locally, in the browser's permitted storage area."},
{ "name": "LocalStorageProvider",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.LocalStorageProvider",
  "description": "Constructor."},
{ "name": "LocalStorageProvider",
  "type": "Class",
  "description": "The LocalStorageProvider class allows apps to store small amounts of data locally, in the browser's permitted storage area."},
{ "name": "Locale",
  "type": "Method",
  "class": "mx.resources.Locale",
  "description": "Constructor."},
{ "name": "Locale",
  "type": "Class",
  "description": "The Locale class can be used to parse a locale String such as <code>\"en_US_MAC\"</code> into its three parts: a language code, a country code, and a variant."},
{ "name": "LocaleSorter",
  "type": "Class",
  "description": "The APIs of the LocaleSorter class provides the sorting functionality of application locales against system preferences."},
{ "name": "LocaleUtil",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.LocaleUtil",
  "description": ""},
{ "name": "LocaleUtil",
  "type": "Class",
  "description": "Utilities for managing and getting information about Locale based defaults."},
{ "name": "LocaleUtils",
  "type": "Method",
  "class": "org.apache.royale.utils.LocaleUtils",
  "description": ""},
{ "name": "LocaleUtils",
  "type": "Class",
  "description": "The LocaleUtils class is an all-static class with methods for getting informatiojn about the locale."},
{ "name": "Log",
  "type": "Class",
  "description": "Provides pseudo-hierarchical logging capabilities with multiple format and output options."},
{ "name": "LogAxis",
  "type": "Method",
  "class": "mx.charts.LogAxis",
  "description": "Constructor."},
{ "name": "LogAxis",
  "type": "Class",
  "description": "The LogAxis class maps numeric values logarithmically between a minimum and maximum value along a chart axis."},
{ "name": "LogEvent",
  "type": "Method",
  "class": "mx.logging.LogEvent",
  "description": "Constructor."},
{ "name": "LogEvent",
  "type": "Class",
  "description": "Represents the log information for a single logging event."},
{ "name": "LogEventLevel",
  "type": "Class",
  "description": "Static class containing constants for use in the <code>level</code> property."},
{ "name": "LogLogger",
  "type": "Method",
  "class": "mx.logging.LogLogger",
  "description": "Constructor."},
{ "name": "LogLogger",
  "type": "Class",
  "description": "The logger that is used within the logging framework."},
{ "name": "Lookalike",
  "type": "Method",
  "class": "org.apache.royale.core.Lookalike",
  "description": "Constructor."},
{ "name": "Lookalike",
  "type": "Class",
  "description": "The UIElement class Takes an IRenderedObject and creates a new UIBase which has the *appearance* of the original object."},
{ "name": "LowerCase",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.LowerCase",
  "description": "constructor."},
{ "name": "LowerCase",
  "type": "Class",
  "description": "The LowerCase class is a specialty bead that can be used with any Jewel TextInputBase control."},
{ "name": "LuminosityMaskShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.LuminosityMaskShader",
  "description": "Constructor."},
{ "name": "LuminosityMaskShader",
  "type": "Class",
  "description": "Creates a blend shader that is equivalent to the luminosity masking option (also known as soft masking) available in Adobe Creative Suite tools."},
{ "name": "LuminosityShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.LuminosityShader",
  "description": "Constructor."},
{ "name": "LuminosityShader",
  "type": "Class",
  "description": "Creates a blend shader that is equivalent to the 'Luminosity' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools."},
{ "name": "M",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the M key (77)."},
{ "name": "MAC_OS",
  "type": "Property",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "MAGENTA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "MAIL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MAIL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MANAGED",
  "type": "Property",
  "class": "mx.binding.BindabilityInfo",
  "description": "Name of [Managed] metadata."},
{ "name": "MANUAL",
  "type": "Property",
  "class": "mx.controls.ProgressBarMode",
  "description": "You manually update the ProgressBar status."},
{ "name": "MAP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MAP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MARKER",
  "type": "Property",
  "class": "google.maps.drawing.OverlayType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "MARKUNREAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MARKUNREAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MARKUNREAD_MAILBOX",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MARKUNREAD_MAILBOX",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MAROON",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "MASTER_SHELL",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging the \"Master Shell\" (e."},
{ "name": "MATCH_WIDTH",
  "type": "Property",
  "class": "mx.printing.FlexPrintJobScaleType",
  "description": ""},
{ "name": "MAXIMUM_YEAR",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": ""},
{ "name": "MAX_COLUMNS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": ""},
{ "name": "MAX_DIMENSIONS_EXCEEDED",
  "type": "Property",
  "class": "google.maps.DistanceMatrixStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "MAX_ELEMENTS_EXCEEDED",
  "type": "Property",
  "class": "google.maps.DistanceMatrixStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "MAX_FREQUENCY_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Header to indicate the maximum number of messages a Consumer wants to receive per second."},
{ "name": "MAX_FREQUENCY_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Header to indicate the maximum number of messages a Consumer wants to receive per second."},
{ "name": "MAX_LINE_WIDTH",
  "type": "Property",
  "class": "org.apache.royale.text.engine.Constants",
  "description": ""},
{ "name": "MAX_VALUE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "Largest Twip value"},
{ "name": "MAX_WAYPOINTS_EXCEEDED",
  "type": "Property",
  "class": "google.maps.DirectionsStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "MAX_ZINDEX",
  "type": "Property",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "MD5",
  "type": "Class",
  "description": ""},
{ "name": "MEDIUM",
  "type": "Property",
  "class": "mx.managers.CursorManagerPriority",
  "description": "Constant that specifies a medium cursor priority when passed as the <code>priority</code> argument to <code>setCursor()</code>."},
{ "name": "MEDIUM_RECTANGLE",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "MEDIUM_VERTICAL_LINK_UNIT",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "MEMORY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MEMORY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MENU",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging the menu."},
{ "name": "MENU",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MENU",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MENU_ITEM_SELECT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ContextMenuEvent",
  "description": ""},
{ "name": "MENU_SELECT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ContextMenuEvent",
  "description": ""},
{ "name": "MERGE_TO_NEXT_ON_PASTE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.TextScrap",
  "description": ""},
{ "name": "MERGE_TO_NEXT_ON_PASTE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ConversionConstants",
  "description": "A converter that converts clipboard data into a TextFlow should use the MERGE_TO_NEXT_ON_PASTE property to control how the elements are treated when they are merged into an existing TextFlow on paste."},
{ "name": "MERGE_TYPE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MERGE_TYPE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MESSAGE",
  "type": "Property",
  "class": "mx.messaging.events.MessageEvent",
  "description": "The MESSAGE event type; dispatched upon receipt of a message."},
{ "name": "MESSAGE_DELIVERY_IN_DOUBT",
  "type": "Property",
  "class": "mx.messaging.messages.ErrorMessage",
  "description": "If a message may not have been delivered, the <code>faultCode</code> will contain this constant."},
{ "name": "MESSAGING_VERSION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Endpoints can imply what features they support by reporting the latest version of messaging they are capable of during the handshake of the initial ping CommandMessage."},
{ "name": "MESSAGING_VERSION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Endpoints can imply what features they support by reporting the latest version of messaging they are capable of during the handshake of the initial ping CommandMessage."},
{ "name": "META",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Meta key."},
{ "name": "METERS_PER_SECOND",
  "type": "Property",
  "class": "google.maps.weather.WindSpeedUnit",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "METHOD",
  "type": "Property",
  "class": "mx.binding.BindabilityInfo",
  "description": "Name of describeType() <method> element."},
{ "name": "METRIC",
  "type": "Property",
  "class": "google.maps.UnitSystem",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "MIC_",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MIC_",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MIC_NONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MIC_NONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MIC_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MIC_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MIDDLE",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "MIDDLE",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": ""},
{ "name": "MIDDLE",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "MIDDLE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLineLocation",
  "description": "Specifies a middle line in a paragraph - neither the first nor the last line."},
{ "name": "MIDDLE",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.AdaptiveToolTipBead",
  "description": ""},
{ "name": "MIDDLE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.VerticalAlign",
  "description": "Specifies alignment with the middle of the frame."},
{ "name": "MIDDLE",
  "type": "Property",
  "class": "spark.layouts.VerticalAlign",
  "description": "Vertically align children in the middle of the container."},
{ "name": "MILES_PER_HOUR",
  "type": "Property",
  "class": "google.maps.weather.WindSpeedUnit",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "MINIMUM",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LigatureLevel",
  "description": ""},
{ "name": "MINIMUM_YEAR",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": ""},
{ "name": "MINUS",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the - key (189)."},
{ "name": "MIN_VALUE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "Smallest Twip value"},
{ "name": "MITER",
  "type": "Property",
  "class": "org.apache.royale.graphics.LineStyle",
  "description": ""},
{ "name": "MIXED",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "Used in compound tasks"},
{ "name": "MMS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MMS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MODE_COMMENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MODE_COMMENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MODE_EDIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MODE_EDIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MONETIZATION_ON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MONETIZATION_ON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MONEY_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MONEY_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MONOCHROME_PHOTOS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MONOCHROME_PHOTOS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MOOD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MOOD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MOOD_BAD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MOOD_BAD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MORE_HORIZ",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MORE_HORIZ",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MORE_VERT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MORE_VERT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MOTORCYCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MOTORCYCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MOUSE",
  "type": "Property",
  "class": "mx.core.InteractionMode",
  "description": "The main interaction mode for this component is through the mouse."},
{ "name": "MOUSE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MOUSE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MOUSE_DOWN",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_DOWN",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_DOWN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>mouseDown</code> event object."},
{ "name": "MOUSE_DOWN_SOMEWHERE",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Mouse button was pressed down somewhere outside your sandbox."},
{ "name": "MOUSE_FOCUS_CHANGE",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "MOUSE_FOCUS_CHANGE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FocusEvent",
  "description": ""},
{ "name": "MOUSE_MOVE",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_MOVE",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_MOVE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>mouseMove</code> event object."},
{ "name": "MOUSE_MOVE_SOMEWHERE",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Mouse was moved somewhere outside your sandbox."},
{ "name": "MOUSE_OUT",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_OUT",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_OVER",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_OVER",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_UP",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_UP",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "MOUSE_UP",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>mouseUp</code> event object."},
{ "name": "MOUSE_UP_SOMEWHERE",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Mouse button was released somewhere outside your sandbox."},
{ "name": "MOUSE_WHEEL_SOMEWHERE",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Mouse wheel was spun somewhere outside your sandbox."},
{ "name": "MOVE",
  "type": "Property",
  "class": "mx.events.MoveEvent",
  "description": "The <code>MoveEvent."},
{ "name": "MOVE",
  "type": "Property",
  "class": "mx.events.CollectionEventKind",
  "description": "Indicates that the item has moved from the position identified by the CollectionEvent <code>oldLocation</code> property to the position identified by the <code>location</code> property."},
{ "name": "MOVE",
  "type": "Property",
  "class": "org.apache.royale.core.DropType",
  "description": "The data should be moved."},
{ "name": "MOVE",
  "type": "Property",
  "class": "org.apache.royale.css2.Cursors",
  "description": ""},
{ "name": "MOVE_TO_INBOX",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MOVE_TO_INBOX",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MOVIE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MOVIE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MOVIE_CREATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MOVIE_CREATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MOVIE_FILTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MOVIE_FILTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MULTILINE_CHART",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MULTILINE_CHART",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MULTIPLE",
  "type": "Property",
  "class": "mx.rpc.mxml.Concurrency",
  "description": "Existing requests are not cancelled, and the developer is responsible for ensuring the consistency of returned data by carefully managing the event stream."},
{ "name": "MULTIPLE_CELLS",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelectionMode",
  "description": "Specifies that one or more cells can be selected."},
{ "name": "MULTIPLE_ROWS",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelectionMode",
  "description": "Specifies that one or more rows can be selected."},
{ "name": "MULTI_SUBSCRIBE_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Used by the MultiTopicConsumer to subscribe/unsubscribe for more than one topic in the same message."},
{ "name": "MULTI_SUBSCRIBE_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Used by the MultiTopicConsumer to subscribe/unsubscribe for more than one topic in the same message."},
{ "name": "MUSIC_NOTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MUSIC_NOTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MUSIC_VIDEO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MUSIC_VIDEO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "MVCArray",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "MVCArray",
  "type": "Class",
  "description": ""},
{ "name": "MVCObject",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "MVCObject",
  "type": "Class",
  "description": ""},
{ "name": "MXAdvancedDataGridItemRenderer",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.MXAdvancedDataGridItemRenderer",
  "description": "Constructor."},
{ "name": "MXAdvancedDataGridItemRenderer",
  "type": "Class",
  "description": "The AdvancedDataGridItemRenderer class defines the default item renderer for a AdvancedDataGrid control."},
{ "name": "MXAdvancedDataGridItemRenderer",
  "type": "Method",
  "class": "spark.controls.advancedDataGridClasses.MXAdvancedDataGridItemRenderer",
  "description": "Constructor."},
{ "name": "MXAdvancedDataGridItemRenderer",
  "type": "Class",
  "description": "The MXAdvancedDataGridItemRenderer class defines the Spark item renderer class for use with the MX AdvancedDataGrid control."},
{ "name": "MXMLBeadView",
  "type": "Method",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": "Constructor."},
{ "name": "MXMLBeadView",
  "type": "Class",
  "description": "The MXMLBeadView class extends ContainerView and adds support for databinding and specification of children in MXML."},
{ "name": "MXMLBeadViewDataBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.MXMLBeadViewDataBinding",
  "description": "Constructor."},
{ "name": "MXMLBeadViewDataBinding",
  "type": "Class",
  "description": "The MXMLBeadViewDataBinding class implements databinding for MXMLBeadView instances."},
{ "name": "MXMLDataInterpreter",
  "type": "Method",
  "class": "org.apache.royale.utils.MXMLDataInterpreter",
  "description": "Constructor."},
{ "name": "MXMLDataInterpreter",
  "type": "Class",
  "description": "The MXMLDataInterpreter class is the class that interprets the encoded information generated by the compiler that describes the contents of an MXML document."},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.core.IMXMLDocument",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.jewel.Container",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.html.Group",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": "An array of data that describes the MXML attributes and tags in an MXML document."},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.html.DividedContainer",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.core.View",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.html.Container",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.jewel.View",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.createjs.Application",
  "description": "An array of data that describes the MXML attributes and tags in an MXML document."},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": "An array of data that describes the MXML attributes and tags in an MXML document."},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.createjs.Container",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "MXMLDescriptor",
  "type": "Property",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": ""},
{ "name": "MXMLDragInitiator",
  "type": "Method",
  "class": "org.apache.royale.core.MXMLDragInitiator",
  "description": "Constructor."},
{ "name": "MXMLDragInitiator",
  "type": "Class",
  "description": "The MXMLDragInitiator is an IDragInitiator that dispatches events when the IDragInitiator methods are called to make it easier to handle in MXML."},
{ "name": "MXMLItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MXMLItemRenderer",
  "description": "constructor."},
{ "name": "MXMLItemRenderer",
  "type": "Class",
  "description": "The MXMLItemRenderer class is the base class for itemRenderers that are MXML-based and provides support for a layout and a data object."},
{ "name": "MXMLItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.express.MXMLItemRenderer",
  "description": ""},
{ "name": "MXMLItemRenderer",
  "type": "Class",
  "description": "This class extends MXMLItemRenderer and adds ItemRendererDataBinding for convenience."},
{ "name": "MXMLViewer",
  "type": "Method",
  "class": "org.apache.royale.express.MXMLViewer",
  "description": ""},
{ "name": "MXMLViewer",
  "type": "Class",
  "description": "This class extends the standard Label and allows MXML content (ie, XML or HTML) to be displayed."},
{ "name": "MY_LOCATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "MY_LOCATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ManagerBase",
  "type": "Method",
  "class": "org.apache.royale.mobile.ManagerBase",
  "description": "Constructor."},
{ "name": "ManagerBase",
  "type": "Class",
  "description": "The ManagerBase is a base class for mobile display managers such as StackedViewManager and TabbedViewManager."},
{ "name": "Map",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "Map",
  "type": "Class",
  "description": ""},
{ "name": "MapModel",
  "type": "Method",
  "class": "org.apache.royale.maps.google.models.MapModel",
  "description": "Constructor."},
{ "name": "MapModel",
  "type": "Class",
  "description": "The data model for the Map class, this holds the maps current center location, its current zoom level, the last marker selected, and any search results."},
{ "name": "MapTypeControlStyle",
  "type": "Class",
  "description": ""},
{ "name": "MapTypeId",
  "type": "Class",
  "description": ""},
{ "name": "MapTypeRegistry",
  "type": "Method",
  "class": "google.maps.MapTypeRegistry",
  "description": ""},
{ "name": "MapTypeRegistry",
  "type": "Class",
  "description": ""},
{ "name": "MapsEngineLayerOptions",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "MapsEngineLayerProperties",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "MapsEngineMouseEvent",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "MapsEngineStatus",
  "type": "Property",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "MapsEngineStatus",
  "type": "Class",
  "description": ""},
{ "name": "MapsEventListener",
  "type": "Method",
  "class": "google.maps.MapsEventListener",
  "description": ""},
{ "name": "MapsEventListener",
  "type": "Class",
  "description": ""},
{ "name": "MarginData",
  "type": "Method",
  "class": "org.apache.royale.core.layout.MarginData",
  "description": ""},
{ "name": "MarginData",
  "type": "Class",
  "description": "The MarginData class is a utility class for holding four margins of a component, plus a flag for if both left and right margin have been set to \"auto\"."},
{ "name": "Mark",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.Mark",
  "description": ""},
{ "name": "Mark",
  "type": "Class",
  "description": "@private - not ready for prime time"},
{ "name": "Marker",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "Marker",
  "type": "Class",
  "description": ""},
{ "name": "MaskBead",
  "type": "Method",
  "class": "org.apache.royale.svg.MaskBead",
  "description": ""},
{ "name": "MaskBead",
  "type": "Class",
  "description": "The MaskBead transforms an IUIBase element into a mask definition and contains methods to attach an existing element to this mask definition."},
{ "name": "MaterialIcon",
  "type": "Method",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIcon",
  "description": "constructor."},
{ "name": "MaterialIcon",
  "type": "Class",
  "description": "Material icons are beautifully crafted, delightful, and easy to use in your web, Android, and iOS projects."},
{ "name": "MaterialIconBase",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "constructor."},
{ "name": "MaterialIconBase",
  "type": "Class",
  "description": "Material icons are beautifully crafted, delightful, and easy to use in your web, Android, and iOS projects."},
{ "name": "MaterialIconType",
  "type": "Method",
  "class": "MaterialIconType",
  "description": "constructor."},
{ "name": "MaterialIconType",
  "type": "Class",
  "description": "The MaterialIconType class list all possible icons found in https://material."},
{ "name": "MaterialIconType",
  "type": "Class",
  "description": "The MaterialIconType class list all possible icons found in https://material."},
{ "name": "Matrix",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": ""},
{ "name": "Matrix",
  "type": "Class",
  "description": "2D Matrix"},
{ "name": "Matrix",
  "type": "Method",
  "class": "mx.geom.Matrix",
  "description": ""},
{ "name": "Matrix",
  "type": "Class",
  "description": "2D Matrix"},
{ "name": "MatrixUtil",
  "type": "Class",
  "description": "The MatrixUtil class is for internal use only."},
{ "name": "MaxNumberCharacters",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.MaxNumberCharacters",
  "description": "constructor."},
{ "name": "MaxNumberCharacters",
  "type": "Class",
  "description": "The MaxNumberCharacters class is a specialty bead that can be used with any TextInput control."},
{ "name": "MaxZoomStatus",
  "type": "Class",
  "description": ""},
{ "name": "MdlColor",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.MdlColor",
  "description": "constructor."},
{ "name": "MdlColor",
  "type": "Class",
  "description": "The MdlColor bead apply color and colorWeight provided by google style color."},
{ "name": "MdlTextColor",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.MdlTextColor",
  "description": ""},
{ "name": "MdlTextColor",
  "type": "Class",
  "description": "The MdlTextColor apply textColor and textColorWeight provided by google style color."},
{ "name": "MemberDefinitionBase",
  "type": "Method",
  "class": "org.apache.royale.reflection.MemberDefinitionBase",
  "description": ""},
{ "name": "MemberDefinitionBase",
  "type": "Class",
  "description": "The base class for definition types that can be decorated with metadata in actionscript source code"},
{ "name": "MementoList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.MementoList",
  "description": "MementoList is a memento made of a list of other mementos"},
{ "name": "MementoList",
  "type": "Class",
  "description": "The MementoList class is a meta-memento."},
{ "name": "Menu",
  "type": "Method",
  "class": "org.apache.royale.html.Menu",
  "description": "Constructor."},
{ "name": "Menu",
  "type": "Class",
  "description": "The Menu class builds pop-up menus that are presented as a list, displayed at a specific location."},
{ "name": "Menu",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": "Constructor."},
{ "name": "Menu",
  "type": "Class",
  "description": "The Menu control creates a pop-up menu of individually selectable choices, similar to the File or Edit menu found in most software applications."},
{ "name": "Menu",
  "type": "Method",
  "class": "org.apache.royale.mdl.Menu",
  "description": "Constructor."},
{ "name": "Menu",
  "type": "Class",
  "description": "The Menu class creates a MDL menu."},
{ "name": "MenuBar",
  "type": "Method",
  "class": "mx.controls.MenuBar",
  "description": "Constructor."},
{ "name": "MenuBar",
  "type": "Class",
  "description": "A MenuBar control defines a horizontal, top-level menu bar that contains one or more menus."},
{ "name": "MenuBar",
  "type": "Method",
  "class": "org.apache.royale.html.MenuBar",
  "description": "Constructor"},
{ "name": "MenuBar",
  "type": "Class",
  "description": "The MenuBar class is a list that, when an item is tapped, displays a menu of selections."},
{ "name": "MenuBarItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MenuBarItemRenderer",
  "description": ""},
{ "name": "MenuBarItemRenderer",
  "type": "Class",
  "description": ""},
{ "name": "MenuBarItemRenderer",
  "type": "Class",
  "description": "The ListItemRenderer is the default renderer for mx."},
{ "name": "MenuBarModel",
  "type": "Method",
  "class": "mx.controls.beads.models.MenuBarModel",
  "description": "Constructor."},
{ "name": "MenuBarModel",
  "type": "Class",
  "description": "MenuBar Mouse Controller"},
{ "name": "MenuBarModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.MenuBarModel",
  "description": ""},
{ "name": "MenuBarModel",
  "type": "Class",
  "description": "The model used by the MenuBar."},
{ "name": "MenuBarMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": "Constructor."},
{ "name": "MenuBarMouseController",
  "type": "Class",
  "description": "The MenuBarMouseController handles mouse events for the MenuBar."},
{ "name": "MenuBarMouseController",
  "type": "Method",
  "class": "mx.controls.beads.controllers.MenuBarMouseController",
  "description": "Constructor."},
{ "name": "MenuBarMouseController",
  "type": "Class",
  "description": "MenuBar Mouse Controller"},
{ "name": "MenuEvent",
  "type": "Method",
  "class": "mx.events.MenuEvent",
  "description": "Constructor."},
{ "name": "MenuEvent",
  "type": "Class",
  "description": "The MenuEvent class represents events that are associated with menu activities in controls such as Menu, MenuBar, and PopUpMenuButton."},
{ "name": "MenuFactory",
  "type": "Method",
  "class": "org.apache.royale.html.beads.MenuFactory",
  "description": "Constructor."},
{ "name": "MenuFactory",
  "type": "Class",
  "description": "This bead class generates instances of the Menu class for use with MenuBar."},
{ "name": "MenuItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.MenuItemRenderer",
  "description": "Constructor."},
{ "name": "MenuItemRenderer",
  "type": "Class",
  "description": "The MenuItemRenderer class creates a MDL menu item"},
{ "name": "MenuItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MenuItemRenderer",
  "description": "Constructor."},
{ "name": "MenuItemRenderer",
  "type": "Class",
  "description": "The MenuItemRenderer class is the default itemRenderer for Menus."},
{ "name": "MenuModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.MenuModel",
  "description": "Constructor."},
{ "name": "MenuModel",
  "type": "Class",
  "description": "The model used to support menus."},
{ "name": "MenuSelectionMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuSelectionMouseController",
  "description": "Constructor."},
{ "name": "MenuSelectionMouseController",
  "type": "Class",
  "description": "Listens for item selections on the component and translates them to external events."},
{ "name": "MenuView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.MenuView",
  "description": "Constructor."},
{ "name": "MenuView",
  "type": "Class",
  "description": "Supplies the view for a menu."},
{ "name": "MergeFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.MergeFilterElement",
  "description": ""},
{ "name": "MergeFilterElement",
  "type": "Class",
  "description": "The MergeFilterElement merges several filter elements"},
{ "name": "MessageAckEvent",
  "type": "Method",
  "class": "mx.messaging.events.MessageAckEvent",
  "description": "Constructs an instance of this event with the specified acknowledge message and original correlated message."},
{ "name": "MessageAckEvent",
  "type": "Class",
  "description": "The MessageAckEvent class is used to propagate acknowledge messages within the messaging system."},
{ "name": "MessageAgent",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Constructor."},
{ "name": "MessageAgent",
  "type": "Class",
  "description": "The MessageAgent class provides the basic low-level functionality common to message handling for a destination."},
{ "name": "MessageBody",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.MessageBody",
  "description": "Constructs an instance of a MessageBody"},
{ "name": "MessageBody",
  "type": "Class",
  "description": "The MessageBody for an ActionMessage"},
{ "name": "MessageEvent",
  "type": "Method",
  "class": "mx.messaging.events.MessageEvent",
  "description": "Constructs an instance of this event with the specified type and message."},
{ "name": "MessageEvent",
  "type": "Class",
  "description": "The MessageEvent class is used to propagate messages within the messaging system."},
{ "name": "MessageFaultEvent",
  "type": "Method",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "Constructs an instance of a fault message event for the specified message and fault information."},
{ "name": "MessageFaultEvent",
  "type": "Class",
  "description": "The MessageFaultEvent class is used to propagate fault messages within the messaging system."},
{ "name": "MessageHeader",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.MessageHeader",
  "description": "Constructs an instance of a MessageHeader"},
{ "name": "MessageHeader",
  "type": "Class",
  "description": "The MessageHeader for an ActionMessage"},
{ "name": "MessagePerformanceInfo",
  "type": "Method",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": ""},
{ "name": "MessagePerformanceInfo",
  "type": "Class",
  "description": "The MessagePerformanceInfo class is used to capture various metrics about the sizing and timing of a message sent from a client to the server and its response message, as well as pushed messages from the server to the client."},
{ "name": "MessagePerformanceUtils",
  "type": "Method",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Constructor  Creates an MPUtils instance with information from the MPI headers of the passed in message  MPI information"},
{ "name": "MessagePerformanceUtils",
  "type": "Class",
  "description": "The MessagePerformanceUtils utility class is used to retrieve various metrics about the sizing and timing of a message sent from a client to the server and its response message, as well as pushed messages from the server to the client."},
{ "name": "MessageResponder",
  "type": "Method",
  "class": "mx.messaging.MessageResponder",
  "description": "Constructs a MessageResponder to handle the response for the specified Message for the specified MessageAgent."},
{ "name": "MessageResponder",
  "type": "Class",
  "description": "The MessageResponder class handles a successful result or fault from a message destination."},
{ "name": "MessageSerializationError",
  "type": "Method",
  "class": "mx.messaging.errors.MessageSerializationError",
  "description": "Constructs a new instance of the MessageSerializationError with the specified message."},
{ "name": "MessageSerializationError",
  "type": "Class",
  "description": "This error indicates a problem serializing a message within a channel."},
{ "name": "MessagingError",
  "type": "Method",
  "class": "mx.messaging.errors.MessagingError",
  "description": "Constructs a new instance of a MessagingError with the specified message."},
{ "name": "MessagingError",
  "type": "Class",
  "description": "This is the base class for any messaging related error."},
{ "name": "MetaDataArgDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.MetaDataArgDefinition",
  "description": ""},
{ "name": "MetaDataArgDefinition",
  "type": "Class",
  "description": "The description of a Class or Interface"},
{ "name": "MetaDataDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.MetaDataDefinition",
  "description": ""},
{ "name": "MetaDataDefinition",
  "type": "Class",
  "description": "The description of a MetaData tag attached to a class member or a class"},
{ "name": "MetadataRunner",
  "type": "Method",
  "class": "org.apache.royale.test.runners.MetadataRunner",
  "description": "Constructor."},
{ "name": "MetadataRunner",
  "type": "Class",
  "description": "Runs a class containing methods marked with <code>[Test]</code> metadata."},
{ "name": "MethodDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.MethodDefinition",
  "description": ""},
{ "name": "MethodDefinition",
  "type": "Class",
  "description": "The description of a method inside a class or interface"},
{ "name": "MixinManager",
  "type": "Method",
  "class": "org.apache.royale.utils.MixinManager",
  "description": "Constructor."},
{ "name": "MixinManager",
  "type": "Class",
  "description": "The MixinManager class is the class that instantiates mixins linked into the application."},
{ "name": "MobileWebBrowserView",
  "type": "Class",
  "description": ""},
{ "name": "MockContentView",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "MockContentView",
  "type": "Class",
  "description": ""},
{ "name": "MockLayoutChild",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "MockLayoutChild",
  "type": "Class",
  "description": ""},
{ "name": "MockLayoutHost",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutHost",
  "description": ""},
{ "name": "MockLayoutHost",
  "type": "Class",
  "description": ""},
{ "name": "MockLayoutParent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "MockLayoutParent",
  "type": "Class",
  "description": ""},
{ "name": "MockParent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockParent",
  "description": ""},
{ "name": "MockParent",
  "type": "Class",
  "description": ""},
{ "name": "ModalDisplay",
  "type": "Method",
  "class": "org.apache.royale.html.beads.plugin.ModalDisplay",
  "description": ""},
{ "name": "ModalDisplay",
  "type": "Class",
  "description": ""},
{ "name": "ModalOverlay",
  "type": "Method",
  "class": "org.apache.royale.html.beads.plugin.ModalOverlay",
  "description": ""},
{ "name": "ModalOverlay",
  "type": "Class",
  "description": ""},
{ "name": "ModelChange",
  "type": "Class",
  "description": "ModelChange values."},
{ "name": "ModelEdit",
  "type": "Class",
  "description": "The ModelEdit class contains static functions for performing speficic suboperations."},
{ "name": "ModifierKeys",
  "type": "Class",
  "description": "This class holds constants for modifier keys See: https://w3c."},
{ "name": "ModifyInlineGraphicOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ModifyInlineGraphicOperation",
  "description": "Creates a ModifyInlineGraphicsOperation object."},
{ "name": "ModifyInlineGraphicOperation",
  "type": "Class",
  "description": "The InsertInlineGraphicOperation class encapsulates the modification of an existing inline graphic."},
{ "name": "Module",
  "type": "Method",
  "class": "mx.modules.Module",
  "description": "Constructor."},
{ "name": "Module",
  "type": "Class",
  "description": "The base class for MXML-based dynamically-loadable modules."},
{ "name": "Module",
  "type": "Method",
  "class": "spark.modules.Module",
  "description": "Constructor."},
{ "name": "Module",
  "type": "Class",
  "description": "The base class for MXML-based dynamically-loadable modules."},
{ "name": "Module",
  "type": "Method",
  "class": "org.apache.royale.jewel.Module",
  "description": "Constructor."},
{ "name": "Module",
  "type": "Class",
  "description": "The UIModule class is the base class for modules of user interface controls in Royale."},
{ "name": "ModuleEvent",
  "type": "Method",
  "class": "mx.events.ModuleEvent",
  "description": "Constructor."},
{ "name": "ModuleEvent",
  "type": "Class",
  "description": "The ModuleEvent class represents the event object passed to the event listener for events related to dynamically-loaded modules."},
{ "name": "ModuleLoader",
  "type": "Method",
  "class": "mx.modules.ModuleLoader",
  "description": "Constructor."},
{ "name": "ModuleLoader",
  "type": "Class",
  "description": "ModuleLoader is a component that behaves much like a SWFLoader except that it follows a contract with the loaded content."},
{ "name": "ModuleLoader",
  "type": "Method",
  "class": "org.apache.royale.jewel.ModuleLoader",
  "description": "Constructor."},
{ "name": "ModuleLoader",
  "type": "Class",
  "description": "The Jewel ModuleLoader class can load a Jewel Module."},
{ "name": "ModuleManager",
  "type": "Class",
  "description": "The ModuleManager class centrally manages dynamically loaded modules."},
{ "name": "Mouse",
  "type": "Class",
  "description": ""},
{ "name": "MouseCursor",
  "type": "Class",
  "description": ""},
{ "name": "MouseCursorData",
  "type": "Class",
  "description": ""},
{ "name": "MouseEvent",
  "type": "Method",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "Constructor."},
{ "name": "MouseEvent",
  "type": "Class",
  "description": "Mouse events"},
{ "name": "MouseEvent",
  "type": "Method",
  "class": "mx.events.MouseEvent",
  "description": "Constructor."},
{ "name": "MouseEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when a Flex component moves."},
{ "name": "MouseEventConverter",
  "type": "Class",
  "description": ""},
{ "name": "MouseEventConverter",
  "type": "Class",
  "description": ""},
{ "name": "MouseEventInit",
  "type": "Method",
  "class": "org.apache.royale.conversions",
  "description": ""},
{ "name": "MouseUtils",
  "type": "Method",
  "class": "org.apache.royale.events.utils.MouseUtils",
  "description": ""},
{ "name": "MouseUtils",
  "type": "Class",
  "description": "This class maps common event functions for MouseEvent"},
{ "name": "Move",
  "type": "Method",
  "class": "org.apache.royale.effects.Move",
  "description": "Constructor."},
{ "name": "Move",
  "type": "Class",
  "description": "The Move effect animates a UI component's x or y position."},
{ "name": "Move",
  "type": "Method",
  "class": "mx.effects.Move",
  "description": "Constructor."},
{ "name": "Move",
  "type": "Class",
  "description": "The Move effect animates a UI component's x or y position."},
{ "name": "MoveChildrenOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.MoveChildrenOperation",
  "description": "Creates a MoveChildrenOperation object."},
{ "name": "MoveChildrenOperation",
  "type": "Class",
  "description": "The MoveChildrenOperation class allows moving a set of siblings out of its immediate parent chain, and the operation removes any empty ancestor chain left behind."},
{ "name": "MoveElementMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.MoveElementMemento",
  "description": ""},
{ "name": "MoveElementMemento",
  "type": "Class",
  "description": ""},
{ "name": "MoveEvent",
  "type": "Method",
  "class": "mx.events.MoveEvent",
  "description": "Constructor."},
{ "name": "MoveEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when a Flex component moves."},
{ "name": "MoveGenerator",
  "type": "Method",
  "class": "org.apache.royale.utils.MoveGenerator",
  "description": ""},
{ "name": "MoveGenerator",
  "type": "Class",
  "description": ""},
{ "name": "MoveTo",
  "type": "Method",
  "class": "org.apache.royale.graphics.MoveTo",
  "description": ""},
{ "name": "MoveTo",
  "type": "Class",
  "description": ""},
{ "name": "MultiLine",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.MultiLine",
  "description": "constructor."},
{ "name": "MultiLine",
  "type": "Class",
  "description": "The MultiLine bead is a specialty bead that can be used with any IClassSelectorListSupport control to allow more than one line i."},
{ "name": "MultilineLabel",
  "type": "Method",
  "class": "org.apache.royale.html.MultilineLabel",
  "description": "Constructor."},
{ "name": "MultilineLabel",
  "type": "Class",
  "description": "The MultilineLabel class implements the basic control for displaying multiline labels."},
{ "name": "N",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the N key (78)."},
{ "name": "NATURAL_WIDTHS",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ButtonBarModel",
  "description": ""},
{ "name": "NATURE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NATURE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NATURE_PEOPLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NATURE_PEOPLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NAVIGATE_BEFORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NAVIGATE_BEFORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NAVIGATE_NEXT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NAVIGATE_NEXT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NAVIGATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NAVIGATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NAVY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "NEAREST",
  "type": "Property",
  "class": "mx.formatters.NumberBaseRoundType",
  "description": "Rounds a number up or down to the nearest integer."},
{ "name": "NEAR_ME",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NEAR_ME",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NEEDS_CONFIG_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Header to indicate that the Channel needs the configuration from the server."},
{ "name": "NEEDS_CONFIG_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Header to indicate that the Channel needs the configuration from the server."},
{ "name": "NETWORK_CELL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NETWORK_CELL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NETWORK_CHECK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NETWORK_CHECK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NETWORK_LOCKED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NETWORK_LOCKED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NETWORK_WIFI",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NETWORK_WIFI",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NET_STATUS",
  "type": "Property",
  "class": "mx.events.NetStatusEvent",
  "description": ""},
{ "name": "NEW_RELEASES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NEW_RELEASES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NEXT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for skipping to next track or chapter."},
{ "name": "NEXT_WEEK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NEXT_WEEK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NFC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NFC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NO",
  "type": "Property",
  "class": "org.apache.royale.html.Alert",
  "description": "The bitmask button flag to show the NO button."},
{ "name": "NO",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": "Value that enables a No button on the Alert control when passed as the <code>flags</code> parameter of the <code>show()</code> method."},
{ "name": "NO",
  "type": "Property",
  "class": "org.apache.royale.jewel.Alert",
  "description": "The bitmask button flag to show the NO button."},
{ "name": "NONE",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemEditorActivationMouseEvent",
  "description": "No mouse event will cause an editor to be opened."},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextDecoration",
  "description": "Specifies normal text - no decoration applied"},
{ "name": "NONE",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "Value that indicates the ChartItem does not appear to be selected, does not have focus, and is not being rolled over."},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.BreakOpportunity",
  "description": ""},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LigatureLevel",
  "description": ""},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableRules",
  "description": "No sides."},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Float",
  "description": "Graphic appears inline in the text (doesn't float)."},
{ "name": "NONE",
  "type": "Property",
  "class": "mx.formatters.NumberBaseRoundType",
  "description": "Perform no rounding."},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BorderStyle",
  "description": "none - no border style is applied."},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionType",
  "description": ""},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Suffix",
  "description": "Specifies that no suffix is appended to a list marker after the content."},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.FormatValue",
  "description": "Specifies that a property's value is none."},
{ "name": "NONE",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelectionMode",
  "description": "Specifies that no selection is allowed."},
{ "name": "NONE",
  "type": "Property",
  "class": "mx.core.ContainerCreationPolicy",
  "description": "Do not create any children."},
{ "name": "NONE",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartState",
  "description": "No state."},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "No content is generated for the marker."},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.CFFHinting",
  "description": ""},
{ "name": "NONE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ClearFloats",
  "description": "Specifies that  text wraps closely around floats."},
{ "name": "NON_COMMITTING_CHANGE_EVENT",
  "type": "Property",
  "class": "mx.binding.BindabilityInfo",
  "description": "Name of [NonCommittingChangeEvent] metadata."},
{ "name": "NORMAL",
  "type": "Property",
  "class": "org.apache.royale.text.engine.RenderingMode",
  "description": ""},
{ "name": "NORMAL",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontPosture",
  "description": ""},
{ "name": "NORMAL",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontWeight",
  "description": ""},
{ "name": "NOT",
  "type": "Property",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Specifies the use of a regex pattern match that does not contain a given value."},
{ "name": "NOTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NOTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NOTE_ADD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NOTE_ADD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS_ACTIVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS_ACTIVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS_NONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS_NONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS_PAUSED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NOTIFICATIONS_PAUSED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NOT_A_COLOR",
  "type": "Property",
  "class": "mx.styles.StyleManager",
  "description": "The <code>getColorName()</code> method returns this value if the passed-in String is not a legitimate color name."},
{ "name": "NOT_EMPTY",
  "type": "Property",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Specifies the use of a regex pattern match that specifies must have at least 1 character matching."},
{ "name": "NOT_FOUND",
  "type": "Property",
  "class": "google.maps.DistanceMatrixElementStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "NOT_FOUND",
  "type": "Property",
  "class": "google.maps.DirectionsStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "NOT_INTERESTED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NOT_INTERESTED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NOT_SELECTED_CONVERTED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IMEStatus",
  "description": "Not selected converted - text has been converted and is not part of the current clause in the IME session"},
{ "name": "NOT_SELECTED_RAW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IMEStatus",
  "description": "Not selected raw - text has not been converted and is not part of the current clause in the IME session"},
{ "name": "NO_ENCRYPTION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "NO_ENCRYPTION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "NO_LINE_COUNT_LIMIT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TruncationOptions",
  "description": "Defines the <code>lineCountLimit</code> property value, <code>-1</code>, that represents no limit."},
{ "name": "NO_OP_POLL_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Header to suppress poll response processing."},
{ "name": "NO_OP_POLL_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Header to suppress poll response processing."},
{ "name": "NULL",
  "type": "Property",
  "class": "mx.collections.SortFieldCompareTypes",
  "description": "Represents the nullCompare inside a SortField."},
{ "name": "NULL",
  "type": "Property",
  "class": "org.apache.royale.collections.SortFieldCompareTypes",
  "description": "Represents the nullCompare inside a SortField."},
{ "name": "NUMBER_0",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 0 key (48)."},
{ "name": "NUMBER_1",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 1 key (49)."},
{ "name": "NUMBER_2",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 2 key (50)."},
{ "name": "NUMBER_3",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 3 key (51)."},
{ "name": "NUMBER_4",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 4 key (52)."},
{ "name": "NUMBER_5",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 5 key (53)."},
{ "name": "NUMBER_6",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 6 key (54)."},
{ "name": "NUMBER_7",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 7 key (55)."},
{ "name": "NUMBER_8",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 8 key (56)."},
{ "name": "NUMBER_9",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the 9 key (57)."},
{ "name": "NUMERIC",
  "type": "Property",
  "class": "mx.collections.SortFieldCompareTypes",
  "description": "Represents the numericCompare inside a SortField."},
{ "name": "NUMERIC",
  "type": "Property",
  "class": "org.apache.royale.collections.SortFieldCompareTypes",
  "description": "Represents the numericCompare inside a SortField."},
{ "name": "NUMPAD",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the pseudo-key code for the the number pad (21)."},
{ "name": "NUMPAD_0",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 0 key on the number pad (96)."},
{ "name": "NUMPAD_1",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 1 key on the number pad (97)."},
{ "name": "NUMPAD_2",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 2 key on the number pad (98)."},
{ "name": "NUMPAD_3",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 3 key on the number pad (99)."},
{ "name": "NUMPAD_4",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 4 key on the number pad (100)."},
{ "name": "NUMPAD_5",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 5 key on the number pad (101)."},
{ "name": "NUMPAD_6",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 6 key on the number pad (102)."},
{ "name": "NUMPAD_7",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 7 key on the number pad (103)."},
{ "name": "NUMPAD_8",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 8 key on the number pad (104)."},
{ "name": "NUMPAD_9",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the number 9 key on the number pad (105)."},
{ "name": "NUMPAD_ADD",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the addition key on the number pad (107)."},
{ "name": "NUMPAD_DECIMAL",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the decimal key on the number pad (110)."},
{ "name": "NUMPAD_DIVIDE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the division key on the number pad (111)."},
{ "name": "NUMPAD_ENTER",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Enter key on the number pad (108)."},
{ "name": "NUMPAD_MULTIPLY",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the multiplication key on the number pad (106)."},
{ "name": "NUMPAD_SUBTRACT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the subtraction key on the number pad (109)."},
{ "name": "NUM_COLS_DAYS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": ""},
{ "name": "NUM_COLS_YEARS_OR_MONTHS",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": ""},
{ "name": "NUM_DAYS_VIEW",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": ""},
{ "name": "NUM_LOCK",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The NumLock (Number Lock) key."},
{ "name": "NUM_YEARS_VIEW",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": ""},
{ "name": "Namespace",
  "type": "Method",
  "class": "Namespace",
  "description": ""},
{ "name": "Namespace",
  "type": "Class",
  "description": ""},
{ "name": "Navigation",
  "type": "Method",
  "class": "org.apache.royale.mdl.Navigation",
  "description": "constructor."},
{ "name": "Navigation",
  "type": "Class",
  "description": "The Navigation class is a <nav> tag in HTML."},
{ "name": "Navigation",
  "type": "Method",
  "class": "org.apache.royale.jewel.Navigation",
  "description": "constructor."},
{ "name": "Navigation",
  "type": "Class",
  "description": "The Navigation class is a List used for navigate other organized content in a Royale Application."},
{ "name": "NavigationActionNotifier",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.NavigationActionNotifier",
  "description": "constructor."},
{ "name": "NavigationActionNotifier",
  "type": "Class",
  "description": "The NavigationActionNotifier notifies when a control's \"change\" or \"click\" event is thrown Other application parts can listen for \"navigationAction\" event to respond accordingly."},
{ "name": "NavigationBar",
  "type": "Method",
  "class": "org.apache.royale.mobile.chrome.NavigationBar",
  "description": "Constructor."},
{ "name": "NavigationBar",
  "type": "Class",
  "description": "The NavigationBar class is part of the mobile view manager's chrome."},
{ "name": "NavigationKeys",
  "type": "Class",
  "description": "This class holds constants for keyboard navigation See: https://w3c."},
{ "name": "NavigationLayout",
  "type": "Method",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": "constructor."},
{ "name": "NavigationLayout",
  "type": "Class",
  "description": "The NavigationLayout class is a Container component capable of parenting other components."},
{ "name": "NavigationLayoutContent",
  "type": "Method",
  "class": "org.apache.royale.mdl.NavigationLayoutContent",
  "description": "constructor."},
{ "name": "NavigationLayoutContent",
  "type": "Class",
  "description": "The NavigationLayoutContent class is a Container component capable of parenting the content of the NavigationLayout parent."},
{ "name": "NavigationLink",
  "type": "Method",
  "class": "org.apache.royale.mdl.NavigationLink",
  "description": "constructor."},
{ "name": "NavigationLink",
  "type": "Class",
  "description": "The NavigationLink class is a link component used in some components and is created for convenience or to use alone as a component."},
{ "name": "NavigationLinkItemMouseRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.NavigationLinkItemMouseRenderer",
  "description": "constructor."},
{ "name": "NavigationLinkItemMouseRenderer",
  "type": "Class",
  "description": "The NavigationLinkItemMouseRenderer defines the basic Item Renderer for a MDL NavigationLink List Component and handles mouse events, notifying about them host component."},
{ "name": "NavigationLinkItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.NavigationLinkItemRenderer",
  "description": "constructor."},
{ "name": "NavigationLinkItemRenderer",
  "type": "Class",
  "description": "The NavigationLinkItemRenderer defines the basic Item Renderer for a MDL NavigationLink List Component."},
{ "name": "NavigationLinkItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.NavigationLinkItemRenderer",
  "description": "constructor."},
{ "name": "NavigationLinkItemRenderer",
  "type": "Class",
  "description": "The NavigationLinkItemRenderer defines the basic Item Renderer for a Jewel Navigation List Component."},
{ "name": "NavigationUnit",
  "type": "Class",
  "description": "The NavigationUnit class defines the possible values for the <code>getVerticalScrollPositionDelta()</code> and <code>getHorizontalScrollPositionDelta()</code> methods of the IViewport class."},
{ "name": "NavigationUtil",
  "type": "Class",
  "description": "Utilities for manipulating a TextRange The methods of this class are static and must be called using the syntax <code>NavigationUtil."},
{ "name": "NavigatorContent",
  "type": "Method",
  "class": "spark.components.NavigatorContent",
  "description": "Constructor."},
{ "name": "NavigatorContent",
  "type": "Class",
  "description": "The NavigatorContent class defines a Spark container that can be used in an MX navigator container, such as the ViewStack, TabNavigator and Accordion containers."},
{ "name": "NestedStringItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.NestedStringItemRenderer",
  "description": "Constructor"},
{ "name": "NestedStringItemRenderer",
  "type": "Class",
  "description": "The NestedStringItemRenderer can be used with lists or DataGridColumns for items that are not at the top level of the data."},
{ "name": "NetConnection",
  "type": "Method",
  "class": "mx.net.NetConnection",
  "description": ""},
{ "name": "NetConnection",
  "type": "Class",
  "description": "The NetConnection class mimics the Flash NetConnection."},
{ "name": "NetConnectionChannel",
  "type": "Method",
  "class": "mx.messaging.channels.NetConnectionChannel",
  "description": "Creates a new NetConnectionChannel instance."},
{ "name": "NetConnectionChannel",
  "type": "Class",
  "description": "This NetConnectionChannel provides the basic NetConnection support for messaging."},
{ "name": "NetStatusEvent",
  "type": "Method",
  "class": "mx.events.NetStatusEvent",
  "description": "Constructor."},
{ "name": "NetStatusEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when focus changes."},
{ "name": "NetworkMonitor",
  "type": "Class",
  "description": "NetworkMonitor is a stub used by the framework and enterprise service classes to send information to the Flash Builder Network Monitor feature."},
{ "name": "NoChannelAvailableError",
  "type": "Method",
  "class": "mx.messaging.errors.NoChannelAvailableError",
  "description": "Constructs a new instance of the NoChannelAvailableError with the specified message."},
{ "name": "NoChannelAvailableError",
  "type": "Class",
  "description": "This error is thrown when no Channel is available to send messages."},
{ "name": "NoLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.NoLayout",
  "description": "Constructor."},
{ "name": "NoLayout",
  "type": "Class",
  "description": "The NoLayout class allows specifying no layout to components which normally have a Layout bead."},
{ "name": "NoViewport",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.NoViewport",
  "description": "Constructor"},
{ "name": "NoViewport",
  "type": "Class",
  "description": "NoViewport is set when we need to avoid default Viewport in Container"},
{ "name": "NodeElementBase",
  "type": "Method",
  "class": "org.apache.royale.html.NodeElementBase",
  "description": ""},
{ "name": "NodeElementBase",
  "type": "Class",
  "description": ""},
{ "name": "NonEmptyTextField",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.NonEmptyTextField",
  "description": "constructor."},
{ "name": "NonEmptyTextField",
  "type": "Class",
  "description": "The NonEmptyTextField bead should be used only with MDL TextField It checks whether TextField contains non empty string."},
{ "name": "NonNullTextModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.NonNullTextModel",
  "description": "Constructor."},
{ "name": "NonNullTextModel",
  "type": "Class",
  "description": "The TextModel class is most basic data model for a component that displays text."},
{ "name": "NonVirtualHDataGroup",
  "type": "Method",
  "class": "spark.components.NonVirtualHDataGroup",
  "description": "Constructor."},
{ "name": "NonVirtualHDataGroup",
  "type": "Class",
  "description": "The NonVirtualHDataGroup class is a DataGroup that defaults to non-virtual vertical layout"},
{ "name": "NonVirtualVDataGroup",
  "type": "Method",
  "class": "spark.components.NonVirtualVDataGroup",
  "description": "Constructor."},
{ "name": "NonVirtualVDataGroup",
  "type": "Class",
  "description": "The NonVirtualVDataGroup class is a DataGroup that defaults to non-virtual vertical layout"},
{ "name": "NullLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.NullLayout",
  "description": "Constructor."},
{ "name": "NullLayout",
  "type": "Class",
  "description": "The NullLayout class is a layout class used to override other layout classes This class should be temporal and make Royale be able to pass ClassReference (null) in CSS to not use the layout defined in parent class"},
{ "name": "NumberBase",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Constructor."},
{ "name": "NumberBase",
  "type": "Class",
  "description": "The NumberBase class is a utility class that contains general number formatting capabilities, including rounding, precision, thousands formatting, and negative sign formatting."},
{ "name": "NumberBaseRoundType",
  "type": "Class",
  "description": "The NumberBaseRoundType class defines the constant values for formatter properties that specify a type of rounding."},
{ "name": "NumberFactoryUtil",
  "type": "Class",
  "description": ""},
{ "name": "NumberFormatter",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.NumberFormatter",
  "description": "constructor"},
{ "name": "NumberFormatter",
  "type": "Class",
  "description": "The NumberFormatter class formats a value in separated groups."},
{ "name": "NumberFormatter",
  "type": "Method",
  "class": "mx.formatters.NumberFormatter",
  "description": "Constructor."},
{ "name": "NumberFormatter",
  "type": "Class",
  "description": "The NumberFormatter class formats a valid number by adjusting the decimal rounding and precision, the thousands separator, and the negative sign."},
{ "name": "NumberLineFactory",
  "type": "Class",
  "description": ""},
{ "name": "NumberLineUserData",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.utils.NumberLineUserData",
  "description": ""},
{ "name": "NumberLineUserData",
  "type": "Class",
  "description": ""},
{ "name": "NumberPropertyHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.NumberPropertyHandler",
  "description": ""},
{ "name": "NumberPropertyHandler",
  "type": "Class",
  "description": "A property description with a Number as its value."},
{ "name": "NumberValidator",
  "type": "Method",
  "class": "mx.validators.NumberValidator",
  "description": "Constructor."},
{ "name": "NumberValidator",
  "type": "Class",
  "description": "The NumberValidator class ensures that a String represents a valid number."},
{ "name": "NumberlineUtil",
  "type": "Class",
  "description": ""},
{ "name": "NumericAxis",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Constructor."},
{ "name": "NumericAxis",
  "type": "Class",
  "description": "The NumericAxis class acts as a common base class for axis types representing a continuous range of values between a defined minimum and maximum."},
{ "name": "NumericOnlyTextInputBead",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.NumericOnlyTextInputBead",
  "description": "constructor."},
{ "name": "NumericOnlyTextInputBead",
  "type": "Class",
  "description": "The NumericOnlyTextInputBead class is a specialty bead that can be used with any TextInput control."},
{ "name": "NumericStepper",
  "type": "Method",
  "class": "org.apache.royale.jewel.NumericStepper",
  "description": "constructor."},
{ "name": "NumericStepper",
  "type": "Class",
  "description": "The NumericStepper class is a component that displays a numeric value and up/down controls (using a org."},
{ "name": "NumericStepper",
  "type": "Method",
  "class": "mx.controls.NumericStepper",
  "description": "Constructor."},
{ "name": "NumericStepper",
  "type": "Class",
  "description": "The NumericStepper control lets the user select a number from an ordered set."},
{ "name": "NumericStepper",
  "type": "Method",
  "class": "org.apache.royale.html.NumericStepper",
  "description": "constructor."},
{ "name": "NumericStepper",
  "type": "Class",
  "description": "The NumericStepper class is a component that displays a numeric value and up/down controls (using a org."},
{ "name": "NumericStepper",
  "type": "Method",
  "class": "org.apache.royale.express.NumericStepper",
  "description": "constructor."},
{ "name": "NumericStepper",
  "type": "Class",
  "description": "The NumericStepper class is a component that displays a numeric value and up/down controls (using a org."},
{ "name": "NumericStepper",
  "type": "Method",
  "class": "spark.components.NumericStepper",
  "description": "Constructor"},
{ "name": "NumericStepper",
  "type": "Class",
  "description": "The NumericStepper control lets you select a number from an ordered set."},
{ "name": "NumericStepperEvent",
  "type": "Method",
  "class": "mx.events.NumericStepperEvent",
  "description": "Constructor."},
{ "name": "NumericStepperEvent",
  "type": "Class",
  "description": "Represents events that are specific to the NumericStepper control."},
{ "name": "NumericStepperView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.NumericStepperView",
  "description": "constructor."},
{ "name": "NumericStepperView",
  "type": "Class",
  "description": "The NumericStepperView class creates the visual elements of the org."},
{ "name": "NumericStepperView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.NumericStepperView",
  "description": "constructor."},
{ "name": "NumericStepperView",
  "type": "Class",
  "description": "The NumericStepperView class creates the visual elements of the org."},
{ "name": "NumericStepperView",
  "type": "Class",
  "description": "The NumericStepperView class overrides the Basic NumericStepperView and sets default sizes to better emulate Flex."},
{ "name": "O",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the O key (79)."},
{ "name": "OFF",
  "type": "Property",
  "class": "mx.core.ScrollPolicy",
  "description": "Never show the scrollbar."},
{ "name": "OFF",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ScrollPolicy",
  "description": "Causes the runtime to not display overflow lines, which means that the user cannot navigate to them."},
{ "name": "OFF",
  "type": "Property",
  "class": "org.apache.royale.text.engine.Kerning",
  "description": ""},
{ "name": "OFFLINE_PIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "OFFLINE_PIN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.MaxZoomStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "org.apache.royale.html.Alert",
  "description": "The bitmask button flag to show the OK button."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.DistanceMatrixElementStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.StreetViewStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": "Value that enables an OK button on the Alert control when passed as the <code>flags</code> parameter of the <code>show()</code> method."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.DirectionsStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.places.PlacesServiceStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.DistanceMatrixStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.ElevationStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.GeocoderStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "google.maps.visualization.MapsEngineStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OK",
  "type": "Property",
  "class": "org.apache.royale.jewel.Alert",
  "description": "The bitmask button flag to show the OK button."},
{ "name": "OLD_STYLE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.DigitCase",
  "description": ""},
{ "name": "OLIVE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "ON",
  "type": "Property",
  "class": "mx.core.ScrollPolicy",
  "description": "Always show the scrollbar."},
{ "name": "ON",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ScrollPolicy",
  "description": "Specifies that scrolling is available to access content that exceeds the container's dimension."},
{ "name": "ON",
  "type": "Property",
  "class": "org.apache.royale.text.engine.Kerning",
  "description": ""},
{ "name": "ONDEMAND_VIDEO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ONDEMAND_VIDEO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ONE_TWIP",
  "type": "Property",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "One twip in pixels"},
{ "name": "ONLY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLineLocation",
  "description": "Specifies both the first and last lines in a paragraph."},
{ "name": "OPACITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "OPACITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "OPEN",
  "type": "Property",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "OPEN",
  "type": "Property",
  "class": "spark.events.PopUpEvent",
  "description": "The PopUpEvent."},
{ "name": "OPEN",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "Dispatched when the connection is opened."},
{ "name": "OPEN_IN_BROWSER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "OPEN_IN_BROWSER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "OPEN_IN_NEW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "OPEN_IN_NEW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "OPEN_WITH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "OPEN_WITH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "OPTIONS_METHOD",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the method used for this request should be \"options\"."},
{ "name": "OPTION_DISABLED",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.DropDownListItemRenderer",
  "description": ""},
{ "name": "OSUtils",
  "type": "Method",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "OSUtils",
  "type": "Class",
  "description": "The OSUtils class is an all-static class with methods for getting information about the host operating system."},
{ "name": "OUTSIDE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStylePosition",
  "description": "Marker will appear in the margin of the list."},
{ "name": "OUTSIDE",
  "type": "Property",
  "class": "google.maps.StrokePosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OVER_QUERY_LIMIT",
  "type": "Property",
  "class": "google.maps.DirectionsStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OVER_QUERY_LIMIT",
  "type": "Property",
  "class": "google.maps.places.PlacesServiceStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OVER_QUERY_LIMIT",
  "type": "Property",
  "class": "google.maps.DistanceMatrixStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OVER_QUERY_LIMIT",
  "type": "Property",
  "class": "google.maps.ElevationStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "OVER_QUERY_LIMIT",
  "type": "Property",
  "class": "google.maps.GeocoderStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ObjectEncoding",
  "type": "Class",
  "description": "The ObjectEncoding class contains constants for AMF Encoding."},
{ "name": "ObjectMap",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectMap",
  "description": ""},
{ "name": "ObjectMap",
  "type": "Class",
  "description": "The ObjectMap class is a hash class which supports weak keys and object keys on systems which support it."},
{ "name": "ObjectProxy",
  "type": "Method",
  "class": "mx.utils.ObjectProxy",
  "description": "Initializes this proxy with the specified object, id and proxy depth."},
{ "name": "ObjectProxy",
  "type": "Class",
  "description": "This class provides the ability to track changes to an item managed by this proxy."},
{ "name": "ObjectUtil",
  "type": "Class",
  "description": "The ObjectUtil class is an all-static class with methods for working with Objects within Flex."},
{ "name": "ObjectUtil",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectUtil",
  "description": ""},
{ "name": "ObjectUtil",
  "type": "Class",
  "description": "The ObjectUtil class contains static utility methods for analyzing and manipulating Objects."},
{ "name": "OffsetFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.OffsetFilterElement",
  "description": ""},
{ "name": "OffsetFilterElement",
  "type": "Class",
  "description": "The OffsetFilterElement bead adds an filterElement to a filtered SVG element"},
{ "name": "Ol",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Ol",
  "description": "constructor."},
{ "name": "Ol",
  "type": "Class",
  "description": "The Ol class represents an HTML <ol> element"},
{ "name": "OneFlexibleChildHorizontalLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayout",
  "description": "Constructor."},
{ "name": "OneFlexibleChildHorizontalLayout",
  "type": "Class",
  "description": "The OneFlexibleChildHorizontalLayout class is a simple layout bead."},
{ "name": "OneFlexibleChildHorizontalLayoutForOverflow",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayoutForOverflow",
  "description": "Constructor."},
{ "name": "OneFlexibleChildHorizontalLayoutForOverflow",
  "type": "Class",
  "description": "The OneFlexibleChildHorizontalLayoutForOverflowis intended for building apps that clip and/or scroll the overflow, especially in a 3-pane view like the ASDoc examples."},
{ "name": "OneFlexibleChildVerticalLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayout",
  "description": "Constructor."},
{ "name": "OneFlexibleChildVerticalLayout",
  "type": "Class",
  "description": "The OneFlexibleChildVerticalLayout class is a simple layout bead."},
{ "name": "OneFlexibleChildVerticalLayoutForOverflow",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayoutForOverflow",
  "description": "Constructor."},
{ "name": "OneFlexibleChildVerticalLayoutForOverflow",
  "type": "Class",
  "description": "The OneFlexibleChildVerticalLayoutForOverflow is intended for building apps that clip and/or scroll the overflow, especially in a 3-pane view like the ASDoc examples."},
{ "name": "Operation",
  "type": "Method",
  "class": "mx.rpc.remoting.Operation",
  "description": "Creates a new Operation."},
{ "name": "Operation",
  "type": "Class",
  "description": "An Operation used specifically by RemoteObjects."},
{ "name": "Operation",
  "type": "Method",
  "class": "mx.rpc.http.Operation",
  "description": "Creates a new Operation."},
{ "name": "Operation",
  "type": "Class",
  "description": "An Operation used specifically by an HTTPMultiService."},
{ "name": "Operation",
  "type": "Class",
  "description": "The Operation used for RemoteObject when created in an MXML document."},
{ "name": "Operation",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.Operation",
  "description": "This Operation is used by RemoteObject to deal with a BlazeDS, LCDS or CF AMF server"},
{ "name": "Operation",
  "type": "Class",
  "description": "used by RemoteObject implementation"},
{ "name": "Option",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Option",
  "description": "constructor."},
{ "name": "Option",
  "type": "Class",
  "description": "The Option class represents an HTML <option> element"},
{ "name": "OverflowPolicy",
  "type": "Class",
  "description": "The OverflowPolicy class defines a set of constants for the <code>overflowPolicy</code> property of the IConfiguration class."},
{ "name": "OverflowViewport",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.OverflowViewport",
  "description": "Constructor"},
{ "name": "OverflowViewport",
  "type": "Class",
  "description": "A OverflowViewport is the area of a Container set aside for displaying content."},
{ "name": "OverlayType",
  "type": "Class",
  "description": ""},
{ "name": "OverlayType",
  "type": "Property",
  "class": "google.maps.drawing",
  "description": ""},
{ "name": "P",
  "type": "Method",
  "class": "org.apache.royale.html.elements.P",
  "description": "constructor."},
{ "name": "P",
  "type": "Class",
  "description": "The P class represents an HTML <p> element"},
{ "name": "P",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the P key (80)."},
{ "name": "PAGES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PAGES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PAGEVIEW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PAGEVIEW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PAGE_DOWN",
  "type": "Property",
  "class": "org.apache.royale.events.utils.NavigationKeys",
  "description": "The Page Down (or PgDn) key."},
{ "name": "PAGE_DOWN",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate one page downwards."},
{ "name": "PAGE_DOWN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Page Down key (34)."},
{ "name": "PAGE_LEFT",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate one page to the left."},
{ "name": "PAGE_RIGHT",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate one page to the right."},
{ "name": "PAGE_UP",
  "type": "Property",
  "class": "org.apache.royale.events.utils.NavigationKeys",
  "description": "The Page Up (or PgUp) key."},
{ "name": "PAGE_UP",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate one page upwards."},
{ "name": "PAGE_UP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Page Up key (33)."},
{ "name": "PALETTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PALETTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PANORAMA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PANORAMA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PANORAMA_FISH_EYE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PANORAMA_FISH_EYE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PANORAMA_HORIZONTAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PANORAMA_HORIZONTAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PANORAMA_VERTICAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PANORAMA_VERTICAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PANORAMA_WIDE_ANGLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PANORAMA_WIDE_ANGLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PAN_TOOL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PAN_TOOL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PARAGRAPH",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "PARTY_MODE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PARTY_MODE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PASTE",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "Paste from the clipboard."},
{ "name": "PASTE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.EditEvent",
  "description": ""},
{ "name": "PAUSE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for pausing transport mode."},
{ "name": "PAUSE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PAUSE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PAUSE",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Pause key."},
{ "name": "PAUSE_CIRCLE_FILLED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PAUSE_CIRCLE_FILLED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PAUSE_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PAUSE_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PAYMENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PAYMENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PENDING",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "PENDING",
  "type": "Property",
  "class": "org.apache.royale.promises.enums.PromiseState",
  "description": ""},
{ "name": "PEOPLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PEOPLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PEOPLE_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PEOPLE_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERCENT_WIDTHS",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ButtonBarModel",
  "description": ""},
{ "name": "PERIOD",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the ."},
{ "name": "PERM_CAMERA_MIC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERM_CAMERA_MIC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERM_CONTACT_CALENDAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERM_CONTACT_CALENDAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERM_DATA_SETTING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERM_DATA_SETTING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERM_DEVICE_INFORMATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERM_DEVICE_INFORMATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERM_IDENTITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERM_IDENTITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERM_MEDIA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERM_MEDIA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERM_PHONE_MSG",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERM_PHONE_MSG",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERM_SCAN_WIFI",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERM_SCAN_WIFI",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERSIAN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Persian."},
{ "name": "PERSON",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERSON",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERSONAL_VIDEO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERSONAL_VIDEO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERSON_ADD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERSON_ADD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERSON_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERSON_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERSON_PIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERSON_PIN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PERSON_PIN_CIRCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PERSON_PIN_CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PETS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PETS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": ""},
{ "name": "PHONE",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": ""},
{ "name": "PHONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONELINK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONELINK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_ERASE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_ERASE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_LOCK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_LOCK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_RING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_RING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_SETUP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONELINK_SETUP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE_ANDROID",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE_ANDROID",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE_BLUETOOTH_SPEAKER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE_BLUETOOTH_SPEAKER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE_BREAKPOINT",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": ""},
{ "name": "PHONE_FORWARDED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE_FORWARDED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE_IN_TALK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE_IN_TALK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE_IPHONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE_IPHONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE_LOCKED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE_LOCKED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE_MISSED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE_MISSED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHONE_PAUSED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHONE_PAUSED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHOTO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHOTO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHOTO_ALBUM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHOTO_ALBUM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHOTO_CAMERA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHOTO_CAMERA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHOTO_FILTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHOTO_FILTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHOTO_LIBRARY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHOTO_LIBRARY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHOTO_SIZE_SELECT_ACTUAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHOTO_SIZE_SELECT_ACTUAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHOTO_SIZE_SELECT_LARGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHOTO_SIZE_SELECT_LARGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PHOTO_SIZE_SELECT_SMALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PHOTO_SIZE_SELECT_SMALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PICTURE_AS_PDF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PICTURE_AS_PDF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PICTURE_IN_PICTURE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PICTURE_IN_PICTURE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PICTURE_IN_PICTURE_ALT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PICTURE_IN_PICTURE_ALT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PIE_CHART",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PIE_CHART",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PIE_CHART_OUTLINED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PIE_CHART_OUTLINED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PIGGYBACKING_ENABLED",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "PIN_DROP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PIN_DROP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PIXEL_WIDTHS",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ButtonBarModel",
  "description": ""},
{ "name": "PLACE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLACE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PLAIN_TEXT_FORMAT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Plain text format."},
{ "name": "PLAY",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging play transport mode."},
{ "name": "PLAY",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Play key."},
{ "name": "PLAYLIST_ADD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLAYLIST_ADD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PLAYLIST_ADD_CHECK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLAYLIST_ADD_CHECK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PLAYLIST_PLAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLAYLIST_PLAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PLAY_ARROW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLAY_ARROW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PLAY_CIRCLE_FILLED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLAY_CIRCLE_FILLED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PLAY_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLAY_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PLAY_FOR_WORK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLAY_FOR_WORK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PLAY_PAUSE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging play/pause transport mode."},
{ "name": "PLUS_ONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PLUS_ONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "POINTER",
  "type": "Property",
  "class": "org.apache.royale.css2.Cursors",
  "description": ""},
{ "name": "POLL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "POLL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "POLLED",
  "type": "Property",
  "class": "mx.controls.ProgressBarMode",
  "description": "The <code>source</code> property must specify an object that exposes the <code>getBytesLoaded()</code> and <code>getBytesTotal()</code> methods."},
{ "name": "POLLING_INTERVAL_LEGACY",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "POLLING_INTERVAL_MILLIS",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "POLL_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to poll a remote destination for pending, undelivered messages."},
{ "name": "POLL_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to poll a remote destination for pending, undelivered messages."},
{ "name": "POLL_WAIT_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Header to drive an idle wait time before the next client poll request."},
{ "name": "POLL_WAIT_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Header to drive an idle wait time before the next client poll request."},
{ "name": "POLYGON",
  "type": "Property",
  "class": "google.maps.drawing.OverlayType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "POLYLINE",
  "type": "Property",
  "class": "google.maps.drawing.OverlayType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "POLYMER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "POLYMER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "POOL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "POOL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PORTABLE_WIFI_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PORTABLE_WIFI_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PORTRAIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PORTRAIT",
  "type": "Property",
  "class": "org.apache.royale.core.BrowserOrientation",
  "description": ""},
{ "name": "PORTRAIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "POSSIBLY_INVALID",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineValidity",
  "description": ""},
{ "name": "POST",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "HTTP Post request."},
{ "name": "POST_METHOD",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the method used for this request should be \"post\"."},
{ "name": "POWER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "POWER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "POWER_INPUT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "POWER_INPUT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "POWER_SETTINGS_NEW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "POWER_SETTINGS_NEW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PREGNANT_WOMAN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PREGNANT_WOMAN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PREINITIALIZE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "PREPARING_TO_HIDE_DATA",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartState",
  "description": "The display of data has changed in the chart, and it is about to begin a transition to hide the current data."},
{ "name": "PREPARING_TO_SHOW_DATA",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartState",
  "description": "The chart has finished any transitions to hide the old data, and is preparing to run transitions to display the new data"},
{ "name": "PRESENT_TO_ALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PRESENT_TO_ALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PRESERVE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.WhiteSpaceCollapse",
  "description": "Preserves whitespace when importing text."},
{ "name": "PRESERVE_DURABLE_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Durable JMS subscriptions are preserved when an unsubscribe message has this parameter set to true in its header."},
{ "name": "PRESERVE_DURABLE_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Durable JMS subscriptions are preserved when an unsubscribe message has this parameter set to true in its header."},
{ "name": "PREVIOUS",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for skipping to previous track or chapter."},
{ "name": "PRIMARY",
  "type": "Property",
  "class": "org.apache.royale.jewel.Button",
  "description": ""},
{ "name": "PRINT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PRINT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PRINT_DISABLED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PRIORITIZE_LEAST_ADJUSTMENT",
  "type": "Property",
  "class": "org.apache.royale.text.engine.JustificationStyle",
  "description": ""},
{ "name": "PRIORITY_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Messages sent by a MessageAgent can have a priority header with a 0-9 numerical value (0 being lowest) and the server can choose to use this numerical value to prioritize messages to clients."},
{ "name": "PRIORITY_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "Messages sent by a MessageAgent can have a priority header with a 0-9 numerical value (0 being lowest) and the server can choose to use this numerical value to prioritize messages to clients."},
{ "name": "PRIORITY_HIGH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PRIORITY_HIGH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PROGRESS",
  "type": "Property",
  "class": "org.apache.royale.events.ProgressEvent",
  "description": "The name of the event."},
{ "name": "PROGRESS",
  "type": "Property",
  "class": "mx.events.ProgressEvent",
  "description": ""},
{ "name": "PROMINENCE",
  "type": "Property",
  "class": "google.maps.places.RankBy",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "PROPERTY_CHANGE",
  "type": "Property",
  "class": "mx.events.PropertyChangeEvent",
  "description": "The <code>PropertyChangeEvent."},
{ "name": "PROPORTIONAL",
  "type": "Property",
  "class": "org.apache.royale.text.engine.DigitWidth",
  "description": ""},
{ "name": "PROPORTIONAL_WIDTHS",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ButtonBarModel",
  "description": ""},
{ "name": "PROPS",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Props (Properties) key."},
{ "name": "PUBLIC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PUBLIC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PUBLISH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "PUBLISH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "PURPLE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "PUSH_IN_KINSOKU",
  "type": "Property",
  "class": "org.apache.royale.text.engine.JustificationStyle",
  "description": ""},
{ "name": "PUSH_OUT_ONLY",
  "type": "Property",
  "class": "org.apache.royale.text.engine.JustificationStyle",
  "description": ""},
{ "name": "PUT",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "HTTP Put request."},
{ "name": "PUT_METHOD",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the method used for this request should be \"put\"."},
{ "name": "Panel",
  "type": "Method",
  "class": "mx.containers.Panel",
  "description": "Constructor."},
{ "name": "Panel",
  "type": "Class",
  "description": "A Halo Panel container consists of a title bar, a caption, a border, and a  content area for its children."},
{ "name": "Panel",
  "type": "Method",
  "class": "spark.components.Panel",
  "description": "Constructor."},
{ "name": "Panel",
  "type": "Class",
  "description": "The Panel class defines a container that includes a title bar, a caption, a border, and a content area for its children."},
{ "name": "Panel",
  "type": "Method",
  "class": "org.apache.royale.html.Panel",
  "description": "constructor."},
{ "name": "Panel",
  "type": "Class",
  "description": "The Panel class is a Container component capable of parenting other components."},
{ "name": "PanelContent",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.PanelContent",
  "description": ""},
{ "name": "PanelContent",
  "type": "Class",
  "description": "A Container specialized for the content area of a Panel."},
{ "name": "PanelLayoutProxy",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "Constructor."},
{ "name": "PanelLayoutProxy",
  "type": "Class",
  "description": "The PanelLayoutProxy class is used by Panel in order for layouts to operate on the Panel itself."},
{ "name": "PanelModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.PanelModel",
  "description": "constructor."},
{ "name": "PanelModel",
  "type": "Class",
  "description": "The PanelModel bead class holds the values for a org."},
{ "name": "PanelModel",
  "type": "Method",
  "class": "mx.containers.beads.models.PanelModel",
  "description": "Constructor."},
{ "name": "PanelModel",
  "type": "Class",
  "description": "The PanelModel for emulation."},
{ "name": "PanelTitleBar",
  "type": "Method",
  "class": "org.apache.royale.html.PanelTitleBar",
  "description": "A specially styled TitleBar for use in a Panel"},
{ "name": "PanelTitleBar",
  "type": "Class",
  "description": ""},
{ "name": "PanelTitleBar",
  "type": "Method",
  "class": "mx.containers.PanelTitleBar",
  "description": "Constructor."},
{ "name": "PanelTitleBar",
  "type": "Class",
  "description": "The PanelView for emulation."},
{ "name": "PanelView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": "constructor."},
{ "name": "PanelView",
  "type": "Class",
  "description": "The Panel class creates the visual elements of the org."},
{ "name": "PanelView",
  "type": "Method",
  "class": "mx.containers.beads.PanelView",
  "description": "Constructor."},
{ "name": "PanelView",
  "type": "Class",
  "description": "The PanelView for emulation."},
{ "name": "PanelView",
  "type": "Method",
  "class": "spark.components.beads.PanelView",
  "description": "Constructor."},
{ "name": "PanelView",
  "type": "Class",
  "description": "The PanelView for emulation."},
{ "name": "PanelWithControlBar",
  "type": "Method",
  "class": "org.apache.royale.html.PanelWithControlBar",
  "description": "constructor."},
{ "name": "PanelWithControlBar",
  "type": "Class",
  "description": "The Panel class is a Container component capable of parenting other components."},
{ "name": "PanelWithControlBarView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.PanelWithControlBarView",
  "description": "constructor."},
{ "name": "PanelWithControlBarView",
  "type": "Class",
  "description": "The Panel class creates the visual elements of the org."},
{ "name": "PanoramioFeature",
  "type": "Method",
  "class": "google.maps.panoramio",
  "description": ""},
{ "name": "PanoramioLayerOptions",
  "type": "Method",
  "class": "google.maps.panoramio",
  "description": ""},
{ "name": "PanoramioMouseEvent",
  "type": "Method",
  "class": "google.maps.panoramio",
  "description": ""},
{ "name": "ParaEdit",
  "type": "Class",
  "description": "Encapsulates all methods necessary for dynamic editing of a text."},
{ "name": "ParagraphElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "Constructor - represents a paragraph in a text flow."},
{ "name": "ParagraphElement",
  "type": "Class",
  "description": "The ParagraphElement class represents a paragraph in the text flow hierarchy."},
{ "name": "ParagraphFormattedElement",
  "type": "Class",
  "description": "The ParagraphFormattedElement class is an abstract base class for FlowElement classes that have paragraph properties."},
{ "name": "ParagraphHelper",
  "type": "Class",
  "description": ""},
{ "name": "Parallel",
  "type": "Method",
  "class": "org.apache.royale.effects.Parallel",
  "description": "Constructor."},
{ "name": "Parallel",
  "type": "Class",
  "description": "The Parallel effect animates set of effects at the same time."},
{ "name": "Parallel",
  "type": "Method",
  "class": "mx.effects.Parallel",
  "description": "Constructor."},
{ "name": "Parallel",
  "type": "Class",
  "description": "The Parallel effect plays multiple child effects at the same time."},
{ "name": "ParallelPlayBead",
  "type": "Method",
  "class": "org.apache.royale.effects.beads.ParallelPlayBead",
  "description": ""},
{ "name": "ParallelPlayBead",
  "type": "Class",
  "description": ""},
{ "name": "ParallelReverseBead",
  "type": "Method",
  "class": "org.apache.royale.effects.beads.ParallelReverseBead",
  "description": ""},
{ "name": "ParallelReverseBead",
  "type": "Class",
  "description": ""},
{ "name": "ParameterDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.ParameterDefinition",
  "description": ""},
{ "name": "ParameterDefinition",
  "type": "Class",
  "description": "The description of a Function parameter"},
{ "name": "Parcel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": "Constructor."},
{ "name": "Parcel",
  "type": "Class",
  "description": "Helper class for implementations of IParcelList"},
{ "name": "ParcelList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": "Constructor."},
{ "name": "ParcelList",
  "type": "Class",
  "description": "@private Used for composing text containers, keeps track of the areas that text in the flow is composed into."},
{ "name": "ParentDocumentBead",
  "type": "Method",
  "class": "org.apache.royale.core.ParentDocumentBead",
  "description": "Constructor."},
{ "name": "ParentDocumentBead",
  "type": "Class",
  "description": "The ParentDocumentBead class looks up the parent chain to find a parent that was written in MXML."},
{ "name": "ParentRunner",
  "type": "Method",
  "class": "org.apache.royale.test.runners.ParentRunner",
  "description": "Constructor."},
{ "name": "ParentRunner",
  "type": "Class",
  "description": "Provides a base implementation of a runner with children, and intended to be subclassed."},
{ "name": "PasswordInput",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.PasswordInput",
  "description": "constructor."},
{ "name": "PasswordInput",
  "type": "Class",
  "description": "The PasswordInput class is a specialty bead that can be used with any TextInput control."},
{ "name": "PasswordInputBead",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.PasswordInputBead",
  "description": "constructor."},
{ "name": "PasswordInputBead",
  "type": "Class",
  "description": "The PasswordInput class is a specialty bead that can be used with any TextInput control."},
{ "name": "PasswordInputRemovableBead",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.PasswordInputRemovableBead",
  "description": "constructor."},
{ "name": "PasswordInputRemovableBead",
  "type": "Class",
  "description": "The PasswordInput class is a specialty bead that can be used with any TextInput control."},
{ "name": "PasteOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.PasteOperation",
  "description": "Creates a PasteOperation object."},
{ "name": "PasteOperation",
  "type": "Class",
  "description": "The PasteOperation class encapsulates a paste operation."},
{ "name": "Path",
  "type": "Class",
  "description": ""},
{ "name": "Path",
  "type": "Method",
  "class": "spark.primitives.Path",
  "description": "Constructor."},
{ "name": "Path",
  "type": "Class",
  "description": "The Path class is a filled graphic element that draws a series of path segments."},
{ "name": "PathBuilder",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Constructor."},
{ "name": "PathBuilder",
  "type": "Class",
  "description": ""},
{ "name": "PathHelper",
  "type": "Class",
  "description": ""},
{ "name": "Pause",
  "type": "Method",
  "class": "mx.effects.Pause",
  "description": "Constructor."},
{ "name": "Pause",
  "type": "Class",
  "description": "The Pause effect does nothing for a duration."},
{ "name": "PercentPropertyHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PercentPropertyHandler",
  "description": ""},
{ "name": "PercentPropertyHandler",
  "type": "Class",
  "description": "A property description with a Number or a Percent as its value."},
{ "name": "PermanentStorage",
  "type": "Method",
  "class": "org.apache.royale.storage.PermanentStorage",
  "description": "Constructor."},
{ "name": "PermanentStorage",
  "type": "Class",
  "description": "The PermanentStorage class provides the interface to the native file system."},
{ "name": "PhoneFormatter",
  "type": "Method",
  "class": "mx.formatters.PhoneFormatter",
  "description": "Constructor."},
{ "name": "PhoneFormatter",
  "type": "Class",
  "description": "The PhoneFormatter class formats a valid number into a phone number format, including international configurations."},
{ "name": "PhoneNumberValidator",
  "type": "Method",
  "class": "mx.validators.PhoneNumberValidator",
  "description": "Constructor."},
{ "name": "PhoneNumberValidator",
  "type": "Class",
  "description": "The PhoneNumberValidator class validates that a string is a valid phone number."},
{ "name": "PieChart",
  "type": "Method",
  "class": "mx.charts.PieChart",
  "description": "Constructor."},
{ "name": "PieChart",
  "type": "Class",
  "description": "The PieChart control represents a data series as a standard pie chart."},
{ "name": "PieChart",
  "type": "Method",
  "class": "org.apache.royale.charts.PieChart",
  "description": "constructor."},
{ "name": "PieChart",
  "type": "Class",
  "description": "The PieChart displays data as a percentage of pie."},
{ "name": "PieChartLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.PieChartLayout",
  "description": "constructor."},
{ "name": "PieChartLayout",
  "type": "Class",
  "description": "The PieChartLayout class calculates the size and position of all of the itemRenderers for a PieChart."},
{ "name": "PieChartLayoutForArrayList",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.PieChartLayoutForArrayList",
  "description": "constructor."},
{ "name": "PieChartLayoutForArrayList",
  "type": "Class",
  "description": "The PieChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for a PieChart."},
{ "name": "PieSeries",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.PieSeries",
  "description": ""},
{ "name": "PieSeries",
  "type": "Class",
  "description": ""},
{ "name": "PieSeries",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": "Constructor."},
{ "name": "PieSeries",
  "type": "Class",
  "description": "The PieSeries class defines the data series for a PieChart control."},
{ "name": "PieSeriesItem",
  "type": "Method",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "Constructor."},
{ "name": "PieSeriesItem",
  "type": "Class",
  "description": "Represents the information required to render a single wedge as part of a PieSeries."},
{ "name": "PieSeriesRenderData",
  "type": "Method",
  "class": "mx.charts.series.renderData.PieSeriesRenderData",
  "description": "Constructor."},
{ "name": "PieSeriesRenderData",
  "type": "Class",
  "description": "Represents all the information needed by the PieSeries to render."},
{ "name": "PlaceDetailsRequest",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "PlacePhoto",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "PlaceSearchRequest",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "PlacesService",
  "type": "Method",
  "class": "google.maps.places.PlacesService",
  "description": ""},
{ "name": "PlacesService",
  "type": "Class",
  "description": ""},
{ "name": "PlacesServiceStatus",
  "type": "Property",
  "class": "google.maps.places",
  "description": ""},
{ "name": "PlacesServiceStatus",
  "type": "Class",
  "description": ""},
{ "name": "PlainTextExporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.PlainTextExporter",
  "description": "Constructor"},
{ "name": "PlainTextExporter",
  "type": "Class",
  "description": "Export converter for plain text format."},
{ "name": "PlainTextImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.PlainTextImporter",
  "description": "Constructor"},
{ "name": "PlainTextImporter",
  "type": "Class",
  "description": "PlainText import converter."},
{ "name": "PlatformWiper",
  "type": "Method",
  "class": "org.apache.royale.effects.PlatformWiper",
  "description": "Constructor."},
{ "name": "PlatformWiper",
  "type": "Class",
  "description": "Helper class for Wipe effects."},
{ "name": "PlotChart",
  "type": "Method",
  "class": "mx.charts.PlotChart",
  "description": "Constructor."},
{ "name": "PlotChart",
  "type": "Class",
  "description": "The PlotChart control represents data with two values for each data point."},
{ "name": "PlotSeries",
  "type": "Method",
  "class": "mx.charts.series.PlotSeries",
  "description": "Constructor."},
{ "name": "PlotSeries",
  "type": "Class",
  "description": "Defines a data series for a PlotChart control."},
{ "name": "PlotSeriesItem",
  "type": "Method",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "Constructor."},
{ "name": "PlotSeriesItem",
  "type": "Class",
  "description": "Represents the information required to render an item as part of a PlotSeries."},
{ "name": "PlotSeriesRenderData",
  "type": "Method",
  "class": "mx.charts.series.renderData.PlotSeriesRenderData",
  "description": "Constructor."},
{ "name": "PlotSeriesRenderData",
  "type": "Class",
  "description": "Represents all the information needed by the PlotSeries to render."},
{ "name": "Point",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "Point",
  "type": "Class",
  "description": "The Point class is a utility class for holding x and y values, not that you can't use it to hold a width and height value."},
{ "name": "PointFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.PointFormat",
  "description": "Constructor"},
{ "name": "PointFormat",
  "type": "Class",
  "description": "Contains the settings that apply to new text being typed."},
{ "name": "PointUtils",
  "type": "Class",
  "description": "The PointUtils class is a collection of static functions that convert Points between coordinate spaces."},
{ "name": "PolarChart",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": "Constructor."},
{ "name": "PolarChart",
  "type": "Class",
  "description": "The PolarChart control serves as base class for circular charts based in polar coordinates."},
{ "name": "PolarChart",
  "type": "Method",
  "class": "org.apache.royale.charts.core.PolarChart",
  "description": "constructor."},
{ "name": "PolarChart",
  "type": "Class",
  "description": "This class provides the basis for circular, or polar, charts."},
{ "name": "PolarDataCanvas",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Constructor."},
{ "name": "PolarDataCanvas",
  "type": "Class",
  "description": "PolarDataCanvas class enables user to use graphics API with respect to data coordinates instead of screen coordinates."},
{ "name": "PolarTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarTransform",
  "description": "Constructor."},
{ "name": "PolarTransform",
  "type": "Class",
  "description": "The PolarTransform object represents a set of axes used to map data values to angle/distance polar coordinates and vice versa."},
{ "name": "PollingChannel",
  "type": "Method",
  "class": "mx.messaging.channels.PollingChannel",
  "description": "Creates a new PollingChannel instance with the specified id."},
{ "name": "PollingChannel",
  "type": "Class",
  "description": "The PollingChannel class provides the polling behavior that all polling channels in the messaging system require."},
{ "name": "Polygon",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "Polygon",
  "type": "Class",
  "description": ""},
{ "name": "PopUp",
  "type": "Method",
  "class": "org.apache.royale.jewel.PopUp",
  "description": "constructor."},
{ "name": "PopUp",
  "type": "Class",
  "description": "The PopUp class is a component that can popup another component declared as IPopUp"},
{ "name": "PopUpAnchor",
  "type": "Method",
  "class": "spark.components.PopUpAnchor",
  "description": "Constructor"},
{ "name": "PopUpAnchor",
  "type": "Class",
  "description": "The PopUpAnchor component is used to position a control that pops up or drops down, such as a DropDownList component, in layout."},
{ "name": "PopUpButton",
  "type": "Method",
  "class": "mx.controls.PopUpButton",
  "description": "Constructor."},
{ "name": "PopUpButton",
  "type": "Class",
  "description": "The PopUpButton control adds a flexible pop-up control interface  to a Button control."},
{ "name": "PopUpContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.popup.PopUpContent",
  "description": "constructor."},
{ "name": "PopUpContent",
  "type": "Class",
  "description": "The PopUpContent class is a component"},
{ "name": "PopUpEvent",
  "type": "Method",
  "class": "spark.events.PopUpEvent",
  "description": "Constructor."},
{ "name": "PopUpEvent",
  "type": "Class",
  "description": "The PopUpEvent class represents an event dispatched by the SkinnablePopUpContainer."},
{ "name": "PopUpList",
  "type": "Method",
  "class": "org.apache.royale.html.PopUpList",
  "description": "constructor."},
{ "name": "PopUpList",
  "type": "Class",
  "description": "The PopUpList class is a List that can be popped up or floated over the view."},
{ "name": "PopUpManager",
  "type": "Class",
  "description": "The PopUpManager singleton class creates new top-level windows and places or removes those windows from the layer on top of all other visible windows."},
{ "name": "PopUpMenuButton",
  "type": "Method",
  "class": "mx.controls.PopUpMenuButton",
  "description": "Constructor."},
{ "name": "PopUpMenuButton",
  "type": "Class",
  "description": "The PopUpMenuButton control creates a PopUpButton control with a main sub-button and a secondary sub-button."},
{ "name": "PopUpModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.PopUpModel",
  "description": "Constructor."},
{ "name": "PopUpModel",
  "type": "Class",
  "description": "The PopUpModel class bead defines the data associated with an org."},
{ "name": "PopUpMouseController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.PopUpMouseController",
  "description": "constructor."},
{ "name": "PopUpMouseController",
  "type": "Class",
  "description": "The PopUpMouseController class is responsible for monitoring the mouse events on the elements of the DateField."},
{ "name": "PopUpUtil",
  "type": "Class",
  "description": "Helper functionality for working with pop-ups."},
{ "name": "PopUpView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.PopUpView",
  "description": "constructor."},
{ "name": "PopUpView",
  "type": "Class",
  "description": "The PopUpView class is a bead for PopUp that creates the dialog that holds the real component."},
{ "name": "Pre",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Pre",
  "description": "constructor."},
{ "name": "Pre",
  "type": "Class",
  "description": "The PRE class represents an HTML <pre> element"},
{ "name": "PredictionSubstring",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "PredictionTerm",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "Producer",
  "type": "Method",
  "class": "mx.messaging.Producer",
  "description": "Constructor."},
{ "name": "Producer",
  "type": "Class",
  "description": "A Producer sends messages to a destination."},
{ "name": "ProgrammaticSkin",
  "type": "Method",
  "class": "mx.skins.ProgrammaticSkin",
  "description": "Constructor."},
{ "name": "ProgrammaticSkin",
  "type": "Class",
  "description": "This class is the base class for skin elements which draw themselves programmatically."},
{ "name": "Progress",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Progress",
  "description": "constructor."},
{ "name": "Progress",
  "type": "Class",
  "description": "The Progress class represents an HTML <progress> element"},
{ "name": "ProgressBar",
  "type": "Method",
  "class": "mx.controls.ProgressBar",
  "description": "Constructor."},
{ "name": "ProgressBar",
  "type": "Class",
  "description": "The ProgressBar control provides a visual representation of the progress of a task over time."},
{ "name": "ProgressBar",
  "type": "Method",
  "class": "org.apache.royale.mdl.ProgressBar",
  "description": ""},
{ "name": "ProgressBar",
  "type": "Class",
  "description": "The ProgressBar indicate loading and progress states."},
{ "name": "ProgressBarDirection",
  "type": "Class",
  "description": "The ProgressBarDirection class defines the values for the <code>direction</code> property of the ProgressBar class."},
{ "name": "ProgressBarLabelPlacement",
  "type": "Class",
  "description": "The ProgressBarLabelPlacement class defines the values for the <code>labelPlacement</code> property of the ProgressBar class."},
{ "name": "ProgressBarMode",
  "type": "Class",
  "description": "The ProgressBarMode class defines the values for the <code>mode</code> property of the ProgressBar class."},
{ "name": "ProgressEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ProgressEvent",
  "description": "Constructor."},
{ "name": "ProgressEvent",
  "type": "Class",
  "description": "The ProgressEvent"},
{ "name": "ProgressEvent",
  "type": "Method",
  "class": "mx.events.ProgressEvent",
  "description": "Constructor."},
{ "name": "ProgressEvent",
  "type": "Class",
  "description": "The ProgressEvent"},
{ "name": "Promise",
  "type": "Method",
  "class": "Promise",
  "description": ""},
{ "name": "Promise",
  "type": "Class",
  "description": ""},
{ "name": "PromiseState",
  "type": "Method",
  "class": "org.apache.royale.promises.enums.PromiseState",
  "description": ""},
{ "name": "PromiseState",
  "type": "Class",
  "description": ""},
{ "name": "PropConst",
  "type": "Class",
  "description": ""},
{ "name": "Property",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "Initializer."},
{ "name": "Property",
  "type": "Class",
  "description": "Base class of property metadata."},
{ "name": "PropertyChangeEvent",
  "type": "Method",
  "class": "mx.events.PropertyChangeEvent",
  "description": "Constructor."},
{ "name": "PropertyChangeEvent",
  "type": "Class",
  "description": "The PropertyChangeEvent class represents the event object passed to the event listener when one of the properties of an object has changed, and provides information about the change."},
{ "name": "PropertyChangeEventKind",
  "type": "Class",
  "description": "The PropertyChangeEventKind class defines the constant values for the <code>kind</code> property of the PropertyChangeEvent class."},
{ "name": "PropertyFactory",
  "type": "Class",
  "description": ""},
{ "name": "PropertyHandler",
  "type": "Class",
  "description": ""},
{ "name": "PropertyUtil",
  "type": "Class",
  "description": ""},
{ "name": "PropertyWatcher",
  "type": "Method",
  "class": "org.apache.royale.binding.PropertyWatcher",
  "description": "Constructor."},
{ "name": "PropertyWatcher",
  "type": "Class",
  "description": "The PropertyWatcher class is the data-binding class that watches for changes to various properties in objects."},
{ "name": "Proxy",
  "type": "Method",
  "class": "org.apache.royale.utils.Proxy",
  "description": "Constructor."},
{ "name": "Proxy",
  "type": "Class",
  "description": ""},
{ "name": "Q",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Q key (81)."},
{ "name": "QName",
  "type": "Method",
  "class": "QName",
  "description": ""},
{ "name": "QName",
  "type": "Class",
  "description": ""},
{ "name": "QUERY_BUILDER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "QUERY_BUILDER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "QUESTION_ANSWER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "QUESTION_ANSWER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "QUEUE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "QUEUE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "QUEUED",
  "type": "Property",
  "class": "mx.core.ContainerCreationPolicy",
  "description": "Add the container to a creation queue."},
{ "name": "QUEUE_MUSIC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "QUEUE_MUSIC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "QUEUE_PLAY_NEXT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "QUEUE_PLAY_NEXT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "QUOTE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the ' key (222)."},
{ "name": "QuadraticCurve",
  "type": "Method",
  "class": "org.apache.royale.graphics.QuadraticCurve",
  "description": ""},
{ "name": "QuadraticCurve",
  "type": "Class",
  "description": ""},
{ "name": "QueryAutocompletePrediction",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "QueryAutocompletionRequest",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "R",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the R key (82)."},
{ "name": "RADIAL_AXIS",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarTransform",
  "description": "A string representing the radial axis."},
{ "name": "RADIO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RADIO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RADIO_BUTTON_CHECKED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RADIO_BUTTON_CHECKED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RADIO_BUTTON_UNCHECKED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RADIO_BUTTON_UNCHECKED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RADIUS_AXIS",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "The type of radius axis."},
{ "name": "RANGE_INTERPOLATED",
  "type": "Property",
  "class": "google.maps.GeocoderLocationType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "RATE_REVIEW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RATE_REVIEW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "READY",
  "type": "Property",
  "class": "mx.events.ModuleEvent",
  "description": "Dispatched when the module has finished downloading."},
{ "name": "READY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElementStatus",
  "description": "Graphic is completely loaded and properly sized."},
{ "name": "READ_ONLY",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditingMode",
  "description": "The document is read-only."},
{ "name": "READ_SELECT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditingMode",
  "description": "The text in the document can be selected and copied, but not edited."},
{ "name": "READ_WRITE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditingMode",
  "description": "The document can be edited."},
{ "name": "RECEIPT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RECEIPT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RECENT_ACTORS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RECENT_ACTORS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RECORD",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for recording or engaging record transport mode."},
{ "name": "RECORD_MESSAGE_SIZES",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "RECORD_MESSAGE_TIMES",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "RECORD_VOICE_OVER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RECORD_VOICE_OVER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RECTANGLE",
  "type": "Property",
  "class": "google.maps.drawing.OverlayType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "RED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "RED",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Red function key button."},
{ "name": "REDEEM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REDEEM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REDO",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "Redo the last action."},
{ "name": "REDO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REDO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REFRESH",
  "type": "Property",
  "class": "mx.events.CollectionEventKind",
  "description": "Indicates that the collection applied a sort, a filter, or both."},
{ "name": "REFRESH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REFRESH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REJECTED",
  "type": "Property",
  "class": "org.apache.royale.promises.enums.PromiseState",
  "description": ""},
{ "name": "REMOTE_CREDENTIALS_CHARSET_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Messages that need to set remote credentials for a destination may also need to report the character-set encoding that was used to create the credentials String using this header."},
{ "name": "REMOTE_CREDENTIALS_CHARSET_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "Messages that need to set remote credentials for a destination may also need to report the character-set encoding that was used to create the credentials String using this header."},
{ "name": "REMOTE_CREDENTIALS_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Messages that need to set remote credentials for a destination carry the Base64 encoded credentials in this header."},
{ "name": "REMOTE_CREDENTIALS_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "Messages that need to set remote credentials for a destination carry the Base64 encoded credentials in this header."},
{ "name": "REMOVE",
  "type": "Property",
  "class": "mx.events.CollectionEventKind",
  "description": "Indicates that the collection removed an item or items."},
{ "name": "REMOVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REMOVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REMOVE_CELL",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that this cell should be removed from the current selection."},
{ "name": "REMOVE_CIRCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REMOVE_CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REMOVE_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REMOVE_CIRCLE_OUTLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REMOVE_FROM_QUEUE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REMOVE_FROM_QUEUE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REMOVE_RED_EYE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REMOVE_RED_EYE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REMOVE_ROW",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that this row should be removed from the current selection."},
{ "name": "REMOVE_SHOPPING_CART",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REMOVE_SHOPPING_CART",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REMOVE_SUBSCRIPTIONS",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Like the above, but specifies the subtopic/selector array of to remove"},
{ "name": "REMOVE_SUBSCRIPTIONS",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Like the above, but specifies the subtopic/selector array of to remove"},
{ "name": "REORDER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REORDER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPEAT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPEAT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPEAT_ONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPEAT_ONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPLACE",
  "type": "Property",
  "class": "mx.events.CollectionEventKind",
  "description": "Indicates that the item at the position identified by the CollectionEvent <code>location</code> property has been replaced."},
{ "name": "REPLAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPLAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPLAY_10",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPLAY_10",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPLAY_30",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPLAY_30",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPLAY_5",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPLAY_5",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPLY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPLY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPLY_ALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPLY_ALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPORT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPORT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REPORT_PROBLEM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "REPORT_PROBLEM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "REQUEST_DENIED",
  "type": "Property",
  "class": "google.maps.DirectionsStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "REQUEST_DENIED",
  "type": "Property",
  "class": "google.maps.places.PlacesServiceStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "REQUEST_DENIED",
  "type": "Property",
  "class": "google.maps.DistanceMatrixStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "REQUEST_DENIED",
  "type": "Property",
  "class": "google.maps.ElevationStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "REQUEST_DENIED",
  "type": "Property",
  "class": "google.maps.GeocoderStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "REQUEST_NAVIGATE_NEXT_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.events.WizardEvent",
  "description": ""},
{ "name": "REQUEST_NAVIGATE_PREVIOUS_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.events.WizardEvent",
  "description": ""},
{ "name": "REQUEST_NAVIGATE_TO_STEP",
  "type": "Property",
  "class": "org.apache.royale.jewel.events.WizardEvent",
  "description": ""},
{ "name": "REQUEST_TIMEOUT_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Messages sent with a defined request timeout use this header."},
{ "name": "REQUEST_TIMEOUT_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "Messages sent with a defined request timeout use this header."},
{ "name": "REQUEST_TIMEOUT_SECONDS",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "REQUIRED_BOUNDED_VALUES",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "A bitflag passed by the axis to an element's <code>describeData()</code> method."},
{ "name": "REQUIRED_MIN_INTERVAL",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "A bitflag passed by the axis to an element's <code>describeData()</code> method."},
{ "name": "REQUIRED_MIN_MAX",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "A bitflag passed by the axis to an element's <code>describeData()</code> method."},
{ "name": "REQUIRED_PADDING",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "A bitflag passed by the axis to an element's <code>describeData()</code> method."},
{ "name": "RESET",
  "type": "Property",
  "class": "mx.events.CollectionEventKind",
  "description": "Indicates that the collection has changed so drastically that a reset is required."},
{ "name": "RESIZE",
  "type": "Property",
  "class": "mx.events.ResizeEvent",
  "description": "The <code>ResizeEvent."},
{ "name": "RESPONSE_STATUS",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "Dispatched if Adobe AIR is able to detect and return the status code for the request."},
{ "name": "RESTAURANT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RESTAURANT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RESTAURANT_MENU",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RESTAURANT_MENU",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RESTORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RESTORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RESTORE_PAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RESTORE_PAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RESULT",
  "type": "Property",
  "class": "mx.messaging.events.MessageEvent",
  "description": "The RESULT event type; dispatched when an RPC agent receives a result from a remote service destination."},
{ "name": "RESULT",
  "type": "Property",
  "class": "mx.rpc.events.ResultEvent",
  "description": "The RESULT event type."},
{ "name": "RESULT",
  "type": "Property",
  "class": "org.apache.royale.net.events.ResultEvent",
  "description": ""},
{ "name": "RESULT_FORMAT_ARRAY",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "The result format \"array\" is similar to \"object\" however the value returned is always an Array such that if the result returned from result format \"object\" is not an Array already the item will be added as the first item to a new Array."},
{ "name": "RESULT_FORMAT_ARRAY",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "The result format \"array\" is similar to \"object\" however the value returned is always an Array such that if the result returned from result format \"object\" is not an Array already the item will be added as the first item to a new Array."},
{ "name": "RESULT_FORMAT_E4X",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "The result format \"e4x\" specifies that the value returned is an XML instance, which can be accessed using ECMAScript for XML (E4X) expressions."},
{ "name": "RESULT_FORMAT_E4X",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "The result format \"e4x\" specifies that the value returned is an XML instance, which can be accessed using ECMAScript for XML (E4X) expressions."},
{ "name": "RESULT_FORMAT_FLASHVARS",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "The result format \"flashvars\" specifies that the value returned is text containing name=value pairs separated by ampersands, which is parsed into an ActionScript object."},
{ "name": "RESULT_FORMAT_FLASHVARS",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "The result format \"flashvars\" specifies that the value returned is text containing name=value pairs separated by ampersands, which is parsed into an ActionScript object."},
{ "name": "RESULT_FORMAT_OBJECT",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "The result format \"object\" specifies that the value returned is XML but is parsed as a tree of ActionScript objects."},
{ "name": "RESULT_FORMAT_OBJECT",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "The result format \"object\" specifies that the value returned is XML but is parsed as a tree of ActionScript objects."},
{ "name": "RESULT_FORMAT_TEXT",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "The result format \"text\" specifies that the HTTPService result text should be an unprocessed String."},
{ "name": "RESULT_FORMAT_TEXT",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "The result format \"text\" specifies that the HTTPService result text should be an unprocessed String."},
{ "name": "RESULT_FORMAT_XML",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "The result format \"xml\" specifies that results should be returned as an flash."},
{ "name": "RETRYABLE_HINT_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.ErrorMessage",
  "description": "Header name for the retryable hint header."},
{ "name": "REWIND",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging rewind transport mode."},
{ "name": "RHS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "The right-hand side only."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": ""},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.NavigationKeys",
  "description": "The right arrow key."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": ""},
{ "name": "RIGHT",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "RIGHT",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate one line or \"step\" to the right."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "RIGHT",
  "type": "Property",
  "class": "mx.controls.ProgressBarLabelPlacement",
  "description": "Specifies to place the label to the right of the progress bar."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.AdaptiveToolTipBead",
  "description": ""},
{ "name": "RIGHT",
  "type": "Property",
  "class": "mx.controls.ProgressBarDirection",
  "description": "Specifies to fill the progress bar from the left to the right."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "spark.layouts.HorizontalAlign",
  "description": "Align children to the right of the container."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Float",
  "description": "Graphic floats on the right side of the text."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Right Arrow key (39)."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextAlign",
  "description": "Specifies right edge alignment."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ClearFloats",
  "description": "Specifies that text skips over right floats."},
{ "name": "RIGHT",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.TextAlign",
  "description": ""},
{ "name": "RIGHTBRACKET",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the ] key (221)."},
{ "name": "RIGHT_BOTTOM",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "RIGHT_CENTER",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "RIGHT_EFFECT",
  "type": "Property",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": ""},
{ "name": "RIGHT_TOP",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "RING_VOLUME",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RING_VOLUME",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BlockProgression",
  "description": "Specifies right to left block progression."},
{ "name": "ROADMAP",
  "type": "Property",
  "class": "google.maps.MapTypeId",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ROLLOVER",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "Value that indicates the ChartItem appears as if the mouse was over it."},
{ "name": "ROLL_OUT",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "ROLL_OUT",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "ROLL_OUT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>rollOut</code> event object."},
{ "name": "ROLL_OVER",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "ROLL_OVER",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "ROLL_OVER",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "Defines the value of the <code>type</code> property of a <code>rollOver</code> event object."},
{ "name": "ROMAN",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextBaseline",
  "description": ""},
{ "name": "ROMAN_UP",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LeadingModel",
  "description": "Specifies that leading basis is ROMAN and leading direction is UP."},
{ "name": "ROOFTOP",
  "type": "Property",
  "class": "google.maps.GeocoderLocationType",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ROOM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ROOM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ROOM_SERVICE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ROOM_SERVICE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ROTATE_0",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextRotation",
  "description": ""},
{ "name": "ROTATE_180",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextRotation",
  "description": ""},
{ "name": "ROTATE_270",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextRotation",
  "description": ""},
{ "name": "ROTATE_90",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextRotation",
  "description": ""},
{ "name": "ROTATE_90_DEGREES_CCW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ROTATE_90_DEGREES_CCW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ROTATE_LEFT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ROTATE_LEFT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ROTATE_RIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ROTATE_RIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ROUND",
  "type": "Property",
  "class": "org.apache.royale.graphics.LineStyle",
  "description": ""},
{ "name": "ROUND_CORNER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ROUND_CORNER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ROUTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ROUTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ROW",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDoubleClickMode",
  "description": "Specifies that the doubleClick event should be based on a row."},
{ "name": "ROWING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ROWING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ROWS",
  "type": "Property",
  "class": "spark.layouts.TileOrientation",
  "description": "Arranges elements row by row."},
{ "name": "ROWS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableRules",
  "description": "Rules will appear between rows only."},
{ "name": "ROYALE_CLIENT_ID_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "This header is used to transport the global RoyaleClient Id value in outbound messages once it has been assigned by the server."},
{ "name": "RPCStringUtil",
  "type": "Class",
  "description": "The RPCStringUtil class is a subset of StringUtil, removing methods that create dependency issues when RPC messages are in a bootstrap loader."},
{ "name": "RPCUIDUtil",
  "type": "Class",
  "description": "The RPCUIDUtil class is a copy of UIDUtil without some functions that cause dependency problems when RPC messages are put in a bootstrap loader."},
{ "name": "RPCUIDUtil",
  "type": "Class",
  "description": "The RPCUIDUtil class is a copy of UIDUtil without some functions that cause dependency problems when RPC messages are put in a bootstrap loader."},
{ "name": "RSS_FEED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RSS_FEED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RTL",
  "type": "Property",
  "class": "mx.core.LayoutDirection",
  "description": "Specifies right-to-left layout direction for a style client or a visual element."},
{ "name": "RTL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Direction",
  "description": "Specifies right-to-left direction for text."},
{ "name": "RV_HOOKUP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "RV_HOOKUP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "RadarSearchRequest",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "RadioButton",
  "type": "Method",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": "Constructor."},
{ "name": "RadioButton",
  "type": "Class",
  "description": "The Jewel radio button component in JS is an enhanced version of the standard HTML <input type=\"radio\">, or \"radio button\" element."},
{ "name": "RadioButton",
  "type": "Method",
  "class": "mx.controls.RadioButton",
  "description": "Constructor."},
{ "name": "RadioButton",
  "type": "Class",
  "description": "The RadioButton control lets the user make a single choice within a set of mutually exclusive choices."},
{ "name": "RadioButton",
  "type": "Class",
  "description": ""},
{ "name": "RadioButton",
  "type": "Class",
  "description": ""},
{ "name": "RadioButton",
  "type": "Method",
  "class": "spark.components.RadioButton",
  "description": "Constructor."},
{ "name": "RadioButton",
  "type": "Class",
  "description": "The RadioButton component allows the user make a single choice within a set of mutually exclusive choices."},
{ "name": "RadioButton",
  "type": "Method",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": "Constructor."},
{ "name": "RadioButton",
  "type": "Class",
  "description": ""},
{ "name": "RadioButton",
  "type": "Class",
  "description": ""},
{ "name": "RadioButtonGroup",
  "type": "Method",
  "class": "mx.controls.RadioButtonGroup",
  "description": "Constructor."},
{ "name": "RadioButtonGroup",
  "type": "Class",
  "description": "The RadioButtonGroup control defines a group of RadioButton controls that act as a single mutually exclusive control; therefore, a user can select only one RadioButton control at a time."},
{ "name": "RadioButtonGroup",
  "type": "Method",
  "class": "spark.components.RadioButtonGroup",
  "description": "Constructor."},
{ "name": "RadioButtonGroup",
  "type": "Class",
  "description": "The RadioButtonGroup component defines a group of RadioButton components that act as a single mutually exclusive component; therefore, a user can select only one RadioButton component at a time."},
{ "name": "RadioButtonIcon",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.RadioButtonIcon",
  "description": ""},
{ "name": "RadioButtonIcon",
  "type": "Class",
  "description": "The RadioButton class is a component that displays a selectable Button."},
{ "name": "RadioButtonIcon",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.radiobutton.RadioButtonIcon",
  "description": ""},
{ "name": "RadioButtonIcon",
  "type": "Class",
  "description": "The RadioButton class is a component that displays a selectable Button."},
{ "name": "RadioButtonValidator",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.RadioButtonValidator",
  "description": "constructor."},
{ "name": "RadioButtonValidator",
  "type": "Class",
  "description": "The RadioButtonValidator class is a specialty bead that can be used with Group control."},
{ "name": "Range",
  "type": "Method",
  "class": "spark.components.supportClasses.Range",
  "description": "Constructor."},
{ "name": "Range",
  "type": "Class",
  "description": "The Range class holds a value and an allowed range for that value, defined by <code>minimum</code> and <code>maximum</code> properties."},
{ "name": "RangeModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.RangeModel",
  "description": "constructor."},
{ "name": "RangeModel",
  "type": "Class",
  "description": "The RangeModel class bead defines a set of for a numeric range of values which includes a minimum, maximum, and current value."},
{ "name": "RangeModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": "constructor."},
{ "name": "RangeModel",
  "type": "Class",
  "description": "The RangeModel class bead defines a set of for a numeric range of values which includes a minimum, maximum, and current value."},
{ "name": "RangeModelExtended",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.RangeModelExtended",
  "description": "constructor."},
{ "name": "RangeModelExtended",
  "type": "Class",
  "description": "The RangeModelExtended bead expands on the RangeModel and adds a function to display a value from the model."},
{ "name": "RangeStepper",
  "type": "Method",
  "class": "org.apache.royale.html.RangeStepper",
  "description": "constructor."},
{ "name": "RangeStepper",
  "type": "Class",
  "description": "The RangeStepper control allows for the selection of a single value from multiple choices."},
{ "name": "RangeStepperMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.RangeStepperMouseController",
  "description": "constructor."},
{ "name": "RangeStepperMouseController",
  "type": "Class",
  "description": "The RangeStepperMouseController bead feeds mouse events to the RangeStepper and its components."},
{ "name": "RangeStepperView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.RangeStepperView",
  "description": "constructor."},
{ "name": "RangeStepperView",
  "type": "Class",
  "description": "The RangeStepperView bead creates the visual elements of the RangeStepper."},
{ "name": "RankBy",
  "type": "Class",
  "description": ""},
{ "name": "RankBy",
  "type": "Property",
  "class": "google.maps.places",
  "description": ""},
{ "name": "Rect",
  "type": "Method",
  "class": "org.apache.royale.svg.Rect",
  "description": "constructor."},
{ "name": "Rect",
  "type": "Class",
  "description": ""},
{ "name": "Rect",
  "type": "Class",
  "description": ""},
{ "name": "Rect",
  "type": "Method",
  "class": "spark.primitives.Rect",
  "description": "Constructor."},
{ "name": "Rect",
  "type": "Class",
  "description": "The Rect class is a filled graphic element that draws a rectangle."},
{ "name": "Rectangle",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "Rectangle",
  "type": "Class",
  "description": "The Rectangle class is a utility class for holding four coordinates of a rectangle"},
{ "name": "RectangularBorder",
  "type": "Method",
  "class": "mx.skins.RectangularBorder",
  "description": "Constructor."},
{ "name": "RectangularBorder",
  "type": "Class",
  "description": "The RectangularBorder class is an abstract base class for various classes that draw rectangular borders around UIComponents."},
{ "name": "RectangularDropShadow",
  "type": "Method",
  "class": "spark.primitives.RectangularDropShadow",
  "description": "Constructor."},
{ "name": "RectangularDropShadow",
  "type": "Class",
  "description": "<p>This class optimizes drop shadows for the common case."},
{ "name": "RedoOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.RedoOperation",
  "description": "Creates a RedoOperation object."},
{ "name": "RedoOperation",
  "type": "Class",
  "description": "The RedoOperation class encapsulates a redo operation."},
{ "name": "RegExPatterns",
  "type": "Method",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Constructor."},
{ "name": "RegExPatterns",
  "type": "Class",
  "description": "This provides a means to standardize certain common regex patterns and functionality."},
{ "name": "RegExpValidationResult",
  "type": "Method",
  "class": "mx.validators.RegExpValidationResult",
  "description": "Constructor"},
{ "name": "RegExpValidationResult",
  "type": "Class",
  "description": "The RegExpValidator class dispatches the <code>valid</code> and <code>invalid</code> events."},
{ "name": "RegExpValidator",
  "type": "Method",
  "class": "mx.validators.RegExpValidator",
  "description": "Constructor"},
{ "name": "RegExpValidator",
  "type": "Class",
  "description": "The RegExpValidator class lets you use a regular expression to validate a field."},
{ "name": "RemoteObject",
  "type": "Method",
  "class": "org.apache.royale.net.RemoteObject",
  "description": "constructor"},
{ "name": "RemoteObject",
  "type": "Class",
  "description": "This is the RemoteObject that has a similar behaviour that Flex RemoteObject and can be use with BlazeDS, LCDS or CF backends"},
{ "name": "RemoteObject",
  "type": "Method",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "Creates a new RemoteObject."},
{ "name": "RemoteObject",
  "type": "Class",
  "description": "The RemoteObject class gives you access to classes on a remote application server."},
{ "name": "RemoteObject",
  "type": "Method",
  "class": "mx.rpc.remoting.mxml.RemoteObject",
  "description": "Create a new RemoteObject."},
{ "name": "RemoteObject",
  "type": "Class",
  "description": "Use the &lt;mx:RemoteObject&gt; tag to represent an HTTPService object in an MXML file."},
{ "name": "RemotingMessage",
  "type": "Method",
  "class": "mx.messaging.messages.RemotingMessage",
  "description": "Constructs an uninitialized RemotingMessage."},
{ "name": "RemotingMessage",
  "type": "Class",
  "description": "RemotingMessages are used to send RPC requests to a remote endpoint."},
{ "name": "RemotingMessage",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.RemotingMessage",
  "description": "Constructs an uninitialized RemotingMessage."},
{ "name": "RemotingMessage",
  "type": "Class",
  "description": "RemotingMessages are used to send RPC requests to a remote endpoint."},
{ "name": "RemovableBasicLayout",
  "type": "Class",
  "description": "The RemovableBasicLayout class is a simple layout bead."},
{ "name": "RemoveAllItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveAllItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "RemoveAllItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the removal of all itemRenderers once the all items has been removed from the IDataProviderModel."},
{ "name": "RemoveElementsMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.RemoveElementsMemento",
  "description": "RemoveElements from the ITextFlow,"},
{ "name": "RemoveElementsMemento",
  "type": "Class",
  "description": ""},
{ "name": "RemoveListItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveListItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "RemoveListItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the removal of an itemRenderer in a List component once the corresponding datum has been removed from the IDataProviderModel."},
{ "name": "RemoveTableRowForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveTableRowForArrayListData",
  "description": "Constructor"},
{ "name": "RemoveTableRowForArrayListData",
  "type": "Class",
  "description": "Handles the removal of an itemRenderer in a Table component once the corresponding datum has been removed from the IDataProviderModel."},
{ "name": "RenderData",
  "type": "Method",
  "class": "mx.charts.chartClasses.RenderData",
  "description": "Constructor."},
{ "name": "RenderData",
  "type": "Class",
  "description": "RenderData structures are used by chart elements to store all of the relevant values and data needed to fully render the chart."},
{ "name": "RenderingMode",
  "type": "Method",
  "class": "org.apache.royale.text.engine.RenderingMode",
  "description": ""},
{ "name": "RenderingMode",
  "type": "Class",
  "description": ""},
{ "name": "RequireSelection",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.dropdownlist.RequireSelection",
  "description": "constructor."},
{ "name": "RequireSelection",
  "type": "Class",
  "description": "The RequireSelection bead is a specialty bead that can be used with any DropDownList control to force a data item always be selected in the control"},
{ "name": "Resize",
  "type": "Method",
  "class": "org.apache.royale.effects.Resize",
  "description": "Constructor."},
{ "name": "Resize",
  "type": "Class",
  "description": "The Resize effect animates a UI component's width or height."},
{ "name": "Resize",
  "type": "Method",
  "class": "mx.effects.Resize",
  "description": "Constructor."},
{ "name": "Resize",
  "type": "Class",
  "description": "The Resize effect animates a UI component's width or height."},
{ "name": "ResizeEvent",
  "type": "Method",
  "class": "mx.events.ResizeEvent",
  "description": "Constructor."},
{ "name": "ResizeEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when the size of a Flex component changes."},
{ "name": "ResizeGenerator",
  "type": "Method",
  "class": "org.apache.royale.utils.ResizeGenerator",
  "description": ""},
{ "name": "ResizeGenerator",
  "type": "Class",
  "description": ""},
{ "name": "ResourceBundle",
  "type": "Method",
  "class": "mx.resources.ResourceBundle",
  "description": "Constructor."},
{ "name": "ResourceBundle",
  "type": "Class",
  "description": "Provides an implementation of the IResourceBundle interface."},
{ "name": "ResourceManager",
  "type": "Class",
  "description": "This class is used to get a single instance of the IResourceManager implementation."},
{ "name": "ResourceManagerImpl",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": "Constructor."},
{ "name": "ResourceManagerImpl",
  "type": "Class",
  "description": "This class provides an implementation of the IResourceManager interface."},
{ "name": "Responder",
  "type": "Method",
  "class": "mx.net.Responder",
  "description": "Constructs an instance of the responder with the specified handlers."},
{ "name": "Responder",
  "type": "Class",
  "description": "This class mimics flash."},
{ "name": "Responder",
  "type": "Method",
  "class": "org.apache.royale.net.Responder",
  "description": ""},
{ "name": "Responder",
  "type": "Class",
  "description": ""},
{ "name": "Responder",
  "type": "Method",
  "class": "mx.rpc.Responder",
  "description": "Constructs an instance of the responder with the specified handlers."},
{ "name": "Responder",
  "type": "Class",
  "description": "This class provides a default implementation of the mx."},
{ "name": "ResponsiveDrawer",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.drawer.ResponsiveDrawer",
  "description": "constructor."},
{ "name": "ResponsiveDrawer",
  "type": "Class",
  "description": "The ResponsiveDrawer class is a bead to use with Jewel Drawer to make it fixed or float depending on the screen size."},
{ "name": "ResponsiveSizeMonitor",
  "type": "Method",
  "class": "org.apache.royale.jewel.debugger.ResponsiveSizeMonitor",
  "description": "constructor."},
{ "name": "ResponsiveSizeMonitor",
  "type": "Class",
  "description": "The ResponsiveDrawer class is a bead to use with Jewel Drawer to make it fixed or float depending on the screen size."},
{ "name": "ResponsiveSizes",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": "constructor."},
{ "name": "ResponsiveSizes",
  "type": "Class",
  "description": "The ResponsiveSizes declares consants that are related to SASS variables created to provide media queries for different screen sizes  by default:  // DEVICE DIMENSIONS $phone: 0px $tablet: 768px $desktop: 992px $widescreen: 1200px"},
{ "name": "ResponsiveVisibility",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.ResponsiveVisibility",
  "description": "constructor."},
{ "name": "ResponsiveVisibility",
  "type": "Class",
  "description": "The ResponsiveVisibility bead class is a specialty bead that can be used to show or hide a Jewel component depending on responsive rules."},
{ "name": "Restrict",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.Restrict",
  "description": "constructor."},
{ "name": "Restrict",
  "type": "Class",
  "description": "The Restrict bead class is a specialty bead that can be used with any Jewel TextInputBase control."},
{ "name": "RestrictTextField",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.RestrictTextField",
  "description": "constructor."},
{ "name": "RestrictTextField",
  "type": "Class",
  "description": "The RestrictTextField bead class is a specialty bead that can be used with any MDL TextField control."},
{ "name": "Result",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.Result",
  "description": "Constructor."},
{ "name": "Result",
  "type": "Class",
  "description": "The result of a test run."},
{ "name": "ResultEvent",
  "type": "Method",
  "class": "mx.rpc.events.ResultEvent",
  "description": "Creates a new ResultEvent."},
{ "name": "ResultEvent",
  "type": "Class",
  "description": "The event that indicates an RPC operation has successfully returned a result."},
{ "name": "ResultEvent",
  "type": "Method",
  "class": "org.apache.royale.net.events.ResultEvent",
  "description": ""},
{ "name": "ResultEvent",
  "type": "Class",
  "description": "ResultEvents are returned from RPC requests to a remote endpoint when the server response is ready."},
{ "name": "RetainColorBevelFilter",
  "type": "Method",
  "class": "org.apache.royale.svg.RetainColorBevelFilter",
  "description": ""},
{ "name": "RetainColorBevelFilter",
  "type": "Class",
  "description": "RetainColorBevelFilter extends BevelFilter to and darkens it somewhat in an attempt to retain the original colors in its graphic core."},
{ "name": "RichEditableText",
  "type": "Method",
  "class": "spark.components.RichEditableText",
  "description": "Constructor."},
{ "name": "RichEditableText",
  "type": "Class",
  "description": "RichEditableText is a low-level UIComponent for displaying, scrolling, selecting, and editing richly-formatted text."},
{ "name": "RichText",
  "type": "Method",
  "class": "spark.components.RichText",
  "description": "Constructor."},
{ "name": "RichText",
  "type": "Class",
  "description": "RichText is a low-level UIComponent that can display one or more lines of richly-formatted text and embedded images."},
{ "name": "RowAlign",
  "type": "Class",
  "description": "The RowAlign class defines the possible values for the <code>rowAlign</code> property of the TileLayout class."},
{ "name": "RoyaleClient",
  "type": "Class",
  "description": "Singleton class that stores the global Id for this instance that is server assigned when the client makes its initial connection to the server."},
{ "name": "RoyaleClient",
  "type": "Class",
  "description": "Singleton class that stores the global Id for this Player instance that is server assigned when the client makes its initial connection to the server."},
{ "name": "RoyaleUnitCore",
  "type": "Method",
  "class": "org.apache.royale.test.RoyaleUnitCore",
  "description": "Constructor."},
{ "name": "RoyaleUnitCore",
  "type": "Class",
  "description": "Simple entry point for running tests."},
{ "name": "RunNotifier",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": "Constructor."},
{ "name": "RunNotifier",
  "type": "Class",
  "description": "Listens for notifications from an <code>ITestRunner</code>."},
{ "name": "S",
  "type": "Method",
  "class": "org.apache.royale.html.elements.S",
  "description": "constructor."},
{ "name": "S",
  "type": "Class",
  "description": "The S class represents an HTML <s> element"},
{ "name": "S",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the S key (83)."},
{ "name": "SATELLITE",
  "type": "Property",
  "class": "google.maps.MapTypeId",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "SATELLITE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SATELLITE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SAVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SAVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCANNER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SCANNER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCHEDULE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SCHEDULE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCHOOL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SCHOOL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCREEN_LOCK_LANDSCAPE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SCREEN_LOCK_LANDSCAPE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCREEN_LOCK_PORTRAIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SCREEN_LOCK_PORTRAIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCREEN_LOCK_ROTATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SCREEN_LOCK_ROTATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCREEN_ROTATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SCREEN_ROTATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCREEN_SHARE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SCREEN_SHARE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SCROLL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.TextLayoutEvent",
  "description": "The <code>TextLayoutEvent."},
{ "name": "SCROLL",
  "type": "Property",
  "class": "mx.events.ScrollEvent",
  "description": "The <code>ScrollEvent."},
{ "name": "SCROLL_LOCK",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Scroll Lock key."},
{ "name": "SD_CARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SD_CARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SD_STORAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SD_STORAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SEARCH",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for the search button."},
{ "name": "SEARCH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SEARCH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SECONDARY",
  "type": "Property",
  "class": "org.apache.royale.jewel.Button",
  "description": ""},
{ "name": "SECURITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SECURITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SECURITY_ERROR",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "Detail of a security error occurs in the server communication."},
{ "name": "SECURITY_ERROR",
  "type": "Property",
  "class": "mx.events.SecurityErrorEvent",
  "description": ""},
{ "name": "SELECT",
  "type": "Property",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "SELECT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The Select key."},
{ "name": "SELECTED",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "Value that indicates the ChartItem appears selected but does not have focus."},
{ "name": "SELECTED_CONVERTED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IMEStatus",
  "description": "Selected coverted - text has been converted and is the current clause in the IME session"},
{ "name": "SELECTED_RAW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IMEStatus",
  "description": "Selected raw - text has not been converted and is the current clause in the IME session"},
{ "name": "SELECTION_CHANGE",
  "type": "Property",
  "class": "spark.events.GridSelectionEvent",
  "description": "The <code>GridSelectionEvent."},
{ "name": "SELECTION_CHANGE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.SelectionEvent",
  "description": "The SelectionEvent."},
{ "name": "SELECTION_CHANGING",
  "type": "Property",
  "class": "spark.events.GridSelectionEvent",
  "description": "The <code>GridSelectionEvent."},
{ "name": "SELECTOR_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Subscribe commands issued by a Consumer pass the Consumer's <code>selector</code> expression in this header."},
{ "name": "SELECTOR_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Subscribe commands issued by a Consumer pass the Consumer's <code>selector</code> expression in this header."},
{ "name": "SELECT_ALL",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that the entire grid should be selected."},
{ "name": "SELECT_ALL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.SelectionEvent",
  "description": ""},
{ "name": "SELECT_ALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SELECT_ALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SEMICOLON",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the ; key (186)."},
{ "name": "SEND",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SEND",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_DISSATISFIED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_DISSATISFIED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_NEUTRAL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_NEUTRAL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_SATISFIED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_SATISFIED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_VERY_DISSATISFIED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_VERY_DISSATISFIED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_VERY_SATISFIED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SENTIMENT_VERY_SATISFIED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SEPARATOR_CLICK",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>separatorClick</code> GridEvent."},
{ "name": "SEPARATOR_DOUBLE_CLICK",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>separatorDoubleClick</code> GridEvent."},
{ "name": "SEPARATOR_MOUSE_DOWN",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>separatorMouseDown</code> GridEvent."},
{ "name": "SEPARATOR_MOUSE_DRAG",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>separatorMouseDrag</code> GridEvent."},
{ "name": "SEPARATOR_MOUSE_UP",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>separatorMouseUp</code> GridEvent."},
{ "name": "SEPARATOR_ROLL_OUT",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>separatorRollOut</code> GridEvent."},
{ "name": "SEPARATOR_ROLL_OVER",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": "The value of the <code>type</code> property for a <code>separatorRollOver</code> GridEvent."},
{ "name": "SERIALIZATION",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "SERVER_NAME_TOKEN",
  "type": "Property",
  "class": "mx.utils.URLUtil",
  "description": "The pattern in the String that is passed to the <code>replaceTokens()</code> method that is replaced by the application's server name."},
{ "name": "SERVER_PORT_TOKEN",
  "type": "Property",
  "class": "mx.utils.URLUtil",
  "description": "The pattern in the String that is passed to the <code>replaceTokens()</code> method that is replaced by the application's port."},
{ "name": "SETTINGS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_APPLICATIONS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_APPLICATIONS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_BACKUP_RESTORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_BACKUP_RESTORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_BLUETOOTH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_BLUETOOTH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_BRIGHTNESS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_BRIGHTNESS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_CELL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_CELL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_ETHERNET",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_ETHERNET",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_ANTENNA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_ANTENNA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_COMPONENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_COMPONENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_COMPOSITE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_COMPOSITE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_HDMI",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_HDMI",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_SVIDEO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_INPUT_SVIDEO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_OVERSCAN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_OVERSCAN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_PHONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_PHONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_POWER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_POWER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_REMOTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_REMOTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_SYSTEM_DAYDREAM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_SYSTEM_DAYDREAM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_VOICE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SETTINGS_VOICE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SETUP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging the setup application or menu."},
{ "name": "SET_CELL",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that the current selection should be set to this cell."},
{ "name": "SET_CELL_REGION",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that the current selection should be set to this cell region."},
{ "name": "SET_ROW",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that the current selection should be set to this row."},
{ "name": "SET_ROWS",
  "type": "Property",
  "class": "spark.events.GridSelectionEventKind",
  "description": "Indicates that the current selection should be set to these rows."},
{ "name": "SHARE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SHARE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SHIFT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Shift key (16)."},
{ "name": "SHIFT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Shift key."},
{ "name": "SHIFT_RETURN_AS_HARD_IN_LIST",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "SHIFT_RETURN_AS_SOFT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "SHOP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SHOP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SHOPPING_BASKET",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SHOPPING_BASKET",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SHOPPING_CART",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SHOPPING_CART",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SHOP_TWO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SHOP_TWO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SHORT_TEXT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SHORT_TEXT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SHOW",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "SHOWING_DATA",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartState",
  "description": "The chart is currently running transitions to show the new chart data."},
{ "name": "SHOW_ALL",
  "type": "Property",
  "class": "mx.printing.FlexPrintJobScaleType",
  "description": "Scales the object to fit on a single page, filling one dimension; that is, it selects the smaller of the MATCH_WIDTH or MATCH_HEIGHT scale types."},
{ "name": "SHOW_CHART",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SHOW_CHART",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SHUFFLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SHUFFLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_4_BAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_4_BAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_CONNECTED_NO_INTERNET_4_BAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_CONNECTED_NO_INTERNET_4_BAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_NO_SIM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_NO_SIM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_NULL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_NULL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_CELLULAR_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_WIFI_4_BAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_WIFI_4_BAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_WIFI_4_BAR_LOCK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_WIFI_4_BAR_LOCK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_WIFI_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIGNAL_WIFI_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SILVER",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "SIM_CARD",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIM_CARD",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SIM_CARD_ALERT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SIM_CARD_ALERT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SINGLE",
  "type": "Property",
  "class": "mx.rpc.mxml.Concurrency",
  "description": "Making only one request at a time is allowed on the method; additional requests made while a request is outstanding are immediately faulted on the client and are not sent to the server."},
{ "name": "SINGLE_CELL",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelectionMode",
  "description": "Specifies that one cell can be selected."},
{ "name": "SINGLE_CLICK",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemEditorActivationMouseEvent",
  "description": "A single click mouse event."},
{ "name": "SINGLE_CLICK_ON_SELECTED_CELL",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemEditorActivationMouseEvent",
  "description": "A single click mouse evnet on a previously selected cell."},
{ "name": "SINGLE_ROW",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelectionMode",
  "description": "Specifies that one row can be selected."},
{ "name": "SIZE_PENDING",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElementStatus",
  "description": "Graphic element with auto or percentage width/height has completed loading but has not been recomposed."},
{ "name": "SKIP_BACKWARD",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging quick skip backward (usually 7-10 seconds)."},
{ "name": "SKIP_FORWARD",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging quick skip ahead (usually 30 seconds)."},
{ "name": "SKIP_NEXT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SKIP_NEXT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SKIP_PREVIOUS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SKIP_PREVIOUS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SKYSCRAPER",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "SLASH",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the / key (191)."},
{ "name": "SLIDESHOW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SLIDESHOW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SLOW_MOTION_VIDEO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SLOW_MOTION_VIDEO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SMALL",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.SizeControl",
  "description": ""},
{ "name": "SMALL",
  "type": "Property",
  "class": "google.maps.ZoomControlStyle",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "SMALL_CAPS",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TypographicCase",
  "description": ""},
{ "name": "SMALL_HORIZONTAL_LINK_UNIT",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "SMALL_RECTANGLE",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "SMALL_SQUARE",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "SMALL_VERTICAL_LINK_UNIT",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "SMARTPHONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SMARTPHONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SMOKING_ROOMS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SMOKING_ROOMS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SMS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SMS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SMS_FAILED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SMS_FAILED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SNOOZE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SNOOZE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SOLID",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BorderStyle",
  "description": "solid - border is made up of solid lines."},
{ "name": "SORT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SORT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SORT_BY_ALPHA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SORT_BY_ALPHA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SORT_CHANGE",
  "type": "Property",
  "class": "spark.events.GridSortEvent",
  "description": "The <code>GridSortEvent."},
{ "name": "SORT_CHANGING",
  "type": "Property",
  "class": "spark.events.GridSortEvent",
  "description": "The <code>GridSortEvent."},
{ "name": "SPA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SPA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SPACE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.JustificationRule",
  "description": "Specifies justification for Latin and other horizontal scripts that divide words using spaces."},
{ "name": "SPACE",
  "type": "Property",
  "class": "org.apache.royale.events.utils.WhitespaceKeys",
  "description": "The space key, Space Bar."},
{ "name": "SPACE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Spacebar (32)."},
{ "name": "SPACE_BAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SPACE_BAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SPEAKER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SPEAKER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SPEAKER_GROUP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SPEAKER_GROUP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SPEAKER_NOTES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SPEAKER_NOTES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SPEAKER_NOTES_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SPEAKER_NOTES_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SPEAKER_PHONE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SPEAKER_PHONE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SPELLCHECK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SPELLCHECK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SQUARE",
  "type": "Property",
  "class": "org.apache.royale.graphics.LineStyle",
  "description": ""},
{ "name": "SQUARE",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "SQUARE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "A filled square marker."},
{ "name": "STAR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STAR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STARS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STARS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "START",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Float",
  "description": "Graphic floats on the leading side of the text (left if paragraph direction is \"ltr\", right if paragraph direction is \"rtl\")."},
{ "name": "START",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TabAlignment",
  "description": ""},
{ "name": "START",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextAlign",
  "description": "Specifies start edge alignment - text is aligned to match the writing order."},
{ "name": "START",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ClearFloats",
  "description": "Specifies that text skips over floats on the start side in reading order (left if direction is \"ltr\", right if direction is \"rtl\")."},
{ "name": "STARTS_WITH",
  "type": "Property",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Specifies the use of a regex pattern matching the beginging with a given value."},
{ "name": "STAR_BORDER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STAR_BORDER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STAR_HALF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STAR_HALF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STAR_RATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STAR_RATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STATE_CHANGE_COMPLETE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "STATIC",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineValidity",
  "description": ""},
{ "name": "STATUS",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPConstants",
  "description": "Dispatched when an httpStatus code is received from the server."},
{ "name": "STATUS_CODE_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "A status code can provide context about the nature of a response message."},
{ "name": "STATUS_CODE_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "A status code can provide context about the nature of a response message."},
{ "name": "STAY_CURRENT_LANDSCAPE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STAY_CURRENT_LANDSCAPE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STAY_CURRENT_PORTRAIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STAY_CURRENT_PORTRAIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STAY_PRIMARY_LANDSCAPE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STAY_PRIMARY_LANDSCAPE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STAY_PRIMARY_PORTRAIT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STAY_PRIMARY_PORTRAIT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STOP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for stopping transport mode."},
{ "name": "STOP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STOP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STOP_SCREEN_SHARE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STOP_SCREEN_SHARE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STORAGE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STORAGE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STORE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STORE_MALL_DIRECTORY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STORE_MALL_DIRECTORY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STRAIGHTEN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STRAIGHTEN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STREETVIEW",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STREETVIEW",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STRIKETHROUGH_S",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STRIKETHROUGH_S",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STRING",
  "type": "Property",
  "class": "mx.collections.SortFieldCompareTypes",
  "description": "Represents the stringCompare inside a SortField."},
{ "name": "STRING",
  "type": "Property",
  "class": "org.apache.royale.collections.SortFieldCompareTypes",
  "description": "Represents the stringCompare inside a SortField."},
{ "name": "STRING_BEGIN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Begin constant"},
{ "name": "STRING_BREAK",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Break constant"},
{ "name": "STRING_CLEARDISPLAY",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Clear Display constant"},
{ "name": "STRING_CLEARLINE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Clear Line constant"},
{ "name": "STRING_DELETE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Delete constant"},
{ "name": "STRING_DELETECHAR",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Delete Character constant"},
{ "name": "STRING_DELETELINE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Delete Line constant"},
{ "name": "STRING_DOWNARROW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode down arrow constant"},
{ "name": "STRING_END",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode End constant"},
{ "name": "STRING_EXECUTE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Execute constant"},
{ "name": "STRING_F1",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F1 constant"},
{ "name": "STRING_F10",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F10 constant"},
{ "name": "STRING_F11",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F11 constant"},
{ "name": "STRING_F12",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F12 constant"},
{ "name": "STRING_F13",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F13 constant"},
{ "name": "STRING_F14",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F14 constant"},
{ "name": "STRING_F15",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F15 constant"},
{ "name": "STRING_F16",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F16 constant"},
{ "name": "STRING_F17",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F17 constant"},
{ "name": "STRING_F18",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F18 constant"},
{ "name": "STRING_F19",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F19 constant"},
{ "name": "STRING_F2",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F2 constant"},
{ "name": "STRING_F20",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F20 constant"},
{ "name": "STRING_F21",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F21 constant"},
{ "name": "STRING_F22",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F22 constant"},
{ "name": "STRING_F23",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F23 constant"},
{ "name": "STRING_F24",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F24 constant"},
{ "name": "STRING_F25",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F25 constant"},
{ "name": "STRING_F26",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F26 constant"},
{ "name": "STRING_F27",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F27 constant"},
{ "name": "STRING_F28",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F28 constant"},
{ "name": "STRING_F29",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F29 constant"},
{ "name": "STRING_F3",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F3 constant"},
{ "name": "STRING_F30",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F30 constant"},
{ "name": "STRING_F31",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F31 constant"},
{ "name": "STRING_F32",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F32 constant"},
{ "name": "STRING_F33",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F33 constant"},
{ "name": "STRING_F34",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F34 constant"},
{ "name": "STRING_F35",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F35 constant"},
{ "name": "STRING_F4",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F4 constant"},
{ "name": "STRING_F5",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F5 constant"},
{ "name": "STRING_F6",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F6 constant"},
{ "name": "STRING_F7",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F7 constant"},
{ "name": "STRING_F8",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F8 constant"},
{ "name": "STRING_F9",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode F9 constant"},
{ "name": "STRING_FIND",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Find constant"},
{ "name": "STRING_HELP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Help constant"},
{ "name": "STRING_HOME",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Home constant"},
{ "name": "STRING_INSERT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Insert constant"},
{ "name": "STRING_INSERTCHAR",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Insert Character constant"},
{ "name": "STRING_INSERTLINE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Insert Line constant"},
{ "name": "STRING_LEFTARROW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode left arrow constant"},
{ "name": "STRING_MENU",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Menu constant"},
{ "name": "STRING_MODESWITCH",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Mode Switch constant"},
{ "name": "STRING_NEXT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Next constant"},
{ "name": "STRING_PAGEDOWN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Page Down constant"},
{ "name": "STRING_PAGEUP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Page Up constant"},
{ "name": "STRING_PAUSE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Pause constant"},
{ "name": "STRING_PREV",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Previous constant"},
{ "name": "STRING_PRINT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Print constant"},
{ "name": "STRING_PRINTSCREEN",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Print Screen constant"},
{ "name": "STRING_REDO",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Redo constant"},
{ "name": "STRING_RESET",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Reset constant"},
{ "name": "STRING_RIGHTARROW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode right arrow constant"},
{ "name": "STRING_SCROLLLOCK",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Scroll Lock constant"},
{ "name": "STRING_SELECT",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Select constant"},
{ "name": "STRING_STOP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Stop constant"},
{ "name": "STRING_SYSREQ",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode System Request constant"},
{ "name": "STRING_SYSTEM",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode System constant"},
{ "name": "STRING_TYPE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ConversionType",
  "description": "Export as type String."},
{ "name": "STRING_UNDO",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode Undo constant"},
{ "name": "STRING_UPARROW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode up arrow constant"},
{ "name": "STRING_USER",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] The OS X Unicode User constant"},
{ "name": "STYLE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "STYLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "STYLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "STYLE_CHANGE",
  "type": "Property",
  "class": "org.apache.royale.events.StyleChangeEvent",
  "description": "The default event type."},
{ "name": "STYLE_SELECTOR_CHANGED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ModelChange",
  "description": ""},
{ "name": "SUBDIRECTORY_ARROW_LEFT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SUBDIRECTORY_ARROW_LEFT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SUBDIRECTORY_ARROW_RIGHT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SUBDIRECTORY_ARROW_RIGHT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SUBJECT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SUBJECT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SUBSCRIBE_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to subscribe to a remote destination."},
{ "name": "SUBSCRIBE_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to subscribe to a remote destination."},
{ "name": "SUBSCRIPT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BaselineShift",
  "description": "Shifts baseline to the current subscript position."},
{ "name": "SUBSCRIPTIONS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SUBSCRIPTIONS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SUBSCRIPTION_INVALIDATE_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to indicate that the client's subscription with a remote destination has timed out."},
{ "name": "SUBSCRIPTION_INVALIDATE_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to indicate that the client's subscription with a remote destination has timed out."},
{ "name": "SUBTITLE",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for toggling subtitles."},
{ "name": "SUBTITLES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SUBTITLES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SUBTOPIC_HEADER",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AsyncMessage",
  "description": "Messages sent by a MessageAgent with a defined <code>subtopic</code> property indicate their target subtopic in this header."},
{ "name": "SUBTOPIC_HEADER",
  "type": "Property",
  "class": "mx.messaging.messages.AsyncMessage",
  "description": "Messages sent by a MessageAgent with a defined <code>subtopic</code> property indicate their target subtopic in this header."},
{ "name": "SUBTOPIC_SEPARATOR",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "The separator string used for separating subtopic and selectors in the add and remove subscription headers."},
{ "name": "SUBTOPIC_SEPARATOR",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "The separator string used for separating subtopic and selectors in the add and remove subscription headers."},
{ "name": "SUBWAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SUBWAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SUCCESS",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineCreationResult",
  "description": ""},
{ "name": "SUPER",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Super key."},
{ "name": "SUPERSCRIPT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BaselineShift",
  "description": "Shifts baseline to the current superscript position."},
{ "name": "SUPERVISOR_ACCOUNT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SUPERVISOR_ACCOUNT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SURROUND_SOUND",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SURROUND_SOUND",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SVGBoxItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGBoxItemRenderer",
  "description": "constructor."},
{ "name": "SVGBoxItemRenderer",
  "type": "Class",
  "description": "The SVGBoxItemRenderer draws its graphics directly into a SVGChartDataGroup (CompoundGraphic)."},
{ "name": "SVGChartAxisGroup",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartAxisGroup",
  "description": "Constructor."},
{ "name": "SVGChartAxisGroup",
  "type": "Class",
  "description": "The SVGChartAxisGroup provides a CompoundGraphic whose drawing functions can be used to display a chart's axis graphics without resorting to the creation of extra objects."},
{ "name": "SVGChartDataGroup",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": "constructor."},
{ "name": "SVGChartDataGroup",
  "type": "Class",
  "description": "The SVGChartDataGroup serves as the drawing canvas for SVG itemRenderers."},
{ "name": "SVGLineSegmentItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": "constructor."},
{ "name": "SVGLineSegmentItemRenderer",
  "type": "Class",
  "description": "The SVGLineSegmentItemRenderer draws its graphics directly into a SVGChartDataGroup (a CompoundGraphic)."},
{ "name": "SVGWedgeItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "constructor."},
{ "name": "SVGWedgeItemRenderer",
  "type": "Class",
  "description": "The SVGWedgeItemRenderer draws its graphics directly into a SVGChartDataGroup (a CompoundGraphic)."},
{ "name": "SWAP_CALLS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SWAP_CALLS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SWAP_HORIZ",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SWAP_HORIZ",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SWAP_VERT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SWAP_VERT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SWAP_VERTICAL_CIRCLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SWAP_VERTICAL_CIRCLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SWFContext",
  "type": "Class",
  "description": ""},
{ "name": "SWITCH_CAMERA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SWITCH_CAMERA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SWITCH_VIDEO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SWITCH_VIDEO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SYMBOL",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Symbol modifier key (found on certain virtual keyboards)."},
{ "name": "SYMBOL_LOCK",
  "type": "Property",
  "class": "org.apache.royale.events.utils.ModifierKeys",
  "description": "The Symbol Lock key."},
{ "name": "SYNC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SYNC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SYNC_DISABLED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SYNC_DISABLED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SYNC_PROBLEM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SYNC_PROBLEM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SYNTH_TAG_FIELD",
  "type": "Property",
  "class": "org.apache.royale.utils.Language",
  "description": ""},
{ "name": "SYSTEM_UPDATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SYSTEM_UPDATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SYSTEM_UPDATE_ALT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "SYSTEM_UPDATE_ALT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "SandboxMouseEvent",
  "type": "Method",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Constructor."},
{ "name": "SandboxMouseEvent",
  "type": "Class",
  "description": "This is an event sent between applications in different security sandboxes to notify listeners about mouse activity in another security sandbox."},
{ "name": "SaturationShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.SaturationShader",
  "description": "Constructor."},
{ "name": "SaturationShader",
  "type": "Class",
  "description": "Creates a blend shader that is equivalent to the 'Saturation' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools."},
{ "name": "ScaleControlStyle",
  "type": "Class",
  "description": ""},
{ "name": "ScrollControlBase",
  "type": "Method",
  "class": "mx.core.ScrollControlBase",
  "description": "Constructor."},
{ "name": "ScrollControlBase",
  "type": "Class",
  "description": "The ScrollControlBase class is the base class for controls with scroll bars."},
{ "name": "ScrollEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.ScrollEvent",
  "description": "Constructor."},
{ "name": "ScrollEvent",
  "type": "Class",
  "description": "Represents events that are dispatched when the TextFlow does automatic scrolling."},
{ "name": "ScrollEvent",
  "type": "Method",
  "class": "mx.events.ScrollEvent",
  "description": "Constructor."},
{ "name": "ScrollEvent",
  "type": "Class",
  "description": "Represents events that are dispatched by the ScrollBar class."},
{ "name": "ScrollEventDirection",
  "type": "Class",
  "description": "Constants for the values of the <code>direction</code> property of a ScrollEvent."},
{ "name": "ScrollPolicy",
  "type": "Class",
  "description": "Values for the <code>horizontalScrollPolicy</code> and <code>verticalScrollPolicy</code> properties of the Container and ScrollControlBase classes."},
{ "name": "ScrollPolicy",
  "type": "Class",
  "description": "The ScrollPolicy class is an enumeration class that defines values for setting the <code>horizontalScrollPolicy</code> and <code>verticalScrollPolicy</code> properties of the ContainerController class, which defines a text flow container."},
{ "name": "ScrollableGrid",
  "type": "Class",
  "description": "The ScrollableGrid class is a Grid with scroll capabilities"},
{ "name": "ScrollableSectionContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.ScrollableSectionContent",
  "description": "constructor."},
{ "name": "ScrollableSectionContent",
  "type": "Class",
  "description": "The ScrollableSectionContent class is a scrollable container component capable of parenting other components."},
{ "name": "Scroller",
  "type": "Method",
  "class": "spark.components.Scroller",
  "description": "Constructor."},
{ "name": "Scroller",
  "type": "Class",
  "description": "The Scroller component displays a single scrollable component, called a viewport, and horizontal and vertical scroll bars."},
{ "name": "ScrollingFlexibleChild",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.ScrollingFlexibleChild",
  "description": ""},
{ "name": "ScrollingFlexibleChild",
  "type": "Class",
  "description": "The ScrollingFlexibleChild class allows flexible children to be scrollable."},
{ "name": "ScrollingViewport",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport",
  "description": "Constructor"},
{ "name": "ScrollingViewport",
  "type": "Class",
  "description": "The ScrollingViewport extends the Viewport class by adding horizontal and vertical scroll bars, if needed, to the content area of a Container."},
{ "name": "ScrollingViewport",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ScrollingViewport",
  "description": "Constructor"},
{ "name": "ScrollingViewport",
  "type": "Class",
  "description": "The ScrollingViewport extends the Viewport class by adding horizontal and vertical scroll bars, if needed, to the content area of a Container."},
{ "name": "SearchBoxOptions",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "SearchFilter",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.SearchFilter",
  "description": "constructor."},
{ "name": "SearchFilter",
  "type": "Class",
  "description": "The SearchFilter bead class is a specialty bead that can be used with a Jewel ComboBox to filter options as we type"},
{ "name": "SearchFilterForList",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": "constructor."},
{ "name": "SearchFilterForList",
  "type": "Class",
  "description": "The SearchFilterForList bead class is a specialty bead that can be used with a Jewel TextInput to filter options in other List component  Notice that the filtering is only visual, and the underlaying dataProvider is not filtered itself."},
{ "name": "SectionContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.SectionContent",
  "description": "constructor."},
{ "name": "SectionContent",
  "type": "Class",
  "description": "The SectionContent class is a Container component capable of parenting other components."},
{ "name": "SecureAMFChannel",
  "type": "Method",
  "class": "mx.messaging.channels.SecureAMFChannel",
  "description": "Constructor."},
{ "name": "SecureAMFChannel",
  "type": "Class",
  "description": "The SecureAMFChannel class is identical to the AMFChannel class except that it uses a secure protocol, HTTPS, to send messages to an AMF endpoint."},
{ "name": "SecurityErrorEvent",
  "type": "Method",
  "class": "mx.events.SecurityErrorEvent",
  "description": "Constructor."},
{ "name": "SecurityErrorEvent",
  "type": "Class",
  "description": "Represents event objects that are dispatched when focus changes."},
{ "name": "Select",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Select",
  "description": "constructor."},
{ "name": "Select",
  "type": "Class",
  "description": "The Select class represents an HTML <select> element"},
{ "name": "SelectTable",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Cursor for selection of table"},
{ "name": "SelectTableColumn",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Cursor for selection of table column"},
{ "name": "SelectTableRow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Cursor for selection of table row"},
{ "name": "SelectedItemNullValidator",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.SelectedItemNullValidator",
  "description": "constructor."},
{ "name": "SelectedItemNullValidator",
  "type": "Class",
  "description": "The SelectedItemNullValidator class is a specialty bead that can be used with Group control to validate if a component (normaly list based) has a selectedItem with null value"},
{ "name": "SelectionEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.SelectionEvent",
  "description": "Creates an event object that contains information about a flow operation."},
{ "name": "SelectionEvent",
  "type": "Class",
  "description": "A TextFlow instance dispatches a SelectionEvent object when an EditManager or SelectionManager changes or selects a range of text."},
{ "name": "SelectionFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "Creates a SelectionFormat object with the specified properties."},
{ "name": "SelectionFormat",
  "type": "Class",
  "description": "The SelectionFormat class defines the properties of a selection highlight."},
{ "name": "SelectionFormatState",
  "type": "Class",
  "description": "Values for the selection background state"},
{ "name": "SelectionManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Creates a SelectionManager object."},
{ "name": "SelectionManager",
  "type": "Class",
  "description": "The SelectionManager class manages text selection in a text flow."},
{ "name": "SelectionState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionState",
  "description": "Creates a SelectionState object."},
{ "name": "SelectionState",
  "type": "Class",
  "description": "The SelectionState class represents a selection in a text flow."},
{ "name": "SelectionType",
  "type": "Class",
  "description": ""},
{ "name": "SensitiveSingleSelectionDropTargetBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SensitiveSingleSelectionDropTargetBead",
  "description": "Constructor"},
{ "name": "SensitiveSingleSelectionDropTargetBead",
  "type": "Class",
  "description": "The SensitiveSingleSelectionDropTargetBead enables items to be dropped onto single-selection List components."},
{ "name": "Sequence",
  "type": "Method",
  "class": "org.apache.royale.effects.Sequence",
  "description": "Constructor."},
{ "name": "Sequence",
  "type": "Class",
  "description": "The Sequence effect animates set of effects one after the other."},
{ "name": "Sequence",
  "type": "Method",
  "class": "mx.effects.Sequence",
  "description": "Constructor."},
{ "name": "Sequence",
  "type": "Class",
  "description": "The Sequence effect animates set of effects one after the other."},
{ "name": "Sequence",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Sequence",
  "description": "Constructor"},
{ "name": "Sequence",
  "type": "Class",
  "description": "The Sequence effect plays a set of effects, one after the other."},
{ "name": "SequencePlayBead",
  "type": "Method",
  "class": "org.apache.royale.effects.beads.SequencePlayBead",
  "description": ""},
{ "name": "SequencePlayBead",
  "type": "Class",
  "description": ""},
{ "name": "SequentialAsyncTask",
  "type": "Method",
  "class": "org.apache.royale.utils.async.SequentialAsyncTask",
  "description": ""},
{ "name": "SequentialAsyncTask",
  "type": "Class",
  "description": "The SequentialAsyncTask runs a list of tasks in sequential order."},
{ "name": "SerializationFilter",
  "type": "Class",
  "description": "This class is useful for framework developers wishing to plug in or modify the HTTP services to use a new serialization format."},
{ "name": "Series",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Constructor."},
{ "name": "Series",
  "type": "Class",
  "description": "The Series class is the base class for the classes that let you specify a data series for a chart control."},
{ "name": "SeriesEffect",
  "type": "Method",
  "class": "mx.charts.effects.SeriesEffect",
  "description": "Constructor."},
{ "name": "SeriesEffect",
  "type": "Class",
  "description": "The base class for chart effects."},
{ "name": "SeriesEffectInstance",
  "type": "Method",
  "class": "mx.charts.effects.effectClasses.SeriesEffectInstance",
  "description": "Constructor."},
{ "name": "SeriesEffectInstance",
  "type": "Class",
  "description": "The SeriesEffectInstance class implements the base instance class for the chart series effects."},
{ "name": "SeriesInterpolate",
  "type": "Method",
  "class": "mx.charts.effects.SeriesInterpolate",
  "description": "Constructor."},
{ "name": "SeriesInterpolate",
  "type": "Class",
  "description": "The SeriesInterpolate effect moves the graphics that represent the existing data in a series to the new points."},
{ "name": "SeriesInterpolateInstance",
  "type": "Method",
  "class": "mx.charts.effects.effectClasses.SeriesInterpolateInstance",
  "description": "Constructor."},
{ "name": "SeriesInterpolateInstance",
  "type": "Class",
  "description": "The SeriesInterpolateInstance class implements the instance class for the SeriesInterpolate effect."},
{ "name": "SeriesSlide",
  "type": "Method",
  "class": "mx.charts.effects.SeriesSlide",
  "description": "Constructor."},
{ "name": "SeriesSlide",
  "type": "Class",
  "description": "The SeriesSlide effect slides a data series into and out of the chart's boundaries."},
{ "name": "SeriesSlideInstance",
  "type": "Method",
  "class": "mx.charts.effects.effectClasses.SeriesSlideInstance",
  "description": "Constructor."},
{ "name": "SeriesSlideInstance",
  "type": "Class",
  "description": "The SeriesSlideInstance class implements the instance class for the SeriesSlide effect."},
{ "name": "SeriesZoom",
  "type": "Method",
  "class": "mx.charts.effects.SeriesZoom",
  "description": "Constructor."},
{ "name": "SeriesZoom",
  "type": "Class",
  "description": "The SeriesZoom effect implodes and explodes chart data into and out of the focal point that you specify."},
{ "name": "SeriesZoomInstance",
  "type": "Method",
  "class": "mx.charts.effects.effectClasses.SeriesZoomInstance",
  "description": "Constructor."},
{ "name": "SeriesZoomInstance",
  "type": "Class",
  "description": "The SeriesZoomInstance class implements the instance class for the SeriesZoom effect."},
{ "name": "ServerConfig",
  "type": "Class",
  "description": "This class provides access to the server messaging configuration information."},
{ "name": "SetEventHandler",
  "type": "Method",
  "class": "org.apache.royale.states.SetEventHandler",
  "description": "Constructor."},
{ "name": "SetEventHandler",
  "type": "Class",
  "description": "The SetEventHandler class is one of the classes in the view states subsystem."},
{ "name": "SetProperty",
  "type": "Method",
  "class": "org.apache.royale.states.SetProperty",
  "description": "Constructor."},
{ "name": "SetProperty",
  "type": "Class",
  "description": "The SetProperty class is one of the classes in the view states subsystem."},
{ "name": "ShadowBoxItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.ShadowBoxItemRenderer",
  "description": "Constructor."},
{ "name": "ShadowBoxItemRenderer",
  "type": "Class",
  "description": "A simple chart itemRenderer implementation that fills a rectangular area and surrounds it with a drop shadow."},
{ "name": "ShadowLineRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.ShadowLineRenderer",
  "description": "Constructor."},
{ "name": "ShadowLineRenderer",
  "type": "Class",
  "description": "An implementation of a line segment renderer that is used by LineSeries objects."},
{ "name": "SharedObject",
  "type": "Class",
  "description": ""},
{ "name": "ShrinkableDisableLoaderBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ShrinkableDisableLoaderBead",
  "description": "constructor."},
{ "name": "ShrinkableDisableLoaderBead",
  "type": "Class",
  "description": "The ShrinkableDisableLoaderBead extends DisableLoaderBead to allow shrinking of the load indicator."},
{ "name": "SimpleAlert",
  "type": "Method",
  "class": "org.apache.royale.html.SimpleAlert",
  "description": "constructor."},
{ "name": "SimpleAlert",
  "type": "Class",
  "description": "The SimpleAlert class is a component that displays a message and an OK button."},
{ "name": "SimpleAlertView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SimpleAlertView",
  "description": "constructor."},
{ "name": "SimpleAlertView",
  "type": "Class",
  "description": "The SimpleAlertView class creates the visual elements of the org."},
{ "name": "SimpleApplication",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleApplication",
  "description": "Constructor."},
{ "name": "SimpleApplication",
  "type": "Class",
  "description": "The SimpleApplication class can be used as the main class and entry point for low-level ActionScript-only Royale applications."},
{ "name": "SimpleBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": "Constructor."},
{ "name": "SimpleBinding",
  "type": "Class",
  "description": "The SimpleBinding class is lightweight data-binding class that is optimized for simple assignments of one object's property to another object's property."},
{ "name": "SimpleCSSStyles",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": "Constructor."},
{ "name": "SimpleCSSStyles",
  "type": "Class",
  "description": "The SimpleCSSStyles class contains CSS style properties supported by SimpleCSSValuesImpl."},
{ "name": "SimpleCSSStylesWithFlex",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": "Constructor."},
{ "name": "SimpleCSSStylesWithFlex",
  "type": "Class",
  "description": "The SimpleCSSStyles class contains CSS style properties supported by SimpleCSSValuesImpl."},
{ "name": "SimpleCSSValuesImpl",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "Constructor."},
{ "name": "SimpleCSSValuesImpl",
  "type": "Class",
  "description": "The SimpleCSSValuesImpl class implements a minimal set of CSS lookup rules that is sufficient for most applications and is easily implemented for SWFs."},
{ "name": "SimpleCompose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": "Constructor."},
{ "name": "SimpleCompose",
  "type": "Class",
  "description": "Keeps track of internal state during composition."},
{ "name": "SimpleDateFormatter",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.SimpleDateFormatter",
  "description": "constructor."},
{ "name": "SimpleDateFormatter",
  "type": "Class",
  "description": "The DateFormatter class formats the display of a DateField using a dateFormat."},
{ "name": "SimpleHorizontalLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.SimpleHorizontalLayout",
  "description": "Constructor."},
{ "name": "SimpleHorizontalLayout",
  "type": "Class",
  "description": "The HorizontalLayout class is a simple layout bead."},
{ "name": "SimpleList",
  "type": "Method",
  "class": "org.apache.royale.html.SimpleList",
  "description": "constructor."},
{ "name": "SimpleList",
  "type": "Class",
  "description": "The SimpleList class is a component that displays data in a vertical column."},
{ "name": "SimpleLocalizedValuesImpl",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleLocalizedValuesImpl",
  "description": ""},
{ "name": "SimpleLocalizedValuesImpl",
  "type": "Class",
  "description": "The SimpleLocalizedValuesImpl class implements a simple getValue implementation that is sufficient for many very simple applications."},
{ "name": "SimpleOperation",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.SimpleOperation",
  "description": ""},
{ "name": "SimpleOperation",
  "type": "Class",
  "description": "used by SimpleRemoteObject implementation"},
{ "name": "SimpleRemoteObject",
  "type": "Method",
  "class": "org.apache.royale.net.SimpleRemoteObject",
  "description": ""},
{ "name": "SimpleRemoteObject",
  "type": "Class",
  "description": "This is the most simple implementation os a RemoteObject it can be use with simple backends like AMFPHP."},
{ "name": "SimpleStatesImpl",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleStatesImpl",
  "description": "Constructor."},
{ "name": "SimpleStatesImpl",
  "type": "Class",
  "description": "The SimpleStatesImpl class implements a minimal set of view state functionality that is sufficient for most applications."},
{ "name": "SimpleTable",
  "type": "Method",
  "class": "org.apache.royale.jewel.SimpleTable",
  "description": "constructor."},
{ "name": "SimpleTable",
  "type": "Class",
  "description": "The SimpleTable class represents a simple HTML <table> element."},
{ "name": "SimpleTableLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.SimpleTableLayout",
  "description": "Constructor."},
{ "name": "SimpleTableLayout",
  "type": "Class",
  "description": "The SimpleTableLayout is the layout for the Table component."},
{ "name": "SimpleValuesImpl",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "SimpleValuesImpl",
  "type": "Class",
  "description": "The SimpleValuesImpl class implements a simple lookup rules that is sufficient for many very simple applications."},
{ "name": "SimpleVerticalLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.SimpleVerticalLayout",
  "description": "Constructor."},
{ "name": "SimpleVerticalLayout",
  "type": "Class",
  "description": "The VerticalLayout class is a simple layout bead."},
{ "name": "SingleSelectionCollectionViewModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": "Constructor."},
{ "name": "SingleSelectionCollectionViewModel",
  "type": "Class",
  "description": "The SingleSelectionCollectionViewModel class is a selection model for a dataProvider that is an ICollectionView."},
{ "name": "SingleSelectionContainerBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionContainerBead",
  "description": "Constructor."},
{ "name": "SingleSelectionContainerBead",
  "type": "Class",
  "description": "Use SingleSelectionContainerBead is a bead which manages selection state of a component which contains a group of ISelectables."},
{ "name": "SingleSelectionDragImageBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionDragImageBead",
  "description": "Constructor."},
{ "name": "SingleSelectionDragImageBead",
  "type": "Class",
  "description": "The SingleSelectionDragImageBead produces a UIBase component that represents the item being dragged."},
{ "name": "SingleSelectionDragSourceBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionDragSourceBead",
  "description": "Constructor"},
{ "name": "SingleSelectionDragSourceBead",
  "type": "Class",
  "description": "The SingleSelectionDragSourceBead brings drag capability to single-selection List components."},
{ "name": "SingleSelectionDropIndicatorBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionDropIndicatorBead",
  "description": "Constructor"},
{ "name": "SingleSelectionDropIndicatorBead",
  "type": "Class",
  "description": "The SingleSelectionDropIndicatorBead provides a graphic used to help the user place the item being dropped."},
{ "name": "SingleSelectionDropTargetBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionDropTargetBead",
  "description": "Constructor"},
{ "name": "SingleSelectionDropTargetBead",
  "type": "Class",
  "description": "The SingleSelectionDropTargetBead enables items to be dropped onto single-selection List components."},
{ "name": "SingleSelectionICollectionViewModel",
  "type": "Method",
  "class": "mx.controls.beads.models.SingleSelectionICollectionViewModel",
  "description": "Constructor."},
{ "name": "SingleSelectionICollectionViewModel",
  "type": "Class",
  "description": "The SingleSelectionICollectionViewModel class is a selection model for a dataProvider that is an ICollectionView."},
{ "name": "SingleSelectionIListModel",
  "type": "Method",
  "class": "mx.controls.beads.models.SingleSelectionIListModel",
  "description": "Constructor."},
{ "name": "SingleSelectionIListModel",
  "type": "Class",
  "description": "The SingleSelectionIListViewModel class is a selection model for a dataProvider that is an IList."},
{ "name": "Singleton",
  "type": "Class",
  "description": "This all-static class serves as a singleton registry."},
{ "name": "Size",
  "type": "Method",
  "class": "org.apache.royale.geom.Size",
  "description": ""},
{ "name": "Size",
  "type": "Class",
  "description": "The Size class is a utility class for holding width and height values."},
{ "name": "SizeControl",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.SizeControl",
  "description": "constructor."},
{ "name": "SizeControl",
  "type": "Class",
  "description": "The SizeControl bead class is a specialty bead that can be used to size a Jewel control."},
{ "name": "Skin",
  "type": "Method",
  "class": "spark.components.supportClasses.Skin",
  "description": "Constructor."},
{ "name": "Skin",
  "type": "Class",
  "description": "The Skin class defines the base class for all skins used by skinnable components."},
{ "name": "SkinnableComponent",
  "type": "Method",
  "class": "spark.components.supportClasses.SkinnableComponent",
  "description": "Constructor."},
{ "name": "SkinnableComponent",
  "type": "Class",
  "description": "The SkinnableComponent class defines the base class for skinnable components."},
{ "name": "SkinnableContainer",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": "Constructor."},
{ "name": "SkinnableContainer",
  "type": "Class",
  "description": "The SkinnableContainer class is the base class for skinnable containers that have visual content."},
{ "name": "SkinnableContainerBase",
  "type": "Method",
  "class": "spark.components.supportClasses.SkinnableContainerBase",
  "description": "Constructor."},
{ "name": "SkinnableContainerBase",
  "type": "Class",
  "description": "Base class for skinnable container components."},
{ "name": "SkinnableContainerView",
  "type": "Method",
  "class": "spark.components.beads.SkinnableContainerView",
  "description": "Constructor."},
{ "name": "SkinnableContainerView",
  "type": "Class",
  "description": "The SkinnableContainerView for emulation."},
{ "name": "SkinnablePopUpContainer",
  "type": "Method",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Constructor."},
{ "name": "SkinnablePopUpContainer",
  "type": "Class",
  "description": "The SkinnablePopUpContainer class is a SkinnableContainer that functions as a pop-up."},
{ "name": "SkinnableTextBase",
  "type": "Method",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": "Constructor."},
{ "name": "SkinnableTextBase",
  "type": "Class",
  "description": "The base class for skinnable components, such as the Spark TextInput and TextArea, that include an instance of IEditableText in their skin to provide text display, scrolling, selection, and editing."},
{ "name": "Slider",
  "type": "Method",
  "class": "org.apache.royale.jewel.Slider",
  "description": "constructor."},
{ "name": "Slider",
  "type": "Class",
  "description": "The Slider class is a component that displays a range of values using a track and a thumb control."},
{ "name": "Slider",
  "type": "Method",
  "class": "org.apache.royale.html.Slider",
  "description": "constructor."},
{ "name": "Slider",
  "type": "Class",
  "description": "The Slider class is a component that displays a range of values using a track and a thumb control."},
{ "name": "Slider",
  "type": "Method",
  "class": "org.apache.royale.mdl.Slider",
  "description": "constructor."},
{ "name": "Slider",
  "type": "Class",
  "description": "The Slider class is used for selecting a value out of a range."},
{ "name": "SliderEvent",
  "type": "Method",
  "class": "mx.events.SliderEvent",
  "description": "Constructor."},
{ "name": "SliderEvent",
  "type": "Class",
  "description": "The SliderEvent class represents the event object passed to the event listener for the <code>change</code>, <code>thumbDrag</code>, <code>thumbPress</code>, and <code>thumbRelease</code> events of the HSlider and VSlider classes."},
{ "name": "SliderMouseController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.SliderMouseController",
  "description": "constructor."},
{ "name": "SliderMouseController",
  "type": "Class",
  "description": "The SliderMouseController class bead handles mouse events on the org."},
{ "name": "SliderMouseController",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.controllers.SliderMouseController",
  "description": "constructor."},
{ "name": "SliderMouseController",
  "type": "Class",
  "description": "The SliderMouseController class bead handles mouse events on the org."},
{ "name": "SliderRangeModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.SliderRangeModel",
  "description": "constructor."},
{ "name": "SliderRangeModel",
  "type": "Class",
  "description": "The SliderRangeModel class bead defines a set of for a numeric range of values which includes a minimum, maximum, and current value."},
{ "name": "SliderRangeModel",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.models.SliderRangeModel",
  "description": "constructor."},
{ "name": "SliderRangeModel",
  "type": "Class",
  "description": "The SliderRangeModel class bead defines a set of for a numeric range of values which includes a minimum, maximum, and current value."},
{ "name": "SliderView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.SliderView",
  "description": "constructor."},
{ "name": "SliderView",
  "type": "Class",
  "description": "The SliderView class creates the visual elements of the org."},
{ "name": "SliderView",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.SliderView",
  "description": "constructor."},
{ "name": "SliderView",
  "type": "Class",
  "description": "The SliderView class creates the visual elements of the org."},
{ "name": "SliderView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SliderView",
  "description": "constructor."},
{ "name": "SliderView",
  "type": "Class",
  "description": "The SliderView class creates the visual elements of the org."},
{ "name": "Slug",
  "type": "Class",
  "description": "A Slug is geomtrical line information, generated by a Parcel."},
{ "name": "Small",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Small",
  "description": "constructor."},
{ "name": "Small",
  "type": "Class",
  "description": "The Small class represents an HTML <small> element"},
{ "name": "Snackbar",
  "type": "Method",
  "class": "org.apache.royale.mdl.Snackbar",
  "description": "Constructor."},
{ "name": "Snackbar",
  "type": "Class",
  "description": "Snackbar are transient popup notifications without actions."},
{ "name": "Snackbar",
  "type": "Method",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": "constructor."},
{ "name": "Snackbar",
  "type": "Class",
  "description": "The Snackbar class is a component that provide brief messages about app processes at the bottom that pops up over all other controls."},
{ "name": "SnackbarController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.SnackbarController",
  "description": "constructor."},
{ "name": "SnackbarController",
  "type": "Class",
  "description": "The SnackbarController class bead handles duration of the Snackbar How long to show the Snackbar for."},
{ "name": "SnackbarModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.SnackbarModel",
  "description": "Constructor."},
{ "name": "SnackbarModel",
  "type": "Class",
  "description": "The SnackbarModel class bead defines the data associated with an org."},
{ "name": "SnackbarModel",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.models.SnackbarModel",
  "description": ""},
{ "name": "SnackbarModel",
  "type": "Class",
  "description": "The SnackbarModel class defines the data associated with an org."},
{ "name": "SnackbarView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.SnackbarView",
  "description": "constructor."},
{ "name": "SnackbarView",
  "type": "Class",
  "description": "The SnackbarView class creates the visual elements of the org."},
{ "name": "SoftLightShader",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.shaderClasses.SoftLightShader",
  "description": "Constructor."},
{ "name": "SoftLightShader",
  "type": "Class",
  "description": "Creates a blend shader that is equivalent to the 'Soft Light' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools."},
{ "name": "SolidBackgroundBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SolidBackgroundBead",
  "description": "Constructor."},
{ "name": "SolidBackgroundBead",
  "type": "Class",
  "description": "The SolidBackgroundBead class draws a solid filled background."},
{ "name": "SolidBackgroundWithChangeListenerBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SolidBackgroundWithChangeListenerBead",
  "description": "Constructor."},
{ "name": "SolidBackgroundWithChangeListenerBead",
  "type": "Class",
  "description": "Same as SolidBackgroundBead except it listens for StyleChangeEvent events and reacts by refreshing the background of its strand."},
{ "name": "SolidColor",
  "type": "Method",
  "class": "mx.graphics.SolidColor",
  "description": ""},
{ "name": "SolidColor",
  "type": "Class",
  "description": ""},
{ "name": "SolidColor",
  "type": "Method",
  "class": "org.apache.royale.graphics.SolidColor",
  "description": "Constructor."},
{ "name": "SolidColor",
  "type": "Class",
  "description": ""},
{ "name": "SolidColorStroke",
  "type": "Method",
  "class": "mx.graphics.SolidColorStroke",
  "description": ""},
{ "name": "SolidColorStroke",
  "type": "Class",
  "description": ""},
{ "name": "SolidColorStroke",
  "type": "Method",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": ""},
{ "name": "SolidColorStroke",
  "type": "Class",
  "description": ""},
{ "name": "Sort",
  "type": "Method",
  "class": "org.apache.royale.collections.Sort",
  "description": "Constructor."},
{ "name": "Sort",
  "type": "Class",
  "description": "Provides the sorting information required to establish a sort on an existing view (<code>ICollectionView</code> interface or class that implements the interface)."},
{ "name": "Sort",
  "type": "Method",
  "class": "mx.collections.Sort",
  "description": "Constructor."},
{ "name": "Sort",
  "type": "Class",
  "description": "Provides the sorting information required to establish a sort on an existing view (<code>ICollectionView</code> interface or class that implements the interface)."},
{ "name": "Sort",
  "type": "Method",
  "class": "spark.collections.Sort",
  "description": "Constructor."},
{ "name": "Sort",
  "type": "Class",
  "description": "Provides the sorting information required to establish a sort on an existing view (<code>ICollectionView</code> interface or class that implements the interface)."},
{ "name": "SortError",
  "type": "Method",
  "class": "mx.collections.errors.SortError",
  "description": "Constructor."},
{ "name": "SortError",
  "type": "Class",
  "description": "This error is thrown when a Sort class is not configured properly; for example, if the find criteria are invalid."},
{ "name": "SortField",
  "type": "Method",
  "class": "mx.collections.SortField",
  "description": "Constructor."},
{ "name": "SortField",
  "type": "Class",
  "description": "Provides the sorting information required to establish a sort on a field or property in a collection view."},
{ "name": "SortField",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": "Constructor."},
{ "name": "SortField",
  "type": "Class",
  "description": "Provides the sorting information required to establish a sort on a field or property in a collection view."},
{ "name": "SortField",
  "type": "Method",
  "class": "org.apache.royale.collections.SortField",
  "description": "Constructor."},
{ "name": "SortField",
  "type": "Class",
  "description": "Provides the sorting information required to establish a sort on a field or property in a collection view."},
{ "name": "SortFieldCompareTypes",
  "type": "Method",
  "class": "mx.collections.SortFieldCompareTypes",
  "description": "Constructor."},
{ "name": "SortFieldCompareTypes",
  "type": "Class",
  "description": "The SortFieldCompareTypes class defines the valid constant values for the <code>sortCompareType</code> property of the <code>SortField</code> and <code>GridColumn</code>."},
{ "name": "SortFieldCompareTypes",
  "type": "Method",
  "class": "org.apache.royale.collections.SortFieldCompareTypes",
  "description": "Constructor."},
{ "name": "SortFieldCompareTypes",
  "type": "Class",
  "description": "The SortFieldCompareTypes class defines the valid constant values for the <code>sortCompareType</code> property of the <code>SortField</code>."},
{ "name": "SpaceJustifier",
  "type": "Method",
  "class": "org.apache.royale.text.engine.SpaceJustifier",
  "description": ""},
{ "name": "SpaceJustifier",
  "type": "Class",
  "description": ""},
{ "name": "Spacer",
  "type": "Method",
  "class": "org.apache.royale.jewel.Spacer",
  "description": "Constructor."},
{ "name": "Spacer",
  "type": "Class",
  "description": "The Spacer class takes up space in the UI layout."},
{ "name": "Spacer",
  "type": "Method",
  "class": "mx.controls.Spacer",
  "description": "Constructor."},
{ "name": "Spacer",
  "type": "Class",
  "description": "The Spacer control helps you lay out children within a parent container."},
{ "name": "Spacer",
  "type": "Method",
  "class": "org.apache.royale.html.Spacer",
  "description": "Constructor."},
{ "name": "Spacer",
  "type": "Class",
  "description": "The Spacer class takes up space in the UI layout."},
{ "name": "Spacer",
  "type": "Method",
  "class": "org.apache.royale.mdl.Spacer",
  "description": "Constructor."},
{ "name": "Spacer",
  "type": "Class",
  "description": "The Spacer class takes up space in the UI layout."},
{ "name": "SpacingLimitPropertyHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.SpacingLimitPropertyHandler",
  "description": ""},
{ "name": "SpacingLimitPropertyHandler",
  "type": "Class",
  "description": ""},
{ "name": "Span",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Span",
  "description": "constructor."},
{ "name": "Span",
  "type": "Class",
  "description": "The Span class represents an HTML <span> element"},
{ "name": "SpanElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.SpanElement",
  "description": "Constructor - creates a SpanElement object to hold a run of text in a paragraph."},
{ "name": "SpanElement",
  "type": "Class",
  "description": "The SpanElement class represents a run of text that has a single set of formatting attributes applied."},
{ "name": "SpanishDateComponentConfig",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.datefield.SpanishDateComponentConfig",
  "description": "constructor."},
{ "name": "SpanishDateComponentConfig",
  "type": "Class",
  "description": "The SpanishDateFieldConfig class is a specialty bead that is used by DateField or DateChooser control to configure to Spanish."},
{ "name": "SparkLayoutBead",
  "type": "Method",
  "class": "spark.layouts.supportClasses.SparkLayoutBead",
  "description": "Constructor."},
{ "name": "SparkLayoutBead",
  "type": "Class",
  "description": "The SparkLayoutBead class is a layout bead that pumps the Spark LayoutBase subclasses."},
{ "name": "SparkSkin",
  "type": "Method",
  "class": "spark.skins.SparkSkin",
  "description": "Constructor."},
{ "name": "SparkSkin",
  "type": "Class",
  "description": "Base class for Spark skins."},
{ "name": "SpecialCharacterElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.SpecialCharacterElement",
  "description": "Base class - invoking <code>new SpecialCharacterElement()</code> throws an error exception."},
{ "name": "SpecialCharacterElement",
  "type": "Class",
  "description": "The SpecialCharacterElement class is an abstract base class for elements that represent special characters."},
{ "name": "SpecialKeys",
  "type": "Class",
  "description": "This class holds constants for special keys See: https://w3c."},
{ "name": "Spinner",
  "type": "Method",
  "class": "org.apache.royale.jewel.Spinner",
  "description": "constructor."},
{ "name": "Spinner",
  "type": "Class",
  "description": "The Spinner class is a component that displays a control for incrementing a value and a control for decrementing a value."},
{ "name": "Spinner",
  "type": "Method",
  "class": "org.apache.royale.mdl.Spinner",
  "description": ""},
{ "name": "Spinner",
  "type": "Class",
  "description": "The Material Design Lite (MDL) spinner component is an enhanced replacement for the classic \"wait cursor\" (which varies significantly among hardware and software versions) and indicates that there is an ongoing process, the results of which are not yet available."},
{ "name": "Spinner",
  "type": "Method",
  "class": "org.apache.royale.html.Spinner",
  "description": "constructor."},
{ "name": "Spinner",
  "type": "Class",
  "description": "The Spinner class is a component that displays a control for incrementing a value and a control for decrementing a value."},
{ "name": "SpinnerButton",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.SpinnerButton",
  "description": ""},
{ "name": "SpinnerButton",
  "type": "Class",
  "description": ""},
{ "name": "SpinnerMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.SpinnerMouseController",
  "description": "constructor."},
{ "name": "SpinnerMouseController",
  "type": "Class",
  "description": "The SpinnerMouseController class bead handles mouse events on the org."},
{ "name": "SpinnerMouseController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.SpinnerMouseController",
  "description": "constructor."},
{ "name": "SpinnerMouseController",
  "type": "Class",
  "description": "The SpinnerMouseController class bead handles mouse events on the org."},
{ "name": "SpinnerView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SpinnerView",
  "description": "constructor."},
{ "name": "SpinnerView",
  "type": "Class",
  "description": "The SpinnerView class creates the visual elements of the org."},
{ "name": "SpinnerView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.SpinnerView",
  "description": "constructor."},
{ "name": "SpinnerView",
  "type": "Class",
  "description": "The SpinnerView class creates the visual elements of the org."},
{ "name": "SplitElementOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.SplitElementOperation",
  "description": "Creates a SplitElementOperation object."},
{ "name": "SplitElementOperation",
  "type": "Class",
  "description": "The SplitElementOperation class encapsulates a change that splits any IFlowGroupElement into two elements."},
{ "name": "SplitMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.SplitMemento",
  "description": ""},
{ "name": "SplitMemento",
  "type": "Class",
  "description": ""},
{ "name": "SplitParagraphOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.SplitParagraphOperation",
  "description": "Creates a SplitParagraphOperation object."},
{ "name": "SplitParagraphOperation",
  "type": "Class",
  "description": "The SplitParagraphOperation class encapsulates a change that splits a paragraph into two elements."},
{ "name": "SpreadFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.SpreadFilterElement",
  "description": ""},
{ "name": "SpreadFilterElement",
  "type": "Class",
  "description": "The SpreadFilterElement adjusts the spread of the filter"},
{ "name": "StackedBarChart",
  "type": "Method",
  "class": "org.apache.royale.charts.StackedBarChart",
  "description": "constructor."},
{ "name": "StackedBarChart",
  "type": "Class",
  "description": "The StackedBarChart displays a histogram chart where each series in the chart is stack next to each other."},
{ "name": "StackedBarChartLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.StackedBarChartLayout",
  "description": "constructor"},
{ "name": "StackedBarChartLayout",
  "type": "Class",
  "description": "The StackedBarChartLayout class calculates the size and position of all of the itemRenderers for all of the series in a StackedBarChart."},
{ "name": "StackedBarChartLayoutForArrayList",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.StackedBarChartLayoutForArrayList",
  "description": "constructor."},
{ "name": "StackedBarChartLayoutForArrayList",
  "type": "Class",
  "description": "The StackedBarChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for all of the series in a BarChart."},
{ "name": "StackedColumnChart",
  "type": "Method",
  "class": "org.apache.royale.charts.StackedColumnChart",
  "description": "constructor."},
{ "name": "StackedColumnChart",
  "type": "Class",
  "description": "The StackedColumnChart displays a histogram chart where each series in the chart is stack on top of each other."},
{ "name": "StackedColumnChartLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.StackedColumnChartLayout",
  "description": "constructor"},
{ "name": "StackedColumnChartLayout",
  "type": "Class",
  "description": "The StackedColumnChartLayout class calculates the size and position of all of the itemRenderers for all of the series in a StackedColumnChart."},
{ "name": "StackedColumnChartLayoutForArrayList",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.layouts.StackedColumnChartLayoutForArrayList",
  "description": "constructor."},
{ "name": "StackedColumnChartLayoutForArrayList",
  "type": "Class",
  "description": "The StackedColumnChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for all of the series in a BarChart."},
{ "name": "StackedSeries",
  "type": "Method",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Constructor."},
{ "name": "StackedSeries",
  "type": "Class",
  "description": "Stacked Series serves as the common base class for all of the stacking set series (BarSet, ColumnSet, and AreaSet)."},
{ "name": "StackedViewManager",
  "type": "Method",
  "class": "org.apache.royale.mobile.StackedViewManager",
  "description": "Constructor."},
{ "name": "StackedViewManager",
  "type": "Class",
  "description": "The StackedViewManager displays a single View at a time from a collection of Views where views[0] is at the bottom and views[n-1] is at the top and displayed."},
{ "name": "StackedViewManagerView",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.StackedViewManagerView",
  "description": "Constructor."},
{ "name": "StackedViewManagerView",
  "type": "Class",
  "description": "The StackedViewManagerView creates the visual elements of the StackedViewManager."},
{ "name": "StandardFlowComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Creates a StandardFlowComposer object."},
{ "name": "StandardFlowComposer",
  "type": "Class",
  "description": "The StandardFlowComposer class provides a standard composer and container manager."},
{ "name": "StandardHelper",
  "type": "Class",
  "description": ""},
{ "name": "StandardTLFFactory",
  "type": "Class",
  "description": ""},
{ "name": "State",
  "type": "Method",
  "class": "org.apache.royale.states.State",
  "description": "Constructor."},
{ "name": "State",
  "type": "Class",
  "description": "The State class is one of the classes in the view states subsystem."},
{ "name": "State",
  "type": "Method",
  "class": "mx.states.State",
  "description": "Constructor."},
{ "name": "State",
  "type": "Class",
  "description": "The State class defines a view state, a particular view of a component."},
{ "name": "StatesWithTransitionsImpl",
  "type": "Method",
  "class": "org.apache.royale.core.StatesWithTransitionsImpl",
  "description": "Constructor."},
{ "name": "StatesWithTransitionsImpl",
  "type": "Class",
  "description": "The StatesWithTransitionsImpl class implements a set of view state functionality that includes transitions between states."},
{ "name": "StatusChangeEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.StatusChangeEvent",
  "description": "Creates an event object that contains information about a status change."},
{ "name": "StatusChangeEvent",
  "type": "Class",
  "description": "A TextFlow instance dispatches this event when the status of a FlowElement changes."},
{ "name": "Strand",
  "type": "Method",
  "class": "org.apache.royale.core.Strand",
  "description": "Constructor."},
{ "name": "Strand",
  "type": "Class",
  "description": "The Strand class is the base class for non-display object that implement a strand."},
{ "name": "StreetViewPanorama",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "StreetViewPanorama",
  "type": "Class",
  "description": ""},
{ "name": "StreetViewPov",
  "type": "Method",
  "class": "google.maps.StreetViewPov",
  "description": ""},
{ "name": "StreetViewPov",
  "type": "Class",
  "description": ""},
{ "name": "StreetViewStatus",
  "type": "Class",
  "description": ""},
{ "name": "StringDateFormatter",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.StringDateFormatter",
  "description": ""},
{ "name": "StringDateFormatter",
  "type": "Class",
  "description": "Formats a date from a string Because of the compleixities of date formatting, this formatter does not differentiate between single digit formats and double digit formats for days and months."},
{ "name": "StringItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.StringItemRenderer",
  "description": "constructor."},
{ "name": "StringItemRenderer",
  "type": "Class",
  "description": "The StringItemRenderer class displays data in string form using the data's toString() function."},
{ "name": "StringItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.StringItemRenderer",
  "description": "constructor."},
{ "name": "StringItemRenderer",
  "type": "Class",
  "description": "The StringItemRenderer class displays data in string form using the data's toString() function."},
{ "name": "StringPadder",
  "type": "Class",
  "description": "The StringPadder utility class is an all-static class with methods for working with String objects."},
{ "name": "StringPropertyHandler",
  "type": "Class",
  "description": "A property handler with a String as its value @private"},
{ "name": "StringSelectionModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": "Constructor."},
{ "name": "StringSelectionModel",
  "type": "Class",
  "description": "The StringSelectionModel class is a selection model for selecting a single string from a vector of strings."},
{ "name": "StringTextLineFactory",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "Creates a StringTextLineFactory object."},
{ "name": "StringTextLineFactory",
  "type": "Class",
  "description": "The StringTextLineFactory class provides a simple way to create TextLines from a string."},
{ "name": "StringTrimmer",
  "type": "Class",
  "description": "The StringTrimmer class is a collection of static functions that provide utility features for trimming whitespace off Strings."},
{ "name": "StringUtil",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": ""},
{ "name": "StringUtil",
  "type": "Class",
  "description": "The StringUtil utility class is an all-static class with methods for working with String objects."},
{ "name": "StringUtil",
  "type": "Class",
  "description": "The StringUtil utility class is an all-static class with methods for working with String objects within Flex."},
{ "name": "StringValidator",
  "type": "Method",
  "class": "mx.validators.StringValidator",
  "description": "Constructor."},
{ "name": "StringValidator",
  "type": "Class",
  "description": "The StringValidator class validates that the length of a String is within a specified range."},
{ "name": "StringValidator",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.StringValidator",
  "description": "constructor."},
{ "name": "StringValidator",
  "type": "Class",
  "description": "The StringValidator class is a specialty bead that can be used with TextInput control."},
{ "name": "Stroke",
  "type": "Method",
  "class": "mx.graphics.Stroke",
  "description": "Constructor."},
{ "name": "Stroke",
  "type": "Class",
  "description": "The Stroke class defines the properties for a line."},
{ "name": "StrokePosition",
  "type": "Class",
  "description": ""},
{ "name": "Strong",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Strong",
  "description": "constructor."},
{ "name": "Strong",
  "type": "Class",
  "description": "The Strong class represents an HTML <strong> element"},
{ "name": "StyleChangeEvent",
  "type": "Method",
  "class": "org.apache.royale.events.StyleChangeEvent",
  "description": "Constructor."},
{ "name": "StyleChangeEvent",
  "type": "Class",
  "description": "Instances of the StyleChangeEvent class are dispatched by the StyleChangeNotifier when it detects changes to a component's style."},
{ "name": "StyleChangeNotifier",
  "type": "Class",
  "description": "The StyleChangeNotifier can be added to the bead list of any UI component that needs to react to dynamic changes to its styles."},
{ "name": "StyleInheritanceBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.StyleInheritanceBead",
  "description": "constructor."},
{ "name": "StyleInheritanceBead",
  "type": "Class",
  "description": "The StyleInheritanceBead class forces descendadants of an IStylableObject to inherit a style"},
{ "name": "StyleInheritanceWithObserverBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.StyleInheritanceWithObserverBead",
  "description": "constructor."},
{ "name": "StyleInheritanceWithObserverBead",
  "type": "Class",
  "description": "The StyleInheritanceWithObserverBead extends StyleInheritace and makes sure that new descendants inherit as well."},
{ "name": "StyleManager",
  "type": "Class",
  "description": "The StyleManager class manages the following: <ul> <li>Which CSS style properties the class inherits</li> <li>Which style properties are colors, and therefore get special handling</li> <li>A list of strings that are aliases for color values</li> </ul>"},
{ "name": "StyleManagerImpl",
  "type": "Class",
  "description": ""},
{ "name": "StyleProxy",
  "type": "Method",
  "class": "mx.styles.StyleProxy",
  "description": "Constructor."},
{ "name": "StyleProxy",
  "type": "Class",
  "description": "Wraps an object that implements the IAdvancedStyleClient interface."},
{ "name": "StyledImageBase",
  "type": "Method",
  "class": "org.apache.royale.core.supportClasses.StyledImageBase",
  "description": "constructor."},
{ "name": "StyledImageBase",
  "type": "Class",
  "description": "The StyledImageBase class serves as a base class for components that displays a bitmap and used ClassSelectorList for set class selector names The Image uses the following beads:  org."},
{ "name": "StyledLayoutBase",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": "Constructor."},
{ "name": "StyledLayoutBase",
  "type": "Class",
  "description": "The StyledLayoutBase class is an extension of LayoutBase to define various common layout features for the rest of child classes"},
{ "name": "StyledMXMLItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": "constructor."},
{ "name": "StyledMXMLItemRenderer",
  "type": "Class",
  "description": "The StyledMXMLItemRenderer class is the base class for itemRenderers that are MXML-based and provides support for ClassSelectorList."},
{ "name": "StyledUIBase",
  "type": "Method",
  "class": "org.apache.royale.core.StyledUIBase",
  "description": "Constructor."},
{ "name": "StyledUIBase",
  "type": "Class",
  "description": "The StyledUIBase is the base class for UIBase components that makes heavy use of styles"},
{ "name": "SubAppLoader",
  "type": "Method",
  "class": "org.apache.royale.html.SubAppLoader",
  "description": "Constructor."},
{ "name": "SubAppLoader",
  "type": "Class",
  "description": "The SubAppLoader class can load Flash or HTML content into a space within an application."},
{ "name": "SubListView",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": "Construct a SubListView and optionally specify the target list and the item interval this SubListView spans."},
{ "name": "SubListView",
  "type": "Class",
  "description": "A \"view\" of a contiguous IList interval that begins at startIndex and extends for count items."},
{ "name": "SubParagraphGroupElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElement",
  "description": "Constructor."},
{ "name": "SubParagraphGroupElement",
  "type": "Class",
  "description": "The SubParagraphGroupElement is a grouping element for FlowLeafElements and other classes that extend SubParagraphGroupElementBase."},
{ "name": "SubParagraphGroupElementBase",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElementBase",
  "description": "Constructor - creates a new SubParagraphGroupElementBase instance."},
{ "name": "SubParagraphGroupElementBase",
  "type": "Class",
  "description": "The SubParagraphGroupElementBase class groups FlowLeafElements together."},
{ "name": "Suffix",
  "type": "Class",
  "description": "Defines values for setting the <code>suffix</code> property of a ListMarkerFormat."},
{ "name": "SuiteRunner",
  "type": "Method",
  "class": "org.apache.royale.test.runners.SuiteRunner",
  "description": "Constructor."},
{ "name": "SuiteRunner",
  "type": "Class",
  "description": "A runner for test suites."},
{ "name": "SummaryField",
  "type": "Method",
  "class": "mx.collections.SummaryField",
  "description": "Constructor."},
{ "name": "SummaryField",
  "type": "Class",
  "description": "The SummaryField class represents a single property in a SummaryRow instance."},
{ "name": "SummaryField2",
  "type": "Method",
  "class": "mx.collections.SummaryField2",
  "description": "Constructor."},
{ "name": "SummaryField2",
  "type": "Class",
  "description": "The SummaryField2 class represents a single property in a SummaryRow instance."},
{ "name": "SummaryObject",
  "type": "Method",
  "class": "mx.collections.SummaryObject",
  "description": "Constructor."},
{ "name": "SummaryObject",
  "type": "Class",
  "description": "The SummaryObject class defines the object used to store information when performing custom data summaries on grouped data."},
{ "name": "SummaryRow",
  "type": "Method",
  "class": "mx.collections.SummaryRow",
  "description": "Constructor."},
{ "name": "SummaryRow",
  "type": "Class",
  "description": "The SummaryRow class represents a summary row of the AdvancedDataGrid."},
{ "name": "SuperimposeFilter",
  "type": "Method",
  "class": "org.apache.royale.svg.SuperimposeFilter",
  "description": ""},
{ "name": "SuperimposeFilter",
  "type": "Class",
  "description": "SuperimposeFilter composes superimposes several filters one on top of the other."},
{ "name": "SwatchPanel",
  "type": "Method",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": "Constructor."},
{ "name": "SwatchPanel",
  "type": "Class",
  "description": ""},
{ "name": "Switch",
  "type": "Method",
  "class": "org.apache.royale.mdl.Switch",
  "description": "Constructor."},
{ "name": "Switch",
  "type": "Class",
  "description": "The Material Design Lite (MDL) switch component is an enhanced version of the standard HTML <input type=\"checkbox\"> element."},
{ "name": "SwitchSymbolFormatter",
  "type": "Method",
  "class": "mx.formatters.SwitchSymbolFormatter",
  "description": "Constructor."},
{ "name": "SwitchSymbolFormatter",
  "type": "Class",
  "description": "The SwitchSymbolFormatter class is a utility class that you can use when creating custom formatters."},
{ "name": "SymbolPath",
  "type": "Class",
  "description": ""},
{ "name": "SystemManager",
  "type": "Method",
  "class": "mx.managers.SystemManager",
  "description": "Constructor."},
{ "name": "SystemManager",
  "type": "Class",
  "description": "The SystemManager class manages an application window."},
{ "name": "SystemManagerBase",
  "type": "Class",
  "description": ""},
{ "name": "SystemManagerGlobals",
  "type": "Class",
  "description": ""},
{ "name": "T",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the T key (84)."},
{ "name": "TAB",
  "type": "Property",
  "class": "org.apache.royale.events.utils.WhitespaceKeys",
  "description": "The Horizontal Tab key, Tab."},
{ "name": "TAB",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Tab key (9)."},
{ "name": "TAB",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TAB",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TABLE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "TABLECELL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "TABLECOLUMN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "TABLEROW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "TABLET",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": ""},
{ "name": "TABLET",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": ""},
{ "name": "TABLET",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TABLET",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TABLET_ANDROID",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TABLET_ANDROID",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TABLET_BREAKPOINT",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": ""},
{ "name": "TABLET_MAC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TABLET_MAC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TABSTOP",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.Category",
  "description": ""},
{ "name": "TABULAR",
  "type": "Property",
  "class": "org.apache.royale.text.engine.DigitWidth",
  "description": ""},
{ "name": "TAB_UNSELECTED",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TAB_UNSELECTED",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TAG_FACES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TAG_FACES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TAP_AND_PLAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TAP_AND_PLAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TB",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BlockProgression",
  "description": "Specifies top to bottom block progression."},
{ "name": "TBody",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TBody",
  "description": "constructor."},
{ "name": "TBody",
  "type": "Class",
  "description": "The TBody class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <tbody> element"},
{ "name": "TBodyContentArea",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TBodyContentArea",
  "description": "constructor."},
{ "name": "TBodyContentArea",
  "type": "Class",
  "description": "The TBodyContentArea class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <tbody> element."},
{ "name": "TCMFactoryComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TCMFactoryComposer",
  "description": ""},
{ "name": "TCMFactoryComposer",
  "type": "Class",
  "description": ""},
{ "name": "TCMTextFlowTextLineFactory",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TCMTextFlowTextLineFactory",
  "description": ""},
{ "name": "TCMTextFlowTextLineFactory",
  "type": "Class",
  "description": ""},
{ "name": "TCYElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TCYElement",
  "description": "Constructor - creates a new TCYElement instance."},
{ "name": "TCYElement",
  "type": "Class",
  "description": "The TCYElement (Tatechuuyoko - ta-tae-chu-yo-ko) class is a subclass of SubParagraphGroupElementBase that causes text to draw horizontally within a vertical line."},
{ "name": "TEAL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "TERRAIN",
  "type": "Property",
  "class": "google.maps.MapTypeId",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "TERRAIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TERRAIN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TEXT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionType",
  "description": ""},
{ "name": "TEXT",
  "type": "Property",
  "class": "org.apache.royale.css2.Cursors",
  "description": ""},
{ "name": "TEXTLAYOUT_FORMAT_CHANGED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ModelChange",
  "description": ""},
{ "name": "TEXTSMS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TEXTSMS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TEXTURE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TEXTURE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TEXT_DELETED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ModelChange",
  "description": ""},
{ "name": "TEXT_FIELDS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TEXT_FIELDS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TEXT_FIELD_HTML_FORMAT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "HTML format."},
{ "name": "TEXT_FORMAT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ClipboardFormats",
  "description": ""},
{ "name": "TEXT_FORMAT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TEXT_FORMAT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TEXT_INPUT",
  "type": "Property",
  "class": "mx.events.TextEvent",
  "description": ""},
{ "name": "TEXT_INPUT",
  "type": "Property",
  "class": "org.apache.royale.text.events.TextEvent",
  "description": ""},
{ "name": "TEXT_INSERTED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ModelChange",
  "description": ""},
{ "name": "TEXT_LAYOUT_FORMAT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "TextLayout Format."},
{ "name": "TFoot",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TFoot",
  "description": "constructor."},
{ "name": "TFoot",
  "type": "Class",
  "description": "The TFoot class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <tfoot> element"},
{ "name": "THAI",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Thai."},
{ "name": "THEATERS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "THEATERS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "THUMB_DOWN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "THUMB_DOWN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "THUMB_DRAG",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "The <code>SliderEvent."},
{ "name": "THUMB_PRESS",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "The <code>SliderEvent."},
{ "name": "THUMB_RELEASE",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "The <code>SliderEvent."},
{ "name": "THUMB_UP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "THUMB_UP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "THUMB_UP_DOWN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "THUMB_UP_DOWN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "THead",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.THead",
  "description": "constructor."},
{ "name": "THead",
  "type": "Class",
  "description": "The THead class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <thead> element"},
{ "name": "TIMED_OUT",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "TIMELAPSE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TIMELAPSE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TIMELINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TIMELINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TIMER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TIMER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TIMER",
  "type": "Property",
  "class": "org.apache.royale.utils.Timer",
  "description": ""},
{ "name": "TIMER_10",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TIMER_10",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TIMER_3",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TIMER_3",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TIMER_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TIMER_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TIME_TO_LEAVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TIME_TO_LEAVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TITLE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TypographicCase",
  "description": ""},
{ "name": "TITLE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TITLE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TLFFactory",
  "type": "Class",
  "description": ""},
{ "name": "TLFTypographicCase",
  "type": "Class",
  "description": "Defines values for the <code>typographicCase</code> property of the TextLayoutFormat class."},
{ "name": "TLFormatImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TLFormatImporter",
  "description": ""},
{ "name": "TLFormatImporter",
  "type": "Class",
  "description": ""},
{ "name": "TMContainerController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "TMContainerController",
  "type": "Class",
  "description": ""},
{ "name": "TOC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TOC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TODAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TODAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TOLL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TOLL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TONALITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TONALITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TOOL_TIP_CREATE",
  "type": "Property",
  "class": "mx.events.ToolTipEvent",
  "description": "The <code>ToolTipEvent."},
{ "name": "TOOL_TIP_END",
  "type": "Property",
  "class": "mx.events.ToolTipEvent",
  "description": "The <code>ToolTipEvent."},
{ "name": "TOOL_TIP_HIDE",
  "type": "Property",
  "class": "mx.events.ToolTipEvent",
  "description": "The <code>ToolTipEvent."},
{ "name": "TOOL_TIP_SHOW",
  "type": "Property",
  "class": "mx.events.ToolTipEvent",
  "description": "The <code>ToolTipEvent."},
{ "name": "TOOL_TIP_SHOWN",
  "type": "Property",
  "class": "mx.events.ToolTipEvent",
  "description": "The <code>ToolTipEvent."},
{ "name": "TOOL_TIP_START",
  "type": "Property",
  "class": "mx.events.ToolTipEvent",
  "description": "The <code>ToolTipEvent."},
{ "name": "TOP",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "TOP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": ""},
{ "name": "TOP",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "TOP",
  "type": "Property",
  "class": "mx.controls.ProgressBarLabelPlacement",
  "description": "Specifies to place the label above the progress bar."},
{ "name": "TOP",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.AdaptiveToolTipBead",
  "description": ""},
{ "name": "TOP",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.VerticalAlign",
  "description": "Specifies alignment with the top edge of the frame."},
{ "name": "TOP",
  "type": "Property",
  "class": "spark.layouts.VerticalAlign",
  "description": "Vertically align children to the top of the container."},
{ "name": "TOP",
  "type": "Property",
  "class": "spark.layouts.RowAlign",
  "description": "Do not justify the rows."},
{ "name": "TOP_AND_BOTTOM_EXCLUDED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "TOP_CENTER",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "TOP_EXCLUDED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "TOP_LEFT",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "TOP_RIGHT",
  "type": "Property",
  "class": "google.maps.ControlPosition",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "TOUCH",
  "type": "Property",
  "class": "mx.core.InteractionMode",
  "description": "The main interaction mode for this component is through touch."},
{ "name": "TOUCH_APP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TOUCH_APP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TOYS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TOYS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TO_FIT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.LineBreak",
  "description": "Specifies that lines wrap to fit the container width."},
{ "name": "TRACE_METHOD",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates that the method used for this request should be \"trace\"."},
{ "name": "TRACK_CHANGES",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRACK_CHANGES",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRAFFIC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRAFFIC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRAIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRAIN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRAM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRAM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRANSFER_WITHIN_A_STATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRANSFER_WITHIN_A_STATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRANSFORM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRANSFORM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRANSFORM_CHANGE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "TRANSIT",
  "type": "Property",
  "class": "google.maps.TravelMode",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "TRANSLATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRANSLATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRANSPARENT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BackgroundColor",
  "description": "Transparent - no background color is applied."},
{ "name": "TRANSPARENT",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.BorderColor",
  "description": "Transparent - no border color is applied."},
{ "name": "TRENDING_DOWN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRENDING_DOWN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRENDING_FLAT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRENDING_FLAT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRENDING_UP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRENDING_UP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TRIGGER_CONNECT_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to trigger a ChannelSet to connect."},
{ "name": "TRIGGER_CONNECT_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to trigger a ChannelSet to connect."},
{ "name": "TRIP_ORIGIN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TRUE",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "TUNE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TUNE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TURNED_IN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TURNED_IN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TURNED_IN_NOT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TURNED_IN_NOT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TV",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "TV",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "TWEEN_END",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "The <code>Tween."},
{ "name": "TWEEN_END",
  "type": "Property",
  "class": "mx.events.TweenEvent",
  "description": "The <code>TweenEvent."},
{ "name": "TWEEN_START",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "The <code>Tween."},
{ "name": "TWEEN_START",
  "type": "Property",
  "class": "mx.events.TweenEvent",
  "description": "The <code>TweenEvent."},
{ "name": "TWEEN_UPDATE",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "The <code>Tween."},
{ "name": "TWEEN_UPDATE",
  "type": "Property",
  "class": "mx.events.TweenEvent",
  "description": "The <code>TweenEvent."},
{ "name": "TWIPS_PER_PIXEL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "Twips per pixels"},
{ "name": "TabAlignment",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TabAlignment",
  "description": ""},
{ "name": "TabAlignment",
  "type": "Class",
  "description": ""},
{ "name": "TabArrayListModel",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.models.TabArrayListModel",
  "description": ""},
{ "name": "TabArrayListModel",
  "type": "Class",
  "description": "The TabArrayListModel class defines the data associated with an org."},
{ "name": "TabArrayModel",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.models.TabArrayModel",
  "description": ""},
{ "name": "TabArrayModel",
  "type": "Class",
  "description": "The TabArrayModel class defines the data associated with an org."},
{ "name": "TabBar",
  "type": "Method",
  "class": "org.apache.royale.mobile.chrome.TabBar",
  "description": "Constructor"},
{ "name": "TabBar",
  "type": "Class",
  "description": "The TabBar class displays a set of buttons that can be used to switch between navigation panels."},
{ "name": "TabBar",
  "type": "Method",
  "class": "org.apache.royale.jewel.TabBar",
  "description": "constructor."},
{ "name": "TabBar",
  "type": "Class",
  "description": "The TabBar class is a List used for navigate other organized content in a Royale Application."},
{ "name": "TabBar",
  "type": "Method",
  "class": "mx.controls.TabBar",
  "description": ""},
{ "name": "TabBar",
  "type": "Class",
  "description": "The TabBar control is a ButtonBar with buttons that look like Tabs."},
{ "name": "TabBar",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBar",
  "description": "constructor."},
{ "name": "TabBar",
  "type": "Class",
  "description": "The Material Design Lite (MDL) tab bar component is a user interface element that allows different content blocks to share the same screen space in a mutually exclusive manner."},
{ "name": "TabBar",
  "type": "Method",
  "class": "spark.components.TabBar",
  "description": "Constructor."},
{ "name": "TabBar",
  "type": "Class",
  "description": "The TabBar class displays a set of identical tabs."},
{ "name": "TabBarButton",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBarButton",
  "description": "constructor."},
{ "name": "TabBarButton",
  "type": "Class",
  "description": "The TabBarButton class is a link button component used in Tabs"},
{ "name": "TabBarButtonInidicatorRestrictedToContentItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonInidicatorRestrictedToContentItemRenderer",
  "description": "constructor."},
{ "name": "TabBarButtonInidicatorRestrictedToContentItemRenderer",
  "type": "Class",
  "description": "The TabBarButtonInidicatorRestrictedToContentItemRenderer is a TabBarButtonItemRenderer that restrict indicator to content"},
{ "name": "TabBarButtonItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": "constructor."},
{ "name": "TabBarButtonItemRenderer",
  "type": "Class",
  "description": "The TabBarButtonItemRenderer defines the basic Item Renderer for a Jewel TabBar List Component."},
{ "name": "TabBarButtonItemRendererBase",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.TabBarButtonItemRendererBase",
  "description": "constructor."},
{ "name": "TabBarButtonItemRendererBase",
  "type": "Class",
  "description": "Base class for TabBarButton item renderers"},
{ "name": "TabBarButtonLayoutItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TabBarButtonLayoutItemRenderer",
  "description": ""},
{ "name": "TabBarButtonLayoutItemRenderer",
  "type": "Class",
  "description": "Represents an item renderer for the TabBarButton Layout type item renderer."},
{ "name": "TabBarButtonTabsItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TabBarButtonTabsItemRenderer",
  "description": ""},
{ "name": "TabBarButtonTabsItemRenderer",
  "type": "Class",
  "description": "Represents an item renderer for the TabBarButton It is default item renderer for TabBarButton Creates MDL \"mdl-tabs__tab\" conponent"},
{ "name": "TabBarContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.TabBarContent",
  "description": "constructor."},
{ "name": "TabBarContent",
  "type": "Class",
  "description": "The TabBarContent class is a Container component capable of parenting the other organized content that implements ISelectableContent interface (i."},
{ "name": "TabBarLayoutItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TabBarLayoutItemRenderer",
  "description": ""},
{ "name": "TabBarLayoutItemRenderer",
  "type": "Class",
  "description": "Layout type content for Tabs Creates MDL \"mdl-layout__tab-panel\" conponent"},
{ "name": "TabBarPanel",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBarPanel",
  "description": "constructor."},
{ "name": "TabBarPanel",
  "type": "Class",
  "description": "The TabBarPanel class is a Container component capable of parenting other four components."},
{ "name": "TabBarPanelItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TabBarPanelItemRenderer",
  "description": ""},
{ "name": "TabBarPanelItemRenderer",
  "type": "Class",
  "description": "Represents content for a TabBarPanel Creates MDL \"mdl-tabs__panel\" conponent"},
{ "name": "TabBarView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.TabBarView",
  "description": "constructor."},
{ "name": "TabBarView",
  "type": "Class",
  "description": "The TabBarView class creates the visual elements of the org."},
{ "name": "TabBarView",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.TabBarView",
  "description": "constructor."},
{ "name": "TabBarView",
  "type": "Class",
  "description": "The TabBarView class creates the visual elements of the org."},
{ "name": "TabElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TabElement",
  "description": "Constructor - creates a new TabElement instance."},
{ "name": "TabElement",
  "type": "Class",
  "description": "The TabElement class represents a &lt;tab/&gt; in the text flow."},
{ "name": "TabItemRendererBase",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.TabItemRendererBase",
  "description": "constructor."},
{ "name": "TabItemRendererBase",
  "type": "Class",
  "description": "Base class for Tabs item renderers"},
{ "name": "TabNavigator",
  "type": "Method",
  "class": "mx.containers.TabNavigator",
  "description": "Constructor."},
{ "name": "TabNavigator",
  "type": "Class",
  "description": "The MX TabNavigator container extends the MX ViewStack container by including a TabBar container for navigating between its child containers."},
{ "name": "TabNavigatorView",
  "type": "Method",
  "class": "mx.containers.beads.TabNavigatorView",
  "description": "Constructor."},
{ "name": "TabNavigatorView",
  "type": "Class",
  "description": "The TabNavigatorView for emulation."},
{ "name": "TabStop",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TabStop",
  "description": ""},
{ "name": "TabStop",
  "type": "Class",
  "description": ""},
{ "name": "TabStopFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Creates a new TabStopFormat object."},
{ "name": "TabStopFormat",
  "type": "Class",
  "description": "The TabStopFormat class represents the properties of a tab stop in a paragraph."},
{ "name": "TabStopsProperty",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.TabStopsProperty",
  "description": ""},
{ "name": "TabStopsProperty",
  "type": "Class",
  "description": "Property for tab stops."},
{ "name": "TabbedViewManager",
  "type": "Method",
  "class": "org.apache.royale.mobile.TabbedViewManager",
  "description": "Constructor."},
{ "name": "TabbedViewManager",
  "type": "Class",
  "description": "The TabbedViewManager displays a set of views, only one of which is active at a time."},
{ "name": "TabbedViewManagerView",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.TabbedViewManagerView",
  "description": "Constructor."},
{ "name": "TabbedViewManagerView",
  "type": "Class",
  "description": "The TabbedViewManagerView constructs the visual elements of the TabbedViewManager."},
{ "name": "Table",
  "type": "Method",
  "class": "org.apache.royale.jewel.Table",
  "description": "constructor."},
{ "name": "Table",
  "type": "Class",
  "description": "The Table class represents an HTML <table> element."},
{ "name": "Table",
  "type": "Method",
  "class": "org.apache.royale.html.Table",
  "description": "constructor."},
{ "name": "Table",
  "type": "Class",
  "description": "The Table class represents an HTML <table> element"},
{ "name": "Table",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Table",
  "description": "constructor."},
{ "name": "Table",
  "type": "Class",
  "description": "The Table class represents an HTML <table> element"},
{ "name": "Table",
  "type": "Method",
  "class": "org.apache.royale.mdl.Table",
  "description": "constructor."},
{ "name": "Table",
  "type": "Class",
  "description": "The Material Design Lite (MDL) data-table component is an enhanced version of the standard HTML <table>."},
{ "name": "TableArrayListSelectionModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": "Constructor."},
{ "name": "TableArrayListSelectionModel",
  "type": "Class",
  "description": "The ArrayListSelectionModel class is a selection model for a dataProvider that is an ArrayList."},
{ "name": "TableBlockContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableBlockContainer",
  "description": ""},
{ "name": "TableBlockContainer",
  "type": "Class",
  "description": "The sprite that contains the table cells."},
{ "name": "TableBodyElement",
  "type": "Class",
  "description": "<p> TableBodyElement is an item in a TableElement."},
{ "name": "TableCell",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": "constructor."},
{ "name": "TableCell",
  "type": "Class",
  "description": "The TableCell class defines a table data cell in the Table component."},
{ "name": "TableCell",
  "type": "Method",
  "class": "org.apache.royale.html.TableCell",
  "description": "constructor."},
{ "name": "TableCell",
  "type": "Class",
  "description": "The TableCell class defines a table data cell in the Table component."},
{ "name": "TableCell",
  "type": "Method",
  "class": "org.apache.royale.mdl.TableCell",
  "description": "constructor."},
{ "name": "TableCell",
  "type": "Class",
  "description": "The TableCell class is a Cell for MDL Table used normaly in a TableRowItemRenderer"},
{ "name": "TableCellElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "TableCellElement",
  "type": "Class",
  "description": "TableCellElement is an item in a TableElement."},
{ "name": "TableCellLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.TableCellLayout",
  "description": "Constructor."},
{ "name": "TableCellLayout",
  "type": "Class",
  "description": "The TableCellLayout is the default layout for TableCell items."},
{ "name": "TableCellSelectionMouseController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": "Constructor."},
{ "name": "TableCellSelectionMouseController",
  "type": "Class",
  "description": "The TableCellSelectionMouseController class is a controller for org."},
{ "name": "TableCellView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TableCellView",
  "description": "constructor."},
{ "name": "TableCellView",
  "type": "Class",
  "description": "The TableCellView class is the view bead for TableCell."},
{ "name": "TableColElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableColElement",
  "description": ""},
{ "name": "TableColElement",
  "type": "Class",
  "description": "<p> TableColElement is an item in a TableElement."},
{ "name": "TableColGroupElement",
  "type": "Class",
  "description": "<p> TableColGroupElement is an item in a TableElement."},
{ "name": "TableColumn",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TableColumn",
  "description": ""},
{ "name": "TableColumn",
  "type": "Class",
  "description": "TableColumn is a DataGridColumn used in Jewel Table component with special table properties."},
{ "name": "TableColumn",
  "type": "Method",
  "class": "org.apache.royale.mdl.TableColumn",
  "description": "constructor."},
{ "name": "TableColumn",
  "type": "Class",
  "description": "The TableColumn class represents an HTML <th> element that be inside a <thead> in a MLD Table Use instances of this class in columns Array property MDL Table"},
{ "name": "TableDataCellElement",
  "type": "Class",
  "description": "<p> TableDataCellElement is an item in a TableRowElement."},
{ "name": "TableElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "TableElement",
  "type": "Class",
  "description": "The TableElement class is used for grouping together items into a table."},
{ "name": "TableFormattedElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableFormattedElement",
  "description": ""},
{ "name": "TableFormattedElement",
  "type": "Class",
  "description": ""},
{ "name": "TableFrame",
  "type": "Class",
  "description": "Defines values for the <code>TableFrame</code> property of the TextLayoutFormat class."},
{ "name": "TableHeader",
  "type": "Method",
  "class": "org.apache.royale.html.TableHeader",
  "description": "constructor."},
{ "name": "TableHeader",
  "type": "Class",
  "description": "The TableHeader class defines a table header cell in the Table component."},
{ "name": "TableHeaderCell",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TableHeaderCell",
  "description": "constructor."},
{ "name": "TableHeaderCell",
  "type": "Class",
  "description": "The TableHeaderCell class defines a table header cell in the Table component."},
{ "name": "TableHeaderLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.TableHeaderLayout",
  "description": "Constructor."},
{ "name": "TableHeaderLayout",
  "type": "Class",
  "description": "The TableHeaderLayout is the default layout for TableHeader items."},
{ "name": "TableItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.TableItemRenderer",
  "description": "constructor."},
{ "name": "TableItemRenderer",
  "type": "Class",
  "description": "The TableItemRenderer class displays data in string form using the data's toString() function."},
{ "name": "TableItemRendererFactoryForCollectionView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "TableItemRendererFactoryForCollectionView",
  "type": "Class",
  "description": "This class creates itemRenderer instances from the data contained within an ICollectionView and generates the appropiate table structure with thead, tbody and table rows and cells to hold the columns and data in cells."},
{ "name": "TableLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.TableLayout",
  "description": "Constructor."},
{ "name": "TableLayout",
  "type": "Class",
  "description": "The TableLayout class is a simple layout bead."},
{ "name": "TableLeafElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "TableLeafElement",
  "type": "Class",
  "description": ""},
{ "name": "TableModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.TableModel",
  "description": ""},
{ "name": "TableModel",
  "type": "Class",
  "description": ""},
{ "name": "TableNumericEnable",
  "type": "Class",
  "description": "TableNumericEnable bead applies numeric formatting to header (TableColumn) or data cell (TableCell) It removes class \"mdl-data-table__cell--non-numeric\" from strand (content of column will be align to the right)"},
{ "name": "TableRow",
  "type": "Method",
  "class": "org.apache.royale.html.TableRow",
  "description": "constructor."},
{ "name": "TableRow",
  "type": "Class",
  "description": "The TableRow class defines a row of a Table."},
{ "name": "TableRow",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TableRow",
  "description": "constructor."},
{ "name": "TableRow",
  "type": "Class",
  "description": "The TableRow class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <tr> element"},
{ "name": "TableRowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "TableRowElement",
  "type": "Class",
  "description": "TableRowElement is an item in a TableElement."},
{ "name": "TableRowItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemRenderer",
  "description": "constructor."},
{ "name": "TableRowItemRenderer",
  "type": "Class",
  "description": "The TableItemRenderer defines the basic Item Renderer for a MDL Table Component."},
{ "name": "TableRowItemSingleSelectionMouseRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemSingleSelectionMouseRenderer",
  "description": "constructor."},
{ "name": "TableRowItemSingleSelectionMouseRenderer",
  "type": "Class",
  "description": "The TableRowItemSingleSelectionMouseRenderer defines the basic Item Renderer for a MDL Table Component and handles mouse events, notifying about them host component."},
{ "name": "TableRules",
  "type": "Class",
  "description": "Defines values for the <code>TableRules</code> property of the TextLayoutFormat class."},
{ "name": "TableView",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.TableView",
  "description": ""},
{ "name": "TableView",
  "type": "Class",
  "description": "TableView makes sure the itemRendererFactory and the layout beads are installed."},
{ "name": "TableView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.TableView",
  "description": "constructor."},
{ "name": "TableView",
  "type": "Class",
  "description": "The TableView class creates the visual elements of the org."},
{ "name": "Tabs",
  "type": "Method",
  "class": "org.apache.royale.mdl.Tabs",
  "description": "constructor."},
{ "name": "Tabs",
  "type": "Class",
  "description": "The Material Design Lite (MDL) tab component is a user interface element that allows different content blocks to share the same screen space in a mutually exclusive manner."},
{ "name": "TabsDataItemRendererFactoryForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.TabsDataItemRendererFactoryForArrayListData",
  "description": ""},
{ "name": "TabsDataItemRendererFactoryForArrayListData",
  "type": "Class",
  "description": "The TabsDataItemRendererFactoryForArrayListData class reads an array of data and creates an item renderer for every ITabItemRenderer in the array."},
{ "name": "TabsItemRendererFactoryForArrayData",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.TabsItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "TabsItemRendererFactoryForArrayData",
  "type": "Class",
  "description": "The TabsItemRendererFactoryForArrayData class reads an array of data and creates an item renderer for every ITabItemRenderer in the array."},
{ "name": "TabsView",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.TabsView",
  "description": "constructor."},
{ "name": "TabsView",
  "type": "Class",
  "description": "The TabsView class creates the visual elements of the org."},
{ "name": "Tbody",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Tbody",
  "description": "constructor."},
{ "name": "Tbody",
  "type": "Class",
  "description": "The Tbody class represents an HTML <tbody> element"},
{ "name": "Td",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Td",
  "description": "constructor."},
{ "name": "Td",
  "type": "Class",
  "description": "The Td class represents an HTML <td> element"},
{ "name": "TemperatureUnit",
  "type": "Class",
  "description": ""},
{ "name": "TemperatureUnit",
  "type": "Property",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "Text",
  "type": "Method",
  "class": "mx.controls.Text",
  "description": "Constructor."},
{ "name": "Text",
  "type": "Class",
  "description": "The Text control displays multiline, noneditable text."},
{ "name": "Text",
  "type": "Method",
  "class": "org.apache.royale.svg.Text",
  "description": "constructor."},
{ "name": "Text",
  "type": "Class",
  "description": "Draws a string of characters at a specific location using the fill value of color and alpha."},
{ "name": "TextAlign",
  "type": "Class",
  "description": "Defines values for setting the <code>textAlign</code> and <code>textAlignLast</code> properties of the TextLayoutFormat class."},
{ "name": "TextAlign",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.TextAlign",
  "description": "constructor."},
{ "name": "TextAlign",
  "type": "Class",
  "description": "The TextAlign bead class is a specialty bead that make text align left, right or center."},
{ "name": "TextArea",
  "type": "Method",
  "class": "org.apache.royale.mdl.TextArea",
  "description": "Constructor."},
{ "name": "TextArea",
  "type": "Class",
  "description": "The TextArea is a multiline input components."},
{ "name": "TextArea",
  "type": "Method",
  "class": "org.apache.royale.html.TextArea",
  "description": "Constructor."},
{ "name": "TextArea",
  "type": "Class",
  "description": "The TextArea class implements the basic control for multi-line text input."},
{ "name": "TextArea",
  "type": "Method",
  "class": "org.apache.royale.jewel.TextArea",
  "description": "Constructor."},
{ "name": "TextArea",
  "type": "Class",
  "description": "The TextArea class implements the basic control for single-line text input."},
{ "name": "TextArea",
  "type": "Method",
  "class": "spark.components.TextArea",
  "description": "Constructor."},
{ "name": "TextArea",
  "type": "Class",
  "description": "TextArea is a text-entry control that lets users enter and edit multiple lines of formatted text."},
{ "name": "TextArea",
  "type": "Method",
  "class": "mx.controls.TextArea",
  "description": "Constructor."},
{ "name": "TextArea",
  "type": "Class",
  "description": "The TextArea control is a multiline text field with a border and optional scroll bars."},
{ "name": "TextArea",
  "type": "Class",
  "description": ""},
{ "name": "TextBase",
  "type": "Method",
  "class": "spark.components.supportClasses.TextBase",
  "description": "Constructor."},
{ "name": "TextBase",
  "type": "Class",
  "description": "The base class for Spark text controls such as Label and RichText which display text using CSS styles for the default format."},
{ "name": "TextBaseline",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextBaseline",
  "description": ""},
{ "name": "TextBaseline",
  "type": "Class",
  "description": ""},
{ "name": "TextBlock",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "TextBlock",
  "type": "Class",
  "description": ""},
{ "name": "TextButton",
  "type": "Method",
  "class": "org.apache.royale.html.TextButton",
  "description": "Constructor."},
{ "name": "TextButton",
  "type": "Class",
  "description": "The TextButton class implements a basic button that displays text."},
{ "name": "TextButton",
  "type": "Method",
  "class": "org.apache.royale.jquery.TextButton",
  "description": ""},
{ "name": "TextButton",
  "type": "Class",
  "description": ""},
{ "name": "TextButton",
  "type": "Method",
  "class": "org.apache.royale.html5.TextButton",
  "description": ""},
{ "name": "TextButton",
  "type": "Class",
  "description": ""},
{ "name": "TextButton",
  "type": "Method",
  "class": "org.apache.royale.express.TextButton",
  "description": ""},
{ "name": "TextButton",
  "type": "Class",
  "description": "This class extends TextButton and adds the toolTip bead as a convenience."},
{ "name": "TextButton",
  "type": "Class",
  "description": ""},
{ "name": "TextButton",
  "type": "Method",
  "class": "org.apache.royale.svg.TextButton",
  "description": ""},
{ "name": "TextButton",
  "type": "Class",
  "description": ""},
{ "name": "TextButtonDataGridColumnItemRenderer",
  "type": "Class",
  "description": "The TextButtonDataGridColumnItemRenderer is the default renderer for mx."},
{ "name": "TextButtonItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": ""},
{ "name": "TextButtonItemRenderer",
  "type": "Class",
  "description": "The TextButtonItemRenderer class extends TextButton and turns it into an itemRenderer suitable for use in most DataContainer/List/DataGrid applications."},
{ "name": "TextClipboard",
  "type": "Class",
  "description": "The TextClipboard class copies and pastes TextScrap objects to and from the system clipboard."},
{ "name": "TextContainerManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Constructor function - creates a TextContainerManager instance."},
{ "name": "TextContainerManager",
  "type": "Class",
  "description": "Manages text in a container."},
{ "name": "TextConverter",
  "type": "Class",
  "description": "This is the gateway class for handling import and export."},
{ "name": "TextDecoration",
  "type": "Class",
  "description": "Defines values for the <code>textDecoration</code> property of the TextLayoutFormat class."},
{ "name": "TextElement",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextElement",
  "description": ""},
{ "name": "TextElement",
  "type": "Class",
  "description": ""},
{ "name": "TextEncoderLiteWrapper",
  "type": "Method",
  "class": "mx.utils.TextEncoderLiteWrapper",
  "description": "The Royale Compiler will inject html into the index."},
{ "name": "TextEncoderLiteWrapper",
  "type": "Class",
  "description": ""},
{ "name": "TextEngine",
  "type": "Class",
  "description": ""},
{ "name": "TextEvent",
  "type": "Method",
  "class": "mx.events.TextEvent",
  "description": "Constructor."},
{ "name": "TextEvent",
  "type": "Class",
  "description": ""},
{ "name": "TextEvent",
  "type": "Method",
  "class": "org.apache.royale.text.events.TextEvent",
  "description": ""},
{ "name": "TextEvent",
  "type": "Class",
  "description": "A TextLayoutEvent instance represents an event, such as the <code>TextLayoutEvent."},
{ "name": "TextField",
  "type": "Method",
  "class": "org.apache.royale.mdl.TextField",
  "description": "Constructor."},
{ "name": "TextField",
  "type": "Class",
  "description": "The TextField is a input components."},
{ "name": "TextFieldBase",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.TextFieldBase",
  "description": "Constructor."},
{ "name": "TextFieldBase",
  "type": "Class",
  "description": "The TextFieldBase class is the base class for TextField and TextArea MDL controls"},
{ "name": "TextFieldHtmlExporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlExporter",
  "description": ""},
{ "name": "TextFieldHtmlExporter",
  "type": "Class",
  "description": "Export converter for HTML format."},
{ "name": "TextFieldHtmlImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": "Constructor"},
{ "name": "TextFieldHtmlImporter",
  "type": "Class",
  "description": "TextFieldHtmlImporter converts from HTML to TextLayout data structures"},
{ "name": "TextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "Constructor - creates a new TextFlow instance."},
{ "name": "TextFlow",
  "type": "Class",
  "description": "The TextFlow class is responsible for managing all the text content of a story."},
{ "name": "TextFlowEdit",
  "type": "Class",
  "description": "Encapsulates all methods necessary for dynamic editing of a text."},
{ "name": "TextFlowLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "Constructor - creates a new TextFlowLine instance."},
{ "name": "TextFlowLine",
  "type": "Class",
  "description": "The TextFlowLine class represents a single line of text in a text flow."},
{ "name": "TextFlowLineLocation",
  "type": "Class",
  "description": "The TextFlowLineLocation class is an enumeration class that defines constants for specifying the location of a line within a paragraph."},
{ "name": "TextFlowTableBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Constructor - creates a new TextFlowTableBlock instance."},
{ "name": "TextFlowTableBlock",
  "type": "Class",
  "description": ""},
{ "name": "TextFlowTextLineFactory",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TextFlowTextLineFactory",
  "description": "Creates a TextFlowTextLineFactory object."},
{ "name": "TextFlowTextLineFactory",
  "type": "Class",
  "description": "The TextFlowTextLineFactory class provides a simple way to create TextLines for displaying text from a text flow."},
{ "name": "TextFormat",
  "type": "Method",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "TextFormat",
  "type": "Class",
  "description": "This class holds text related styles See: See:"},
{ "name": "TextFormatImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.TextFormatImporter",
  "description": ""},
{ "name": "TextFormatImporter",
  "type": "Class",
  "description": ""},
{ "name": "TextInput",
  "type": "Method",
  "class": "org.apache.royale.html.TextInput",
  "description": "Constructor."},
{ "name": "TextInput",
  "type": "Class",
  "description": "The TextInput class implements the basic control for single-line text input."},
{ "name": "TextInput",
  "type": "Class",
  "description": ""},
{ "name": "TextInput",
  "type": "Method",
  "class": "org.apache.royale.jewel.TextInput",
  "description": "Constructor."},
{ "name": "TextInput",
  "type": "Class",
  "description": "The TextInput class implements the basic control for single-line text input."},
{ "name": "TextInput",
  "type": "Method",
  "class": "org.apache.royale.express.TextInput",
  "description": ""},
{ "name": "TextInput",
  "type": "Class",
  "description": "This class extends the standard TextInput class and adds in the prompt, password, and numeric accessories (as needed) for convenience."},
{ "name": "TextInput",
  "type": "Method",
  "class": "mx.controls.TextInput",
  "description": "Constructor."},
{ "name": "TextInput",
  "type": "Class",
  "description": "The TextInput control is a single-line text field that is optionally editable."},
{ "name": "TextInput",
  "type": "Method",
  "class": "spark.components.TextInput",
  "description": "Constructor."},
{ "name": "TextInput",
  "type": "Class",
  "description": "TextInput is a text-entry control that lets users enter and edit a single line of uniformly-formatted text."},
{ "name": "TextInputBase",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": "Constructor."},
{ "name": "TextInputBase",
  "type": "Class",
  "description": "The TextInputBase class is the base class for TextInput and TextArea Jewel controls"},
{ "name": "TextItemRendererFactoryForArrayData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TextItemRendererFactoryForArrayData",
  "description": "Constructor."},
{ "name": "TextItemRendererFactoryForArrayData",
  "type": "Class",
  "description": "The TextItemRendererFactoryForArrayData class is the IDataProviderItemRendererMapper for creating ITextItemRenderers and assigning them data from an array."},
{ "name": "TextItemRendererFactoryForStringVectorData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TextItemRendererFactoryForStringVectorData",
  "description": "Constructor."},
{ "name": "TextItemRendererFactoryForStringVectorData",
  "type": "Class",
  "description": "The TextItemRendererFactoryForStringVectorData class is the IDataProviderItemRendererMapper for creating ITextItemRenderers and assigning them data from an vector of Strings."},
{ "name": "TextJustifier",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextJustifier",
  "description": ""},
{ "name": "TextJustifier",
  "type": "Class",
  "description": ""},
{ "name": "TextJustify",
  "type": "Class",
  "description": "Defines values for setting the <code>textJustify</code> property of the TextLayoutFormat class."},
{ "name": "TextLayoutEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.TextLayoutEvent",
  "description": "The TextLayoutEvent class represents the event object passed to the event listener for many Text Layout events."},
{ "name": "TextLayoutEvent",
  "type": "Class",
  "description": "A TextLayoutEvent instance represents an event, such as the <code>TextLayoutEvent."},
{ "name": "TextLayoutFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Creates a new TextLayoutFormat object."},
{ "name": "TextLayoutFormat",
  "type": "Class",
  "description": "The TextLayoutFormat class holds all of the text layout properties."},
{ "name": "TextLayoutFormatBase",
  "type": "Class",
  "description": ""},
{ "name": "TextLayoutImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Constructor"},
{ "name": "TextLayoutImporter",
  "type": "Class",
  "description": "TextLayoutImporter converts from XML to TextLayout data structures and back."},
{ "name": "TextLayoutVersion",
  "type": "Class",
  "description": "This class controls the backward-compatibility of the framework."},
{ "name": "TextLine",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "TextLine",
  "type": "Class",
  "description": ""},
{ "name": "TextLineCreationResult",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextLineCreationResult",
  "description": ""},
{ "name": "TextLineCreationResult",
  "type": "Class",
  "description": ""},
{ "name": "TextLineFactoryBase",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "Base-class constructor for text line factories."},
{ "name": "TextLineFactoryBase",
  "type": "Class",
  "description": "The TextLineFactoryBase class serves as the base class for the Text Layout Framework text line factories."},
{ "name": "TextLineMetrics",
  "type": "Method",
  "class": "org.apache.royale.core.TextLineMetrics",
  "description": "Constructor."},
{ "name": "TextLineMetrics",
  "type": "Class",
  "description": "The TextLineMetrics class contains font information about a line of text"},
{ "name": "TextLineMirrorRegion",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextLineMirrorRegion",
  "description": ""},
{ "name": "TextLineMirrorRegion",
  "type": "Class",
  "description": ""},
{ "name": "TextLineRecycler",
  "type": "Class",
  "description": "The TextLineRecycler class provides support for recycling of TextLines."},
{ "name": "TextLineUtil",
  "type": "Class",
  "description": ""},
{ "name": "TextLineValidity",
  "type": "Class",
  "description": ""},
{ "name": "TextModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.TextModel",
  "description": "Constructor."},
{ "name": "TextModel",
  "type": "Class",
  "description": "The TextModel class is most basic data model for a component that displays text."},
{ "name": "TextModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.TextModel",
  "description": "Constructor."},
{ "name": "TextModel",
  "type": "Class",
  "description": "The TextModel class is most basic data model for a component that displays text."},
{ "name": "TextNode",
  "type": "Method",
  "class": "org.apache.royale.html.TextNode",
  "description": "constructor."},
{ "name": "TextNode",
  "type": "Class",
  "description": "The TextNode class represents an HTML Text node element"},
{ "name": "TextNodeContainerBase",
  "type": "Method",
  "class": "org.apache.royale.html.TextNodeContainerBase",
  "description": ""},
{ "name": "TextNodeContainerBase",
  "type": "Class",
  "description": ""},
{ "name": "TextOperationEvent",
  "type": "Method",
  "class": "spark.events.TextOperationEvent",
  "description": "Constructor."},
{ "name": "TextOperationEvent",
  "type": "Class",
  "description": "The TextOperationEvent class represents events that are dispatched when text content changes due to user operations such as inserting characters, backspacing, pasting, or changing text attributes."},
{ "name": "TextPrompt",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.TextPrompt",
  "description": "constructor."},
{ "name": "TextPrompt",
  "type": "Class",
  "description": "The TextPrompt class is a specialty bead that can be used with any TextInput control."},
{ "name": "TextPrompt",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.TextPrompt",
  "description": "constructor."},
{ "name": "TextPrompt",
  "type": "Class",
  "description": "The TextPrompt class is a specialty bead that can be used with any MDL TextField control."},
{ "name": "TextPromptBead",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.TextPromptBead",
  "description": "constructor."},
{ "name": "TextPromptBead",
  "type": "Class",
  "description": "The TextPromptBead class is a specialty bead that can be used with any TextInput control."},
{ "name": "TextRange",
  "type": "Method",
  "class": "mx.controls.textClasses.TextRange",
  "description": "Create a new TextRange Object that represents a subset of the contents of a text control, including the formatting information."},
{ "name": "TextRange",
  "type": "Class",
  "description": "The TextRange class provides properties that select and format a range of text in the Label, Text, TextArea, TextEditor, and RichTextEditor controls."},
{ "name": "TextRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextRange",
  "description": "Constructor - creates a new TextRange instance."},
{ "name": "TextRange",
  "type": "Class",
  "description": "A read only class that describes a range of contiguous text."},
{ "name": "TextRangeMemento",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.TextRangeMemento",
  "description": ""},
{ "name": "TextRangeMemento",
  "type": "Class",
  "description": ""},
{ "name": "TextRotation",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextRotation",
  "description": ""},
{ "name": "TextRotation",
  "type": "Class",
  "description": ""},
{ "name": "TextScrap",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextScrap",
  "description": "Creates a TextScrap object."},
{ "name": "TextScrap",
  "type": "Class",
  "description": "The TextScrap class represents a fragment of a text flow."},
{ "name": "TextSearchRequest",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "Textarea",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Textarea",
  "description": "constructor."},
{ "name": "Textarea",
  "type": "Class",
  "description": "The Textarea class represents an HTML <textarea> element"},
{ "name": "Tfoot",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Tfoot",
  "description": "constructor."},
{ "name": "Tfoot",
  "type": "Class",
  "description": "The Tfoot class represents an HTML <tfoot> element"},
{ "name": "Th",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Th",
  "description": "constructor."},
{ "name": "Th",
  "type": "Class",
  "description": "The Th class represents an HTML <th> element"},
{ "name": "Thead",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Thead",
  "description": "constructor."},
{ "name": "Thead",
  "type": "Class",
  "description": "The Thead class represents an HTML <thead> element"},
{ "name": "ThrottleBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ThrottleBead",
  "description": "constructor."},
{ "name": "ThrottleBead",
  "type": "Class",
  "description": "The ThrottleBead class allows you to listen to an event only after a timeout has been reached."},
{ "name": "Tile",
  "type": "Method",
  "class": "mx.containers.Tile",
  "description": "Constructor."},
{ "name": "Tile",
  "type": "Class",
  "description": "A Halo Tile container lays out its children in a grid of equal-sized cells."},
{ "name": "TileDirection",
  "type": "Class",
  "description": "The TileDirection class defines the constant values for the <code>direction</code> property of the Tile container."},
{ "name": "TileFilterElement",
  "type": "Method",
  "class": "org.apache.royale.svg.TileFilterElement",
  "description": ""},
{ "name": "TileFilterElement",
  "type": "Class",
  "description": "The TileFilterElement fills up the filter by repeating the input"},
{ "name": "TileGroup",
  "type": "Method",
  "class": "spark.components.TileGroup",
  "description": "Constructor."},
{ "name": "TileGroup",
  "type": "Class",
  "description": "The TileGroup container is an instance of the Group container that uses the TileLayout class."},
{ "name": "TileLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.TileLayout",
  "description": "constructor."},
{ "name": "TileLayout",
  "type": "Class",
  "description": "The TileLayout class bead sizes and positions the elements it manages into rows and columns."},
{ "name": "TileLayout",
  "type": "Method",
  "class": "spark.layouts.TileLayout",
  "description": "Constructor."},
{ "name": "TileLayout",
  "type": "Class",
  "description": "The TileLayout class arranges layout elements in columns and rows of equally-sized cells."},
{ "name": "TileLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "constructor."},
{ "name": "TileLayout",
  "type": "Class",
  "description": "The TileLayout class bead sizes and positions the elements it manages into rows and columns."},
{ "name": "TileOrientation",
  "type": "Class",
  "description": "The TileOrientation class defines the possible values for the <code>orientation</code> property of the TileLayout class."},
{ "name": "Timer",
  "type": "Method",
  "class": "org.apache.royale.utils.Timer",
  "description": "Constructor."},
{ "name": "Timer",
  "type": "Class",
  "description": "The Timer class dispatches events based on a delay and repeat count."},
{ "name": "TitleBar",
  "type": "Method",
  "class": "org.apache.royale.jewel.TitleBar",
  "description": "constructor."},
{ "name": "TitleBar",
  "type": "Class",
  "description": "The TitleBar class is a Container component that displays a title and an optional close button."},
{ "name": "TitleBar",
  "type": "Method",
  "class": "org.apache.royale.html.TitleBar",
  "description": "constructor."},
{ "name": "TitleBar",
  "type": "Class",
  "description": "The TitleBar class is a Container component that displays a title and an optional close button."},
{ "name": "TitleBarMeasurementBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TitleBarMeasurementBead",
  "description": "constructor."},
{ "name": "TitleBarMeasurementBead",
  "type": "Class",
  "description": "The TitleBarMeasurementBead class measures the overall size of a org."},
{ "name": "TitleBarModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.TitleBarModel",
  "description": ""},
{ "name": "TitleBarModel",
  "type": "Class",
  "description": "The TitleBarModel class bead holds the values for the org."},
{ "name": "TitleBarModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.TitleBarModel",
  "description": ""},
{ "name": "TitleBarModel",
  "type": "Class",
  "description": "The TitleBarModel class bead holds the values for the org."},
{ "name": "TitleBarTitle",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TitleBarTitle",
  "description": ""},
{ "name": "TitleBarTitle",
  "type": "Class",
  "description": "A specially styled Label used in TitleBar"},
{ "name": "TitleView",
  "type": "Method",
  "class": "org.apache.royale.mobile.TitleView",
  "description": ""},
{ "name": "TitleView",
  "type": "Class",
  "description": "The TitleView class represents a view in a mobile app that has a title and is typically used in a ViewManager."},
{ "name": "TitleWindow",
  "type": "Method",
  "class": "spark.components.TitleWindow",
  "description": "Constructor."},
{ "name": "TitleWindow",
  "type": "Class",
  "description": "The TitleWindow class extends Panel to include a close button and move area."},
{ "name": "TitleWindow",
  "type": "Method",
  "class": "mx.containers.TitleWindow",
  "description": "Constructor."},
{ "name": "TitleWindow",
  "type": "Class",
  "description": "A TitleWindow layout container contains a title bar, a caption, a border, and a content area for its child."},
{ "name": "Toast",
  "type": "Method",
  "class": "org.apache.royale.mdl.Toast",
  "description": "Constructor."},
{ "name": "Toast",
  "type": "Class",
  "description": "Toast are transient popup notifications without actions like Snackbar (see Snackbar class) without user actions implied."},
{ "name": "ToastModel",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.models.ToastModel",
  "description": ""},
{ "name": "ToastModel",
  "type": "Class",
  "description": "The ToastModel class defines the data associated with an org."},
{ "name": "ToggleButton",
  "type": "Method",
  "class": "spark.components.ToggleButton",
  "description": "Constructor."},
{ "name": "ToggleButton",
  "type": "Class",
  "description": "The ToggleButton component defines a toggle button."},
{ "name": "ToggleButton",
  "type": "Method",
  "class": "org.apache.royale.jewel.ToggleButton",
  "description": "Constructor."},
{ "name": "ToggleButton",
  "type": "Class",
  "description": "The ToggleButton class is a Button that supports a selected property."},
{ "name": "ToggleButtonBar",
  "type": "Method",
  "class": "mx.controls.ToggleButtonBar",
  "description": "Constructor."},
{ "name": "ToggleButtonBar",
  "type": "Class",
  "description": "The ToggleButtonBar control defines a horizontal or vertical group of buttons that maintain their selected or deselected state."},
{ "name": "ToggleButtonBase",
  "type": "Method",
  "class": "spark.components.supportClasses.ToggleButtonBase",
  "description": "Constructor."},
{ "name": "ToggleButtonBase",
  "type": "Class",
  "description": "The ToggleButtonBase component is the base class for the Spark button components that support the <code>selected</code> property."},
{ "name": "ToggleButtonModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ToggleButtonModel",
  "description": "constructor."},
{ "name": "ToggleButtonModel",
  "type": "Class",
  "description": "The ToggleButtonModel class bead holds values for org."},
{ "name": "ToggleFontIcon",
  "type": "Method",
  "class": "org.apache.royale.icons.ToggleFontIcon",
  "description": "constructor."},
{ "name": "ToggleFontIcon",
  "type": "Class",
  "description": "Icons can be used alone or in buttons and other controls  This class could be used with any icon family out there and with its text property"},
{ "name": "ToggleSwitch",
  "type": "Method",
  "class": "org.apache.royale.mobile.ToggleSwitch",
  "description": "Constructor"},
{ "name": "ToggleSwitch",
  "type": "Class",
  "description": "The ToggleSwitch is a UI control that displays on/off or yes/no states."},
{ "name": "ToggleSwitchMouseController",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.controllers.ToggleSwitchMouseController",
  "description": "Constructor."},
{ "name": "ToggleSwitchMouseController",
  "type": "Class",
  "description": "The ToggleSwitchMouseController bead handles mouse events on the ToggleSwitch, allowing the user to use the mouse to change the state of the ToggleSwitch."},
{ "name": "ToggleSwitchView",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.ToggleSwitchView",
  "description": "Constructor."},
{ "name": "ToggleSwitchView",
  "type": "Class",
  "description": "The ToggleSwitchView creates the element used to display the ToggleSwitch interface."},
{ "name": "ToggleTextButton",
  "type": "Method",
  "class": "org.apache.royale.html.ToggleTextButton",
  "description": "Constructor."},
{ "name": "ToggleTextButton",
  "type": "Class",
  "description": "The ToggleButton class is a TextButton that supports a selected property."},
{ "name": "ToggleTextButton",
  "type": "Class",
  "description": "The ToggleButton class is a TextButton that supports a selected property."},
{ "name": "ToolBar",
  "type": "Method",
  "class": "org.apache.royale.mobile.chrome.ToolBar",
  "description": ""},
{ "name": "ToolBar",
  "type": "Class",
  "description": "The ToolBar class provides a space below the contentArea of a view manager which can be used to house controls for the view."},
{ "name": "ToolBar",
  "type": "Method",
  "class": "mx.controls.richTextEditorClasses.ToolBar",
  "description": "Constructor."},
{ "name": "ToolBar",
  "type": "Class",
  "description": "The ToolBar container lays out its children in a single horizontal row."},
{ "name": "ToolTip",
  "type": "Method",
  "class": "org.apache.royale.html.ToolTip",
  "description": "Constructor."},
{ "name": "ToolTip",
  "type": "Class",
  "description": "The Label class implements the basic control for labeling other controls."},
{ "name": "ToolTip",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": "constructor."},
{ "name": "ToolTip",
  "type": "Class",
  "description": "The ToolTip class is a specialty bead that can be used with any control."},
{ "name": "ToolTip",
  "type": "Method",
  "class": "mx.controls.ToolTip",
  "description": "Constructor."},
{ "name": "ToolTip",
  "type": "Class",
  "description": "The ToolTip control lets you provide helpful information to your users."},
{ "name": "ToolTipBead",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": "constructor."},
{ "name": "ToolTipBead",
  "type": "Class",
  "description": "The ToolTipBead class is a specialty bead that can be used with any control."},
{ "name": "ToolTipBead",
  "type": "Method",
  "class": "mx.controls.beads.ToolTipBead",
  "description": ""},
{ "name": "ToolTipBead",
  "type": "Class",
  "description": ""},
{ "name": "ToolTipEvent",
  "type": "Method",
  "class": "mx.events.ToolTipEvent",
  "description": "Constructor."},
{ "name": "ToolTipEvent",
  "type": "Class",
  "description": "The ToolTipEvent class represents ToolTip events, which are generated by the ToolTipManager class."},
{ "name": "ToolTipLabel",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.tooltip.ToolTipLabel",
  "description": "Constructor."},
{ "name": "ToolTipLabel",
  "type": "Class",
  "description": "The ToolTipLabel class is the control used for ToolTip bead to popup a text over a control"},
{ "name": "ToolTipManager",
  "type": "Class",
  "description": "The ToolTipManager lets you set basic ToolTip and error tip functionality, such as display delay and the disabling of ToolTips."},
{ "name": "Tooltip",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": "constructor."},
{ "name": "Tooltip",
  "type": "Class",
  "description": "The Tooltip class provides useful information on hover."},
{ "name": "TopAppBar",
  "type": "Method",
  "class": "org.apache.royale.jewel.TopAppBar",
  "description": "constructor."},
{ "name": "TopAppBar",
  "type": "Class",
  "description": "The TopAppBar class is a container component for different items like application title, navigation icon, and/or icon buttons."},
{ "name": "TopTabbedViewManagerView",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.TopTabbedViewManagerView",
  "description": "Constructor."},
{ "name": "TopTabbedViewManagerView",
  "type": "Class",
  "description": "The TopTabbedViewManagerView constructs the visual elements of the TabbedViewManager."},
{ "name": "Tr",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Tr",
  "description": "constructor."},
{ "name": "Tr",
  "type": "Class",
  "description": "The Tr class represents an HTML <tr> element"},
{ "name": "TraceListener",
  "type": "Class",
  "description": "Outputs the status of a test run to the debug console."},
{ "name": "TraceTarget",
  "type": "Method",
  "class": "mx.logging.targets.TraceTarget",
  "description": "Constructor."},
{ "name": "TraceTarget",
  "type": "Class",
  "description": "Provides a logger target that uses the global <code>trace()</code> method to output log messages."},
{ "name": "TransformBead",
  "type": "Class",
  "description": ""},
{ "name": "TransformBead",
  "type": "Class",
  "description": ""},
{ "name": "TransformBeadBase",
  "type": "Method",
  "class": "org.apache.royale.core.TransformBeadBase",
  "description": ""},
{ "name": "TransformBeadBase",
  "type": "Class",
  "description": ""},
{ "name": "TransformCompoundModel",
  "type": "Class",
  "description": ""},
{ "name": "TransformModel",
  "type": "Method",
  "class": "org.apache.royale.core.TransformModel",
  "description": ""},
{ "name": "TransformModel",
  "type": "Class",
  "description": ""},
{ "name": "TransformMoveXModel",
  "type": "Method",
  "class": "org.apache.royale.core.TransformMoveXModel",
  "description": ""},
{ "name": "TransformMoveXModel",
  "type": "Class",
  "description": ""},
{ "name": "TransformMoveYModel",
  "type": "Method",
  "class": "org.apache.royale.core.TransformMoveYModel",
  "description": ""},
{ "name": "TransformMoveYModel",
  "type": "Class",
  "description": ""},
{ "name": "TransformOffsets",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "Constructor."},
{ "name": "TransformOffsets",
  "type": "Class",
  "description": "A CompoundTransform represents a 2D or 3D matrix transform."},
{ "name": "TransformRotateModel",
  "type": "Method",
  "class": "org.apache.royale.core.TransformRotateModel",
  "description": ""},
{ "name": "TransformRotateModel",
  "type": "Class",
  "description": ""},
{ "name": "TransformScaleModel",
  "type": "Method",
  "class": "org.apache.royale.core.TransformScaleModel",
  "description": ""},
{ "name": "TransformScaleModel",
  "type": "Class",
  "description": ""},
{ "name": "TransformableCompoundGraphic",
  "type": "Class",
  "description": "TransformableCompoundGraphic adds a <g> element in which drawn elements are nested."},
{ "name": "Transition",
  "type": "Method",
  "class": "org.apache.royale.states.Transition",
  "description": "constructor."},
{ "name": "Transition",
  "type": "Class",
  "description": "The Transition class holds information describing what to do when changing from one state to another."},
{ "name": "Transition",
  "type": "Method",
  "class": "mx.states.Transition",
  "description": "Constructor."},
{ "name": "Transition",
  "type": "Class",
  "description": "The Transition class defines a set of effects that play in response to a change of view state."},
{ "name": "TravelMode",
  "type": "Class",
  "description": ""},
{ "name": "Tree",
  "type": "Method",
  "class": "org.apache.royale.html.Tree",
  "description": "Constructor."},
{ "name": "Tree",
  "type": "Class",
  "description": "The Tree component displays structured data."},
{ "name": "Tree",
  "type": "Method",
  "class": "mx.controls.Tree",
  "description": "Constructor."},
{ "name": "Tree",
  "type": "Class",
  "description": "The Tree control lets a user view hierarchical data arranged as an expandable tree."},
{ "name": "TreeData",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "TreeData",
  "type": "Class",
  "description": "TreeData is used with tree or structured data classes."},
{ "name": "TreeEvent",
  "type": "Method",
  "class": "mx.events.TreeEvent",
  "description": "Constructor."},
{ "name": "TreeEvent",
  "type": "Class",
  "description": "The TreeEvent class represents the event object passed to the event listener for events that are associated with activities in tree, such as when a tree branch opens or closes."},
{ "name": "TreeGrid",
  "type": "Method",
  "class": "org.apache.royale.html.TreeGrid",
  "description": "Constructor."},
{ "name": "TreeGrid",
  "type": "Class",
  "description": "A TreeGrid is a combination of a Tree and a DataGrid."},
{ "name": "TreeGridColumn",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridColumn",
  "description": "Constructor."},
{ "name": "TreeGridColumn",
  "type": "Class",
  "description": "A TreeGridColumn defines the property of a specific column in the TreeGrid."},
{ "name": "TreeGridControlItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "TreeGridControlItemRenderer",
  "type": "Class",
  "description": ""},
{ "name": "TreeGridLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.TreeGridLayout",
  "description": "Constructor."},
{ "name": "TreeGridLayout",
  "type": "Class",
  "description": "The TreeGridLayout class provides the sizing and positioning for the sub-components that make up the TreeGrid."},
{ "name": "TreeGridListArea",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TreeGridListArea",
  "description": ""},
{ "name": "TreeGridListArea",
  "type": "Class",
  "description": ""},
{ "name": "TreeGridModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.TreeGridModel",
  "description": "Constructor."},
{ "name": "TreeGridModel",
  "type": "Class",
  "description": "The data model for the TreeGrid."},
{ "name": "TreeGridView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TreeGridView",
  "description": "Constructor."},
{ "name": "TreeGridView",
  "type": "Class",
  "description": "The TreeGridView class is responsible for creating the sub-components of the TreeGrid: the ButtonBar header, the Tree (first column), and Lists (rest of the columns), as well as the container that holds the columns."},
{ "name": "TreeItemRenderer",
  "type": "Method",
  "class": "mx.controls.treeClasses.TreeItemRenderer",
  "description": "Constructor."},
{ "name": "TreeItemRenderer",
  "type": "Class",
  "description": "The TreeItemRenderer class defines the default item renderer for a Tree control."},
{ "name": "TreeItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeItemRenderer",
  "description": "Constructor."},
{ "name": "TreeItemRenderer",
  "type": "Class",
  "description": ""},
{ "name": "TreeListData",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeListData",
  "description": "constructor."},
{ "name": "TreeListData",
  "type": "Class",
  "description": "The TreeListData class contains information that Tree item renderers may find useful when displaying the data for a node in the tree."},
{ "name": "TreeListData",
  "type": "Method",
  "class": "mx.controls.treeClasses.TreeListData",
  "description": "constructor."},
{ "name": "TreeListData",
  "type": "Class",
  "description": "The TreeListData class contains information that Tree item renderers may find useful when displaying the data for a node in the tree."},
{ "name": "TreeModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.TreeModel",
  "description": ""},
{ "name": "TreeModel",
  "type": "Class",
  "description": "The TreeModel is used by Tree"},
{ "name": "TreeSingleSelectionMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.TreeSingleSelectionMouseController",
  "description": "Constructor."},
{ "name": "TreeSingleSelectionMouseController",
  "type": "Class",
  "description": "The TreeSingleSelectionMouseController class is a controller for org."},
{ "name": "TreeXMLItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeXMLItemRenderer",
  "description": "Constructor."},
{ "name": "TreeXMLItemRenderer",
  "type": "Class",
  "description": "JS needs special handling for XML."},
{ "name": "TriangleItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.TriangleItemRenderer",
  "description": "Constructor."},
{ "name": "TriangleItemRenderer",
  "type": "Class",
  "description": "A simple chart itemRenderer implementation that fills an upright triangle in its assigned area."},
{ "name": "TruncationOptions",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TruncationOptions",
  "description": "Creates a TruncationOptions object."},
{ "name": "TruncationOptions",
  "type": "Class",
  "description": "The TruncationOptions class specifies options for limiting the number of lines of text created by a text line factory and for indicating when lines have been left out."},
{ "name": "Tween",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Constructor."},
{ "name": "Tween",
  "type": "Class",
  "description": "Tween is the underlying animation class for the effects in Royale."},
{ "name": "Tween",
  "type": "Method",
  "class": "mx.effects.Tween",
  "description": "Constructor."},
{ "name": "Tween",
  "type": "Class",
  "description": "Tween is the underlying animation class for the effects in Royale."},
{ "name": "Tween",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": "Constructor"},
{ "name": "Tween",
  "type": "Class",
  "description": "The Tween effect animates an object from one place to another; it can also fade and object in and out by adjusting the object's alpha value."},
{ "name": "TweenEffect",
  "type": "Method",
  "class": "mx.effects.TweenEffect",
  "description": "Constructor."},
{ "name": "TweenEffect",
  "type": "Class",
  "description": "The TweenEffect class is the superclass for all effects that are based on the Tween object."},
{ "name": "TweenEffectInstance",
  "type": "Method",
  "class": "mx.effects.effectClasses.TweenEffectInstance",
  "description": "Constructor."},
{ "name": "TweenEffectInstance",
  "type": "Class",
  "description": "The TweenEffectInstance class implements the instance class for the TweenEffect."},
{ "name": "TweenEvent",
  "type": "Method",
  "class": "mx.events.TweenEvent",
  "description": "Constructor."},
{ "name": "TweenEvent",
  "type": "Class",
  "description": "Represents event objects that are specific to Flex tween effects."},
{ "name": "Twips",
  "type": "Class",
  "description": "@private Internally, we work with Twips, which we consider to be 1/20 of a pixel."},
{ "name": "TypeDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The static TypeDefinitions."},
{ "name": "TypeDefinition",
  "type": "Class",
  "description": "The description of a Class or Interface"},
{ "name": "TypographicCase",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TypographicCase",
  "description": ""},
{ "name": "TypographicCase",
  "type": "Class",
  "description": ""},
{ "name": "U",
  "type": "Method",
  "class": "org.apache.royale.html.elements.U",
  "description": "constructor."},
{ "name": "U",
  "type": "Class",
  "description": "The U class represents an HTML <u> element"},
{ "name": "U",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the U key (85)."},
{ "name": "UIBase",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": "Constructor."},
{ "name": "UIBase",
  "type": "Class",
  "description": "The UIBase class is the base class for most composite user interface components."},
{ "name": "UIBase",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "Constructor."},
{ "name": "UIBase",
  "type": "Class",
  "description": ""},
{ "name": "UIComponent",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Constructor."},
{ "name": "UIComponent",
  "type": "Class",
  "description": "The UIComponent class is the base class for all visual components, both interactive and noninteractive."},
{ "name": "UIComponentGlobals",
  "type": "Class",
  "description": ""},
{ "name": "UIDUtil",
  "type": "Class",
  "description": "The UIDUtil class is an all-static class with methods for working with UIDs (unique identifiers) within Flex."},
{ "name": "UIDUtil",
  "type": "Class",
  "description": "The UIDUtil class is an all-static class with methods for working with UIDs (unique identifiers) within Royale."},
{ "name": "UIElement",
  "type": "Method",
  "class": "org.apache.royale.core.UIElement",
  "description": "Constructor."},
{ "name": "UIElement",
  "type": "Class",
  "description": "The UIElement class is an HTML-only class which creates a UIBase wrapper around an HTML element."},
{ "name": "UIHTMLElementWrapper",
  "type": "Method",
  "class": "org.apache.royale.core.UIHTMLElementWrapper",
  "description": "Constructor."},
{ "name": "UIHTMLElementWrapper",
  "type": "Class",
  "description": "The UIHTMLElementWrapper class is the base class for most Buttons and other UI objects in a Royale application that do not have children."},
{ "name": "UIItemRendererBase",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "constructor."},
{ "name": "UIItemRendererBase",
  "type": "Class",
  "description": "The UIItemRendererBase class is the base class for all itemRenderers."},
{ "name": "UIKeys",
  "type": "Class",
  "description": "This class holds constants for special keys See: https://w3c."},
{ "name": "UIModule",
  "type": "Method",
  "class": "org.apache.royale.html.UIModule",
  "description": "Constructor."},
{ "name": "UIModule",
  "type": "Class",
  "description": "The UIModule class is the base class for modules of user interface controls in Royale."},
{ "name": "UIModuleLoader",
  "type": "Method",
  "class": "org.apache.royale.html.UIModuleLoader",
  "description": "Constructor."},
{ "name": "UIModuleLoader",
  "type": "Class",
  "description": "The UIModuleLoader class can load a UIModule."},
{ "name": "UIModuleUtils",
  "type": "Method",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": "Constructor."},
{ "name": "UIModuleUtils",
  "type": "Class",
  "description": "The UIModuleUtils class can load a UIModule."},
{ "name": "UITextField",
  "type": "Method",
  "class": "mx.core.UITextField",
  "description": "Constructor."},
{ "name": "UITextField",
  "type": "Class",
  "description": "The UITextField class defines the component used by many Flex components to display text."},
{ "name": "UITextFormat",
  "type": "Method",
  "class": "mx.core.UITextFormat",
  "description": "Constructor."},
{ "name": "UITextFormat",
  "type": "Class",
  "description": "The UITextFormat class represents character formatting information for the UITextField class."},
{ "name": "UIUtils",
  "type": "Class",
  "description": "The UIUtils class is a collection of static functions that provide utility features to UIBase objects."},
{ "name": "UNARCHIVE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "UNARCHIVE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "UNCOMMON",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LigatureLevel",
  "description": ""},
{ "name": "UNDERLINE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextDecoration",
  "description": "Specifies that text is underlined."},
{ "name": "UNDO",
  "type": "Property",
  "class": "org.apache.royale.events.utils.EditingKeys",
  "description": "Undo the last action."},
{ "name": "UNDO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "UNDO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "UNFOCUSED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormatState",
  "description": "selection state when selection doesn't have focus"},
{ "name": "UNFOLD_LESS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "UNFOLD_MORE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "UNIDENTIFIED",
  "type": "Property",
  "class": "org.apache.royale.events.utils.SpecialKeys",
  "description": "The user agent wasn't able to map the event's virtual keycode to a specific key value."},
{ "name": "UNIX_OS",
  "type": "Property",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "UNJUSTIFIED",
  "type": "Property",
  "class": "org.apache.royale.text.engine.LineJustification",
  "description": ""},
{ "name": "UNKNOWN",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IMEConversionMode",
  "description": ""},
{ "name": "UNKNOWN",
  "type": "Property",
  "class": "google.maps.KmlLayerStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "UNKNOWN_ERROR",
  "type": "Property",
  "class": "google.maps.StreetViewStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "UNKNOWN_ERROR",
  "type": "Property",
  "class": "google.maps.DirectionsStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "UNKNOWN_ERROR",
  "type": "Property",
  "class": "google.maps.places.PlacesServiceStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "UNKNOWN_ERROR",
  "type": "Property",
  "class": "google.maps.DistanceMatrixStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "UNKNOWN_ERROR",
  "type": "Property",
  "class": "google.maps.ElevationStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "UNKNOWN_ERROR",
  "type": "Property",
  "class": "google.maps.GeocoderStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "UNKNOWN_ERROR",
  "type": "Property",
  "class": "google.maps.visualization.MapsEngineStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "UNKNOWN_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This is the default operation for new CommandMessage instances."},
{ "name": "UNKNOWN_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This is the default operation for new CommandMessage instances."},
{ "name": "UNKNOWN_OS",
  "type": "Property",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "UNKNOWN_VERSION",
  "type": "Property",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "UNSUBSCRIBE_OPERATION",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "This operation is used to unsubscribe from a remote destination."},
{ "name": "UNSUBSCRIBE_OPERATION",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "This operation is used to unsubscribe from a remote destination."},
{ "name": "UP",
  "type": "Property",
  "class": "org.apache.royale.events.utils.NavigationKeys",
  "description": "The up arrow key."},
{ "name": "UP",
  "type": "Property",
  "class": "spark.core.NavigationUnit",
  "description": "Navigate one line or \"step\" upwards."},
{ "name": "UP",
  "type": "Property",
  "class": "mx.formatters.NumberBaseRoundType",
  "description": "Rounds a number up to an integer value that is both closest to, and greater than or equal to, the input number."},
{ "name": "UP",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Up Arrow key (38)."},
{ "name": "UPDATE",
  "type": "Property",
  "class": "mx.events.PropertyChangeEventKind",
  "description": "Indicates that the value of the property changed."},
{ "name": "UPDATE",
  "type": "Property",
  "class": "mx.events.CollectionEventKind",
  "description": "Indicates that one or more items were updated within the collection."},
{ "name": "UPDATE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "UPDATE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "UPDATE_COMPLETE",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "UPDATE_COMPLETE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.UpdateCompleteEvent",
  "description": "Defines the value of the <code>type</code> property of an <code>UpdateCompleteEvent</code> object"},
{ "name": "UPLOAD_PROGRESS",
  "type": "Property",
  "class": "org.apache.royale.events.ProgressEvent",
  "description": "For upload progress events."},
{ "name": "UPPERCASE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TypographicCase",
  "description": ""},
{ "name": "UPPERCASE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TLFTypographicCase",
  "description": "Specifies that all characters use uppercase glyphs on output."},
{ "name": "UPPER_ALPHA",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Upper-case alphabetic \"numbering\": A-Z, AA-ZZ, and so on."},
{ "name": "UPPER_GREEK",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Upper-case Greek alphabetic \"numering\"."},
{ "name": "UPPER_LATIN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Upper-case alphabetic \"numbering\": A-Z, AA-ZZ, and so on."},
{ "name": "UPPER_ROMAN",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Upper-case Roman numbering: I, II, III, IV, and so on."},
{ "name": "URDU",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListStyleType",
  "description": "Numbering using Urdu."},
{ "name": "URLBinaryLoader",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": ""},
{ "name": "URLBinaryLoader",
  "type": "Class",
  "description": "The URLBinaryLoader class is a relatively low-level class designed to get binary data over HTTP the intent is to create similar classes for text and URL vars."},
{ "name": "URLBinaryUploader",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryUploader",
  "description": ""},
{ "name": "URLBinaryUploader",
  "type": "Class",
  "description": "The URLBinaryUploader class subclasses URLBinaryLoader to offer upload progress events."},
{ "name": "URLLoader",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoader",
  "description": ""},
{ "name": "URLLoader",
  "type": "Class",
  "description": "The URLBinaryLoader class is a relatively low-level class designed to get binary data over HTTP the intent is to create similar classes for text and URL vars."},
{ "name": "URLLoader",
  "type": "Method",
  "class": "mx.net.URLLoader",
  "description": "Constructs an instance of the responder with the specified handlers."},
{ "name": "URLLoader",
  "type": "Class",
  "description": ""},
{ "name": "URLLoaderBase",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": ""},
{ "name": "URLLoaderBase",
  "type": "Class",
  "description": "The URLLoader class is a base class for the specific flavors of loaders such as binary, text or variables"},
{ "name": "URLParameterBead",
  "type": "Method",
  "class": "org.apache.royale.routing.URLParameterBead",
  "description": "constructor."},
{ "name": "URLParameterBead",
  "type": "Class",
  "description": "The URLParameterBead class dispatches an event at startup when the URL parameters are ready to be processed."},
{ "name": "URLRequest",
  "type": "Method",
  "class": "org.apache.royale.net.URLRequest",
  "description": "Set the URL request string."},
{ "name": "URLRequest",
  "type": "Class",
  "description": "The URLRequest class captures all of the information in a single HTTP request."},
{ "name": "URLRequestHeader",
  "type": "Method",
  "class": "org.apache.royale.net.URLRequestHeader",
  "description": "Set the name and value of a URL request header."},
{ "name": "URLRequestHeader",
  "type": "Class",
  "description": "A URLRequestHeader object represents an HTTP request header."},
{ "name": "URLStream",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "constructor"},
{ "name": "URLStream",
  "type": "Class",
  "description": "The URLStream class deals with the underlying platform-specifc architecture for HTTP Requests It makes the request and stores the response, dispatching events."},
{ "name": "URLUploadStream",
  "type": "Method",
  "class": "org.apache.royale.net.URLUploadStream",
  "description": ""},
{ "name": "URLUploadStream",
  "type": "Class",
  "description": "The URLUploadStream extends the URLStream class to support upload progress events."},
{ "name": "URLUtil",
  "type": "Class",
  "description": "The URLUtil class is a static class with methods for working with full and relative URLs within Flex."},
{ "name": "URLUtils",
  "type": "Class",
  "description": "The URLUtils class is a collection of static functions that wrap dealing with object URLs in the browser."},
{ "name": "URLVariables",
  "type": "Method",
  "class": "mx.messaging.channels.URLVariables",
  "description": ""},
{ "name": "URLVariables",
  "type": "Class",
  "description": ""},
{ "name": "URL_CHANGED",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "USB",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "USB",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "USER_STYLE_CHANGED",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ModelChange",
  "description": ""},
{ "name": "USE_DOMINANT_BASELINE",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextBaseline",
  "description": ""},
{ "name": "UintPropertyHandler",
  "type": "Class",
  "description": "A property description with an unsigned integer as its value."},
{ "name": "Ul",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Ul",
  "description": "constructor."},
{ "name": "Ul",
  "type": "Class",
  "description": "The Ul class represents an HTML <ul> element"},
{ "name": "UndefinedPropertyHandler",
  "type": "Class",
  "description": "An property description with an enumerated string as its value."},
{ "name": "UndoManager",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": "Creates an UndoManager object."},
{ "name": "UndoManager",
  "type": "Class",
  "description": "The UndoManager class manages the history of editing operations on a text flow so that these operations can be undone and redone."},
{ "name": "UndoOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.UndoOperation",
  "description": "Creates an UndoOperation object."},
{ "name": "UndoOperation",
  "type": "Class",
  "description": "The UndoOperation class encapsulates an undo operation."},
{ "name": "UnitSystem",
  "type": "Class",
  "description": ""},
{ "name": "UnselectableElementBead",
  "type": "Method",
  "class": "org.apache.royale.html.beads.UnselectableElementBead",
  "description": "constructor."},
{ "name": "UnselectableElementBead",
  "type": "Class",
  "description": "UnselectableElement bead prevents from text selection of html element"},
{ "name": "UpdateCompleteEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.UpdateCompleteEvent",
  "description": "Constructor This event cannot be cancelled."},
{ "name": "UpdateCompleteEvent",
  "type": "Class",
  "description": "A TextFlow instance dispatches this event after any of its containers completes an update."},
{ "name": "UpdateListItemRendererForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": "Constructor"},
{ "name": "UpdateListItemRendererForArrayListData",
  "type": "Class",
  "description": "Handles the update of an itemRenderer in a List component once the corresponding datum has been updated from the IDataProviderModel."},
{ "name": "UpdateTableRowForArrayListData",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": "Constructor"},
{ "name": "UpdateTableRowForArrayListData",
  "type": "Class",
  "description": "Handles the update of an itemRenderer in a Table component once the corresponding datum has been updated from the IDataProviderModel."},
{ "name": "UpgradeChildren",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.UpgradeChildren",
  "description": ""},
{ "name": "UpgradeChildren",
  "type": "Class",
  "description": "UpgradeChildren bead will automatically register all the children for component in the case where you are creating DOM elements dynamically."},
{ "name": "UpgradeElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.UpgradeElement",
  "description": ""},
{ "name": "UpgradeElement",
  "type": "Class",
  "description": "UpgradeElement bead will automatically register in the case where you are creating DOM elements dynamically."},
{ "name": "UpperCase",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.UpperCase",
  "description": "constructor."},
{ "name": "UpperCase",
  "type": "Class",
  "description": "The UpperCase class is a specialty bead that can be used with any Jewel TextInputBase control."},
{ "name": "V",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the V key (86)."},
{ "name": "VALID",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineValidity",
  "description": ""},
{ "name": "VALID",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "VALID",
  "type": "Property",
  "class": "mx.events.ValidationResultEvent",
  "description": "The <code>ValidationResultEvent."},
{ "name": "VALUE_CHANGE",
  "type": "Property",
  "class": "org.apache.royale.events.ValueChangeEvent",
  "description": "The default event type."},
{ "name": "VALUE_COMMIT",
  "type": "Property",
  "class": "mx.events.FlexEvent",
  "description": "The <code>FlexEvent."},
{ "name": "VBox",
  "type": "Method",
  "class": "mx.containers.VBox",
  "description": "Constructor."},
{ "name": "VBox",
  "type": "Class",
  "description": "The Halo VBox container lays out its children in a single vertical column."},
{ "name": "VContainer",
  "type": "Method",
  "class": "org.apache.royale.html.VContainer",
  "description": "Constructor."},
{ "name": "VContainer",
  "type": "Class",
  "description": "A Container that has a VerticalLayout."},
{ "name": "VContainer",
  "type": "Method",
  "class": "org.apache.royale.express.VContainer",
  "description": ""},
{ "name": "VContainer",
  "type": "Class",
  "description": "This class extends Container and adds the VerticalLayout bead for convenience."},
{ "name": "VDividedBox",
  "type": "Method",
  "class": "mx.containers.VDividedBox",
  "description": "Constructor."},
{ "name": "VDividedBox",
  "type": "Class",
  "description": "The VDividedBox container lays out its children vertically in the same way as the VBox container, but it inserts a draggable divider in the gap between each child."},
{ "name": "VDividedContainer",
  "type": "Method",
  "class": "org.apache.royale.html.VDividedContainer",
  "description": "Constructor."},
{ "name": "VDividedContainer",
  "type": "Class",
  "description": "This sub-class of DividedContainer organizes its children into rows separated by movable dividers."},
{ "name": "VDividedContainerDivider",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.VDividedContainerDivider",
  "description": "Constructor."},
{ "name": "VDividedContainerDivider",
  "type": "Class",
  "description": "This sub-class of DividedContainerDivider sets up a horizontal divider between the rows of a VDividedContainer."},
{ "name": "VDividedContainerGripper",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.VDividedContainerGripper",
  "description": "Constructor."},
{ "name": "VDividedContainerGripper",
  "type": "Class",
  "description": "The VDividedContainerGripper bead adds a visual cue to the VDividedContainerDivider to indicate where to start dragging to change the size of the elements."},
{ "name": "VDividedContainerLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VDividedContainerLayout",
  "description": "Constructor."},
{ "name": "VDividedContainerLayout",
  "type": "Class",
  "description": "This sub-class of DividedContainerLayout class is responsible for sizing and positioning the children of the DividedContainer into rows with separators between them."},
{ "name": "VDividedContainerMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.VDividedContainerMouseController",
  "description": "Constructor."},
{ "name": "VDividedContainerMouseController",
  "type": "Class",
  "description": "This is the mouse controller for the VDividedContainer."},
{ "name": "VERIFIED_USER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VERIFIED_USER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VERSION_1_0",
  "type": "Property",
  "class": "org.apache.royale.textLayout.TextLayoutVersion",
  "description": "The version number value of TLF 1."},
{ "name": "VERSION_1_1",
  "type": "Property",
  "class": "org.apache.royale.textLayout.TextLayoutVersion",
  "description": "The version number value of TLF 1."},
{ "name": "VERSION_2_0",
  "type": "Property",
  "class": "org.apache.royale.textLayout.TextLayoutVersion",
  "description": "The version number value of TLF 2."},
{ "name": "VERSION_3_0",
  "type": "Property",
  "class": "org.apache.royale.textLayout.TextLayoutVersion",
  "description": "The version number value of TLF 3."},
{ "name": "VERSION_3_0",
  "type": "Property",
  "class": "mx.core.FlexVersion",
  "description": "The <code>compatibilityVersion</code> value of Flex 3."},
{ "name": "VERTICAL",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "The value of this constant is passed to methods such as <code>getNextItem()</code> and <code>getPrevItem()</code>."},
{ "name": "VERTICAL",
  "type": "Property",
  "class": "mx.containers.BoxDirection",
  "description": "Specifies that children of the Box container are laid out vertically."},
{ "name": "VERTICAL",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ScrollEventDirection",
  "description": "The user scrolled vertically."},
{ "name": "VERTICAL",
  "type": "Property",
  "class": "mx.core.ContainerLayout",
  "description": "Use vertical layout for the contents of this container."},
{ "name": "VERTICAL",
  "type": "Property",
  "class": "mx.containers.FormItemDirection",
  "description": "Specifies that the children of the FormItem container are laid out vertically."},
{ "name": "VERTICAL",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Specifies that the <code>majorAxis</code> is vertical."},
{ "name": "VERTICAL",
  "type": "Property",
  "class": "mx.containers.TileDirection",
  "description": "Specifies that the children of the Tile container are laid out vertically; that is, starting with the first column."},
{ "name": "VERTICAL_ALIGN_BOTTOM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VERTICAL_ALIGN_BOTTOM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VERTICAL_ALIGN_CENTER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VERTICAL_ALIGN_CENTER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VERTICAL_ALIGN_TOP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VERTICAL_ALIGN_TOP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VERTICAL_AXIS",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianTransform",
  "description": "A String representing the vertical axis."},
{ "name": "VERTICAL_BANNER",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "VERTICAL_GAP_STYLE",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": ""},
{ "name": "VGroup",
  "type": "Method",
  "class": "org.apache.royale.jewel.VGroup",
  "description": "Constructor."},
{ "name": "VGroup",
  "type": "Class",
  "description": "This Group subclass uses VerticalLayout as its default layout."},
{ "name": "VGroup",
  "type": "Method",
  "class": "org.apache.royale.html.VGroup",
  "description": "Constructor."},
{ "name": "VGroup",
  "type": "Class",
  "description": "This Group subclass uses VerticalLayout as its default layout."},
{ "name": "VGroup",
  "type": "Method",
  "class": "spark.components.VGroup",
  "description": "Constructor."},
{ "name": "VGroup",
  "type": "Class",
  "description": "The VGroup container is an instance of the Group container that uses the VerticalLayout class."},
{ "name": "VIBRATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIBRATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIDEOCAM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIDEOCAM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIDEOCAM_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIDEOCAM_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIDEOGAME_ASSET",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIDEOGAME_ASSET",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIDEO_CALL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIDEO_CALL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIDEO_LABEL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIDEO_LABEL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIDEO_LIBRARY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIDEO_LIBRARY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_AGENDA",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_AGENDA",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_ARRAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_ARRAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_CAROUSEL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_CAROUSEL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_COLUMN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_COLUMN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_COMFY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_COMFY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_COMPACT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_COMPACT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_DAY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_DAY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_HEADLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_HEADLINE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_LIST",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_LIST",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_MODULE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_MODULE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_QUILT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_QUILT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_STREAM",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_STREAM",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIEW_WEEK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIEW_WEEK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VIGNETTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VIGNETTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VISIBILITY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VISIBILITY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VISIBILITY_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VISIBILITY_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VOD",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the button for engaging video-on-demand."},
{ "name": "VOICEMAIL",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VOICEMAIL",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VOICE_CHAT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VOICE_CHAT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VOID",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "No sides."},
{ "name": "VOLUME_DOWN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VOLUME_DOWN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VOLUME_MUTE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VOLUME_MUTE",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VOLUME_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VOLUME_OFF",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VOLUME_UP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VOLUME_UP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VPN_KEY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VPN_KEY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VPN_LOCK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "VPN_LOCK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "VRule",
  "type": "Method",
  "class": "org.apache.royale.html.VRule",
  "description": "Constructor."},
{ "name": "VRule",
  "type": "Class",
  "description": "The VRule class displays a vertical line"},
{ "name": "VRule",
  "type": "Method",
  "class": "mx.controls.VRule",
  "description": "Constructor."},
{ "name": "VRule",
  "type": "Class",
  "description": "The VRule control creates a single vertical line."},
{ "name": "VSIDES",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TableFrame",
  "description": "The right and left sides only"},
{ "name": "VScrollBar",
  "type": "Method",
  "class": "mx.controls.VScrollBar",
  "description": "Constructor."},
{ "name": "VScrollBar",
  "type": "Class",
  "description": "The VScrollBar (vertical ScrollBar) control  lets you control the portion of data that is displayed when there is too much data to fit in a display area."},
{ "name": "VScrollViewport",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.VScrollViewport",
  "description": "Constructor"},
{ "name": "VScrollViewport",
  "type": "Class",
  "description": "The VScrollViewport extends the ScrollingViewport class and limts scrolling to only vertical scroll bars."},
{ "name": "VSlider",
  "type": "Method",
  "class": "org.apache.royale.express.VSlider",
  "description": ""},
{ "name": "VSlider",
  "type": "Class",
  "description": ""},
{ "name": "VSliderMouseController",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.VSliderMouseController",
  "description": "Constructor"},
{ "name": "VSliderMouseController",
  "type": "Class",
  "description": "The VSliderMouseController class bead handles mouse events on the org."},
{ "name": "VView",
  "type": "Method",
  "class": "org.apache.royale.express.VView",
  "description": ""},
{ "name": "VView",
  "type": "Class",
  "description": "This class extends View and adds the VerticalLayout bead for convenience."},
{ "name": "ValidationResult",
  "type": "Method",
  "class": "mx.validators.ValidationResult",
  "description": "Constructor"},
{ "name": "ValidationResult",
  "type": "Class",
  "description": "The ValidationResult class contains the results of a validation."},
{ "name": "ValidationResultEvent",
  "type": "Method",
  "class": "mx.events.ValidationResultEvent",
  "description": "Constructor."},
{ "name": "ValidationResultEvent",
  "type": "Class",
  "description": "The ValidationResultEvent class represents the event object passed to the listener for the <code>valid</code> validator event or the <code>invalid</code> validator event."},
{ "name": "Validator",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Constructor."},
{ "name": "Validator",
  "type": "Class",
  "description": "The Validator class is the base class for all Flex validators."},
{ "name": "Validator",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "constructor."},
{ "name": "Validator",
  "type": "Class",
  "description": "The Validator class is the base class for all validators."},
{ "name": "ValueChangeEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ValueChangeEvent",
  "description": "Constructor."},
{ "name": "ValueChangeEvent",
  "type": "Class",
  "description": "The ValueChangeEvent class replaces the PropertyChangeEvent as the default event for property changes used in the databinding subsystem."},
{ "name": "ValueEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ValueEvent",
  "description": "Constructor."},
{ "name": "ValueEvent",
  "type": "Class",
  "description": "The ValueEvent class is used for dispatching an event that has one useful value"},
{ "name": "ValueToggleButtonModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ValueToggleButtonModel",
  "description": "constructor."},
{ "name": "ValueToggleButtonModel",
  "type": "Class",
  "description": "The ValueToggleButtonModel class bead extends the org."},
{ "name": "ValuesManager",
  "type": "Method",
  "class": "org.apache.royale.core.ValuesManager",
  "description": "Constructor."},
{ "name": "ValuesManager",
  "type": "Class",
  "description": "The ValuesManager class is one of the few Singleton classes in Royale."},
{ "name": "VariableDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.VariableDefinition",
  "description": ""},
{ "name": "VariableDefinition",
  "type": "Class",
  "description": "The description of a Class or Interface variable"},
{ "name": "Vector",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "A light wrapper around a Vector constructor call that has an untyped return type (because the resulting type is unknown at compile time) This could be used to create and return a default Vector instance  no export (allow dead code elimination if never used):"},
{ "name": "VerticalAlign",
  "type": "Class",
  "description": "Defines values for the <code>verticalAlign</code> property of the TextLayoutFormat class."},
{ "name": "VerticalAlign",
  "type": "Class",
  "description": "The VerticalAlign class defines the possible values for the <code>verticalAlign</code> property of the HorizontalLayout class."},
{ "name": "VerticalAlignChildren",
  "type": "Method",
  "class": "org.apache.royale.html.beads.VerticalAlignChildren",
  "description": ""},
{ "name": "VerticalAlignChildren",
  "type": "Class",
  "description": "VerticalAlignChildren is a bead for groups and containers which specifiy the alignment property of the children."},
{ "name": "VerticalCategoryAxisBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.VerticalCategoryAxisBead",
  "description": "constructor."},
{ "name": "VerticalCategoryAxisBead",
  "type": "Class",
  "description": "The VerticalCategoryAxisBead displays a vertical axis with tick marks corresponding to data points identified by the categoryField property."},
{ "name": "VerticalCategoryAxisForArrayListBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.VerticalCategoryAxisForArrayListBead",
  "description": "constructor."},
{ "name": "VerticalCategoryAxisForArrayListBead",
  "type": "Class",
  "description": "The VerticalCategoryAxisForArrayListBead displays a vertical axis with tick marks corresponding to data points identified by the categoryField property."},
{ "name": "VerticalCenteredLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "Constructor."},
{ "name": "VerticalCenteredLayout",
  "type": "Class",
  "description": "The VerticalCenteredLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values."},
{ "name": "VerticalColumnLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalColumnLayout",
  "description": "constructor"},
{ "name": "VerticalColumnLayout",
  "type": "Class",
  "description": "ColumnLayout is a class that organizes the positioning of children of a container into a set of columns where each column's width is set to the maximum size of all of the children in that column."},
{ "name": "VerticalFlexLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalFlexLayout",
  "description": "Constructor."},
{ "name": "VerticalFlexLayout",
  "type": "Class",
  "description": ""},
{ "name": "VerticalFlowLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "Constructor."},
{ "name": "VerticalFlowLayout",
  "type": "Class",
  "description": "The VerticalFlowLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values."},
{ "name": "VerticalJustifier",
  "type": "Class",
  "description": "@private Adjust line positions according to verticalAlign settings."},
{ "name": "VerticalLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "Constructor."},
{ "name": "VerticalLayout",
  "type": "Class",
  "description": "The VerticalLayout class is a simple layout bead similar to VerticalLayout, but it adds support for padding and gap values."},
{ "name": "VerticalLayout",
  "type": "Method",
  "class": "spark.layouts.VerticalLayout",
  "description": "Constructor."},
{ "name": "VerticalLayout",
  "type": "Class",
  "description": "The VerticalLayout class arranges the layout elements in a vertical sequence, top to bottom, with optional gaps between the elements and optional padding around the sequence of elements."},
{ "name": "VerticalLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayout",
  "description": "Constructor."},
{ "name": "VerticalLayout",
  "type": "Class",
  "description": "The VerticalLayout class is a simple layout bead."},
{ "name": "VerticalLayoutWithPaddingAndGap",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayoutWithPaddingAndGap",
  "description": "Constructor."},
{ "name": "VerticalLayoutWithPaddingAndGap",
  "type": "Class",
  "description": "The VerticalLayoutWithPaddingAndGap class is a simple layout bead similar to VerticalLayout, but it adds support for padding and gap values."},
{ "name": "VerticalLinearAxisBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.VerticalLinearAxisBead",
  "description": ""},
{ "name": "VerticalLinearAxisBead",
  "type": "Class",
  "description": "The VerticalLinearAxisBead class provides a vertical axis that uses a numeric range."},
{ "name": "VerticalLinearAxisForArrayListBead",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.VerticalLinearAxisForArrayListBead",
  "description": ""},
{ "name": "VerticalLinearAxisForArrayListBead",
  "type": "Class",
  "description": "The VerticalLinearAxisBead class provides a vertical axis that uses a numeric range."},
{ "name": "VerticalSliderLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalSliderLayout",
  "description": "Constructor"},
{ "name": "VerticalSliderLayout",
  "type": "Class",
  "description": "Use the VerticalSliderLayout with a Slider to orient the slider vertically."},
{ "name": "View",
  "type": "Class",
  "description": ""},
{ "name": "View",
  "type": "Method",
  "class": "org.apache.royale.core.View",
  "description": ""},
{ "name": "View",
  "type": "Class",
  "description": "The View class is the class for most views in a Royale application."},
{ "name": "View",
  "type": "Method",
  "class": "org.apache.royale.express.View",
  "description": ""},
{ "name": "View",
  "type": "Class",
  "description": "This View extends the standard View and adds the ViewDataBinding bead for convenience."},
{ "name": "View",
  "type": "Method",
  "class": "org.apache.royale.jewel.View",
  "description": ""},
{ "name": "View",
  "type": "Class",
  "description": "The View class is the class for most views in a Royale application."},
{ "name": "ViewBase",
  "type": "Method",
  "class": "org.apache.royale.core.ViewBase",
  "description": "Constructor."},
{ "name": "ViewBase",
  "type": "Class",
  "description": "The ViewBase class is the base class for most views in a Royale application."},
{ "name": "ViewDataBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.ViewDataBinding",
  "description": "Constructor."},
{ "name": "ViewDataBinding",
  "type": "Class",
  "description": "The ViewDataBinding class implements databinding for View instances."},
{ "name": "ViewManagerBase",
  "type": "Method",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": "Constructor."},
{ "name": "ViewManagerBase",
  "type": "Class",
  "description": "Base class for mobile navigation controls."},
{ "name": "ViewManagerModel",
  "type": "Method",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "Constructor."},
{ "name": "ViewManagerModel",
  "type": "Class",
  "description": "The ViewManagerModel houses properties and values common to the components which make up view managers."},
{ "name": "ViewManagerViewBase",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.ViewManagerViewBase",
  "description": "Constructor."},
{ "name": "ViewManagerViewBase",
  "type": "Class",
  "description": "The ViewManagerViewBase creates the visual elements of the StackedViewManager."},
{ "name": "ViewSourceContextMenuOption",
  "type": "Method",
  "class": "org.apache.royale.utils.ViewSourceContextMenuOption",
  "description": "Constructor."},
{ "name": "ViewSourceContextMenuOption",
  "type": "Class",
  "description": "The ViewSourceContextMenuOption class is a class that implements the \"View Source\" option in Flash for a Royale application."},
{ "name": "ViewStack",
  "type": "Method",
  "class": "mx.containers.ViewStack",
  "description": "Constructor."},
{ "name": "ViewStack",
  "type": "Class",
  "description": "An MX ViewStack navigator container consists of a collection of child containers stacked on top of each other, where only one child at a time is visible."},
{ "name": "ViewStackLayout",
  "type": "Method",
  "class": "mx.containers.beads.ViewStackLayout",
  "description": "Constructor."},
{ "name": "ViewStackLayout",
  "type": "Class",
  "description": "The ViewStackLayout class is for internal use only."},
{ "name": "Viewport",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": "Constructor"},
{ "name": "Viewport",
  "type": "Class",
  "description": "A Viewport is the area of a Container set aside for displaying content."},
{ "name": "Viewport",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.Viewport",
  "description": "Constructor"},
{ "name": "Viewport",
  "type": "Class",
  "description": "A Viewport is the area of a Container set aside for displaying content."},
{ "name": "ViewportModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.ViewportModel",
  "description": ""},
{ "name": "ViewportModel",
  "type": "Class",
  "description": ""},
{ "name": "VirtualDataContainerView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.VirtualDataContainerView",
  "description": ""},
{ "name": "VirtualDataContainerView",
  "type": "Class",
  "description": "The DataContainerView provides the visual elements for the DataContainer."},
{ "name": "VirtualDataItemRendererFactoryForArrayData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": "Constructor."},
{ "name": "VirtualDataItemRendererFactoryForArrayData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForArrayData class reads an array of data and creates an item renderer for every item in the array."},
{ "name": "VirtualDataItemRendererFactoryForICollectionViewData",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForICollectionViewData",
  "description": "Constructor."},
{ "name": "VirtualDataItemRendererFactoryForICollectionViewData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForHierarchicalData class reads a HierarchicalData object and creates an item renderer for every item in the array."},
{ "name": "VirtualDataItemRendererFactoryForIListData",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForIListData",
  "description": "Constructor."},
{ "name": "VirtualDataItemRendererFactoryForIListData",
  "type": "Class",
  "description": "The DataItemRendererFactoryForHierarchicalData class reads a HierarchicalData object and creates an item renderer for every item in the array."},
{ "name": "VirtualListVerticalLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VirtualListVerticalLayout",
  "description": "Constructor."},
{ "name": "VirtualListVerticalLayout",
  "type": "Class",
  "description": "The VerticalLayout class is a simple layout bead."},
{ "name": "VirtualListVerticalLayout",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualListVerticalLayout",
  "description": "Constructor."},
{ "name": "VirtualListVerticalLayout",
  "type": "Class",
  "description": "The VerticalLayout class is a simple layout bead."},
{ "name": "VirtualListView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.VirtualListView",
  "description": ""},
{ "name": "VirtualListView",
  "type": "Class",
  "description": "The List class creates the visual elements of the org."},
{ "name": "W",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the W key (87)."},
{ "name": "WALKING",
  "type": "Property",
  "class": "google.maps.TravelMode",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "WALLPAPER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WALLPAPER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WARN",
  "type": "Property",
  "class": "mx.logging.LogEventLevel",
  "description": "Designates events that could be harmful to the application operation."},
{ "name": "WARNING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WARNING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WATCH",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WATCH",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WATCH_LATER",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WATCH_LATER",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WB_AUTO",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WB_AUTO",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WB_CLOUDY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WB_CLOUDY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WB_INCANDESCENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WB_INCANDESCENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WB_IRIDESCENT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WB_IRIDESCENT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WB_SUNNY",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WB_SUNNY",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WC",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WC",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WEB",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WEB",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WEB_ASSET",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WEB_ASSET",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WEEKEND",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WEEKEND",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WHATSHOT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WHATSHOT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WHEEL",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "WHITE",
  "type": "Property",
  "class": "google.maps.weather.LabelColor",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "WHITE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "WIDESCREEN",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": ""},
{ "name": "WIDESCREEN",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": ""},
{ "name": "WIDESCREEN_BREAKPOINT",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": ""},
{ "name": "WIDE_SKYSCRAPER",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "WIDGETS",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WIDGETS",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WIFI",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WIFI",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WIFI_LOCK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WIFI_LOCK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WIFI_TETHERING",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WIFI_TETHERING",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WIN_OS",
  "type": "Property",
  "class": "org.apache.royale.utils.OSUtils",
  "description": ""},
{ "name": "WITH_DEFAULT_INITIALIZERS",
  "type": "Property",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "WORK",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WORK",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WORK_OFF",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WORK_OUTLINE",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WRAP_TEXT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "WRAP_TEXT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "WatcherBase",
  "type": "Method",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "Constructor."},
{ "name": "WatcherBase",
  "type": "Class",
  "description": "The WatcherBase class is the base class for data-binding classes that watch various properties and styles for changes."},
{ "name": "WeatherConditions",
  "type": "Method",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "WeatherFeature",
  "type": "Method",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "WeatherForecast",
  "type": "Method",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "WeatherLayerOptions",
  "type": "Method",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "WeatherMouseEvent",
  "type": "Method",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "WebBrowser",
  "type": "Method",
  "class": "org.apache.royale.html.WebBrowser",
  "description": "Constructor"},
{ "name": "WebBrowser",
  "type": "Class",
  "description": ""},
{ "name": "WebBrowserModel",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.WebBrowserModel",
  "description": "constructor."},
{ "name": "WebBrowserModel",
  "type": "Class",
  "description": "The WebBrowserModel class bead defines the data associated with an org."},
{ "name": "WebBrowserView",
  "type": "Method",
  "class": "org.apache.royale.html.beads.WebBrowserView",
  "description": "Constructor"},
{ "name": "WebBrowserView",
  "type": "Class",
  "description": ""},
{ "name": "WebService",
  "type": "Method",
  "class": "mx.rpc.soap.WebService",
  "description": "Creates a new WebService."},
{ "name": "WebService",
  "type": "Class",
  "description": "The WebService class provides access to SOAP-based web services on remote servers."},
{ "name": "WebStorageProvider",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.WebStorageProvider",
  "description": "Constructor."},
{ "name": "WebStorageProvider",
  "type": "Class",
  "description": "The WebStorageProvider class implements the IPermanentStorageProvider interface for saving files to a mobile device."},
{ "name": "WedgeItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "constructor."},
{ "name": "WedgeItemRenderer",
  "type": "Class",
  "description": "The WedgeItemRenderer draws a single slide of a PieSeries."},
{ "name": "WedgeItemRenderer",
  "type": "Method",
  "class": "mx.charts.renderers.WedgeItemRenderer",
  "description": "Constructor."},
{ "name": "WedgeItemRenderer",
  "type": "Class",
  "description": "The default itemRenderer for a PieSeries object."},
{ "name": "WeightedLocation",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "Weinre",
  "type": "Method",
  "class": "org.apache.royale.cordova.Weinre",
  "description": ""},
{ "name": "Weinre",
  "type": "Class",
  "description": "A class that helps set up to use Weinre for debugging"},
{ "name": "WhiteSpaceCollapse",
  "type": "Class",
  "description": "Defines values for setting the <code>whiteSpaceCollapse</code> property of the <code>TextLayoutFormat</code> class."},
{ "name": "WhitespaceKeys",
  "type": "Class",
  "description": "This class holds constants for special keys See: https://w3c."},
{ "name": "WindSpeedUnit",
  "type": "Class",
  "description": ""},
{ "name": "WindSpeedUnit",
  "type": "Property",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "Wipe",
  "type": "Method",
  "class": "org.apache.royale.effects.Wipe",
  "description": "Constructor."},
{ "name": "Wipe",
  "type": "Class",
  "description": "The Fade effect animates a UI component's alpha or opacity."},
{ "name": "WipeDown",
  "type": "Method",
  "class": "mx.effects.WipeDown",
  "description": "Constructor."},
{ "name": "WipeDown",
  "type": "Class",
  "description": "The WipeDown class defines a wipe down effect."},
{ "name": "WipeLeft",
  "type": "Method",
  "class": "mx.effects.WipeLeft",
  "description": "Constructor."},
{ "name": "WipeLeft",
  "type": "Class",
  "description": "The WipeLeft class defines a wipe left effect."},
{ "name": "WipeRight",
  "type": "Method",
  "class": "mx.effects.WipeRight",
  "description": "Constructor."},
{ "name": "WipeRight",
  "type": "Class",
  "description": "The WipeRight class defines a wipe right effect."},
{ "name": "WipeUp",
  "type": "Method",
  "class": "mx.effects.WipeUp",
  "description": "Constructor."},
{ "name": "WipeUp",
  "type": "Class",
  "description": "The WipeUp class defines a wipe up effect."},
{ "name": "Wizard",
  "type": "Method",
  "class": "org.apache.royale.jewel.Wizard",
  "description": "constructor."},
{ "name": "Wizard",
  "type": "Class",
  "description": ""},
{ "name": "WizardContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardContent",
  "description": "constructor."},
{ "name": "WizardContent",
  "type": "Class",
  "description": "The WizardContent class is a Container component capable of parenting the other organized content that implements ISelectableContent interface (i."},
{ "name": "WizardController",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.WizardController",
  "description": "Constructor."},
{ "name": "WizardController",
  "type": "Class",
  "description": "The WizardController class is the controller for org."},
{ "name": "WizardEvent",
  "type": "Method",
  "class": "org.apache.royale.jewel.events.WizardEvent",
  "description": ""},
{ "name": "WizardEvent",
  "type": "Class",
  "description": "Programmatic (not user/UI) based wizard navigation events."},
{ "name": "WizardLayoutProxy",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "Constructor."},
{ "name": "WizardLayoutProxy",
  "type": "Class",
  "description": "The WizardLayoutProxy class is used by Wizard in order for layouts to operate on the Wizard itself."},
{ "name": "WizardModel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": "constructor."},
{ "name": "WizardModel",
  "type": "Class",
  "description": "The WizardModel bead class holds the values for a org."},
{ "name": "WizardPage",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "constructor."},
{ "name": "WizardPage",
  "type": "Class",
  "description": "WizardPage is the main class for a page inside the WizardContent"},
{ "name": "WizardStep",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "constructor."},
{ "name": "WizardStep",
  "type": "Class",
  "description": "The WizardModel bead class holds the values for a org."},
{ "name": "WizardView",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": "constructor."},
{ "name": "WizardView",
  "type": "Class",
  "description": "The Wizard class creates the visual elements of the org."},
{ "name": "WrappedHTMLElement",
  "type": "Class",
  "description": "A compile-time class to resolve the royale_wrapper reference added to HTMLElements."},
{ "name": "X",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the X key (88)."},
{ "name": "XLARGE",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.SizeControl",
  "description": ""},
{ "name": "XML",
  "type": "Property",
  "class": "mx.collections.SortFieldCompareTypes",
  "description": "Represents the xmlCompare inside a SortField."},
{ "name": "XML",
  "type": "Property",
  "class": "org.apache.royale.collections.SortFieldCompareTypes",
  "description": "Represents the xmlCompare inside a SortField."},
{ "name": "XMLListAdapter",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Construct a new XMLListAdapter using the specified XMLList as its source."},
{ "name": "XMLListAdapter",
  "type": "Class",
  "description": "A simple implementation of IList that uses a backing XMLList."},
{ "name": "XMLListCollection",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Constructor."},
{ "name": "XMLListCollection",
  "type": "Class",
  "description": "The XMLListCollection class provides collection functionality to an XMLList object and makes available some of the methods of the native XMLList class."},
{ "name": "XMLNotifier",
  "type": "Method",
  "class": "mx.utils.XMLNotifier",
  "description": "Constructor."},
{ "name": "XMLNotifier",
  "type": "Class",
  "description": "Used for watching changes to XML and XMLList objects."},
{ "name": "XML_TYPE",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ConversionType",
  "description": "Export as type XML."},
{ "name": "XSMALL",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.SizeControl",
  "description": ""},
{ "name": "X_LARGE_VERTICAL_LINK_UNIT",
  "type": "Property",
  "class": "google.maps.adsense.AdFormat",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "Y",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Y key (89)."},
{ "name": "YELLOW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ColorName",
  "description": ""},
{ "name": "YELLOW",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the yellow function key button."},
{ "name": "YES",
  "type": "Property",
  "class": "org.apache.royale.html.Alert",
  "description": "The bitmask button flag to show the YES button."},
{ "name": "YES",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": "Value that enables a Yes button on the Alert control when passed as the <code>flags</code> parameter of the <code>show()</code> method."},
{ "name": "YES",
  "type": "Property",
  "class": "org.apache.royale.jewel.Alert",
  "description": "The bitmask button flag to show the YES button."},
{ "name": "YOUTUBE_SEARCHED_FOR",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "YOUTUBE_SEARCHED_FOR",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "Z",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": "[static] Constant associated with the key code value for the Z key (90)."},
{ "name": "ZERO_RESULTS",
  "type": "Property",
  "class": "google.maps.DistanceMatrixElementStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ZERO_RESULTS",
  "type": "Property",
  "class": "google.maps.StreetViewStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ZERO_RESULTS",
  "type": "Property",
  "class": "google.maps.DirectionsStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ZERO_RESULTS",
  "type": "Property",
  "class": "google.maps.places.PlacesServiceStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ZERO_RESULTS",
  "type": "Property",
  "class": "google.maps.GeocoderStatus",
  "description": "Generated doc for missing field JSDoc."},
{ "name": "ZOMM_IN",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ZOMM_IN",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ZOOM_IN",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The ZoomIn key."},
{ "name": "ZOOM_OUT",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ZOOM_OUT",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ZOOM_OUT",
  "type": "Property",
  "class": "org.apache.royale.events.utils.UIKeys",
  "description": "The ZoomOut key."},
{ "name": "ZOOM_OUT_MAP",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "ZOOM_OUT_MAP",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "ZoomControlStyle",
  "type": "Class",
  "description": ""},
{ "name": "_3D_ROTATION",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "_3D_ROTATION",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "_accumulatedMinimumStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Minimum starting coord for parcel bounds"},
{ "name": "_alignBottom",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_alignMiddle",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_alignTop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_ascending",
  "type": "Property",
  "class": "org.apache.royale.mdl.TableColumn",
  "description": ""},
{ "name": "_ascent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": ""},
{ "name": "_atColumnStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Are we at the top of the column?"},
{ "name": "_auto",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.drawer.ResponsiveDrawer",
  "description": ""},
{ "name": "_availableChannelIds",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "_beads",
  "type": "Property",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "_blockElementDict",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "_blockProgression",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "BlockProgression - vertical horizontal etc."},
{ "name": "_column",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.GridCellBehaviour",
  "description": ""},
{ "name": "_column",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_columnDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.GridCellBehaviour",
  "description": ""},
{ "name": "_columnDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_columnPhone",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_columnTablet",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_computedMatrix3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": ""},
{ "name": "_config",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.PlainTextImporter",
  "description": ""},
{ "name": "_contentCommittedExtent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Commited extent any lines needing additional alignment must update this number"},
{ "name": "_contentCommittedHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Committed logical height from floats"},
{ "name": "_contentLogicalExtent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Maximum horizontal extension from left/right edge of the parcel."},
{ "name": "_controllerVisibleBoundsHeightTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_controllerVisibleBoundsWidthTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_controllerVisibleBoundsXTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Visible area of the current controller."},
{ "name": "_controllerVisibleBoundsYTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_curElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Element of current location"},
{ "name": "_curElementOffset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Offset from element start to current location"},
{ "name": "_curElementStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Absolute start position of _curElement"},
{ "name": "_curInteractiveObjects",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "For interactive objects"},
{ "name": "_curLine",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_curLineIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": "Index of current line"},
{ "name": "_curLineStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Absolute start position of the current line"},
{ "name": "_curParaElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "ParagraphElement that contains the current location"},
{ "name": "_curParaFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_curParaStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Absolute start position of _curParaElement"},
{ "name": "_curParcel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Parcel we are composing - used for keeping track of when it changes b/c parcelList."},
{ "name": "_curParcelStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Start position of _curParcel"},
{ "name": "_currentParcel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "_currentParcelIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": "Index of the \"current\" parcel."},
{ "name": "_dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "_dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": ""},
{ "name": "_dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "_dataView",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "_decrement",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SpinnerView",
  "description": ""},
{ "name": "_decrement",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SpinnerView",
  "description": ""},
{ "name": "_descending",
  "type": "Property",
  "class": "org.apache.royale.mdl.TableColumn",
  "description": ""},
{ "name": "_descent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": ""},
{ "name": "_dropDown",
  "type": "Property",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": ""},
{ "name": "_dropDown",
  "type": "Property",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": ""},
{ "name": "_element",
  "type": "Property",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": "An optimization to skip the getter of the element property"},
{ "name": "_elementErrorStrings",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": ""},
{ "name": "_explicitHeight",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "_explicitLineBreaks",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "_explicitWidth",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "_fixed",
  "type": "Property",
  "class": "org.apache.royale.jewel.Drawer",
  "description": ""},
{ "name": "_fixed",
  "type": "Property",
  "class": "org.apache.royale.jewel.TopAppBar",
  "description": ""},
{ "name": "_fixed",
  "type": "Property",
  "class": "org.apache.royale.jewel.FooterBar",
  "description": "If not fixed this scroll handler manages that the top bar doesn't get lost above and will get back to screen sooner since only get scroll up by its size"},
{ "name": "_fixedDrawer",
  "type": "Property",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": ""},
{ "name": "_fixedHeader",
  "type": "Property",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": ""},
{ "name": "_floatSlug",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_flowComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "flowComposer of current compose"},
{ "name": "_flowComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "_forceILGs",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_fullWidth",
  "type": "Property",
  "class": "org.apache.royale.mdl.DialogActions",
  "description": ""},
{ "name": "_gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": ""},
{ "name": "_gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": ""},
{ "name": "_gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": ""},
{ "name": "_gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": ""},
{ "name": "_gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": ""},
{ "name": "_gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": ""},
{ "name": "_getter",
  "type": "Property",
  "class": "org.apache.royale.reflection.VariableDefinition",
  "description": ""},
{ "name": "_handlers",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": ""},
{ "name": "_hasContent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": "whether the current parcel has any content"},
{ "name": "_hideDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_hidePhone",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_hideTablet",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_image",
  "type": "Property",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "_imageHeight",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactImageChip",
  "description": ""},
{ "name": "_imageWidth",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactImageChip",
  "description": ""},
{ "name": "_increment",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SpinnerView",
  "description": ""},
{ "name": "_increment",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SpinnerView",
  "description": ""},
{ "name": "_indicatorParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ButtonBarReorderBead",
  "description": ""},
{ "name": "_indicatorParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDropTargetBead",
  "description": ""},
{ "name": "_indicatorParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SensitiveSingleSelectionDropTargetBead",
  "description": ""},
{ "name": "_insideListItemMargin",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "_int",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "int()"},
{ "name": "_invalidElements",
  "type": "Property",
  "class": "spark.components.Form",
  "description": ""},
{ "name": "_keepLastResult",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "_keepcode",
  "type": "Method",
  "class": "mx.modules.Module",
  "description": ""},
{ "name": "_keyStr",
  "type": "Property",
  "class": "org.apache.royale.utils.string.Base64",
  "description": ""},
{ "name": "_kind",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": ""},
{ "name": "_labelDisplay",
  "type": "Property",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": ""},
{ "name": "_lastGoodStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_lastLineDescent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "effective descent of the last line."},
{ "name": "_lastLineLeading",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "leading factor calculated for the line composed last."},
{ "name": "_lastLineLeadingModel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "leading model for the last line's para"},
{ "name": "_layout",
  "type": "Property",
  "class": "org.apache.royale.jewel.Container",
  "description": ""},
{ "name": "_layout",
  "type": "Property",
  "class": "org.apache.royale.jewel.Group",
  "description": ""},
{ "name": "_leftMargin",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "_len",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "_lineDict",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "_lineOffset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": ""},
{ "name": "_linePass",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_lineSlug",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_listItemElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_loader",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisableLoaderBead",
  "description": ""},
{ "name": "_log",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": ""},
{ "name": "_measuring",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Are we measuring"},
{ "name": "_message",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Failure",
  "description": ""},
{ "name": "_mini",
  "type": "Property",
  "class": "org.apache.royale.mdl.Footer",
  "description": ""},
{ "name": "_model",
  "type": "Property",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": "allow access from overrides"},
{ "name": "_model",
  "type": "Property",
  "class": "org.apache.royale.core.UIHTMLElementWrapper",
  "description": "allow access from overrides"},
{ "name": "_model",
  "type": "Property",
  "class": "org.apache.royale.core.ImageViewBase",
  "description": ""},
{ "name": "_mouseWheelListenerAttached",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "_name",
  "type": "Property",
  "class": "org.apache.royale.reflection.DefinitionBase",
  "description": ""},
{ "name": "_nospacing",
  "type": "Property",
  "class": "org.apache.royale.mdl.Grid",
  "description": ""},
{ "name": "_numParcels",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "_numericStyles",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSValuesImpl",
  "description": "The styles that can use raw numbers"},
{ "name": "_offset",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_offsetDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_offsetPhone",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_offsetTablet",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_order",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_orderDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_orderPhone",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_orderTablet",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_packageName",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": ""},
{ "name": "_paragraphContainsVisibleLines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_paragraphSpaceCarried",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Amount of spaceAfter added to the previous line (used in calculating effective paragraphSpaceBefore/paragraphSpaceAfter"},
{ "name": "_parcelArray",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": "The list of parcels that are available for text layout."},
{ "name": "_parcelBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Maximum bottom edge coordinate across all the parcels in a controller"},
{ "name": "_parcelLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Minimum left edge coordinate across all the parcels in a controller"},
{ "name": "_parcelList",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_parcelLogicalTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Minimum starting coord for parcel bounds"},
{ "name": "_parcelRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Maximum right edge coordinate across all the parcels in a controller"},
{ "name": "_parcelTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Minimum top edge across all the parcels in a controller"},
{ "name": "_port",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": ""},
{ "name": "_position",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "_previousLine",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_pushInFloats",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_rawData",
  "type": "Property",
  "class": "org.apache.royale.reflection.DefinitionBase",
  "description": ""},
{ "name": "_ready",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": ""},
{ "name": "_rectArray",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "_rightMargin",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "_ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.MenuItemRenderer",
  "description": ""},
{ "name": "_ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "_ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": ""},
{ "name": "_ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.Menu",
  "description": ""},
{ "name": "_ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": ""},
{ "name": "_ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.TabBar",
  "description": ""},
{ "name": "_rootElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "rootElement of current compose"},
{ "name": "_savedLineSlug",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_scrollable",
  "type": "Property",
  "class": "org.apache.royale.mdl.Header",
  "description": ""},
{ "name": "_selectable",
  "type": "Property",
  "class": "org.apache.royale.mdl.Table",
  "description": ""},
{ "name": "_separator",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.SimpleDateFormatter",
  "description": ""},
{ "name": "_server",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": ""},
{ "name": "_service",
  "type": "Property",
  "class": "mx.rpc.AbstractOperation",
  "description": ""},
{ "name": "_setter",
  "type": "Property",
  "class": "org.apache.royale.reflection.VariableDefinition",
  "description": ""},
{ "name": "_shadow",
  "type": "Property",
  "class": "org.apache.royale.mdl.Card",
  "description": ""},
{ "name": "_shadow",
  "type": "Property",
  "class": "org.apache.royale.mdl.Table",
  "description": ""},
{ "name": "_shouldBeSubscribed",
  "type": "Property",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Flag indicating whether this consumer should be subscribed or not."},
{ "name": "_singleParcel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "_socket",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": ""},
{ "name": "_stackTrace",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Failure",
  "description": ""},
{ "name": "_startComposePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Beginning composition position."},
{ "name": "_startController",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "First damaged controller to begin composing"},
{ "name": "_status",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "_stopComposePos",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "position to stop composing at"},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisableLoaderBead",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.core.BeadViewBase",
  "description": "The strand."},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.core.FormatBase",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.PasswordInputBead",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ApplicationParametersBead",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalDisplay",
  "description": "The strand."},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.routing.URLParameterBead",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ToggleButtonModel",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.CollectionChangeUpdateForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModel",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.MaxNumberCharacters",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.PasswordInput",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ApplicationParametersCaseInsensitiveBead",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AbsolutePositioningViewBeadBase",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalOverlay",
  "description": "The strand."},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.CollectionChangeUpdateForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.InfiniteVScroller",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.OverflowViewport",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Disabled",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionContainerBead",
  "description": ""},
{ "name": "_strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "_strech",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "_subManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "_superManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "_swfVersion",
  "type": "Property",
  "class": "mx.messaging.config.LoaderConfig",
  "description": ""},
{ "name": "_tcm",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TCMFactoryComposer",
  "description": ""},
{ "name": "_text",
  "type": "Property",
  "class": "spark.components.supportClasses.TextBase",
  "description": ""},
{ "name": "_text",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIcon",
  "description": ""},
{ "name": "_textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.mementos.BaseMemento",
  "description": ""},
{ "name": "_textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "owning textFlow of current compose"},
{ "name": "_textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "_textIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Current textIndent amount, 0 if line is not the first"},
{ "name": "_toString",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectUtil",
  "description": "Convert the object to a string of form: PROP: VAL&PROP: VAL where: PROP is a property VAL is its corresponding value & is the specified optional delimiter This method is named with underscore \"_\" since toString is in use"},
{ "name": "_totalDepth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": "Current vertical position in the parcel."},
{ "name": "_transparent",
  "type": "Property",
  "class": "org.apache.royale.mdl.Header",
  "description": ""},
{ "name": "_typedArray",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "_url",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ImageModel",
  "description": ""},
{ "name": "_url",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ImageModel",
  "description": ""},
{ "name": "_useExistingLine",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": ""},
{ "name": "_utf8_decode",
  "type": "Method",
  "class": "org.apache.royale.utils.string.Base64",
  "description": "decode utf8 string"},
{ "name": "_utf8_encode",
  "type": "Method",
  "class": "org.apache.royale.utils.string.Base64",
  "description": "encode utf8 string"},
{ "name": "_verticalSpaceCarried",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Amount of vertical space added to the previous element (used in calculating vertical space collapse) *"},
{ "name": "_verticalText",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": "True if text is vertical (as for some Japanese & Chinese, false otherwise"},
{ "name": "_waterfall",
  "type": "Property",
  "class": "org.apache.royale.mdl.Header",
  "description": ""},
{ "name": "_workingContentExtent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_workingContentHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_workingContentLogicalExtent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Maximum horizontal extension for the current line from left/right edge of the parcel."},
{ "name": "_workingParcelIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "_workingParcelLogicalTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "logical top of the parcel, for the line in progress"},
{ "name": "_workingTotalDepth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "a",
  "type": "Property",
  "class": "org.apache.royale.geom.Matrix",
  "description": ""},
{ "name": "absoluteEnd",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The text position of the end of the selection, as an offset from the start of the text flow."},
{ "name": "absoluteEnd",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowTextOperation",
  "description": "The absolute end point of the range of text to which this operation is applied."},
{ "name": "absoluteEnd",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextRange",
  "description": "End of the selection, as an absolute position in the TextFlow."},
{ "name": "absoluteEnd",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "absoluteEnd",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The absolute text position of the IFlowLeafElement object that contains the end of the range."},
{ "name": "absolutePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The text position of the start of the selection, as an offset from the start of the text flow."},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowTextOperation",
  "description": "The absolute start point of the range of text to which this operation is applied."},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The location of the line as an absolute character position in the TextFlow object."},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the first character in the container."},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextRange",
  "description": "Start of the selection, as an absolute position in the TextFlow."},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "absoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The absolute text position of the IFlowLeafElement object that contains the start of the range."},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns true if the class is an abstract base class, false if its OK to construct."},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ListItemElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SpanElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableBodyElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.DivElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ListElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BreakElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TCYElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TabElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColGroupElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElement",
  "description": "@private"},
{ "name": "abstract",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "@private"},
{ "name": "accent",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A boolean flag to activate \"mdl-button--accent\" effect selector."},
{ "name": "accept",
  "type": "Event",
  "description": "The accept event is dispatched when the drop happens but just before the data being dragged as been incorporated into the drop target's data source."},
{ "name": "acceptDragDrop",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.DropMouseController",
  "description": ""},
{ "name": "acceptDragDrop",
  "type": "Method",
  "class": "mx.managers.DragManager",
  "description": "Call this method from your <code>dragEnter</code> event handler if you accept the drag/drop data."},
{ "name": "acceptTextAfter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase",
  "description": ""},
{ "name": "acceptTextBefore",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase",
  "description": ""},
{ "name": "acceptedDrop",
  "type": "Method",
  "class": "org.apache.royale.core.IDragInitiator",
  "description": "This method is called to notify the dragInitiator that you have accepted the drop."},
{ "name": "acceptedDrop",
  "type": "Method",
  "class": "org.apache.royale.core.MXMLDragInitiator",
  "description": "Handles the acceptedDrop API"},
{ "name": "acceptedDrop",
  "type": "Event",
  "description": "Indicates that acceptedDrop API has been called."},
{ "name": "acceptedDrop",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionDragSourceBead",
  "description": "Handles post-drop actions."},
{ "name": "acceptingDrop",
  "type": "Method",
  "class": "org.apache.royale.core.IDragInitiator",
  "description": "This method is called to notify the dragInitiator that you want to accept a drop."},
{ "name": "acceptingDrop",
  "type": "Method",
  "class": "org.apache.royale.core.MXMLDragInitiator",
  "description": "Handles the acceptingDrop API"},
{ "name": "acceptingDrop",
  "type": "Event",
  "description": "Indicates that acceptingDrop API has been called."},
{ "name": "acceptingDrop",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionDragSourceBead",
  "description": "Handles pre-drop actions."},
{ "name": "access",
  "type": "Property",
  "class": "org.apache.royale.reflection.AccessorDefinition",
  "description": "The type of access that this accessor has."},
{ "name": "accessibilityEnabled",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "accessors",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The instance accessors associated with a \"class\" kind TypeDefinition An array of AccessorDefinition instances"},
{ "name": "accordionCollapseBead",
  "type": "Property",
  "class": "org.apache.royale.html.Accordion",
  "description": ""},
{ "name": "accumulatedLineExtent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "accumulatedLineExtent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "accumulatedMinimumStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "accumulatedMinimumStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "accurate",
  "type": "Property",
  "class": "mx.charts.chartClasses.AxisLabelSet",
  "description": "When returned from the <code>getLabelEstimate()</code> method, set to <code>true</code> if the estimate accurately represents the final labels to be rendered."},
{ "name": "acknowledge",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Invoked by a MessageResponder upon receiving a result for a sent message."},
{ "name": "acknowledge",
  "type": "Event",
  "description": "Dispatched when an acknowledge message is received for a sent message."},
{ "name": "acknowledgeMessage",
  "type": "Property",
  "class": "mx.messaging.events.MessageAckEvent",
  "description": "Utility property to get the message property from the MessageEvent as an AcknowledgeMessage."},
{ "name": "action",
  "type": "Property",
  "class": "org.apache.royale.html.Form",
  "description": "The action to be performed when the form is submitted"},
{ "name": "action",
  "type": "Event",
  "description": ""},
{ "name": "action",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SnackbarModel",
  "description": "Set action to be displayed."},
{ "name": "action",
  "type": "Property",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": "The action to display on the Snackbar."},
{ "name": "action",
  "type": "Event",
  "description": ""},
{ "name": "action",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The requested action."},
{ "name": "actionElement",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SnackbarView",
  "description": "The action element that parents the action"},
{ "name": "actionText",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.ISnackbarModel",
  "description": "Text on action button"},
{ "name": "actionText",
  "type": "Property",
  "class": "org.apache.royale.mdl.Snackbar",
  "description": "Text which appears on action button"},
{ "name": "actionText",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SnackbarModel",
  "description": ""},
{ "name": "activate",
  "type": "Method",
  "class": "mx.managers.IActiveWindowManager",
  "description": "Activates the FocusManager in an IFocusManagerContainer."},
{ "name": "activateEffect",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": "turn on/off the transition effects"},
{ "name": "activateEffect",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": "turn on/off the transition effects"},
{ "name": "activateHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes an activate event."},
{ "name": "activateHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "activateHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>Event."},
{ "name": "activateHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "activeCellPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Active end of the current cell selection, as coordinates within the table."},
{ "name": "activeCellPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Active end of the current cell selection, as coordinates within the table."},
{ "name": "activeCoordinates",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellRange",
  "description": "Active end of the current selection, as a CellCoordinates in the TableElement."},
{ "name": "activePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The active point of the selection."},
{ "name": "activePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextRange",
  "description": "Active position of the selection, as an absolute position in the TextFlow."},
{ "name": "activePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "activeTweens",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "The list of tweens that are currently playing."},
{ "name": "actualChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayoutForOverflow",
  "description": ""},
{ "name": "actualChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayout",
  "description": ""},
{ "name": "actualChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayout",
  "description": ""},
{ "name": "actualChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayoutForOverflow",
  "description": ""},
{ "name": "actualCreationPolicy",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The creation policy of this container."},
{ "name": "actualHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "The actual height in effect."},
{ "name": "actualListeners",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "Contains an Array of listener objects, if any, or the source object."},
{ "name": "actualTrigger",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "Contains the trigger object, if any, or the source object."},
{ "name": "actualWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "The actual width in effect."},
{ "name": "actuallyLoadModule",
  "type": "Method",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": ""},
{ "name": "adaptContentArea",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ScrollingViewport",
  "description": "If the contentArea is not the same as the strand, we need to size it to 100% for scrolling to work correctly."},
{ "name": "add",
  "type": "Method",
  "class": "org.apache.royale.core.CSSClassList",
  "description": "Adds a className to the list of classes."},
{ "name": "add",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "add",
  "type": "Method",
  "class": "org.apache.royale.utils.ClassSelectorList",
  "description": "Add a class selector to the list."},
{ "name": "addAll",
  "type": "Method",
  "class": "org.apache.royale.reflection.ExtraData",
  "description": "this method itself is non-reflectable If an application requires reflection of default Native types and Royale synthetic types in javascript call this method near application startup, before reflection is used in any code  Use this to add corresponding reflection support for native js definitions that are used to correspond to common native as3 types (non-PAYG) If this method is never used, the dependencies inside it will not be included in release build"},
{ "name": "addAll",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": ""},
{ "name": "addAll",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Adds a list of items to the current list, placing them at the end of the list in the order they are passed."},
{ "name": "addAll",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "Adds a list of items to the current list, placing them at the end of the list in the order they are passed."},
{ "name": "addAllAt",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": ""},
{ "name": "addAllAt",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Adds a list of items to the current list, placing them at the position index passed in to the function."},
{ "name": "addAllAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "Adds a list of items to the current list, placing them at the position index passed in to the function."},
{ "name": "addBackgroundShape",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Adds a <code>flash."},
{ "name": "addBackgroundShape",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.core.IStrand",
  "description": "Add a bead to the strand."},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.core.UIHTMLElementWrapper",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.core.Strand",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "addBead",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.DateAndTimeFormatter",
  "description": ""},
{ "name": "addBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "Add a binding to this watcher, meaning that the binding is notified when our value changes."},
{ "name": "addBlockElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "addBlockElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "addBlockRect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "addBlockRect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "addCall",
  "type": "Method",
  "class": "mx.rpc.ActiveCalls",
  "description": ""},
{ "name": "addCallback",
  "type": "Method",
  "class": "mx.external.ExternalInterface",
  "description": "Registers an ActionScript method as callable from the container."},
{ "name": "addCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
  "description": ""},
{ "name": "addCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Adds a cell container to table container."},
{ "name": "addCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "Adds a table cell to the row"},
{ "name": "addCell",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "addCellAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "Adds a table cell to the row"},
{ "name": "addCellSelectionShapes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "addCellSelections",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Add cell selection shapes to the displaylist."},
{ "name": "addCellToBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "addCellToBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Adds the table cell container to the table block specified."},
{ "name": "addChannel",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Adds a Channel to the ChannelSet."},
{ "name": "addChild",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Adds a child DisplayObject after the end of this child list."},
{ "name": "addChild",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "addChild",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Appends a child FlowElement object."},
{ "name": "addChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "addChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "addChild",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Adds a child DisplayObject to this Container."},
{ "name": "addChild",
  "type": "Method",
  "class": "org.apache.royale.effects.ICompoundEffect",
  "description": "Add an effect to the parent."},
{ "name": "addChild",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "addChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "addChild",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Adds a table cell element to the table."},
{ "name": "addChild",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Adds a child node to a node of the data."},
{ "name": "addChild",
  "type": "Method",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "Add a child to this watcher, meaning that the child is watching a sub value of ours."},
{ "name": "addChild",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "addChildAfterInternal",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Adds a child DisplayObject to this child list at the index specified."},
{ "name": "addChildAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "addChildAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Adds a child FlowElement object at the specified index position."},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Adds a child DisplayObject instance to this DisplayObjectContainer instance."},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Adds a child DisplayObject to this Container."},
{ "name": "addChildAt",
  "type": "Method",
  "class": "org.apache.royale.effects.ICompoundEffect",
  "description": "Add an effect to the parent at a certain position."},
{ "name": "addChildAt",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor",
  "description": "Adds a child node to a node at the specified index."},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Adds a child node to a node of the data at a specific index in the data."},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Add a child node to a node at the specified index."},
{ "name": "addChildAt",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": "Add a child node to a node at the specified index."},
{ "name": "addClass",
  "type": "Method",
  "class": "org.apache.royale.utils.IClassSelectorListSupport",
  "description": "Add a class selector to the list."},
{ "name": "addClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.DataContainerBase",
  "description": "Add a class selector to the list."},
{ "name": "addClass",
  "type": "Method",
  "class": "org.apache.royale.core.StyledUIBase",
  "description": "Add a class selector to the list."},
{ "name": "addClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.Container",
  "description": "Add a class selector to the list."},
{ "name": "addClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.Group",
  "description": "Add a class selector to the list."},
{ "name": "addClass",
  "type": "Method",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": "Add a class selector to the list."},
{ "name": "addColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "addColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Adds a column."},
{ "name": "addColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "addColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Adds a column at the index specified."},
{ "name": "addComposedLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "addComposedTableBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "addController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Adds a controller to this IFlowComposer instance."},
{ "name": "addController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#addController()"},
{ "name": "addControllerAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Adds a controller to this IFlowComposer instance at the specified index."},
{ "name": "addControllerAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#addControllerAt()"},
{ "name": "addData",
  "type": "Method",
  "class": "mx.core.DragSource",
  "description": "Adds data and a corresponding format String to the drag source."},
{ "name": "addDataChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "This adds any <code>DisplayObject</code> as child to current canvas"},
{ "name": "addDataChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Adds the specified display object as a child to the current canvas."},
{ "name": "addDays",
  "type": "Method",
  "class": "org.apache.royale.utils.date",
  "description": "Adds days to the Date object."},
{ "name": "addDomListener",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "addDomListenerOnce",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "addDragData",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Adds the selected items to the DragSource object as part of a drag-and-drop operation."},
{ "name": "addDragData",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Adds the selected items to the DragSource object as part of a drag and drop operation."},
{ "name": "addDynamicSelector",
  "type": "Method",
  "class": "org.apache.royale.utils.css",
  "description": "Adds a CSS selector dynamically at runtime."},
{ "name": "addEffect",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Sequence",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.core.IParent",
  "description": "Add a component to the parent."},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.mobile.ManagerBase",
  "description": "Adds elements to the view manager."},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "Add a component to the parent."},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "Add a component to the parent."},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.createjs.Application",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.utils.MockParent",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ModelEdit",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Table",
  "description": ""},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "Add a component to the parent."},
{ "name": "addElement",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.IParent",
  "description": "Add a component to the parent."},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "Add a component to the parent."},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "Add a component to the parent."},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.createjs.Application",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.utils.MockParent",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.mdl.Table",
  "description": ""},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "Add a component to the parent."},
{ "name": "addElementAt",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "addElementToSurface",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": ""},
{ "name": "addElementToSurface",
  "type": "Method",
  "class": "org.apache.royale.svg.TransformableCompoundGraphic",
  "description": ""},
{ "name": "addElementToWrapper",
  "type": "Method",
  "class": "org.apache.royale.html.util",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.events.IEventDispatcher",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "addEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "as its only parameter and must return nothing, as this example shows: <p><code>function(evt:Event):void</code></p> The function can have any name."},
{ "name": "addExternDefintion",
  "type": "Method",
  "class": "org.apache.royale.reflection.ExtraData",
  "description": "this method itself is non-reflectable If an application requires reflection of specific Native types and Royale synthetic types in javascript call this method for each specific representation inside the nativejs package at startup, before reflection is used in any code  Use this to add selective definitions only (PAYG) If this method is never used, it will not be included in release build  example: import org."},
{ "name": "addFillAttrib",
  "type": "Method",
  "class": "org.apache.royale.graphics.IFill",
  "description": ""},
{ "name": "addFillAttrib",
  "type": "Method",
  "class": "org.apache.royale.graphics.SolidColor",
  "description": "addFillAttrib()"},
{ "name": "addFillAttrib",
  "type": "Method",
  "class": "org.apache.royale.svg.LinearGradient",
  "description": "addFillAttrib()"},
{ "name": "addFirstListener",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Adds a listener to the beginning of the collection of listeners."},
{ "name": "addFirstListener",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "addFloatAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "addFocusManager",
  "type": "Method",
  "class": "mx.managers.IActiveWindowManager",
  "description": "Registers a top-level window containing a FocusManager."},
{ "name": "addFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Register a new format for import/export."},
{ "name": "addFormatAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Register a new format for import/export, at the specified location."},
{ "name": "addHandler",
  "type": "Method",
  "class": "mx.core.DragSource",
  "description": "Adds a handler that is called when data for the specified format is requested."},
{ "name": "addHandlers",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": ""},
{ "name": "addHours",
  "type": "Method",
  "class": "org.apache.royale.utils.date",
  "description": "Adds hours to the Date object."},
{ "name": "addImageElement",
  "type": "Method",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "addIndicator",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": "adding indicator to positioner makes the indicator fill all available space adding to \"span\" HTMLElement restrict indicator to content."},
{ "name": "addIndicator",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonInidicatorRestrictedToContentItemRenderer",
  "description": "adding indicator to positioner makes the indicator fill all available space adding to \"span\" HTMLElement restrict indicator to content."},
{ "name": "addInlineGraphicElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Adds a <code>flash."},
{ "name": "addInlineGraphicElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "addItem",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Adds the specified item to the end of the list."},
{ "name": "addItem",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Add the specified item to the end of the list."},
{ "name": "addItem",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "addItem",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "addItem",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Adds an item to the end of the array."},
{ "name": "addItem",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Adds an item to the end of the array."},
{ "name": "addItem",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "addItem",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "addItem",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "addItem",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Add the specified item to the end of the list."},
{ "name": "addItemAt",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Adds the item at the specified index."},
{ "name": "addItemAt",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Add the item at the specified index."},
{ "name": "addItemAt",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "addItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "addItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Inserts an item to a specific location within the array."},
{ "name": "addItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Inserts an item to a specific location within the array."},
{ "name": "addItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "addItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "addItemAt",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "addItemAt",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Add the item at the specified index."},
{ "name": "addItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.core.IItemRendererParent",
  "description": "The IItemRendererParent interface is the basic interface for the container that parents item renderers."},
{ "name": "addItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": "Overrides the addElement function to set the element into an internal list."},
{ "name": "addItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "addItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.core.IItemRendererParent",
  "description": ""},
{ "name": "addItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": "Overrides the addElementAt function to set the element into an internal list at a specific location."},
{ "name": "addItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "addLayout",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutManager",
  "description": "Add a function to be called during the next group of layouts."},
{ "name": "addLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": ""},
{ "name": "addLineForReuse",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextLineRecycler",
  "description": "Add a ITextLine to the pool for reuse."},
{ "name": "addListener",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Adds a listener."},
{ "name": "addListener",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "addListener",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "addListener",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "addListener",
  "type": "Method",
  "class": "org.apache.royale.test.RoyaleUnitCore",
  "description": "Adds a run listener."},
{ "name": "addListenerHandler",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Sets up all of the listeners for the <code>valid</code> and <code>invalid</code> events dispatched from the validator."},
{ "name": "addListenerOnce",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "addLoadIndicator",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DisableLoaderBead",
  "description": ""},
{ "name": "addLoadIndicator",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ShrinkableDisableLoaderBead",
  "description": ""},
{ "name": "addLogger",
  "type": "Method",
  "class": "mx.logging.ILoggingTarget",
  "description": "Sets up this target with the specified logger."},
{ "name": "addLogger",
  "type": "Method",
  "class": "mx.logging.AbstractTarget",
  "description": "Sets up this target with the specified logger."},
{ "name": "addMeasurement",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutManager",
  "description": "Add a component to be measured during the next cycle."},
{ "name": "addMinutes",
  "type": "Method",
  "class": "org.apache.royale.utils.date",
  "description": "Adds minutes to the Date object."},
{ "name": "addMonths",
  "type": "Method",
  "class": "org.apache.royale.utils.date",
  "description": "Adds months to the Date object."},
{ "name": "addNames",
  "type": "Method",
  "class": "org.apache.royale.utils.ClassSelectorList",
  "description": "Add a space-separated list of names."},
{ "name": "addNonEnumerableProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectUtil",
  "description": ""},
{ "name": "addNumberLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "addNumberLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "addObject",
  "type": "Method",
  "class": "mx.printing.FlexPrintJob",
  "description": "Adds a UIComponent object to the list of objects being printed."},
{ "name": "addOneControllerToParcelList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "addOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.CompositeOperation",
  "description": "Adds an additional operation to the end of the list."},
{ "name": "addPairAdjustment",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.DividedContainerModel",
  "description": "Modifies a specific pairAdjustment indicated by an index and by the amount given."},
{ "name": "addParaTerminator",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ISpanElement",
  "description": ""},
{ "name": "addParcel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "addParentMapping",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "addPopUp",
  "type": "Method",
  "class": "mx.managers.PopUpManager",
  "description": "Pops up a top-level window."},
{ "name": "addPopUp",
  "type": "Method",
  "class": "org.apache.royale.utils.UIUtils",
  "description": "Adds the given component to the IPopUpHost."},
{ "name": "addRect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "addRect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "addResourceBundle",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Adds the specified ResourceBundle to the ResourceManager so that its resources can be accessed by ResourceManager methods such as <code>getString()</code>."},
{ "name": "addResourceBundle",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "addResponder",
  "type": "Method",
  "class": "mx.rpc.AsyncToken",
  "description": "Adds a responder to an Array of responders."},
{ "name": "addRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "addRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Add a row at the end of the table."},
{ "name": "addRow",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "addRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "addRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Add a row at the index specified."},
{ "name": "addRule",
  "type": "Method",
  "class": "org.apache.royale.core.IValuesImpl",
  "description": "Add a style rule like a class selector."},
{ "name": "addRule",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "addRule",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "addSeconds",
  "type": "Method",
  "class": "org.apache.royale.utils.date",
  "description": "Adds seconds to the Date object."},
{ "name": "addSelectedCell",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "addSelectedCell",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "addSelectedIndex",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "addSelectedIndex",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "addSelectionContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Adds a <code>flash."},
{ "name": "addSelectionContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "addSelectionShapes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "addStrokeAttrib",
  "type": "Method",
  "class": "org.apache.royale.graphics.IStroke",
  "description": ""},
{ "name": "addStrokeAttrib",
  "type": "Method",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": "addStrokeAttrib()"},
{ "name": "addSvgElementToElement",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils",
  "description": ""},
{ "name": "addSvgElementToWrapper",
  "type": "Method",
  "class": "org.apache.royale.html.util",
  "description": ""},
{ "name": "addTableBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Adds a <code>TableBlockContainer</code> object as a descendant of <code>container</code>."},
{ "name": "addTableCell2ColumnState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "addTarget",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "Allows the specified target to begin receiving notification of log events."},
{ "name": "addTask",
  "type": "Method",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": "Adds a task to the task list."},
{ "name": "addTextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Adds a <code>org."},
{ "name": "addTextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "addTotalDepth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "addUpgradeBead",
  "type": "Method",
  "class": "org.apache.royale.mdl.Menu",
  "description": ""},
{ "name": "addViewElements",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.ViewManagerViewBase",
  "description": ""},
{ "name": "addViewElements",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.TabbedViewManagerView",
  "description": ""},
{ "name": "addViewElements",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.TopTabbedViewManagerView",
  "description": ""},
{ "name": "addViewElements",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.StackedViewManagerView",
  "description": ""},
{ "name": "addWizardListeners",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "add listeners to wizard events when add this page to the wizard"},
{ "name": "addYears",
  "type": "Method",
  "class": "org.apache.royale.utils.date",
  "description": "Adds a day to the Date object."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.core.IUIBase",
  "description": "Called by parent components when the component is added via a call to addElement or addElementAt."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": "The method called when added to a parent."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.core.GroupBase",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "The method called when added to a parent."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.View",
  "description": "A ViewBase doesn't create its children until it is added to a parent."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jewel.DateField",
  "description": "The method called when added to a parent."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterLogo",
  "description": "Configuration depends on parent Footer."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.containers.ViewStack",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterRightSection",
  "description": "Configuration depends on parent Footer or IFooterSection."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.controls.RadioButton",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jquery.TextButton",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.html.DateField",
  "description": "The method called when added to a parent."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterLinkList",
  "description": "Configuration depends on parent Footer."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.containers.Box",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterMiddleSection",
  "description": "Configuration depends on parent Footer."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "spark.components.RichText",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBarButton",
  "description": "If TabBarButton is used in a TabBar that is inside a Tabs component use a different config"},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jewel.debugger.ResponsiveSizeMonitor",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.ace.ACEEditor",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "spark.components.DataRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.express.List",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jquery.RadioButton",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.containers.beads.FormItemContainer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jquery.ToggleTextButton",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.containers.FormItem",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.containers.FormHeading",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.html.UIModuleLoader",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.html.BinaryImage",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.controls.PopUpMenuButton",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MenuBarItemRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.controls.DateChooser",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.charts.LegendItem",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardContent",
  "description": "The method called when added to a parent."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterLeftSection",
  "description": "Configuration depends on parent Footer or IFooterSection."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.svg.BinaryImage",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jewel.ApplicationMainContent",
  "description": "The method called when added to a parent."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterSocialButton",
  "description": "Configuration depends on parent Footer."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.html.DataGrid",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.AlternatingBackgroundColorStringItemRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterBottomSection",
  "description": "Configuration depends on parent Footer."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.controls.VRule",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.html.Accordion",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MenuItemRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jewel.TabBarContent",
  "description": "The method called when added to a parent."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.express.DataGrid",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "spark.primitives.Rect",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBar",
  "description": "If TabBar is used inside Tabs use a different config"},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jewel.ModuleLoader",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.charts.renderers.AreaRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "mx.charts.renderers.LineRenderer",
  "description": ""},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBarPanel",
  "description": "If TabBarPanel is used inside Tabs use a different config"},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterTopSection",
  "description": "Configuration depends on parent Footer."},
{ "name": "addedToParent",
  "type": "Method",
  "class": "org.apache.royale.jewel.PopUp",
  "description": "The method called when added to a parent."},
{ "name": "additiveSymbols",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "adg",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumnList",
  "description": ""},
{ "name": "adjustAppScroll",
  "type": "Method",
  "class": "org.apache.royale.jewel.Drawer",
  "description": ""},
{ "name": "adjustAxesPlacements",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "adjustBrightness",
  "type": "Method",
  "class": "org.apache.royale.utils.ColorUtil",
  "description": "Performs a linear brightness adjustment of an RGB color."},
{ "name": "adjustBrightness2",
  "type": "Method",
  "class": "org.apache.royale.utils.ColorUtil",
  "description": "Performs a scaled brightness adjustment of an RGB color."},
{ "name": "adjustGutters",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "Adjusts its layout to accomodate the gutters passed in."},
{ "name": "adjustGutters",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "adjustMinMax",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Adjusts the generated or assigned range of the axis's labels."},
{ "name": "adjustNetConnectionURL",
  "type": "Method",
  "class": "mx.netmon.NetworkMonitor",
  "description": "Adjust the URL for NetConnectionChannel and HTTPChannel Requests so that it goes through the monitor."},
{ "name": "adjustNetConnectionURLImpl",
  "type": "Property",
  "class": "mx.netmon.NetworkMonitor",
  "description": "To be assigned by mix-in."},
{ "name": "adjustSize",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "This function is called whenever the itemRenderer changes size."},
{ "name": "adjustSize",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MXMLItemRenderer",
  "description": ""},
{ "name": "adjustSize",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "This function is called whenever the itemRenderer changes size."},
{ "name": "adjustSize",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "adjustURLRequest",
  "type": "Method",
  "class": "mx.netmon.NetworkMonitor",
  "description": "Adjust the URLRequest so that it goes through the monitor."},
{ "name": "adjustURLRequestImpl",
  "type": "Property",
  "class": "mx.netmon.NetworkMonitor",
  "description": "To be assigned by mix-in."},
{ "name": "adornCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "adornCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "adsense",
  "type": "Method",
  "class": "google.maps.adsense",
  "description": ""},
{ "name": "adsense",
  "type": "Class",
  "description": ""},
{ "name": "advanceToNextContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Go to next container"},
{ "name": "advanceToNextParcel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "advanceWidth",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "afterContent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IListMarkerFormat",
  "description": "@copy ListMarkerFormat#afterContent"},
{ "name": "afterContent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Specifies a string that goes after the marker."},
{ "name": "afterContentProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": ""},
{ "name": "afterLast",
  "type": "Property",
  "class": "mx.collections.IViewCursor",
  "description": "If the cursor is located after the last item in the view, this property is <code>true</code> ."},
{ "name": "afterLast",
  "type": "Property",
  "class": "mx.collections.LeafNodeCursor",
  "description": ""},
{ "name": "afterLast",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalViewCursor",
  "description": ""},
{ "name": "afterLast",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "afterLayout",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutHost",
  "description": "Invoked after performing the layout."},
{ "name": "afterLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MXMLItemRenderer",
  "description": ""},
{ "name": "afterLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": ""},
{ "name": "afterLayout",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutHost",
  "description": ""},
{ "name": "afterLayout",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "afterLayout",
  "type": "Method",
  "class": "spark.components.beads.GroupView",
  "description": "Adjusts the size of the host after the layout has been run if needed"},
{ "name": "afterLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TableCellView",
  "description": ""},
{ "name": "agent",
  "type": "Property",
  "class": "mx.messaging.MessageResponder",
  "description": "Provides access to the MessageAgent that sent the message."},
{ "name": "alertModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "alertModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "align",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": "The align this cell will apply to its content can be \"left\", \"center\" or \"right\"."},
{ "name": "align",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "align",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TableColumn",
  "description": "How text align in the column"},
{ "name": "align",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer",
  "description": "How text align in the itemRenderer instance."},
{ "name": "align",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.ListItemRenderer",
  "description": "How text align in the itemRenderer instance."},
{ "name": "align",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.StringItemRenderer",
  "description": "How text align in the itemRenderer instance."},
{ "name": "align",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.TextAlign",
  "description": "Add or remove align text class selectors."},
{ "name": "alignBottom",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--bottom\" effect selector."},
{ "name": "alignContent",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "alignItems",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "alignLabelsToInterval",
  "type": "Property",
  "class": "mx.charts.LinearAxis",
  "description": ""},
{ "name": "alignLabelsToUnits",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Determines the placement of labels along the axis."},
{ "name": "alignMiddle",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--middle\" effect selector."},
{ "name": "alignSelf",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "alignSymbol",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Aligns currency symbol to the left side or the right side of the formatted number."},
{ "name": "alignTop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--top\" effect selector."},
{ "name": "alignment",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "alignment",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "alignment",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITabStopFormat",
  "description": "The tab alignment for this tab stop."},
{ "name": "alignment",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VerticalAlignChildren",
  "description": "The alignment of the children Alignment can be any of the valid css properties for vertical-align see https://developer."},
{ "name": "alignment",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TabStop",
  "description": ""},
{ "name": "alignment",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "The tab alignment for this tab stop."},
{ "name": "alignmentBaseline",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the baseline to which the dominant baseline aligns."},
{ "name": "alignmentBaseline",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the baseline to which the dominant baseline aligns."},
{ "name": "alignmentBaseline",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the baseline to which the dominant baseline aligns."},
{ "name": "alignmentBaseline",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": ""},
{ "name": "alignmentBaseline",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "alignmentBaselineProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "all",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "all",
  "type": "Method",
  "class": "Promise",
  "description": ""},
{ "name": "allCells",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is either <code>GridSelectionMode."},
{ "name": "allElements",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "The set of all chart elements displayed in the chart."},
{ "name": "allElementsArray",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": ""},
{ "name": "allItemsRemoved",
  "type": "Event",
  "description": "Dispatched when the collection has updated an item."},
{ "name": "allItemsRemoved",
  "type": "Event",
  "description": "Dispatched when the collection has updated an item."},
{ "name": "allListenersAttached",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "allRows",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is either <code>GridSelectionMode."},
{ "name": "allowDelayedOperations",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Controls whether operations can be queued up for later execution."},
{ "name": "allowDelayedOperations",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "@copy IEditManager#allowDelayedOperations()"},
{ "name": "allowDrag",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridDragDropBead",
  "description": "Sets whether or not to allow the DataGrid to be the source of a drag operation."},
{ "name": "allowDragSelection",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": ""},
{ "name": "allowDrop",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridDragDropBead",
  "description": "Sets whether or not to allow the DataGrid to be the target of a drag/drop operation."},
{ "name": "allowMerge",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.DeleteTextOperation",
  "description": "Indicates whether this operation can be merged with operations executed before or after it."},
{ "name": "allowMultipleSelection",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "A flag that indicates whether you can allow more than one item to be selected at the same time."},
{ "name": "allowNegative",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Specifies whether negative numbers are permitted."},
{ "name": "allowNegativeForStacked",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Setting this property to true will stack positive and negative values separately"},
{ "name": "allowNesting",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElementBase",
  "description": "@private SubParagraphGroupElement allow deep nesting, but LinkElements and TCYElements do not allow nesting (you can't have a link inside another link no matter how many group elements are in between)."},
{ "name": "allowNesting",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElement",
  "description": "@private"},
{ "name": "allowedErrorTypes",
  "type": "Property",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "Certain errors classes are normal when executing an update, so we swallow all errors they represent."},
{ "name": "allowedErrors",
  "type": "Property",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": ""},
{ "name": "allowedFormatChars",
  "type": "Property",
  "class": "mx.validators.PhoneNumberValidator",
  "description": "The set of allowable formatting characters."},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.core.IUIBase",
  "description": "The alpha or opacity in the range of 0 to 1."},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "The HTMLElement used to position the component."},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientEntry",
  "description": "The transparency of a color."},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "mx.core.IVisualElement",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "spark.components.Group",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "mx.graphics.SolidColorStroke",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": "The transparency of a color."},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalOverlay",
  "description": "The alpha of the overlay in a value of 0 through 1 (default 0."},
{ "name": "alpha",
  "type": "Property",
  "class": "mx.graphics.SolidColor",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColor",
  "description": "The transparency of a color."},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "alpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "alphaFrom",
  "type": "Property",
  "class": "mx.effects.Glow",
  "description": "Starting transparency level between 0."},
{ "name": "alphaFrom",
  "type": "Property",
  "class": "org.apache.royale.effects.Fade",
  "description": "Starting alpha value."},
{ "name": "alphaFrom",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": "Starting alpha value."},
{ "name": "alphaTo",
  "type": "Property",
  "class": "mx.effects.Glow",
  "description": "Ending transparency level between 0."},
{ "name": "alphaTo",
  "type": "Property",
  "class": "org.apache.royale.effects.Fade",
  "description": "Ending alpha value."},
{ "name": "alphaTo",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": "Ending alpha value."},
{ "name": "alphas",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": ""},
{ "name": "alt",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AccessibilityAltBead",
  "description": ""},
{ "name": "alt",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Img",
  "description": "The img alt"},
{ "name": "altKey",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "altKey",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "altKey",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Indicates whether the <code>Alt</code> key was pressed."},
{ "name": "altKey",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Was altKey key depressed."},
{ "name": "alternatingRowColorsBackground",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render the <code>alternatingRowColors</code> style."},
{ "name": "altitude",
  "type": "Property",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "alwaysCalculateWhitespaceBounds",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.GlobalSettings",
  "description": ""},
{ "name": "anchorCellPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Anchor point of the current cell selection, as coordinates within the table."},
{ "name": "anchorCellPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Anchor point of the current cell selection, as coordinates within the table."},
{ "name": "anchorColumnIndex",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The column index of the <i>anchor</i> for the next shift selection."},
{ "name": "anchorCoordinates",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellRange",
  "description": "Anchor point of the current selection, as a CellCoordinates in the TableElement."},
{ "name": "anchorPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The anchor point of the selection."},
{ "name": "anchorPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextRange",
  "description": "Anchor position of the selection, as an absolute position in the TextFlow."},
{ "name": "anchorPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "anchorRowIndex",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The row index of the <i>anchor</i> for the next shift selection."},
{ "name": "angle",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The angle, in radians, that this wedge subtends."},
{ "name": "angle",
  "type": "Property",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "angle",
  "type": "Property",
  "class": "org.apache.royale.core.TransformRotateModel",
  "description": ""},
{ "name": "angle",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": ""},
{ "name": "angularAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": "The axis object used to map data values to an angle between 0 and 2 * PI."},
{ "name": "angularAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "angularAxis",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "The axis object used to map data values to an angle between 0 and 2 * PI."},
{ "name": "animate",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "Whether to animate an opening or closing operation; used for ITEM_OPENING type events only."},
{ "name": "animateIndicator",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": ""},
{ "name": "animation",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "animationDelay",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "animationDirection",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "animationDuration",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "animationFillMode",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "animationIterationCount",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "animationName",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "animationPlayState",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "animationTimingFunction",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "annotationElements",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Sets an array of ChartElement objects that appears on top of any data series rendered by the chart."},
{ "name": "antiAliasType",
  "type": "Property",
  "class": "mx.core.UITextFormat",
  "description": "Defines the anti-aliasing setting for the UITextField class."},
{ "name": "appendElementsForDelayedUpdate",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "appendOneElementForUpdate",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "appendText",
  "type": "Method",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "application",
  "type": "Property",
  "class": "mx.core.Application",
  "description": "A reference to the top-level application."},
{ "name": "applicationComplete",
  "type": "Event",
  "description": "Dispatched at startup after the initial view has been put on the display list."},
{ "name": "applicationComplete",
  "type": "Event",
  "description": "Dispatched at startup after the initial view has been put on the display list."},
{ "name": "applicationComplete",
  "type": "Event",
  "description": "Dispatched after the Application has been initialized, processed by the LayoutManager, and attached to the display list."},
{ "name": "applicationComplete",
  "type": "Event",
  "description": "Dispatched at startup after the initial view has been put on the display list."},
{ "name": "applicationComplete",
  "type": "Event",
  "description": "Dispatched at startup after the initial view has been put on the display list."},
{ "name": "applicationComplete",
  "type": "Event",
  "description": "Dispatched after the Application has been initialized, processed by the LayoutManager, and attached to the display list."},
{ "name": "applicationDomain",
  "type": "Property",
  "class": "mx.modules.ModuleLoader",
  "description": "The application domain to load your module into."},
{ "name": "applicationModel",
  "type": "Property",
  "class": "org.apache.royale.core.IApplicationView",
  "description": "The application model."},
{ "name": "applicationModel",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": "A reference to the Application's model."},
{ "name": "applicationModel",
  "type": "Property",
  "class": "org.apache.royale.core.ViewBase",
  "description": "A reference to the Application's model."},
{ "name": "applicationModel",
  "type": "Property",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": "A reference to the Application's model."},
{ "name": "applicationModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.ApplicationResponsiveView",
  "description": "A reference to the Application's model."},
{ "name": "apply",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Replaces property values in this TextLayoutFormat object with the values of properties that are set in the <code>incoming</code> ITextLayoutFormat instance."},
{ "name": "apply",
  "type": "Method",
  "class": "mx.graphics.IStroke",
  "description": ""},
{ "name": "apply",
  "type": "Method",
  "class": "mx.graphics.Stroke",
  "description": ""},
{ "name": "apply",
  "type": "Method",
  "class": "mx.graphics.SolidColorStroke",
  "description": ""},
{ "name": "apply",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Replaces property values in this TabStopFormat object with the values of properties that are set in the <code>incoming</code> ITabStopFormat instance."},
{ "name": "applyClear",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "applyClientLoadBalancingSettings",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Applies the client load balancing urls if they exists."},
{ "name": "applyContainerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Applies container styles to any containers in the selection."},
{ "name": "applyContainerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "applyContainerStyleChange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "applyFilter",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": ""},
{ "name": "applyFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Changes the formats of the specified (or current) selection."},
{ "name": "applyFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "applyFormatToElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Applies styles to the specified element."},
{ "name": "applyFormatToElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "applyFunctionToElements",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "applyImageData",
  "type": "Method",
  "class": "org.apache.royale.core.IImage",
  "description": ""},
{ "name": "applyImageData",
  "type": "Method",
  "class": "org.apache.royale.core.ImageBase",
  "description": ""},
{ "name": "applyImageData",
  "type": "Method",
  "class": "spark.components.Image",
  "description": ""},
{ "name": "applyImageData",
  "type": "Method",
  "class": "org.apache.royale.html.Image",
  "description": ""},
{ "name": "applyImageData",
  "type": "Method",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "applyImageData",
  "type": "Method",
  "class": "org.apache.royale.core.supportClasses.StyledImageBase",
  "description": ""},
{ "name": "applyImageData",
  "type": "Method",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "applyImageData",
  "type": "Method",
  "class": "org.apache.royale.jewel.Image",
  "description": ""},
{ "name": "applyItemRendererProperties",
  "type": "Method",
  "class": "mx.charts.series.BarSeries",
  "description": "Customizes the item renderer instances that are used to represent the chart."},
{ "name": "applyItemRendererProperties",
  "type": "Method",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Customizes the item renderer instances that are used to represent the chart."},
{ "name": "applyItemRendererProperties",
  "type": "Method",
  "class": "mx.charts.series.LineSeries",
  "description": "Customizes the item renderer instances that are used to represent the chart."},
{ "name": "applyItemRendererProperties",
  "type": "Method",
  "class": "mx.charts.series.PlotSeries",
  "description": "Customizes the item renderer instances that are used to represent the chart."},
{ "name": "applyItemRendererProperties",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": "Applies style properties to the specified DisplayObject."},
{ "name": "applyItemRendererProperties",
  "type": "Method",
  "class": "mx.charts.series.AreaSeries",
  "description": "Customizes the item renderer instances used to represent the chart."},
{ "name": "applyLeafFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Changes the format applied to the leaf elements in the specified (or current) selection."},
{ "name": "applyLeafFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "applyLink",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Transforms a selection into a link, or a link into normal text."},
{ "name": "applyLink",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "Returns the new ILinkElement that was created."},
{ "name": "applyNonLinearFontScaling",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "applyNonLinearFontScaling",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "applyParagraphFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Applies paragraph styles to any paragraphs in the selection."},
{ "name": "applyParagraphFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "applyParagraphStyleChange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": "Additively apply the paragraph formating attributes to the paragraphs in the specified range."},
{ "name": "applySeriesSet",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Preprocesses the series and transform for display."},
{ "name": "applySettings",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Subclasses should override this method to apply any settings that may be necessary for an individual channel."},
{ "name": "applyStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.core.layout.ILayoutStyleProperties",
  "description": "Get the component layout style and apply to if exists"},
{ "name": "applyStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "Get the component layout style and apply to if exists"},
{ "name": "applyStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "Get the component layout style and apply to if exists"},
{ "name": "applyStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "Get the component layout style and apply to if exists"},
{ "name": "applyStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "Get the component layout style and apply to if exists"},
{ "name": "applyStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "Get the component layout style and apply to if exists"},
{ "name": "applyStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "Get the component layout style and apply to if exists"},
{ "name": "applyStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "Get the component layout style and apply to if exists"},
{ "name": "applyStyles",
  "type": "Method",
  "class": "org.apache.royale.core.IValuesImpl",
  "description": "Applies a set of styles to an instance."},
{ "name": "applyStyles",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "applyStyles",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "applyTCY",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Transforms text into a TCY run, or a TCY run into non-TCY text."},
{ "name": "applyTCY",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "Returns the new TCYElement that was created."},
{ "name": "applyTextStyleChange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "applyUpdateElements",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "applyVerticalAlignmentToColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "apply vj and adjust the parcel bounds"},
{ "name": "applyVerticalAlignmentToColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": "apply vj and adjust the parcel bounds"},
{ "name": "applyVerticalAlignmentToColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.VerticalJustifier",
  "description": "Vertical justify the subset of lines from startIndext to startIndex to numLines according to the rule specified by verticalAlignAttr."},
{ "name": "applyWhiteSpaceCollapse",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "arc",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.IWedgeItemRenderer",
  "description": "The sweep (radians) of the wedge relative to the startAngle."},
{ "name": "arc",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The sweep (radians) of the wedge, relative to the startAngle."},
{ "name": "arc",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The sweep (radians) of the wedge, relative to the startAngle."},
{ "name": "areEqual",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.CellCoordinates",
  "description": "Checks if two coordiates are in the same location"},
{ "name": "areaFill",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "Sets the fill for the area."},
{ "name": "areaStroke",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "args",
  "type": "Property",
  "class": "org.apache.royale.reflection.MetaDataDefinition",
  "description": "The argument pairs (if any) associated with a Metadata tag in [Event(name=\"boom\")] the args array would be of length 1 the array contains MetaDataArgDefinitions"},
{ "name": "argumentNames",
  "type": "Property",
  "class": "mx.rpc.remoting.Operation",
  "description": "An ordered list of the names of the arguments to pass to a method invocation."},
{ "name": "argumentNames",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "An ordered list of the names of the arguments to pass to a method invocation."},
{ "name": "arguments",
  "type": "Property",
  "class": "mx.rpc.AbstractOperation",
  "description": "The arguments to pass to the Operation when it is invoked."},
{ "name": "array",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Gets a reference to the internal array of bytes."},
{ "name": "arrayAsVector",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "Support for legacy vectorEmulationClass=Array approach."},
{ "name": "arraySortOnOptions",
  "type": "Property",
  "class": "mx.collections.ISortField",
  "description": "This helper property is used internally by the <code>findItem()</code> and <code>sort()</code> methods."},
{ "name": "arraySortOnOptions",
  "type": "Property",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "arraySortOnOptions",
  "type": "Property",
  "class": "spark.collections.ComplexSortField",
  "description": ""},
{ "name": "arraySortOnOptions",
  "type": "Property",
  "class": "org.apache.royale.collections.ISortField",
  "description": "This helper property is used internally by the <code>findItem()</code> and <code>sort()</code> methods."},
{ "name": "arraySortOnOptions",
  "type": "Property",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "arrayValuesMatch",
  "type": "Method",
  "class": "mx.utils.ArrayUtil",
  "description": "Checks if the Array instances contain the same values, even if in different orders."},
{ "name": "arraysMatch",
  "type": "Method",
  "class": "mx.utils.ArrayUtil",
  "description": "Checks if the Array instances contain the same values against the same indexes, even if in different orders."},
{ "name": "as",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "as()  binary as operator in AS3."},
{ "name": "asStrings",
  "type": "Method",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "ascender",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "ascending",
  "type": "Property",
  "class": "org.apache.royale.mdl.TableColumn",
  "description": "A boolean flag to activate \"mdl-data-table__header--sorted-ascending\" effect selector."},
{ "name": "ascent",
  "type": "Property",
  "class": "org.apache.royale.core.TextLineMetrics",
  "description": ""},
{ "name": "ascent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IVerticalJustificationLine",
  "description": ""},
{ "name": "ascent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": ""},
{ "name": "ascent",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "ascent",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "ascent",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "ascentTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "ascentTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "aspectRatio",
  "type": "Property",
  "class": "mx.charts.chartClasses.LegendData",
  "description": "Determines the size and placement of the legend marker."},
{ "name": "assert",
  "type": "Method",
  "class": "org.apache.royale.debugging",
  "description": "assert throws an error if the condition is not met."},
{ "name": "assertEquals",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "assertEquals",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Asserts that the provided values are loosely equal (equivalent to the <code>==</code> operator)."},
{ "name": "assertFalse",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Asserts that the provided value is true (equivalent to testing the value in an <code>if(!value)</code> statement)."},
{ "name": "assertFalse",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "assertNotEquals",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "assertNotEquals",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Asserts that the provided values are not loosely equal (equivalent to the <code>!=</code> operator)."},
{ "name": "assertNotNull",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Asserts that the provided value is not null."},
{ "name": "assertNotNull",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "assertNotStrictlyEquals",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "assertNotStrictlyEquals",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Asserts that the provided values are not strictly equal (equivalent to the <code>!==</code> operator)."},
{ "name": "assertNull",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "assertNull",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Asserts that the provided value is null."},
{ "name": "assertStrictlyEquals",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "assertStrictlyEquals",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Asserts that the provided values are strictly equal (equivalent to the <code>===</code> operator)."},
{ "name": "assertTrue",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "assertTrue",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Asserts that the provided value is true (equivalent to testing the value in an <code>if(value)</code> statement)."},
{ "name": "assertType",
  "type": "Method",
  "class": "org.apache.royale.debugging",
  "description": "asserts an object is of the desired type."},
{ "name": "assignFocus",
  "type": "Method",
  "class": "mx.managers.IFocusManagerComplexComponent",
  "description": "Called by the FocusManager when the component receives focus."},
{ "name": "assignedMaximum",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The explicitly assigned maximum value."},
{ "name": "assignedMinimum",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The explicitly assigned minimum value."},
{ "name": "asyncRequest",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "asyncRequest",
  "type": "Property",
  "class": "mx.rpc.AbstractInvoker",
  "description": ""},
{ "name": "asyncRequest",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": "Use the asyncRequest from the parent service"},
{ "name": "asyncRequest",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": ""},
{ "name": "atEnd",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "atLast",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": "Returns true if the current parcel is the last."},
{ "name": "atomCount",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "atomCount",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "attachEventListeners",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataProviderChangeNotifier",
  "description": ""},
{ "name": "attachTransparentBackground",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "attachTransparentBackground",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": "@private"},
{ "name": "attachTransparentBackgroundForHit",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "No mouse clicks or moves will be generated for the container unless it has a background covering its area."},
{ "name": "attribute",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Calls the <code>attribute()</code> method of each XML object in the XMLList and returns an XMLList of the results, which match the given <code>attributeName</code>."},
{ "name": "attributes",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Calls the <code>attributes()</code> method of each XML object in the XMLList object and returns an XMList of attributes for each XML object."},
{ "name": "attributes",
  "type": "Property",
  "class": "org.apache.royale.utils.JXON",
  "description": "Attributes are saved as an object so simple dot or bracket notation can be used to retrieve attribute values."},
{ "name": "authenticated",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Indicates if this channel is authenticated."},
{ "name": "authenticated",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": "Indicates if this MessageAgent is using an authenticated connection to its destination."},
{ "name": "authenticated",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "Indicates whether the ChannelSet has an underlying Channel that successfully authenticated with its endpoint."},
{ "name": "auto",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.drawer.ResponsiveDrawer",
  "description": "A boolean flag to activate \"auto\" effect selector."},
{ "name": "auto",
  "type": "Property",
  "class": "org.apache.royale.core.layout.MarginData",
  "description": ""},
{ "name": "autoAdjust",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Specifies whether Flex rounds values."},
{ "name": "autoConnect",
  "type": "Property",
  "class": "mx.messaging.AbstractProducer",
  "description": "If <code>true</code> the Producer automatically connects to its destination the first time the <code>send()</code> method is called."},
{ "name": "autoLayout",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": "If <code>true</code>, measurement and layout are done when the position or size of a child is changed."},
{ "name": "autoLayout",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "If <code>true</code>, measurement and layout are done when the position or size of a child is changed."},
{ "name": "autoLoad",
  "type": "Property",
  "class": "org.apache.royale.jewel.ModuleLoader",
  "description": ""},
{ "name": "autoResizeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxView",
  "description": "Adapt the popup list to the right position taking into account if we are in DESKTOP/TABLET screen size or in PHONE screen size"},
{ "name": "autoReverse",
  "type": "Property",
  "class": "mx.states.Transition",
  "description": "Set to <code>true</code> to specify that this transition applies to both the forward and reverse view state changes."},
{ "name": "autoScrollIfNecessary",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "autoScrollIfNecessary",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Handle a scroll event during a \"drag\" selection."},
{ "name": "autoSkip",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "true to skip automatically next step"},
{ "name": "autoTrim",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.StringValidator",
  "description": "Auto trim the entered text before validation"},
{ "name": "autofocus",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Button",
  "description": "Whether the button is autofocused"},
{ "name": "autofocus",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Textarea",
  "description": "Whether the textarea is autofocused"},
{ "name": "autofocus",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Input",
  "description": "Whether the input is autofocused"},
{ "name": "available",
  "type": "Property",
  "class": "mx.external.ExternalInterface",
  "description": "Indicates whether this player is in a container that offers an external interface."},
{ "name": "axes",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "The set of axes associated with this transform."},
{ "name": "axis",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "The axis object associated with this renderer."},
{ "name": "axis",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": "The axis object associated with this renderer."},
{ "name": "axisGroup",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IAxisBead",
  "description": "The group space to use as the drawing area for the axis parts (lines, ticks, labels, etc."},
{ "name": "axisGroup",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": "The container space for lines, tick marks, etc."},
{ "name": "axisHeight",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IHorizontalAxisBead",
  "description": "The overall height of the axis, including its labels."},
{ "name": "axisHeight",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalCategoryAxisBead",
  "description": "The height of the horizontal axis."},
{ "name": "axisHeight",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalLinearAxisBead",
  "description": "The height of the horizontal axis."},
{ "name": "axisStroke",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IAxisBead",
  "description": "The stroke used for the axis line"},
{ "name": "axisStroke",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": "The stroke used to draw the line for the axis."},
{ "name": "axisWidth",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IVerticalAxisBead",
  "description": "The overall width of the horizontal axis."},
{ "name": "axisWidth",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalCategoryAxisBead",
  "description": "The overall width of the axis."},
{ "name": "axisWidth",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalLinearAxisBead",
  "description": ""},
{ "name": "azimuth",
  "type": "Property",
  "class": "org.apache.royale.svg.DiffuseLightingFilterElement",
  "description": ""},
{ "name": "b",
  "type": "Property",
  "class": "org.apache.royale.geom.Matrix",
  "description": ""},
{ "name": "ba",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "backIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "backInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "backOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "backfaceVisibility",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "background",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Alpha (transparency) value for the background (adopts default value if undefined during cascade)."},
{ "name": "backgroundAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": "Alpha (transparency) value for the background (adopts default value if undefined during cascade)."},
{ "name": "backgroundAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Alpha (transparency) value for the background (adopts default value if undefined during cascade)."},
{ "name": "backgroundAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Alpha (transparency) value for the background (adopts default value if undefined during cascade)."},
{ "name": "backgroundAlphaProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "backgroundAttachment",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundBlendMode",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundClip",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": ""},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Background color of the text (adopts default value if undefined during cascade)."},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": "Background color of the text (adopts default value if undefined during cascade)."},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Background color of the text (adopts default value if undefined during cascade)."},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Background color of the text (adopts default value if undefined during cascade)."},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SolidBackgroundBead",
  "description": "The background color"},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "backgroundColor",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "backgroundColor0",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AlternatingBackgroundColorStringItemRenderer",
  "description": ""},
{ "name": "backgroundColor1",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AlternatingBackgroundColorStringItemRenderer",
  "description": ""},
{ "name": "backgroundColorProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "backgroundElements",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Sets an array of background ChartElement objects that appear below any data series rendered by the chart."},
{ "name": "backgroundElements",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Sets an array of background ChartElement objects that appear below any data series rendered by the chart."},
{ "name": "backgroundImage",
  "type": "Property",
  "class": "spark.components.BorderContainer",
  "description": ""},
{ "name": "backgroundImage",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundImage",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "backgroundImage",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "backgroundImage",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "backgroundImage",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "backgroundManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "backgroundManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.utils.NumberLineUserData",
  "description": ""},
{ "name": "backgroundManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "backgroundManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.NumberLineFactory",
  "description": ""},
{ "name": "backgroundManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "@private This API peeks at the background manager."},
{ "name": "backgroundOrigin",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundPosition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundRepeat",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "backgroundSize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "barWidthRatio",
  "type": "Property",
  "class": "mx.charts.chartClasses.IBar",
  "description": "Specifies how wide to render the items relative to the category."},
{ "name": "barWidthRatio",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Specifies how wide to render the bars relative to the category width."},
{ "name": "barWidthRatio",
  "type": "Property",
  "class": "mx.charts.series.BarSet",
  "description": "Specifies how wide to render the bars relative to the category width."},
{ "name": "baseAtZero",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Specifies whether Flex tries to keep the <code>minimum</code> and <code>maximum</code> values rooted at zero."},
{ "name": "baseClasses",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "For a \"class\" kind TypeDefinition, this returns the TypeDefinitions of the base classes (inheritance chain)."},
{ "name": "baseColor",
  "type": "Property",
  "class": "org.apache.royale.core.IColorSpectrumModel",
  "description": "The color upon which changes in saturation and value will be performed"},
{ "name": "baseColor",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ColorSpectrumModel",
  "description": ""},
{ "name": "baseColor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorSpectrum",
  "description": ""},
{ "name": "baseURL",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "The URL that the HTTPService object should use when computing relative URLs."},
{ "name": "baseline",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "The baseline position for the axis."},
{ "name": "baseline",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The computed minimum value for the axis as long as this value is greater than 0."},
{ "name": "baseline",
  "type": "Property",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "baseline",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Number that specifies the baseline of the ConstraintRow instance, in pixels, either relative to the top edge of the row or to the max ascent of the elements contained in this row."},
{ "name": "baselineFontDescription",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "baselineFontDescription",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "baselineFontSize",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "baselineFontSize",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "baselinePosition",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "The y-coordinate of the baseline of the first line of text of the component."},
{ "name": "baselinePosition",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "baselinePosition",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The baselinePosition of a Container is calculated as if there was a UITextField using the Container's styles whose top is at viewMetrics."},
{ "name": "baselinePosition",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": ""},
{ "name": "baselinePosition",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": ""},
{ "name": "baselineShift",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Amount to shift the baseline from the <code>dominantBaseline</code> value."},
{ "name": "baselineShift",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Amount to shift the baseline from the <code>dominantBaseline</code> value."},
{ "name": "baselineShift",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Amount to shift the baseline from the <code>dominantBaseline</code> value."},
{ "name": "baselineShift",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "baselineShiftProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "baselineZero",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "baselineZero",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.core.Strand",
  "description": "The beads are not automatically added to the strand."},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": ""},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": "The array property that is used to add additional beads to an MXML tag."},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.createjs.Application",
  "description": "The array property that is used to add additional beads to an MXML tag."},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": "The array property that is used to add additional beads to an MXML tag."},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": ""},
{ "name": "beads",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "beadsAdded",
  "type": "Event",
  "description": "Set a different class for doubleClick events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.SimpleHorizontalLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": ""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.SimpleVerticalLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.FormLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.TableLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.FormItemLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.GridLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beadsAddedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.BasicLayout",
  "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform \"removeElement\" and then \"addElement\""},
{ "name": "beforeContent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IListMarkerFormat",
  "description": "@copy ListMarkerFormat#beforeContent"},
{ "name": "beforeContent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Specifies a string that goes before the marker."},
{ "name": "beforeContentProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": ""},
{ "name": "beforeFirst",
  "type": "Property",
  "class": "mx.collections.IViewCursor",
  "description": "If the cursor is located before the first item in the view, this property is <code>true</code>."},
{ "name": "beforeFirst",
  "type": "Property",
  "class": "mx.collections.LeafNodeCursor",
  "description": ""},
{ "name": "beforeFirst",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalViewCursor",
  "description": ""},
{ "name": "beforeFirst",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "beforeLayout",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutHost",
  "description": "Invoked prior to performing the layout."},
{ "name": "beforeLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MXMLItemRenderer",
  "description": ""},
{ "name": "beforeLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "Provides a place for pre-layout actions."},
{ "name": "beforeLayout",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutHost",
  "description": ""},
{ "name": "beforeLayout",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.ChartView",
  "description": "ChartView overrides performLayout so that the exact area of the ChartDataGroup can be calculated so the chart's layout algorithm knows precisely the dimensions of chart for its item renderers."},
{ "name": "beforeLayout",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "beforeLayout",
  "type": "Method",
  "class": "spark.components.beads.GroupView",
  "description": "Adjusts the size of the host after the layout has been run if needed"},
{ "name": "begin",
  "type": "Method",
  "class": "mx.graphics.IFill",
  "description": "Starts the fill."},
{ "name": "begin",
  "type": "Method",
  "class": "mx.graphics.LinearGradient",
  "description": ""},
{ "name": "begin",
  "type": "Method",
  "class": "mx.graphics.SolidColor",
  "description": ""},
{ "name": "beginCompose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "beginCompositeOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Begins a new group of operations."},
{ "name": "beginCompositeOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "beginFill",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "beginFill",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "<i>Note: With the exception of the <code>beginGradientFill()</code> and <code>beginShaderFill()</code> methods, the following information from the <code>flash."},
{ "name": "beginFill",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "beginGeneration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "The text flow generation before the operation."},
{ "name": "beginGradientFill",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "beginIndex",
  "type": "Property",
  "class": "mx.controls.textClasses.TextRange",
  "description": "Zero-based index in the control's text field of the first character in the range."},
{ "name": "beginInteraction",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the current ISelectionManager instance."},
{ "name": "beginInterpolation",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Called by the SeriesInterpolate effect to initiate an interpolation effect."},
{ "name": "beginInterpolation",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "beginInterpolation",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "beginInterpolation",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "beginMouseCapture",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ISandboxSupport",
  "description": "Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox."},
{ "name": "beginMouseCapture",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox."},
{ "name": "beginMouseCapture",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox."},
{ "name": "beginStroke",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": "JS needs some way to know the stroke is starting if there isn't going to be an beginFill call"},
{ "name": "beginTween",
  "type": "Method",
  "class": "mx.charts.effects.effectClasses.SeriesEffectInstance",
  "description": "Initializes the tweening calculations and sets up the <code>interpolationValues</code> Array for the number of items equal to the <code>elementCount</code> property."},
{ "name": "beyondParcel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "bidiLevel",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "bidiLevel",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "binary",
  "type": "Property",
  "class": "org.apache.royale.core.IBinaryImageModel",
  "description": "The BinaryData of the image."},
{ "name": "binary",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.BinaryImageModel",
  "description": "The BinaryData of the image."},
{ "name": "binary",
  "type": "Property",
  "class": "org.apache.royale.core.IBinaryImage",
  "description": "The BinaryData of the image."},
{ "name": "binary",
  "type": "Property",
  "class": "org.apache.royale.html.BinaryImage",
  "description": "The binary bitmap data."},
{ "name": "binary",
  "type": "Property",
  "class": "org.apache.royale.svg.BinaryImage",
  "description": "The binary bitmap data."},
{ "name": "binaryData",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "The data to be uploaded."},
{ "name": "bindTo",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "bindableElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "bindableElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "@private"},
{ "name": "blRadius",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": "The corner radius of the bottom left corner of the rounded rectangle that is casting the shadow."},
{ "name": "blendMode",
  "type": "Property",
  "class": "spark.components.Group",
  "description": "A value from the BlendMode class that specifies which blend mode to use."},
{ "name": "blendMode",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "blendMode",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "blob",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileModel",
  "description": ""},
{ "name": "blockIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "The index of this block in the table text flow layout"},
{ "name": "blockProgression",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies a vertical or horizontal progression of line placement."},
{ "name": "blockProgression",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies a vertical or horizontal progression of line placement."},
{ "name": "blockProgression",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies a vertical or horizontal progression of line placement."},
{ "name": "blockProgression",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "blockProgressionProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "blockSize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "blue",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "The blue component of the drop shadow."},
{ "name": "blue",
  "type": "Property",
  "class": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": "The blue value."},
{ "name": "blurX",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": "The amount of horizontal blur."},
{ "name": "blurXFrom",
  "type": "Property",
  "class": "mx.effects.Glow",
  "description": "The starting amount of horizontal blur."},
{ "name": "blurXTo",
  "type": "Property",
  "class": "mx.effects.Glow",
  "description": "The ending amount of horizontal blur."},
{ "name": "blurY",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": "The amount of vertical blur."},
{ "name": "blurYFrom",
  "type": "Property",
  "class": "mx.effects.Glow",
  "description": "The starting amount of vertical blur."},
{ "name": "blurYTo",
  "type": "Property",
  "class": "mx.effects.Glow",
  "description": "The ending amount of vertical blur."},
{ "name": "bodies",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.ActionMessage",
  "description": "The array of MessageBody instances."},
{ "name": "body",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "The body of a message contains the specific data that needs to be delivered to the remote destination."},
{ "name": "body",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "The body of a message contains the specific data that needs to be delivered to the remote destination."},
{ "name": "body",
  "type": "Property",
  "class": "mx.messaging.messages.IMessage",
  "description": "The body of a message contains the specific data that needs to be delivered to the remote destination."},
{ "name": "body",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "The body of a message contains the specific data that needs to be delivered to the remote destination."},
{ "name": "bold",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "bookmark",
  "type": "Property",
  "class": "mx.collections.IViewCursor",
  "description": "Provides access to a bookmark that corresponds to the item returned by the <code>current</code> property."},
{ "name": "bookmark",
  "type": "Property",
  "class": "mx.collections.LeafNodeCursor",
  "description": ""},
{ "name": "bookmark",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalViewCursor",
  "description": ""},
{ "name": "bookmark",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "bool",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "bootstrapLoaderInfoURL",
  "type": "Property",
  "class": "mx.managers.SystemManagerGlobals",
  "description": ""},
{ "name": "border",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.CardInner",
  "description": "A boolean flag to activate \"mdl-card--border\" effect selector."},
{ "name": "border",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "border",
  "type": "Property",
  "class": "org.apache.royale.core.layout.LayoutData",
  "description": ""},
{ "name": "border",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "border",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "borderAlpha",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "borderBlockEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBlockEndColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBlockEndStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBlockEndWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBlockStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBlockStartColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBlockStartStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBlockStartWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBottom",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBottomColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Color of the bottom border (adopts default value if undefined during cascade)."},
{ "name": "borderBottomColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Color of the bottom border (adopts default value if undefined during cascade)."},
{ "name": "borderBottomColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Color of the bottom border (adopts default value if undefined during cascade)."},
{ "name": "borderBottomColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBottomColorProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderBottomLeftRadius",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBottomPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the priority when drawing cell boundaries."},
{ "name": "borderBottomPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the priority when drawing cell boundaries."},
{ "name": "borderBottomPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the priority when drawing cell boundaries."},
{ "name": "borderBottomPriorityProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderBottomRightRadius",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBottomStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBottomWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Bottom border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderBottomWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Bottom border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderBottomWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Bottom border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderBottomWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderBottomWidthProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderCollapse",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderColor",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "borderColor",
  "type": "Property",
  "class": "spark.components.BorderContainer",
  "description": ""},
{ "name": "borderColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderColor",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "borderColor",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "borderColor",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "borderColor",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "borderImage",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderImageOutset",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderImageRepeat",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderImageSlice",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderImageSource",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderImageWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderInlineEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderInlineEndColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderInlineEndStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderInlineEndWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderInlineStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderInlineStartColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderInlineStartStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderInlineStartWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderLeft",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderLeftColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Color of the left border (adopts default value if undefined during cascade)."},
{ "name": "borderLeftColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Color of the left border (adopts default value if undefined during cascade)."},
{ "name": "borderLeftColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Color of the left border (adopts default value if undefined during cascade)."},
{ "name": "borderLeftColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderLeftColorProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderLeftPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the priority when drawing cell boundaries."},
{ "name": "borderLeftPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the priority when drawing cell boundaries."},
{ "name": "borderLeftPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the priority when drawing cell boundaries."},
{ "name": "borderLeftPriorityProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderLeftStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderLeftWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Left border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderLeftWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Left border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderLeftWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Left border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderLeftWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderLeftWidthProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderMetrics",
  "type": "Property",
  "class": "mx.skins.Border",
  "description": "The thickness of the border edges."},
{ "name": "borderMetrics",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Returns an EdgeMetrics object that has four properties: <code>left</code>, <code>top</code>, <code>right</code>, and <code>bottom</code>."},
{ "name": "borderMetrics",
  "type": "Property",
  "class": "org.apache.royale.core.IViewportModel",
  "description": "Size of the borders."},
{ "name": "borderMetrics",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ViewportModel",
  "description": ""},
{ "name": "borderRadius",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderRadius",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "borderRadius",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SolidBackgroundBead",
  "description": "The opacity (alpha)."},
{ "name": "borderRadius",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "borderRadius",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "borderRadius",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "borderRight",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderRightColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Color of the right border (adopts default value if undefined during cascade)."},
{ "name": "borderRightColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Color of the right border (adopts default value if undefined during cascade)."},
{ "name": "borderRightColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Color of the right border (adopts default value if undefined during cascade)."},
{ "name": "borderRightColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderRightColorProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderRightPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the priority when drawing cell boundaries."},
{ "name": "borderRightPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the priority when drawing cell boundaries."},
{ "name": "borderRightPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the priority when drawing cell boundaries."},
{ "name": "borderRightPriorityProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderRightStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderRightWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Right border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderRightWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Right border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderRightWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Right border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderRightWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderRightWidthProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderSpacing",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderStyle",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "borderStyle",
  "type": "Property",
  "class": "mx.controls.Tree",
  "description": "Border Style"},
{ "name": "borderStyle",
  "type": "Property",
  "class": "spark.components.BorderContainer",
  "description": ""},
{ "name": "borderStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderStyle",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "borderStyle",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "borderStyle",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "borderStyle",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "borderTop",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderTopColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Color of the top border (adopts default value if undefined during cascade)."},
{ "name": "borderTopColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Color of the top border (adopts default value if undefined during cascade)."},
{ "name": "borderTopColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Color of the top border (adopts default value if undefined during cascade)."},
{ "name": "borderTopColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderTopColorProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderTopLeftRadius",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderTopPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the priority when drawing cell boundaries."},
{ "name": "borderTopPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the priority when drawing cell boundaries."},
{ "name": "borderTopPriority",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the priority when drawing cell boundaries."},
{ "name": "borderTopPriorityProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderTopRightRadius",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderTopStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderTopWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Top border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderTopWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Top border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderTopWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Top border width in pixels (adopts default value if undefined during cascade) <p>Legal values are numbers from 0 to 128 and FormatValue."},
{ "name": "borderTopWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderTopWidthProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "borderVisible",
  "type": "Property",
  "class": "mx.core.ScrollControlBase",
  "description": ""},
{ "name": "borderVisible",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "Number of pixels between the container's bottom border and the bottom of its content area."},
{ "name": "borderVisible",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "borderVisible",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "borderWeight",
  "type": "Property",
  "class": "spark.components.BorderContainer",
  "description": ""},
{ "name": "borderWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "borderWidth",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "borderWidth",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "borderWidth",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "borderWidth",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "The vertical distance in pixels from the bottom edge of the component to the anchor target's bottom edge."},
{ "name": "bottom",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "<p>For components, this layout constraint property is a facade on top of the similarly-named style."},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "mx.core.EdgeMetrics",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.mdl.Menu",
  "description": "Position the menu relative to the associated button."},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": ""},
{ "name": "bottom",
  "type": "Property",
  "class": "org.apache.royale.core.layout.EdgeData",
  "description": ""},
{ "name": "bottomLeftRadiusX",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The x radius of the bottom left corner of the rectangle."},
{ "name": "bottomLeftRadiusY",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The y radius of the bottom left corner of the rectangle."},
{ "name": "bottomPosition",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": "A boolean flag to activate \"mdl-tooltip--bottom\" effect selector."},
{ "name": "bottomRight",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "bottomRightRadiusX",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The x radius of the bottom right corner of the rectangle."},
{ "name": "bounceIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "bounceInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "bounceOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "boundedValues",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "An Array of BoundedValue objects describing the data in the element."},
{ "name": "bounds",
  "type": "Property",
  "class": "mx.charts.chartClasses.RenderData",
  "description": "The bounds of all of the items a series displays on screen, relative to the series's coordinate system."},
{ "name": "bounds",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineMirrorRegion",
  "description": ""},
{ "name": "boundsChanged",
  "type": "Event",
  "description": ""},
{ "name": "boxDecorationBreak",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "boxShadow",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "boxSizing",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "brRadius",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": "The corner radius of the bottom right corner of the rounded rectangle that is casting the shadow."},
{ "name": "breakAfter",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "breakBefore",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "breakInside",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "breakOpportunity",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Controls where lines are allowed to break when breaking wrapping text into multiple lines."},
{ "name": "breakOpportunity",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Controls where lines are allowed to break when breaking wrapping text into multiple lines."},
{ "name": "breakOpportunity",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Controls where lines are allowed to break when breaking wrapping text into multiple lines."},
{ "name": "breakOpportunity",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "breakOpportunityProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "brightnessFactor",
  "type": "Property",
  "class": "org.apache.royale.svg.AdjustBrightnessFilterElement",
  "description": "The brightnessFactor value, can be between 0 and 255."},
{ "name": "browse",
  "type": "Method",
  "class": "mx.net.FileReference",
  "description": ""},
{ "name": "browse",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileBrowser",
  "description": "Open up the system file browser."},
{ "name": "browse",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileBrowserWithFilter",
  "description": ""},
{ "name": "browser",
  "type": "Property",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": "The browser (if any)"},
{ "name": "bubbles",
  "type": "Property",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "bubbles",
  "type": "Property",
  "class": "org.apache.royale.events.DragEventBase",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.BlurFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.IChainableFilter",
  "description": "This method builds the filter's children."},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.SpreadFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.DiffuseLightingFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.BlendFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.OffsetFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.MergeFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.AdjustBrightnessFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.RetainColorBevelFilter",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.FullAlphaFilterElement",
  "description": ""},
{ "name": "build",
  "type": "Method",
  "class": "org.apache.royale.svg.InvertFilterElement",
  "description": ""},
{ "name": "buildLabelCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Populates the <code>labelCache</code> property with labels representing the current values of the axis."},
{ "name": "buildMinorTickCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Builds an Array of positions for the minor tick marks Array that is generated by this axis."},
{ "name": "buildMinorTickCache",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": ""},
{ "name": "buildSubSeries",
  "type": "Method",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Processes the Array of sub-series for display, when necessary."},
{ "name": "buildSubSeries",
  "type": "Method",
  "class": "mx.charts.series.ColumnSet",
  "description": ""},
{ "name": "buildSubscribeMessage",
  "type": "Method",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Returns a subscribe message."},
{ "name": "buildUnsubscribeMessage",
  "type": "Method",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Returns an unsubscribe message."},
{ "name": "builtInItems",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenu",
  "description": ""},
{ "name": "bundleName",
  "type": "Property",
  "class": "mx.resources.IResourceBundle",
  "description": "A name that identifies this resource bundle, such as <code>\"MyResources\"</code>."},
{ "name": "bundleName",
  "type": "Property",
  "class": "mx.resources.ResourceBundle",
  "description": ""},
{ "name": "bundles",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleLocalizedValuesImpl",
  "description": "The map of bundles."},
{ "name": "busy",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "True if we're processing a addItem or removeItem call"},
{ "name": "button",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "see https://developer."},
{ "name": "button",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.IComboBoxView",
  "description": "The sub-component used for the button to activate the pop-up."},
{ "name": "button",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxView",
  "description": "The Button component of the ComboBox."},
{ "name": "button",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Which mouse button was pressed."},
{ "name": "buttonDown",
  "type": "Event",
  "description": "Dispatched when the user presses the Button control."},
{ "name": "buttonDown",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "buttonDown",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Indicates whether the primary mouse button is pressed (true) or not (false)."},
{ "name": "buttonDown",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": ""},
{ "name": "buttonFlags",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": "The buttons to display on the Alert as bit-mask values."},
{ "name": "buttonMode",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "From flash."},
{ "name": "buttonWidth",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": "Width of each Alert button, in pixels."},
{ "name": "buttonWidths",
  "type": "Property",
  "class": "org.apache.royale.html.ButtonBar",
  "description": ""},
{ "name": "buttonWidths",
  "type": "Property",
  "class": "mx.controls.ToggleButtonBar",
  "description": ""},
{ "name": "buttonWidths",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.ButtonBarLayout",
  "description": "An array of widths (Number), one per button."},
{ "name": "buttonWidths",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ButtonBarModel",
  "description": "The widths of each button."},
{ "name": "buttons",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "see https://developer."},
{ "name": "buttons",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": ""},
{ "name": "bytesAvailable",
  "type": "Property",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "bytesAvailable",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "The total number of bytes available to read from the current position."},
{ "name": "bytesLoaded",
  "type": "Property",
  "class": "mx.events.ProgressEvent",
  "description": ""},
{ "name": "bytesLoaded",
  "type": "Property",
  "class": "org.apache.royale.net.URLLoader",
  "description": "The number of bytes loaded so far."},
{ "name": "bytesLoaded",
  "type": "Property",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": "The number of bytes loaded so far."},
{ "name": "bytesLoaded",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "The number of bytes loaded so far."},
{ "name": "bytesTotal",
  "type": "Property",
  "class": "mx.events.ProgressEvent",
  "description": ""},
{ "name": "bytesTotal",
  "type": "Property",
  "class": "org.apache.royale.net.URLLoader",
  "description": "The total number of bytes (if available)."},
{ "name": "bytesTotal",
  "type": "Property",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": "The total number of bytes (if available)."},
{ "name": "bytesTotal",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "The total number of bytes (if avaailable)."},
{ "name": "c",
  "type": "Property",
  "class": "org.apache.royale.geom.Matrix",
  "description": ""},
{ "name": "cache",
  "type": "Property",
  "class": "mx.charts.chartClasses.RenderData",
  "description": "The list of ChartItems representing the items in the series's <code>dataProvider</code>."},
{ "name": "cacheAsBitmap",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "cacheAsBitmap",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "cacheAsBitmap",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "cacheAsBitmap",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "cacheContainerStyleInformation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "cacheDefaultValues",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Caches the values stored in the <code>measureName</code> property from the original dataProvider items in the chart item's <code>fieldName</code> property."},
{ "name": "cacheDimensions",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Stores the <code>majorSize</code> for the specified ILayoutElement at index, and updates the <code>minorSize</code> and <code>minMinorSize</code> properties."},
{ "name": "cacheIndexValues",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Caches the values stored in the <code>measureName</code> property from the original dataProvider items in the chart item's <code>fieldName</code> property."},
{ "name": "cacheLineBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "cacheNamedValues",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Caches the values stored in the <code>measureName</code> property from the original dataProvider items in the chart item's <code>fieldName</code> property."},
{ "name": "cacheParagraphStyleInformation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "cacheStyleInformation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "calcUBoundsToFitTBounds",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Calculates (x,y) such that the bounding box (0,0,x,y) transformed with <code>matrix</code> will have bounding box (0,0,w,h)."},
{ "name": "calcUBoundsToFitTBoundsHeight",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Calculates (x,y) such that the bounding box (0,0,x,y) transformed with <code>matrix</code> will have bounding box with height equal to <code>h</code>."},
{ "name": "calcUBoundsToFitTBoundsWidth",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Calculates (x,y) such that the bounding box (0,0,x,y) transformed with <code>matrix</code> will have bounding box with width equal to <code>w</code>."},
{ "name": "calculateComputedFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "calculateComputedFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": ""},
{ "name": "calculateDisabledRange",
  "type": "Method",
  "class": "mx.charts.chartClasses.DateRangeUtilities",
  "description": "Returns number of milliseconds disabled in a given range"},
{ "name": "calculateDropIndex",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the index where a new item should be inserted if the user releases the mouse at the specified coordinates while completing a drag and drop gesture."},
{ "name": "calculateDropIndex",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "Returns the index where a new item should be inserted if the user releases the mouse at the specified coordinates while completing a drag and drop gesture."},
{ "name": "calculateDropIndex",
  "type": "Method",
  "class": "spark.layouts.TileLayout",
  "description": ""},
{ "name": "calculateDropIndicatorBounds",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Calculates the bounds for the drop indicator that provides visual feedback to the user of where the items will be inserted at the end of a drag and drop gesture."},
{ "name": "calculateDropIndicatorBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "Calculates the bounds for the drop indicator that provides visual feedback to the user of where the items will be inserted at the end of a drag and drop gesture."},
{ "name": "calculateDropIndicatorBounds",
  "type": "Method",
  "class": "spark.layouts.TileLayout",
  "description": ""},
{ "name": "calculateLeadingParameters",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "calculateSelectionBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "calculateSummary",
  "type": "Method",
  "class": "mx.collections.ISummaryCalculator",
  "description": "Flex calls this method when a new value needs to be added to the summary value."},
{ "name": "calculateSummary",
  "type": "Method",
  "class": "mx.collections.DefaultSummaryCalculator",
  "description": ""},
{ "name": "calculateSummaryOfSummary",
  "type": "Method",
  "class": "mx.collections.ISummaryCalculator",
  "description": "Flex calls this method when a new summary value needs to be added to the already computed summary."},
{ "name": "calculateSummaryOfSummary",
  "type": "Method",
  "class": "mx.collections.DefaultSummaryCalculator",
  "description": ""},
{ "name": "calculateUnderlineOffset",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.utils.AdornmentUtils",
  "description": ""},
{ "name": "call",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.amf.AMFNetConnection",
  "description": "Call a server function."},
{ "name": "call",
  "type": "Method",
  "class": "mx.net.NetConnection",
  "description": "call"},
{ "name": "call",
  "type": "Method",
  "class": "mx.external.ExternalInterface",
  "description": "Calls a function exposed by the browser, passing zero or more arguments."},
{ "name": "callInContext",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ISWFContext",
  "description": "A way to call a method in a client controlled context."},
{ "name": "callInContext",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.SWFContext",
  "description": ""},
{ "name": "callLater",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Queues a function to be called later."},
{ "name": "callLater",
  "type": "Method",
  "class": "org.apache.royale.utils",
  "description": ""},
{ "name": "callLater",
  "type": "Method",
  "class": "org.apache.royale.core.CallLaterBead",
  "description": "Calls a function after some amount of time."},
{ "name": "callProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.Proxy",
  "description": ""},
{ "name": "callProperty",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "callTheComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFactoryComposer",
  "description": ""},
{ "name": "callTheComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FactoryComposer",
  "description": ""},
{ "name": "callTheComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TCMFactoryComposer",
  "description": ""},
{ "name": "callTokenResponders",
  "type": "Method",
  "class": "mx.rpc.events.AbstractEvent",
  "description": "Does nothing by default."},
{ "name": "callTokenResponders",
  "type": "Method",
  "class": "mx.rpc.events.ResultEvent",
  "description": ""},
{ "name": "callTokenResponders",
  "type": "Method",
  "class": "mx.rpc.events.FaultEvent",
  "description": ""},
{ "name": "callbackWithTextLines",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "Sends the created ITextLine objects to the client using the supplied callback function."},
{ "name": "callbackWithTextLines",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.NumberLineFactory",
  "description": ""},
{ "name": "canHaveChildren",
  "type": "Method",
  "class": "mx.collections.IHierarchicalData",
  "description": "Returns <code>true</code> if the node can contain children."},
{ "name": "canHaveChildren",
  "type": "Method",
  "class": "mx.collections.HierarchicalData",
  "description": ""},
{ "name": "canHaveChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.IHierarchicalData",
  "description": "Returns <code>true</code> if the node can contain children."},
{ "name": "canHaveChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "canOwnFlowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "canRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Indicates whether there is currently an operation that can be redone."},
{ "name": "canRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "canShareWithNext",
  "type": "Method",
  "class": "spark.core.IGraphicElement",
  "description": "Returns <code>true</code> if this IGraphicElement is compatible and can share display objects with the next IGraphicElement in the sequence."},
{ "name": "canShareWithPrevious",
  "type": "Method",
  "class": "spark.core.IGraphicElement",
  "description": "Returns <code>true</code> if this IGraphicElement is compatible and can share display objects with the previous IGraphicElement in the sequence."},
{ "name": "canUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Indicates whether there is currently an operation that can be undone."},
{ "name": "canUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "canUndo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "Test if this operation be placed on the undo stack."},
{ "name": "canWatch",
  "type": "Method",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Lets you determine if the host exposes a data-binding event on the property."},
{ "name": "cancel",
  "type": "Method",
  "class": "mx.rpc.AbstractInvoker",
  "description": "Cancels the last service invocation or an invokation with the specified ID."},
{ "name": "cancel",
  "type": "Method",
  "class": "mx.rpc.remoting.Operation",
  "description": "inheritDoc"},
{ "name": "cancel",
  "type": "Method",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "cancel resolves the task as \"canceled\""},
{ "name": "cancel",
  "type": "Method",
  "class": "spark.components.gridClasses.IGridItemEditor",
  "description": "Called by the DataGrid when an open editor is being closed without saving the data in the editor."},
{ "name": "cancel",
  "type": "Method",
  "class": "mx.rpc.http.HTTPService",
  "description": ""},
{ "name": "cancelButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "cancelButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "cancelFrame",
  "type": "Method",
  "class": "org.apache.royale.utils.AnimationUtil",
  "description": "Cancels the requestFrame with the specified id."},
{ "name": "cancelLabel",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "The label for the Cancel button in an Alert."},
{ "name": "cancelLabel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The label to use for the Cancel button."},
{ "name": "cancelLabel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The label to use for the Cancel button."},
{ "name": "cancelLabel",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": ""},
{ "name": "cancelLast",
  "type": "Method",
  "class": "mx.rpc.ActiveCalls",
  "description": ""},
{ "name": "cancelRefresh",
  "type": "Method",
  "class": "mx.collections.IGroupingCollection",
  "description": "If the refresh is performed asynchronously, cancels the refresh operation and stops the building of the groups."},
{ "name": "cancelRefresh",
  "type": "Method",
  "class": "mx.collections.GroupingCollection",
  "description": ""},
{ "name": "cancelRefresh",
  "type": "Method",
  "class": "mx.collections.IGroupingCollection2",
  "description": "If the refresh is performed asynchronously, cancels the refresh operation and stops the building of the groups."},
{ "name": "cancelRefresh",
  "type": "Method",
  "class": "mx.collections.GroupingCollection2",
  "description": ""},
{ "name": "cancelable",
  "type": "Property",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "caps",
  "type": "Property",
  "class": "mx.graphics.SolidColorStroke",
  "description": "Specifies the type of caps at the end of lines."},
{ "name": "capsHeight",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "capsLock",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "capsLock",
  "type": "Property",
  "class": "mx.core.Keyboard",
  "description": ""},
{ "name": "captionSide",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "captureEndValues",
  "type": "Method",
  "class": "org.apache.royale.effects.IEffect",
  "description": "Tries to compute final values for effect"},
{ "name": "captureEndValues",
  "type": "Method",
  "class": "org.apache.royale.effects.Effect",
  "description": ""},
{ "name": "captureEndValues",
  "type": "Method",
  "class": "org.apache.royale.effects.Move",
  "description": ""},
{ "name": "captureEndValues",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "capturePhoto",
  "type": "Method",
  "class": "org.apache.royale.cordova.Camera",
  "description": ""},
{ "name": "captureStartValues",
  "type": "Method",
  "class": "org.apache.royale.effects.IEffect",
  "description": "Tries to compute initial values for effect"},
{ "name": "captureStartValues",
  "type": "Method",
  "class": "org.apache.royale.effects.Effect",
  "description": ""},
{ "name": "captureStartValues",
  "type": "Method",
  "class": "org.apache.royale.effects.Move",
  "description": ""},
{ "name": "captureStartValues",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "caretChange",
  "type": "Event",
  "description": "Dispatched by the <code>grid</code> skin part when the caret position, size, or visibility has changed due to user interaction or being programmatically set."},
{ "name": "caretChange",
  "type": "Event",
  "description": "Dispatched after the caret changes."},
{ "name": "caretColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "caretColumnIndex",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>showCaretIndicator</code> is <code>true</code>, the column index of the <code>caretIndicator</code>."},
{ "name": "caretIndex",
  "type": "Property",
  "class": "spark.components.supportClasses.ListBase",
  "description": "Item that is currently in focus."},
{ "name": "caretIndicator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render the grid's caret indicator."},
{ "name": "caretIndicator",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "caretRowIndex",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>showCaretIndicator</code> is <code>true</code>, the row index of the <code>caretIndicator</code>."},
{ "name": "caseInsensitive",
  "type": "Property",
  "class": "mx.collections.SortField",
  "description": "Specifies whether the sort for this field should be case insensitive."},
{ "name": "caseInsensitive",
  "type": "Property",
  "class": "mx.collections.GroupingField",
  "description": "Set to <code>true</code> if the sort for this field should be case-insensitive."},
{ "name": "catch",
  "type": "Method",
  "class": "Promise",
  "description": ""},
{ "name": "catchCallLaterExceptions",
  "type": "Property",
  "class": "mx.core.UIComponentGlobals",
  "description": "A global flag that can is used to catch unhandled exceptions during execution of methods executed via callLater"},
{ "name": "categories",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "Return the list of categories"},
{ "name": "category",
  "type": "Property",
  "class": "mx.logging.ILogger",
  "description": "The category value for the logger."},
{ "name": "category",
  "type": "Property",
  "class": "mx.logging.LogLogger",
  "description": "The category this logger send messages for."},
{ "name": "category",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "First listed Category of this property."},
{ "name": "categoryField",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalCategoryAxisBead",
  "description": "The name of field within the chart data to used to categorize each of the axis data points."},
{ "name": "categoryField",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalCategoryAxisBead",
  "description": "The name of field within the chart data to used to categorize each of the axis data points."},
{ "name": "categoryField",
  "type": "Property",
  "class": "mx.charts.CategoryAxis",
  "description": "Specifies the field of the data provider containing the text for the labels."},
{ "name": "ceil",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "ceil a number to the nearest twip."},
{ "name": "cellCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": "The number of cells in the container."},
{ "name": "cellElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellContainer",
  "description": ""},
{ "name": "cellHeight",
  "type": "Property",
  "class": "mx.containers.Tile",
  "description": ""},
{ "name": "cellPadding",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "cellPadding specifies the amount of space between the border of the cell and its contents."},
{ "name": "cellPadding",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: cellPadding specifies the amount of space between the border of the cell and its contents."},
{ "name": "cellPadding",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "cellPadding specifies the amount of space between the border of the cell and its contents."},
{ "name": "cellPaddingProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "cellRange",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionState",
  "description": "Range of table cells in selection (null if no cells selected)"},
{ "name": "cellSpacing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "cellSpacing specifies how much space the user agent should leave between the left side of the table and the left-hand side of the leftmost column, the top of the table and the top side of the topmost row, and so on for the right and bottom of the table."},
{ "name": "cellSpacing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: cellSpacing specifies how much space the user agent should leave between the left side of the table and the left-hand side of the leftmost column, the top of the table and the top side of the topmost row, and so on for the right and bottom of the table."},
{ "name": "cellSpacing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "cellSpacing specifies how much space the user agent should leave between the left side of the table and the left-hand side of the leftmost column, the top of the table and the top side of the topmost row, and so on for the right and bottom of the table."},
{ "name": "cellSpacing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "TextLayoutFormat: cellSpacing specifies how much space the user agent should leave between the left side of the table and the left-hand side of the leftmost column, the top of the table and the top side of the topmost row, and so on for the right and bottom of the table."},
{ "name": "cellSpacingProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "cellWidth",
  "type": "Property",
  "class": "mx.containers.Tile",
  "description": ""},
{ "name": "cells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableRowElement",
  "description": ""},
{ "name": "cells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "Get an array of cells or null if the row contains no cells"},
{ "name": "cells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableColElement",
  "description": ""},
{ "name": "cells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColElement",
  "description": "Get a Vector of cells or null if the column contains no cells"},
{ "name": "center",
  "type": "Method",
  "class": "org.apache.royale.utils.UIUtils",
  "description": "Centers the given item relative to another item."},
{ "name": "centerGridView",
  "type": "Property",
  "class": "spark.components.gridClasses.GridLayout",
  "description": "Displays unlocked rows and columns."},
{ "name": "centerOnAddress",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "centerOnAddress",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Centers the map on the address given."},
{ "name": "centerPopUp",
  "type": "Method",
  "class": "mx.managers.PopUpManager",
  "description": "Centers a popup window over whatever window was used in the call to the <code>createPopUp()</code> or <code>addPopUp()</code> method."},
{ "name": "centerX",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.IWedgeItemRenderer",
  "description": "The X coordinate of the center point of the pie."},
{ "name": "centerX",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The X coordinate of the center of the pie."},
{ "name": "centerX",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The X coordinate of the center of the pie."},
{ "name": "centerY",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.IWedgeItemRenderer",
  "description": "The Y coordinate of the center of the pie."},
{ "name": "centerY",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The Y coordinate of the center of the pie."},
{ "name": "centerY",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The Y coordinate of the center of the pie."},
{ "name": "centered",
  "type": "Event",
  "description": ""},
{ "name": "cffHinting",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The type of CFF hinting used for this text."},
{ "name": "cffHinting",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The type of CFF hinting used for this text."},
{ "name": "cffHinting",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The type of CFF hinting used for this text."},
{ "name": "cffHintingProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "The change event is dispatched whenever the list's selection changes."},
{ "name": "change",
  "type": "Event",
  "description": "The change event is dispatched whenever the list's selection changes."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when Slider ends its change from one position to another."},
{ "name": "change",
  "type": "Event",
  "description": "The change event is dispatched whenever the list's selection changes."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the <code>selectedIndex</code> or <code>selectedItem</code> property changes as a result of user interaction."},
{ "name": "change",
  "type": "Event",
  "description": "Indicates a change of step"},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the selection changes in the chart."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user changes the text."},
{ "name": "change",
  "type": "Event",
  "description": "The change event is dispatched when the selectedDate is changed."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user changes the text."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the selected child container changes."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user checks or un-checks the CSSCheckBox."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when RadioButton is being selected/unselected."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the <code>selected</code> property changes for a toggle Button control."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user selects an item."},
{ "name": "change",
  "type": "Event",
  "description": "The change event is dispatched when the selectedDate is changed."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when selection changes as a result of user interaction."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched after a user editing operation is complete."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched after the selection has changed."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched after a user editing operation is complete."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when a Tab is selected"},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the value of the selected RadioButton control in this group changes."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user changes the color."},
{ "name": "change",
  "type": "Event",
  "description": "The change event is dispatched when the selectedDate is changed."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the value of the NumericStepper control changes as a result of user interaction."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user changes the text."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when RadioButton is being selected/unselected."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user checks or un-checks the CheckBox."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user selects an item."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when ToggleTextButton is being selected/unselected."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user selects an item."},
{ "name": "change",
  "type": "Event",
  "description": "A valueChange event is dispatched whenever the selected date changes."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the value of the selected RadioButton component in this group changes."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when a date is selected or changed."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when IconToggle is being selected/unselected."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "The change event is dispatched when the selectedDate is changed."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when text in the TextInput control changes through user input."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when Slider ends its change from one position to another."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when Switch is being selected/unselected."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when text in the TextArea control changes through user input."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when ToggleTextButton is being selected/unselected."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "The change event is dispatched whenever the selection changes."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the ComboBox contents changes as a result of user interaction, when the <code>selectedIndex</code> or <code>selectedItem</code> property changes, and, if the ComboBox control is editable, each time a keystroke is entered in the box."},
{ "name": "change",
  "type": "Event",
  "description": ""},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when the user checks or un-checks the CheckBox."},
{ "name": "change",
  "type": "Event",
  "description": "Dispatched when a date is selected or changed, and the DateChooser control closes."},
{ "name": "changeElementID",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Changes the ID of an element."},
{ "name": "changeElementID",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "changeEventName",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": ""},
{ "name": "changeFlowComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "changeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": ""},
{ "name": "changeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.SimpleList",
  "description": ""},
{ "name": "changeHandler",
  "type": "Method",
  "class": "mx.controls.MenuBar",
  "description": ""},
{ "name": "changeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.DropDownList",
  "description": ""},
{ "name": "changeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SolidBackgroundBead",
  "description": ""},
{ "name": "changeHandler",
  "type": "Method",
  "class": "org.apache.royale.binding.PropertyWatcher",
  "description": "The event handler that gets called when the change events are dispatched."},
{ "name": "changeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": ""},
{ "name": "changeMonth",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": ""},
{ "name": "changeStyleName",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Changes the styleName of an element or part of an element."},
{ "name": "changeStyleName",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "changeTypeName",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Changes the typeName of an element or part of an element."},
{ "name": "changeTypeName",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "changeValueByStep",
  "type": "Method",
  "class": "spark.components.supportClasses.Range",
  "description": "Increases or decreases <code>value</code> by <code>stepSize</code>."},
{ "name": "changeYear",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": ""},
{ "name": "changed",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "changing",
  "type": "Event",
  "description": "Dispatched when the selection is going to change."},
{ "name": "changingListenersInOtherSystemManagers",
  "type": "Property",
  "class": "mx.managers.SystemManagerGlobals",
  "description": ""},
{ "name": "channel",
  "type": "Property",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "The Channel that generated this event."},
{ "name": "channel",
  "type": "Property",
  "class": "mx.messaging.MessageResponder",
  "description": "Provides access to the Channel used to send the message."},
{ "name": "channelConnect",
  "type": "Event",
  "description": "Dispatched after the channel has connected to its endpoint."},
{ "name": "channelConnect",
  "type": "Event",
  "description": "Dispatched when the underlying Channel the MessageAgent is using connects."},
{ "name": "channelConnect",
  "type": "Event",
  "description": "Dispatched after a Channel in the ChannelSet has connected to its endpoint."},
{ "name": "channelConnectHandler",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Handles a CONNECT ChannelEvent."},
{ "name": "channelConnectHandler",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Handles a CONNECT ChannelEvent and redispatches the event."},
{ "name": "channelDisconnect",
  "type": "Event",
  "description": "Dispatched after the channel has disconnected from its endpoint."},
{ "name": "channelDisconnect",
  "type": "Event",
  "description": "Dispatched when the underlying Channel the MessageAgent is using disconnects."},
{ "name": "channelDisconnect",
  "type": "Event",
  "description": "Dispatched after a Channel in the ChannelSet has disconnected from its endpoint."},
{ "name": "channelDisconnectHandler",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Handles a DISCONNECT ChannelEvent."},
{ "name": "channelDisconnectHandler",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Handles a DISCONNECT ChannelEvent and redispatches the event."},
{ "name": "channelFailoverURIs",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": ""},
{ "name": "channelFault",
  "type": "Event",
  "description": "Dispatched after the channel has faulted."},
{ "name": "channelFault",
  "type": "Event",
  "description": "Dispatched when the underlying Channel the MessageAgent is using faults."},
{ "name": "channelFault",
  "type": "Event",
  "description": "Dispatched after a Channel in the ChannelSet has faulted."},
{ "name": "channelFaultHandler",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Handles a ChannelFaultEvent."},
{ "name": "channelFaultHandler",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Handles a ChannelFaultEvent and redispatches the event."},
{ "name": "channelId",
  "type": "Property",
  "class": "mx.messaging.events.ChannelEvent",
  "description": ""},
{ "name": "channelIds",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "The ids of the Channels used by the ChannelSet."},
{ "name": "channelSet",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": "Provides access to the ChannelSet used by the service."},
{ "name": "channelSet",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": "Provides access to the ChannelSet used by the MessageAgent."},
{ "name": "channelSet",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Provides access to the ChannelSet used by the service."},
{ "name": "channelSetMatchesDestinationConfig",
  "type": "Method",
  "class": "mx.messaging.config.ServerConfig",
  "description": "This method returns true iff the channelset specified has channels with ids or uris that match those found in the destination specified."},
{ "name": "channelSetMode",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": ""},
{ "name": "channelSets",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Provides access to the ChannelSets connected to the Channel."},
{ "name": "channels",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "Provides access to the Channels in the ChannelSet."},
{ "name": "charCode",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "CharCode of key press."},
{ "name": "characterFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.InsertTextOperation",
  "description": "The character format applied to the inserted text."},
{ "name": "characterFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The format attributes of the characters in the range."},
{ "name": "chart",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Refers to the chart component containing this element."},
{ "name": "chart",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.ChartBaseLayout",
  "description": "Returns the strand, cast as an instance of ChartBase."},
{ "name": "chart",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": "The base chart for this AxisRenderer."},
{ "name": "chartBaseChartSeriesStyles",
  "type": "Property",
  "class": "mx.charts.styles.HaloDefaults",
  "description": "The default selectors applied to the individual series in a chart."},
{ "name": "chartClick",
  "type": "Event",
  "description": "Dispatched when no data point is found under the mouse pointer when mouse is clicked on chart."},
{ "name": "chartDataGroup",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.ChartBaseLayout",
  "description": "Returns the object into which the chart elements are drawn or added."},
{ "name": "chartDataProvider",
  "type": "Property",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "The data provider assigned to the enclosing chart."},
{ "name": "chartDataProvider",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "The data provider assigned to the enclosing chart."},
{ "name": "chartDataProvider",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "The data provider assigned to the enclosing chart."},
{ "name": "chartDataProvider",
  "type": "Property",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": ""},
{ "name": "chartDataProvider",
  "type": "Property",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "chartDoubleClick",
  "type": "Event",
  "description": "Dispatched when no data point is found under the mouse pointer when mouse is double-clicked on chart."},
{ "name": "chartElement",
  "type": "Property",
  "class": "mx.charts.LegendItem",
  "description": "The chart element that is responsible for generating this legend item."},
{ "name": "chartItem",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "The chart item described by the hit data."},
{ "name": "chartState",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "The current transition state of the chart."},
{ "name": "chartStateChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "Called by the enclosing chart to indicate that the current state of the chart has changed."},
{ "name": "chartStateChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "chartStateChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "Called by the enclosing chart to indicate that the current state of the chart has changed."},
{ "name": "chartStateChanged",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": "Called by the chart to indicate when its current transition state has changed."},
{ "name": "check",
  "type": "Method",
  "class": "org.apache.royale.debugging",
  "description": "Traces a warning if the condition is not met."},
{ "name": "checkArrayTypes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.ArrayProperty",
  "description": ""},
{ "name": "checkChannelConsistency",
  "type": "Method",
  "class": "mx.messaging.config.ServerConfig",
  "description": "This method ensures that the destinations specified contain identical channel definitions."},
{ "name": "checkClassName",
  "type": "Property",
  "class": "org.apache.royale.html.CSSCheckBox",
  "description": ""},
{ "name": "checkbox",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": ""},
{ "name": "checkbox",
  "type": "Property",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": ""},
{ "name": "chgLinkState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ILinkElement",
  "description": ""},
{ "name": "child",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "child",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Calls the <code>child()</code> method of each XML object in the XMLList and returns an XMLList containing the children of with the specified property name, in order."},
{ "name": "child",
  "type": "Property",
  "class": "mx.modules.ModuleLoader",
  "description": "The DisplayObject created from the module factory."},
{ "name": "childAdd",
  "type": "Event",
  "description": "Dispatched after a child has been added to a legend."},
{ "name": "childDescriptors",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "Array of UIComponentDescriptor objects produced by the MXML compiler."},
{ "name": "childDescriptors",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Array of UIComponentDescriptor objects produced by the MXML compiler."},
{ "name": "childIndexChange",
  "type": "Event",
  "description": "Dispatched after the index (among the container children) of a container child changes."},
{ "name": "childIndexChange",
  "type": "Event",
  "description": "Dispatched after the index (among the legend children) of a legend child changes."},
{ "name": "childMargins",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Returns an object of margins for the given child."},
{ "name": "childPositions",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Returns an object containing the child's positioning values."},
{ "name": "childRemove",
  "type": "Event",
  "description": "Dispatched before a child of a legend is removed."},
{ "name": "childRepeaters",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "childResizeHandler",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "If changes happen to a layoutView's child, this function will perform the layout again."},
{ "name": "children",
  "type": "Property",
  "class": "org.apache.royale.svg.Filter",
  "description": ""},
{ "name": "children",
  "type": "Property",
  "class": "org.apache.royale.svg.IChainableFilter",
  "description": "This method returns the elements representing the filter primitives."},
{ "name": "children",
  "type": "Property",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": "The children."},
{ "name": "children",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Calls the children() method of each XML object in the XMLList and returns an XMLList containing the results."},
{ "name": "children",
  "type": "Property",
  "class": "org.apache.royale.utils.JXON",
  "description": "Children are iterable."},
{ "name": "children",
  "type": "Property",
  "class": "mx.effects.CompositeEffect",
  "description": "An Array containing the child effects of this CompositeEffect."},
{ "name": "children",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumnGroup",
  "description": "An Array of AdvancedDataGridColumn instances that define the columns of the column group."},
{ "name": "children",
  "type": "Property",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "Children of this watcher are watching sub values."},
{ "name": "childrenAdded",
  "type": "Method",
  "class": "org.apache.royale.core.IContainer",
  "description": "This method is called after children have been added to the container so the container doesn't have to re-layout as each child is added."},
{ "name": "childrenAdded",
  "type": "Event",
  "description": "Indicates that the children of the container is have been added."},
{ "name": "childrenAdded",
  "type": "Event",
  "description": "Indicates that the children of the container is have been added."},
{ "name": "childrenAdded",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.View",
  "description": ""},
{ "name": "childrenAdded",
  "type": "Event",
  "description": "Indicates that the children of the container is have been added."},
{ "name": "childrenAdded",
  "type": "Event",
  "description": "Indicates that the children of the container is have been added."},
{ "name": "childrenAdded",
  "type": "Event",
  "description": "Indicates that the children of the container is have been added."},
{ "name": "childrenField",
  "type": "Property",
  "class": "mx.collections.HierarchicalData",
  "description": "Indicates the field name to be used to detect children objects in a data item."},
{ "name": "childrenField",
  "type": "Property",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": "Indicates the field name to be used to detect children objects in a data item."},
{ "name": "chipTextSpan",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.ChipBase",
  "description": "The chip span element"},
{ "name": "chromeColor",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "chromeColor",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableComponent",
  "description": ""},
{ "name": "chromeMetrics",
  "type": "Property",
  "class": "org.apache.royale.core.IViewportModel",
  "description": "Size of the chrome."},
{ "name": "chromeMetrics",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ViewportModel",
  "description": ""},
{ "name": "circIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "circInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "circOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "claimStyles",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "Called by the chart to allow associated elements to claim style selectors from its chartSeriesStyles Array."},
{ "name": "claimStyles",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "claimStyles",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": ""},
{ "name": "clampRotation",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Returns rotation value clamped between -180 and 180 degreeds."},
{ "name": "clampToRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.NumberPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.core.IStyleableObject",
  "description": "Get the className(s) that will be used to choose class selectors in most CSS style implementations."},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "The classname."},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "The classname."},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ParagraphFormattedElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ContainerFormattedElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ListItemElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "mx.styles.IStyleClient",
  "description": "The name of the component class."},
{ "name": "className",
  "type": "Property",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.checkbox.CheckBoxIcon",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.RadioButtonIcon",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.UpgradeElement",
  "description": "Optional name of the class we want to upgrade the element to."},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowLeafElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SpanElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SpecialCharacterElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumnList",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.CheckBoxIcon",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableBodyElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.DivElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.IDataGridColumn",
  "description": "The name of the style class to use for this column."},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.DataGridColumn",
  "description": "The name of the style class to use for this column."},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.UintPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.StringPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.EnumPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ListElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.NumberPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.SpacingLimitPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.CounterPropHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumn",
  "description": "The name of the style class to use for this column."},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataGridColumn",
  "description": "The name of the style class to use for this column."},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BreakElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.FormatPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.IntPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.CounterContentHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PercentPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TCYElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.mdl.Slider",
  "description": "since we have a div surronding the main input, we need to route the class assignaments to div"},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TabElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColGroupElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.radiobutton.RadioButtonIcon",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.BooleanPropertyHandler",
  "description": ""},
{ "name": "className",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.UndefinedPropertyHandler",
  "description": ""},
{ "name": "classNames",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.UpgradeChildren",
  "description": "Class lists of children which need to be updated"},
{ "name": "classSelectorList",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.DataContainerBase",
  "description": ""},
{ "name": "classSelectorList",
  "type": "Property",
  "class": "org.apache.royale.core.StyledUIBase",
  "description": ""},
{ "name": "classSelectorList",
  "type": "Property",
  "class": "org.apache.royale.jewel.Container",
  "description": ""},
{ "name": "classSelectorList",
  "type": "Property",
  "class": "org.apache.royale.jewel.Group",
  "description": ""},
{ "name": "classSelectorList",
  "type": "Property",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": ""},
{ "name": "classSelectorList",
  "type": "Property",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": ""},
{ "name": "classToNameMap",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ImportExportConfiguration",
  "description": ""},
{ "name": "classType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TLFormatImporter",
  "description": ""},
{ "name": "cleanup",
  "type": "Method",
  "class": "org.apache.royale.cordova.Camera",
  "description": ""},
{ "name": "cleanupCallbacks",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": ""},
{ "name": "cleanupCallbacks",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryUploader",
  "description": ""},
{ "name": "cleanupCallbacks",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "Cleanup all callbacks."},
{ "name": "cleanupCallbacks",
  "type": "Method",
  "class": "org.apache.royale.net.URLUploadStream",
  "description": "Cleanup all callbacks."},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": "Clears all of the drawn path data."},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Clears all of the drawn path data."},
{ "name": "clear",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Clears the canvas."},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.svg.TransformableCompoundGraphic",
  "description": "Clears all of the drawn path data."},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectMap",
  "description": ""},
{ "name": "clear",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuClipboardItems",
  "description": ""},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.storage.LocalStorage",
  "description": "Clears all values from local storage."},
{ "name": "clear",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
  "description": ""},
{ "name": "clear",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Clears the cells in the table block."},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Clears the path data"},
{ "name": "clear",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "clear",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Clear all cached state, reset length to zero."},
{ "name": "clear",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.storage.IWebStorage",
  "description": "Clears the storage area of all key=value pairs."},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.LocalStorageProvider",
  "description": "Clears all values from local storage."},
{ "name": "clear",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.Clipboard",
  "description": ""},
{ "name": "clearAll",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Clears both the undo and the redo histories."},
{ "name": "clearAll",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "clearBackgroundManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "clearBackgroundManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "clearBackgroundManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.NumberLineFactory",
  "description": ""},
{ "name": "clearBlockRecord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "clearBlockRecord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "clearCellList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": ""},
{ "name": "clearCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Clears the cells in the table block"},
{ "name": "clearColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Clears any columns that occupy the indices between startColumn and startColumn + count."},
{ "name": "clearColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Clears the column values for count number of columns in each node."},
{ "name": "clearColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": "Clears values such that count columns are 0."},
{ "name": "clearComposedLines",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "clearCompositionResults",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "clearDamage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "clearFloats",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Controls how text wraps around a float."},
{ "name": "clearFloats",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Controls how text wraps around a float."},
{ "name": "clearFloats",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Controls how text wraps around a float."},
{ "name": "clearFloatsAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "clearFloatsProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "clearFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Undefines formats of the specified (or current) selection."},
{ "name": "clearFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "Known issue is that undefines of leafFormat values with a point selection are not applied at the next insertion."},
{ "name": "clearFormatOnElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Undefines styles to the specified element."},
{ "name": "clearFormatOnElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "clearGraphics",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": "Removes all graphic elements."},
{ "name": "clearHeights",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Clears all cached heights."},
{ "name": "clearInstanceListeners",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "clearListeners",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "clearMenuList",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.MenuModel",
  "description": "Empties the menuList."},
{ "name": "clearRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Clears the redo stack."},
{ "name": "clearRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "clearResult",
  "type": "Method",
  "class": "mx.rpc.AbstractInvoker",
  "description": "Sets the <code>result</code> property of the invoker to <code>null</code>."},
{ "name": "clearResult",
  "type": "Method",
  "class": "mx.rpc.http.HTTPService",
  "description": ""},
{ "name": "clearRows",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Removes any nodes that occupy the indices between startRow and startRow + count."},
{ "name": "clearSearchResults",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "clearSearchResults",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Clears the previous search results."},
{ "name": "clearSelection",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "clearSelection",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Deselects all selected chart items in the chart control."},
{ "name": "clearSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Clears the selection shapes."},
{ "name": "clearSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "clearSelection",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Removes all of the selected rows and cells, if <code>selectionMode</code> is not <code>GridSelectionMode."},
{ "name": "clearSelectionShapes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "clearStyle",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Deletes a style property from this component instance."},
{ "name": "clearStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Clears the style specified by the <code>styleProp</code> parameter from this FlowElement object."},
{ "name": "clearStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Clears the style specified by <code>styleProp</code> from this FlowElement."},
{ "name": "clearStyleDeclaration",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Clears the CSSStyleDeclaration object that stores the rules for the specified CSS selector."},
{ "name": "clearTypicalCellWidthsAndHeights",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Clears the typical cell for every column and row."},
{ "name": "clearVector",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Sets all of the numbers in a vector to be value unless otherwise specified."},
{ "name": "clearVirtualLayoutCache",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "When <code>useVirtualLayout</code> is <code>true</code>, this method can be used by the layout target to clear cached layout information when the target changes."},
{ "name": "click",
  "type": "Event",
  "description": "Set a different class for click events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "click",
  "type": "Event",
  "description": "Set a different class for click events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "click",
  "type": "Event",
  "description": "Set a different class for click events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on a button."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on a Label."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on RadioButton."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on a button."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on a Label."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when any link is clicked."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on a Label."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on RadioButton."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on a button."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when any link is clicked."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on IconToggle."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on Switch."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the user clicks on a button."},
{ "name": "click",
  "type": "Event",
  "description": "Dispatched when the link is clicked."},
{ "name": "clickCount",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "clickHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": ""},
{ "name": "clickHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "clickHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "clickHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": ""},
{ "name": "clickHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.Switch",
  "description": ""},
{ "name": "clickTarget",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "Specifies whether the slider track or a slider thumb was pressed."},
{ "name": "client",
  "type": "Property",
  "class": "mx.net.NetConnection",
  "description": "client"},
{ "name": "clientId",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "The clientId indicates which client sent the message."},
{ "name": "clientId",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "The clientId indicates which MessageAgent sent the message."},
{ "name": "clientId",
  "type": "Property",
  "class": "mx.messaging.messages.IMessage",
  "description": "The clientId indicates which client sent the message."},
{ "name": "clientId",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "The clientId indicates which MessageAgent sent the message."},
{ "name": "clientId",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": "Provides access to the client id for the MessageAgent."},
{ "name": "clientReceiveTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Timestamp in milliseconds since epoch of when the client received response message from the server."},
{ "name": "clientX",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "X-coordinate relative to the window."},
{ "name": "clientX",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "X-coordinate relative to the window."},
{ "name": "clientY",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "Y-coordinate relative to the window."},
{ "name": "clientY",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Y-coordinate relative to the window."},
{ "name": "clip",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "clipAndEnableScrolling",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "clipAndEnableScrolling",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "clipAndEnableScrolling",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": ""},
{ "name": "clipAndEnableScrolling",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": ""},
{ "name": "clipAndEnableScrolling",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "clipContent",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Determines whether Flex clips the chart to the area bounded by the axes."},
{ "name": "clipContent",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Whether to apply a clip mask if the positions and/or sizes of this container's children extend outside the borders of this container."},
{ "name": "clipElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.Clipboard",
  "description": ""},
{ "name": "clipPath",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "clipboardFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.FormatDescriptor",
  "description": "Descriptor used when matching this format to the formats posted on the external clipboard."},
{ "name": "clipboardItems",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenu",
  "description": ""},
{ "name": "clipboardMenu",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenu",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "mx.charts.chartClasses.RenderData",
  "description": "Creates a copy of the render data."},
{ "name": "clone",
  "type": "Method",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "Clones the ChannelEvent."},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextScrap",
  "description": "Creates a duplicate copy of this TextScrap object."},
{ "name": "clone",
  "type": "Method",
  "class": "mx.charts.ChartItem",
  "description": "Returns a copy of this ChartItem."},
{ "name": "clone",
  "type": "Method",
  "class": "mx.messaging.events.MessageEvent",
  "description": "Clones the MessageEvent."},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Returns a copy of the Matrix"},
{ "name": "clone",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Clones the specified Object and returns a reference to the clone."},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.PointFormat",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "mx.core.EdgeMetrics",
  "description": "Returns a copy of this EdgeMetrics object."},
{ "name": "clone",
  "type": "Method",
  "class": "mx.charts.series.items.LineSeriesSegment",
  "description": "Returns a copy of this segment."},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextJustifier",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.text.engine.EastAsianJustifier",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.CellCoordinates",
  "description": "Creates a new CellCoordinates with the same row and column values"},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "Clone this column and return a new Column with the same properties and styles as this one."},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Creates a writeable clone of the IConfiguration object."},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": "Creates a clone of the Configuration object."},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "mx.messaging.events.MessageAckEvent",
  "description": "Clones the MessageAckEvent."},
{ "name": "clone",
  "type": "Method",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Clones the ChannelFaultEvent."},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "org.apache.royale.text.engine.SpaceJustifier",
  "description": ""},
{ "name": "clone",
  "type": "Method",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "Clones the MessageFaultEvent."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.IRoyaleEvent",
  "description": "Create a copy/clone of the Event object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.text.events.IMEEvent",
  "description": "Create a copy/clone of the Event object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.CustomEvent",
  "description": "Create a copy/clone of the CustomEvent object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.DetailEvent",
  "description": "Create a copy/clone of the DetailEvent object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": "Create a copy/clone of the KeyboardEvent object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ValueEvent",
  "description": "Create a copy/clone of the ValueEvent object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": ""},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "Create a copy/clone of the Event object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ProgressEvent",
  "description": "Create a copy/clone of the ProgressEvent object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.FocusEvent",
  "description": "Create a copy/clone of the Event object."},
{ "name": "cloneEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ValueChangeEvent",
  "description": "Create a copy/clone of the ValueChangeEvent object."},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.storage.file.IDataInput",
  "description": ""},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.storage.file.DataInputStream",
  "description": "Closes the file (and dispatches a FileEvent \"COMPLETE\" event)."},
{ "name": "close",
  "type": "Event",
  "description": ""},
{ "name": "close",
  "type": "Event",
  "description": ""},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.storage.file.IDataOutput",
  "description": ""},
{ "name": "close",
  "type": "Method",
  "class": "mx.controls.PopUpButton",
  "description": "Closes the UIComponent object opened by the PopUpButton control."},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": "Cancels the URL request."},
{ "name": "close",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The close value of this item converted into screen coordinates."},
{ "name": "close",
  "type": "Event",
  "description": "Dispatched when the user selects the close button."},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "Abort an connection."},
{ "name": "close",
  "type": "Event",
  "description": "Dispatched when the swatch panel closes."},
{ "name": "close",
  "type": "Event",
  "description": ""},
{ "name": "close",
  "type": "Event",
  "description": "Dispatched when the user selects the close button."},
{ "name": "close",
  "type": "Method",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Changes the current skin state to <code>closed</code>, waits until any state transitions finish playing, dispatches a <code>PopUpEvent."},
{ "name": "close",
  "type": "Event",
  "description": "Dispatched by the container when it's closed."},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.mdl.Dialog",
  "description": "Closes the dialog element."},
{ "name": "close",
  "type": "Event",
  "description": ""},
{ "name": "close",
  "type": "Method",
  "class": "mx.net.NetConnection",
  "description": "close"},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.jewel.Drawer",
  "description": ""},
{ "name": "close",
  "type": "Event",
  "description": "Dispatched when the drop-down list is dismissed for any reason such when the user: <ul> <li>selects an item in the drop-down list</li> <li>clicks outside of the drop-down list</li> <li>clicks the drop-down button while the drop-down list is displayed</li> <li>presses the ESC key while the drop-down list is displayed</li> </ul>"},
{ "name": "close",
  "type": "Event",
  "description": ""},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.storage.file.DataOutputStream",
  "description": "Closes the file and dispatches a FileEvent \"COMPLETE\" event."},
{ "name": "close",
  "type": "Method",
  "class": "org.apache.royale.jewel.Alert",
  "description": "Closes the dialog element."},
{ "name": "close",
  "type": "Event",
  "description": ""},
{ "name": "closeDrawer",
  "type": "Event",
  "description": "Dispatched when the drawer close"},
{ "name": "closeField",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Specifies the field of the data provider that determines the y-axis location of the closing value of the element."},
{ "name": "closeFilter",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The close value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "closeNode",
  "type": "Method",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "Open a node"},
{ "name": "closeNode",
  "type": "Method",
  "class": "org.apache.royale.collections.ITreeData",
  "description": ""},
{ "name": "closeNode",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "closeNode",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Closes a node to hide its children."},
{ "name": "closeNode",
  "type": "Method",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": "Closes the given node."},
{ "name": "closeNode",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "closeNode",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": ""},
{ "name": "closeNode",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "closeNumber",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The close value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "closePopUp",
  "type": "Event",
  "description": "The closePopUp event is dispatched when the we want to close the popup"},
{ "name": "closePopUpHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.PopUpMouseController",
  "description": ""},
{ "name": "closeValue",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The close value of this item."},
{ "name": "closedPath",
  "type": "Property",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Specifies whether the path should auto-close."},
{ "name": "closure",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "caches closures and returns the one closure"},
{ "name": "clustered",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "Indicates whether the ChannelSet targets a clustered destination."},
{ "name": "code",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "colIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": ""},
{ "name": "colIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableColElement",
  "description": ""},
{ "name": "colIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColElement",
  "description": ""},
{ "name": "colIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "colIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "colSpan",
  "type": "Property",
  "class": "mx.containers.GridItem",
  "description": "Number of columns of the Grid container spanned by the cell."},
{ "name": "collapse",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ICollapsible",
  "description": ""},
{ "name": "collapse",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "collapsed",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ICollapsible",
  "description": ""},
{ "name": "collapsed",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "collapsedHeight",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ICollapsible",
  "description": ""},
{ "name": "collapsedHeight",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "collapsedWidth",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ICollapsible",
  "description": ""},
{ "name": "collapsedWidth",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "collectBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.BackgroundUtil",
  "description": ""},
{ "name": "collectChildren",
  "type": "Method",
  "class": "org.apache.royale.test.runners.ParentRunner",
  "description": "Subclasses must override to collect all children for this parent runner."},
{ "name": "collectTableBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.BackgroundUtil",
  "description": ""},
{ "name": "collectTransitions",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "Called by the enclosing chart to collect any transitions a particular element might play when the chart changes state."},
{ "name": "collectTransitions",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "collection",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "An ICollectionView that represents the data provider."},
{ "name": "collectionChange",
  "type": "Event",
  "description": "Dispatched when the IList has been updated in some way."},
{ "name": "collectionChange",
  "type": "Event",
  "description": "Dispatched when the ICollectionView has been updated in some way."},
{ "name": "collectionChange",
  "type": "Event",
  "description": "Dispatched when the IList has been updated in some way."},
{ "name": "collectionChangeHandler",
  "type": "Method",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "Handles CollectionEvents dispatched from the data provider as the data changes."},
{ "name": "collectionChanged",
  "type": "Event",
  "description": "Dispatched when the collection's underlying source array is changed."},
{ "name": "collectionChanged",
  "type": "Event",
  "description": "Dispatched when the IArrayListView has been updated in some way."},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientEntry",
  "description": "A color value."},
{ "name": "color",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Color of the text."},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Color of the text."},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Color of the text."},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.core.IColorModel",
  "description": "The color displayed in the control."},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArrayColorSelectionModel",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.html.ColorPicker",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ColorModel",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "mx.effects.Glow",
  "description": "The color of the glow."},
{ "name": "color",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.IMdlColor",
  "description": "Color name provided by color palette Component color  https://material."},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.MdlColor",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "mx.graphics.Stroke",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.core.styles.BorderStyles",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "mx.graphics.SolidColorStroke",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": "A color value."},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalOverlay",
  "description": "The color value of the overlay (default black)"},
{ "name": "color",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "mx.graphics.SolidColor",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColor",
  "description": "A color value."},
{ "name": "color",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "colorChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ColorSpectrum",
  "description": "dispatch change event in response to a colorChange event"},
{ "name": "colorField",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "colorFromFill",
  "type": "Method",
  "class": "mx.charts.chartClasses.GraphicsUtilities",
  "description": "Converts a fill value into a solid color."},
{ "name": "colorMap",
  "type": "Property",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "The map of color names to uints."},
{ "name": "colorPalette",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUpWithPalette",
  "description": ""},
{ "name": "colorProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "colorSpectrum",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUp",
  "description": ""},
{ "name": "colorSpectrumChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUp",
  "description": ""},
{ "name": "colorStyles",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "colorWeight",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.IMdlColor",
  "description": "Color weight provided by color palette  https://material."},
{ "name": "colorWeight",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.MdlColor",
  "description": ""},
{ "name": "colored",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A boolean flag to activate \"mdl-button--colored\" effect selector."},
{ "name": "colors",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": ""},
{ "name": "cols",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Textarea",
  "description": "Width of textarea in (average) character widths"},
{ "name": "column",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSortFieldComplex",
  "description": ""},
{ "name": "column",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.GridCellBehaviour",
  "description": "A boolean flag to activate \"mdl-cell--N-col\" effect selector."},
{ "name": "column",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--N-col\" effect selector."},
{ "name": "column",
  "type": "Property",
  "class": "spark.events.GridItemEditorEvent",
  "description": "The column of the cell that is being edited."},
{ "name": "column",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellCoordinates",
  "description": "The column the cell belongs to"},
{ "name": "column",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemEditor",
  "description": "The column of the cell being edited."},
{ "name": "column",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridColumnView",
  "description": "The org."},
{ "name": "column",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "The GridColumn object representing the column associated with this item renderer."},
{ "name": "column",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "<p>The Grid's <code>updateDisplayList()</code> method sets this property before calling <code>preprare()</code></p>."},
{ "name": "column",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSortFieldSimple",
  "description": ""},
{ "name": "columnAlign",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Specifies how to justify the fully visible columns to the container width."},
{ "name": "columnAlign",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "columnBreakAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Controls column after before the element."},
{ "name": "columnBreakAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Controls column after before the element."},
{ "name": "columnBreakAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Controls column after before the element."},
{ "name": "columnBreakAfterProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "columnBreakBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Controls column break before the element."},
{ "name": "columnBreakBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Controls column break before the element."},
{ "name": "columnBreakBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Controls column break before the element."},
{ "name": "columnBreakBeforeProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "columnCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Number of text columns (adopts default value if undefined during cascade)."},
{ "name": "columnCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Number of text columns (adopts default value if undefined during cascade)."},
{ "name": "columnCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Number of text columns (adopts default value if undefined during cascade)."},
{ "name": "columnCount",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "The number of columns to be displayed in a TileList control or items in a HorizontalList control."},
{ "name": "columnCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "columnCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "The number of columns in the Grid."},
{ "name": "columnCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "columnCount",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": "The number of columns in the container."},
{ "name": "columnCount",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "Returns the current number of elements in view."},
{ "name": "columnCount",
  "type": "Property",
  "class": "spark.components.gridClasses.CellRegion",
  "description": "The number of columns in the cell region."},
{ "name": "columnCount",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Contain the actual column count."},
{ "name": "columnCount",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "columnCountProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "columnDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.GridCellBehaviour",
  "description": "A boolean flag to activate \"mdl-cell--N-col-desktop\" effect selector."},
{ "name": "columnDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--N-col-desktop\" effect selector."},
{ "name": "columnFill",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnGap",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)."},
{ "name": "columnGap",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)."},
{ "name": "columnGap",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the amount of gutter space, in pixels, to leave between the columns (adopts default value if undefined during cascade)."},
{ "name": "columnGap",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "The gap between columns."},
{ "name": "columnGap",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "columnGap",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnGap",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "description": "The amount of spacing between the columns."},
{ "name": "columnGap",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": "The amount of space, in pixels, left between columns in the container."},
{ "name": "columnGapProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "columnIndex",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataItemRenderer",
  "description": "The index of the column the itemRenderer represents."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "columnIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The number of the column in which the line has been placed, with the first column being 0."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "mx.controls.listClasses.BaseListData",
  "description": "The index of the column of the List-based control relative to the currently visible columns of the control, where the first column is at an index of 1."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.CellPosition",
  "description": "The 0-based column index of the cell."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "columnIndex",
  "type": "Property",
  "class": "spark.events.GridItemEditorEvent",
  "description": "The zero-based index of the column that is being edited."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.CellRegion",
  "description": "The 0-based column index of the origin of the cell region."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The zero-based index of the column that contains the item renderer where the event occurred."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemEditor",
  "description": "The zero-based index of the column being edited."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": "column number in the container"},
{ "name": "columnIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridColumnView",
  "description": "The zero-based index for the column."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "The column index for this item renderer's cell."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": ""},
{ "name": "columnIndex",
  "type": "Property",
  "class": "mx.events.AdvancedDataGridEvent",
  "description": "The zero-based index in the AdvancedDataGrid object's <code>columns</code> Array of the column associated with the event."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The position of this column in the grid's column list, or -1 if this column's grid is null."},
{ "name": "columnIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "columnIndex",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": ""},
{ "name": "columnIndices",
  "type": "Property",
  "class": "spark.events.GridSortEvent",
  "description": "The vector of column indices of the sorted columns."},
{ "name": "columnInfo",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataGridColumnList",
  "description": "The DataGridColumn for this list"},
{ "name": "columnLabelAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TableColumn",
  "description": "How column label text align in the header"},
{ "name": "columnLabels",
  "type": "Property",
  "class": "org.apache.royale.core.IDataGridPresentationModel",
  "description": "The labels used for each column."},
{ "name": "columnLabels",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataGridPresentationModel",
  "description": "The labels for each column."},
{ "name": "columnLists",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IDataGridView",
  "description": ""},
{ "name": "columnLists",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridView",
  "description": "An array of List objects the comprise the columns of the DataGrid."},
{ "name": "columnLists",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TreeGridView",
  "description": "An array of List objects the comprise the columns of the DataGrid."},
{ "name": "columnPhone",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--N-col-phone\" effect selector."},
{ "name": "columnRule",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnRuleColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnRuleStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnRuleWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnSeparator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render the vertical separator between columns."},
{ "name": "columnSeparator",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "A visual element displayed between each column."},
{ "name": "columnSpan",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnSpan",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "columnSpan",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "columnState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "columnState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns a ColumnState object, which describes the number and characteristics of columns in the container."},
{ "name": "columnTablet",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--N-col-tablet\" effect selector."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Column width in pixels (adopts default value if undefined during cascade)."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": "Column width in pixels (adopts default value if undefined during cascade)."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Column width in pixels (adopts default value if undefined during cascade)."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Column width in pixels (adopts default value if undefined during cascade)."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The width of the control's columns."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.IDataGridColumn",
  "description": "The width of the column (default is 100 pixels)."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.DataGridColumn",
  "description": "The width of the column (default is 100 pixels)."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": "The width of columns, in pixels, in the container."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "If the <code>variableColumnWidth</code> property is <code>false</code>, then this property specifies the actual width of each layout element, in pixels."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.TileLayout",
  "description": "The width of each column, in pixels."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumn",
  "description": "The width of the column (default is 100 pixels)."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataGridColumn",
  "description": "The width of the column (default is 100 pixels)."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Contain the actual column width, in pixels."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.express.supportClasses.DataGridColumn",
  "description": "Sets the size of the column as a fixed pixel width."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The width of each column, in pixels."},
{ "name": "columnWidth",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "columnWidthProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "columnWidthRatio",
  "type": "Property",
  "class": "mx.charts.chartClasses.IColumn",
  "description": "Specifies the width of items relative to the category size."},
{ "name": "columnWidthRatio",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Specifies the width of columns relative to the category width."},
{ "name": "columnWidthRatio",
  "type": "Property",
  "class": "mx.charts.series.ColumnSet",
  "description": "Specifies the width of columns relative to the category width."},
{ "name": "columnWidthRatio",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Specifies the width of elements relative to the category width."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.jewel.Table",
  "description": "The list of TableColumn objects displayed by this table."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.IDataGridLayout",
  "description": ""},
{ "name": "columns",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "columns",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "An array of DataGridColumn objects, one for each column that can be displayed."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.core.IDataGridModel",
  "description": "The set of DataGridColumns."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataGridCollectionViewModel",
  "description": "The array of org."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TreeGridModel",
  "description": "The TreeGridColumn definitions."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableModel",
  "description": ""},
{ "name": "columns",
  "type": "Property",
  "class": "mx.controls.DataGrid",
  "description": "An array of DataGridColumn objects, one for each column that can be displayed."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.html.DataGrid",
  "description": "The array of org."},
{ "name": "columns",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The list of GridColumn objectss displayed by this grid."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.mdl.Table",
  "description": "columns."},
{ "name": "columns",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataGridModel",
  "description": "The array of org."},
{ "name": "columnsChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.TableView",
  "description": ""},
{ "name": "columnsCollectionChanged",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Handles changes in columns."},
{ "name": "columnsLength",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "Returns the value of <code>columns."},
{ "name": "columnsView",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "commandKey",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "commit",
  "type": "Property",
  "class": "spark.events.PopUpEvent",
  "description": "Specifies whether the event listener should commit the data returned in the <code>data</code> property."},
{ "name": "commitCaretPosition",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Updates the grid's caret position."},
{ "name": "commitInteractiveSelection",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "In response to user input (mouse or keyboard) which changes the selection, this method dispatches the <code>selectionChanging</code> event."},
{ "name": "commitLastLineState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Processes the properties set on the component."},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.series.LineSeries",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.series.PlotSeries",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "commitProperties",
  "type": "Method",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "commitSelectedIndex",
  "type": "Method",
  "class": "mx.containers.ViewStack",
  "description": "Commits the selected index."},
{ "name": "commonRoot",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.mementos.DeleteTextMemento",
  "description": ""},
{ "name": "communicationError",
  "type": "Event",
  "description": "Dispatched if an error occurs in the server communication."},
{ "name": "compare",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Compares the Objects and returns an integer value indicating if the first item is less than, greater than, or equal to the second item."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "mx.collections.ISortField",
  "description": "The function that compares two items during a sort of items for the associated collection."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "mx.collections.SortField",
  "description": "The function that compares two items during a sort of items for the associated collection."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "spark.collections.SortField",
  "description": "The function that compares two items during a sort of items for the associated collection."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "mx.collections.GroupingField",
  "description": "The function that compares two items during a sort of items for the associated collection."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "org.apache.royale.collections.ISortField",
  "description": "The function that compares two items during a sort of items for the associated collection."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "mx.collections.ISort",
  "description": "The method used to compare items when sorting."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "mx.collections.Grouping",
  "description": "The method used to compare items when sorting."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "org.apache.royale.collections.ISort",
  "description": "The method used to compare items when sorting."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "compareFunction",
  "type": "Property",
  "class": "org.apache.royale.collections.SortField",
  "description": "The function that compares two items during a sort of items for the associated collection."},
{ "name": "compareFunction",
  "type": "Property",
  "class": "mx.collections.Sort",
  "description": ""},
{ "name": "compatibilityVersion",
  "type": "Property",
  "class": "mx.core.FlexVersion",
  "description": "The current version that the framework maintains compatibility for."},
{ "name": "complete",
  "type": "Event",
  "description": "Indicates that the upload operation is complete"},
{ "name": "complete",
  "type": "Method",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "resolves the task as complete"},
{ "name": "complete",
  "type": "Event",
  "description": "AsyncTask is a base class for AsyncTasks which let the caller know when they are done."},
{ "name": "complete",
  "type": "Property",
  "class": "spark.components.Image",
  "description": ""},
{ "name": "complete",
  "type": "Event",
  "description": "Dispatched when content loading is complete."},
{ "name": "complete",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "Convenience function for complete event to allow chaining."},
{ "name": "complete",
  "type": "Event",
  "description": "Dispatched when the request is complete."},
{ "name": "complete",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "Convenience function for complete event to allow chaining."},
{ "name": "complete",
  "type": "Event",
  "description": "Dispatched when the load completes."},
{ "name": "complete",
  "type": "Event",
  "description": "Dispatched when the upload is complete."},
{ "name": "complete",
  "type": "Property",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "complete",
  "type": "Event",
  "description": "The complete event is dispatched when the entire drag-and-drop operation has completed from the drag source's perspective."},
{ "name": "complete",
  "type": "Event",
  "description": "The complete event is dispatched when the drop operation has completed from the drop target's perspective."},
{ "name": "complete",
  "type": "Event",
  "description": "Dispatched when the collection has processed a complete event."},
{ "name": "complete",
  "type": "Event",
  "description": "Dispatched when the request is complete."},
{ "name": "complete",
  "type": "Event",
  "description": "The complete event is dispatched when the drop operation has completed from the drop target's perspective."},
{ "name": "completeHandler",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileUploader",
  "description": ""},
{ "name": "completeHandler",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileUploaderWithResponseData",
  "description": ""},
{ "name": "completeSetup",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "Called when the host is ready to complete its setup (usually after its size has been determined)."},
{ "name": "completeSetup",
  "type": "Method",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": ""},
{ "name": "completeSetup",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AccordionItemRendererView",
  "description": ""},
{ "name": "completeSetup",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "completeSetup",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "completeSetup",
  "type": "Method",
  "class": "org.apache.royale.html.beads.PanelWithControlBarView",
  "description": ""},
{ "name": "completeTabBarSetup",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.TabsView",
  "description": ""},
{ "name": "completed",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "completed (and a status of `complete`) means the task completed successfully"},
{ "name": "completedTasks",
  "type": "Property",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": ""},
{ "name": "component",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "A reference to the document object associated with this component."},
{ "name": "component",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A reference to the document object associated with this UIComponent."},
{ "name": "component",
  "type": "Property",
  "class": "mx.managers.ISystemManager",
  "description": "A reference to the document object."},
{ "name": "component",
  "type": "Property",
  "class": "mx.managers.SystemManager",
  "description": ""},
{ "name": "composable",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "composable",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": ""},
{ "name": "composable",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": ""},
{ "name": "compose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Calculates how many lines are necessary to display the content in the root element of the flow and the positions of these lines in the flow's display containers."},
{ "name": "compose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Calculates how many lines are necessary to display the content in the root element of the flow and the positions of these lines in the flow's display containers."},
{ "name": "compose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Composes the container text; calls either the factory or <code>updateAllControllers()</code>."},
{ "name": "compose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "compose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "composeCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "composeCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Sizes and positions the cells in the table."},
{ "name": "composeFloat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "composeInlineGraphicElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "composeInternal",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "composeMatrix",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": ""},
{ "name": "composeNextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "composeParagraphElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": ""},
{ "name": "composeParagraphElementIntoLines",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Compose the lines in the paragraph."},
{ "name": "composeState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@private"},
{ "name": "composeTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IComposer",
  "description": ""},
{ "name": "composeTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Compose the flow into the text container."},
{ "name": "composeToController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Composes the content of the root element up to and including the container at the specified index."},
{ "name": "composeToController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#composeToController()"},
{ "name": "composeToPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Composes the content of the root element up to the specified position."},
{ "name": "composeToPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#composeToPosition()"},
{ "name": "composeToPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "composeTrailingIdeographicSpaces",
  "type": "Property",
  "class": "org.apache.royale.text.engine.EastAsianJustifier",
  "description": ""},
{ "name": "composedHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableRowElement",
  "description": ""},
{ "name": "composedHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "composedLines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "composedLines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private Return the array."},
{ "name": "composerClass",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.utils.FactoryHelper",
  "description": ""},
{ "name": "composing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "True, if the flow composer is currently performing a composition operation."},
{ "name": "composing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "True, if the flow composer is currently performing a composition operation."},
{ "name": "compositionAbandoned",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IME",
  "description": ""},
{ "name": "compositionBounds",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "The rectangle within which text lines are created."},
{ "name": "compositionBounds",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "compositionComplete",
  "type": "Event",
  "description": "Dispatched after every recompose."},
{ "name": "compositionComplete",
  "type": "Event",
  "description": "Dispatched after every recompose."},
{ "name": "compositionEndIndex",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "The zero-based character index value of the end of the current edit session text (i."},
{ "name": "compositionHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "compositionHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the vertical extent allowed for text inside the container."},
{ "name": "compositionHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the vertical extent allowed for text inside the container."},
{ "name": "compositionLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.CompositionCompleteEvent",
  "description": "The number of characters composed."},
{ "name": "compositionSelectionChanged",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IME",
  "description": ""},
{ "name": "compositionStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.CompositionCompleteEvent",
  "description": "The start location of the text range affected by the composition, expressed as an index into the text flow."},
{ "name": "compositionStartIndex",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "The zero-based character index value of the start of the current edit session text (i."},
{ "name": "compositionWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "compositionWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ITextContainerManager",
  "description": ""},
{ "name": "compositionWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the horizontal extent allowed for text inside the container."},
{ "name": "compositionWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the horizontal extent allowed for text inside the container."},
{ "name": "compute",
  "type": "Method",
  "class": "org.apache.royale.core.CSSClassList",
  "description": "returns the concatenated string of the class list"},
{ "name": "computeActualPropertyValue",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": ""},
{ "name": "computeArea",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "computeDistanceBetween",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.TextFieldBase",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.TabItemRendererBase",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.TabBarButtonItemRendererBase",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.CardInner",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBarButton",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.GridCell",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Spinner",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Card",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Button",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Grid",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Menu",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Tabs",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.TableColumn",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Header",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.DialogActions",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Switch",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBar",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.Table",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.ProgressBar",
  "description": ""},
{ "name": "computeFinalClassNames",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBarPanel",
  "description": ""},
{ "name": "computeHeading",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "computeLength",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "computeListItemText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IListElement",
  "description": ""},
{ "name": "computeOffset",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "computeOffsetOrigin",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "computePointSelectionRectangle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "computeSignedArea",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "computeTextFlowLineMinimumLogicalTop",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IComposer",
  "description": ""},
{ "name": "computedColumnWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "description": "The calculated width of each column, in pixels."},
{ "name": "computedFloat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "computedFloat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "@private"},
{ "name": "computedFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "computedFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the computed format attributes that are in effect for this element."},
{ "name": "computedFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "computedFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowLeafElement",
  "description": "The computed text format attributes that are in effect for this element."},
{ "name": "computedFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "computedFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "@private"},
{ "name": "computedFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns an ITextLayoutFormat instance with the attributes applied to this container, including the attributes inherited from its root element."},
{ "name": "computedFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "@private"},
{ "name": "computedGutters",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "The current computed size of the gutters of the CartesianChart."},
{ "name": "computedInterval",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The computed interval represented by this axis."},
{ "name": "computedListMarkerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IListItemElement",
  "description": ""},
{ "name": "computedMatrix",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The computed matrix, calculated by combining the layout matrix and any offsets provided."},
{ "name": "computedMatrix",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "the computed matrix, calculated by combining the layout matrix and  and any offsets provided."},
{ "name": "computedMatrix3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The computed 3D matrix, calculated by combining the 3D layout matrix and any offsets provided."},
{ "name": "computedMatrix3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "the computed 3D matrix, calculated by combining the 3D layout matrix and  and any offsets provided."},
{ "name": "computedMaximum",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The computed maximum value represented by this axis."},
{ "name": "computedMinimum",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The computed minimum value represented by this axis."},
{ "name": "concat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Concatenates the values of properties in the <code>incoming</code> ITextLayoutFormat instance with the values of this TextLayoutFormat object."},
{ "name": "concat",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Adds the Matrix the current one Returns the matrix so the methods can be chained."},
{ "name": "concat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Concatenates the values of properties in the <code>incoming</code> ITabStopFormat instance with the values of this TabStopFormat object."},
{ "name": "concatHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "Helper function when merging the property to compute actual attributes"},
{ "name": "concatInheritOnly",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Concatenates the values of properties in the <code>incoming</code> ITextLayoutFormat instance with the values of this TextLayoutFormat object."},
{ "name": "concatInheritOnly",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Concatenates the values of properties in the <code>incoming</code> ITabStopFormat instance with the values of this TabStopFormat object."},
{ "name": "concatInheritOnlyHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "Helper function when merging the property to compute actual attributes"},
{ "name": "concurrency",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "Value that indicates how to handle multiple calls to the same operation within the service."},
{ "name": "concurrency",
  "type": "Property",
  "class": "mx.rpc.remoting.Operation",
  "description": "The concurrency for this Operation."},
{ "name": "concurrency",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Value that indicates how to handle multiple calls to the same service."},
{ "name": "concurrency",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": "Value that indicates how to handle multiple calls to the same service operation."},
{ "name": "concurrency",
  "type": "Property",
  "class": "mx.rpc.mxml.IMXMLSupport",
  "description": "The concurrency setting of the RPC operation or HTTPService."},
{ "name": "concurrency",
  "type": "Property",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "Value that indicates how to handle multiple calls to the same service."},
{ "name": "concurrency",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Value that indicates how to handle multiple calls to the same service."},
{ "name": "condenseWhite",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Specifies whether extra white space (spaces, line breaks, and so on) should be removed in a TextArea control with HTML text."},
{ "name": "conditionalBreak",
  "type": "Method",
  "class": "org.apache.royale.debugging",
  "description": "If the condition is not met, the code will break into the debugger."},
{ "name": "config",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextExporter",
  "description": "Accesses the config options for the exporter."},
{ "name": "config",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ConverterBase",
  "description": "Returns the import and export configuration."},
{ "name": "configuration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextImporter",
  "description": "The <code>configuration</code> property contains the IConfiguration instance that the importer needs when creating new TextFlow instances."},
{ "name": "configuration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "configuration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "The Configuration object for this TextContainerManager."},
{ "name": "configuration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "The configuration used by the internal TextFlow object."},
{ "name": "configuration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "The Configuration object for this TextFlow object."},
{ "name": "configuration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.PlainTextImporter",
  "description": "The <code>configuration</code> property contains the IConfiguration instance that the importerd needs when creating new ITextFlow instances."},
{ "name": "configured",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "Indicates whether the ChannelSet is using automatically configured Channels or manually assigned Channels."},
{ "name": "confirmComposition",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "Use this callback to end the inline editing session and confirm the text."},
{ "name": "connect",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Connects the ChannelSet to the Channel."},
{ "name": "connect",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.amf.AMFNetConnection",
  "description": "Connect to a server."},
{ "name": "connect",
  "type": "Method",
  "class": "mx.messaging.AbstractProducer",
  "description": "Connects the Producer to its target destination."},
{ "name": "connect",
  "type": "Method",
  "class": "mx.net.NetConnection",
  "description": "connect"},
{ "name": "connect",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Connects a MessageAgent to the ChannelSet."},
{ "name": "connectFailed",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Processes a failed internal connect and dispatches the <code>FAULT</code> event for the channel."},
{ "name": "connectSuccess",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Processes a successful internal connect and dispatches the <code>CONNECT</code> event for the Channel."},
{ "name": "connectTimeout",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Provides access to the connect timeout in seconds for the channel."},
{ "name": "connectTimeoutHandler",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Handles a connect timeout by dispatching a ChannelFaultEvent."},
{ "name": "connected",
  "type": "Property",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "Indicates whether the Channel that generated this event is already connected."},
{ "name": "connected",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Indicates whether this channel has established a connection to the remote destination."},
{ "name": "connected",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": "Indicates whether this MessageAgent is currently connected to its destination via its ChannelSet."},
{ "name": "connected",
  "type": "Property",
  "class": "mx.messaging.channels.DirectHTTPChannel",
  "description": "Indicates if this channel is connected."},
{ "name": "connected",
  "type": "Property",
  "class": "mx.net.NetConnection",
  "description": "connected"},
{ "name": "connected",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "Indicates whether the ChannelSet is connected."},
{ "name": "constraintColumns",
  "type": "Property",
  "class": "mx.containers.utilityClasses.IConstraintLayout",
  "description": "An Array of ConstraintColumn instances that partition this container."},
{ "name": "constraintColumns",
  "type": "Property",
  "class": "mx.containers.Canvas",
  "description": ""},
{ "name": "constraintRows",
  "type": "Property",
  "class": "mx.containers.utilityClasses.IConstraintLayout",
  "description": "An Array of ConstraintRow instances that partition this container."},
{ "name": "constraintRows",
  "type": "Property",
  "class": "mx.containers.Canvas",
  "description": ""},
{ "name": "constructorMethod",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "A MethodDefinition representing the constructor for a \"class\" kind TypeDefinition For an interface this returns null."},
{ "name": "contact",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactImageChip",
  "description": "The image contact"},
{ "name": "contactText",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactChip",
  "description": "The text displayed on ContactChip"},
{ "name": "container",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "container",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the container (DisplayObjectContainer) that holds the text that this TextContainerManager manages."},
{ "name": "container",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
  "description": ""},
{ "name": "container",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the container display object that holds the text lines for this ContainerController instance."},
{ "name": "container",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Container that displays this collection of cells"},
{ "name": "container",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "container",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "container",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "The container being partitioned by this ConstraintRow instance."},
{ "name": "container",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "The container which this ConstraintColumn instance is partitioning."},
{ "name": "containerBreakAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Controls container after before the element."},
{ "name": "containerBreakAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Controls container after before the element."},
{ "name": "containerBreakAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Controls container after before the element."},
{ "name": "containerBreakAfterProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "containerBreakBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Controls container break before the element."},
{ "name": "containerBreakBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Controls container break before the element."},
{ "name": "containerBreakBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Controls container break before the element."},
{ "name": "containerBreakBeforeProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "containerController",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "@private"},
{ "name": "containerControllerInitialFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "containerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyFormatOperation",
  "description": "The format properties to apply to the containers in the range."},
{ "name": "containerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ClearFormatOperation",
  "description": "The format properties to undefine on the containers in the range."},
{ "name": "containerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The format attributes of the container displaying the range."},
{ "name": "contains",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Determines if a DisplayObject is in this child list, or is a descendant of an child in this child list."},
{ "name": "contains",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "contains",
  "type": "Method",
  "class": "mx.collections.ICollectionView",
  "description": "Returns whether the view contains the specified object."},
{ "name": "contains",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "contains",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "contains",
  "type": "Method",
  "class": "org.apache.royale.utils.ClassSelectorList",
  "description": "Search for the name in the element class list"},
{ "name": "contains",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayListView",
  "description": "Returns whether the view contains the specified object."},
{ "name": "contains",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "verify if the item is contained within this ArrayListView"},
{ "name": "contains",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": "Checks the collection for item using standard equality test."},
{ "name": "contains",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": "Checks the collection for the data item using standard equality test."},
{ "name": "contains",
  "type": "Method",
  "class": "org.apache.royale.utils.string",
  "description": "Checks whether a string contains the specified substring."},
{ "name": "containsCell",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is either <code>GridSelectionMode."},
{ "name": "containsCellRegion",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "containsClass",
  "type": "Method",
  "class": "org.apache.royale.utils.IClassSelectorListSupport",
  "description": "Search for the name in the element class list"},
{ "name": "containsClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.DataContainerBase",
  "description": "Search for the name in the element class list"},
{ "name": "containsClass",
  "type": "Method",
  "class": "org.apache.royale.core.StyledUIBase",
  "description": "Search for the name in the element class list"},
{ "name": "containsClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.Container",
  "description": "Search for the name in the element class list"},
{ "name": "containsClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.Group",
  "description": "Search for the name in the element class list"},
{ "name": "containsClass",
  "type": "Method",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": "Search for the name in the element class list"},
{ "name": "containsLocation",
  "type": "Method",
  "class": "google.maps.geometry.poly",
  "description": ""},
{ "name": "containsMouseEvent",
  "type": "Method",
  "class": "spark.components.gridClasses.GridView",
  "description": "True if this GridView's bounds contain the event."},
{ "name": "containsPoint",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "containsRect",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "containsRow",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is either <code>GridSelectionMode."},
{ "name": "containsRows",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": "the pages of the wizard"},
{ "name": "content",
  "type": "Property",
  "class": "spark.components.RichEditableText",
  "description": "This property is intended for use in MXML at compile time; to get or set rich text content at runtime, please use the <code>textFlow</code> property instead."},
{ "name": "content",
  "type": "Property",
  "class": "mx.rpc.Fault",
  "description": "The raw content of the fault (if available), such as an HTTP response body."},
{ "name": "content",
  "type": "Property",
  "class": "spark.components.RichText",
  "description": "This property is intended for use in MXML at compile time; to get or set rich text content at runtime, please use the <code>textFlow</code> property instead."},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "content",
  "type": "Property",
  "class": "mx.resources.IResourceBundle",
  "description": "An object containing key-value pairs for the resources in this resource bundle."},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IListMarkerFormat",
  "description": "@copy ListMarkerFormat#content"},
{ "name": "content",
  "type": "Property",
  "class": "mx.resources.ResourceBundle",
  "description": ""},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Controls the content of the marker."},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": "The TabBarContent related to the TabBar"},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.PopUpView",
  "description": "the content to be instantiated inside the popup."},
{ "name": "content",
  "type": "Property",
  "class": "org.apache.royale.jewel.PopUp",
  "description": "the content to be instantiated inside the popup."},
{ "name": "contentArea",
  "type": "Property",
  "class": "org.apache.royale.mobile.ManagerBase",
  "description": "The contentArea of a view manager is where the child elements are placed."},
{ "name": "contentArea",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": ""},
{ "name": "contentArea",
  "type": "Property",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": "The content area of the panel."},
{ "name": "contentArea",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": "The content area of the wizard."},
{ "name": "contentArea",
  "type": "Property",
  "class": "mx.containers.beads.FormItemView",
  "description": "The content area of the formItem."},
{ "name": "contentArea",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": "The content area of the formItem."},
{ "name": "contentArea",
  "type": "Property",
  "class": "mx.containers.beads.TabNavigatorView",
  "description": "The content area of the TabNavigator."},
{ "name": "contentArea",
  "type": "Property",
  "class": "mx.controls.beads.AlertView",
  "description": "The content area of the panel."},
{ "name": "contentBackgroundAlpha",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "contentBackgroundColor",
  "type": "Property",
  "class": "mx.core.ScrollControlBase",
  "description": ""},
{ "name": "contentBackgroundColor",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "contentBackgroundColor",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "contentBackgroundColor",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": ""},
{ "name": "contentBackgroundColor",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "contentData",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": "The text to send to the server, if any."},
{ "name": "contentGroup",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": "An optional skin part that defines the Group where the content children get pushed into and laid out."},
{ "name": "contentHeight",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "contentHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "contentHeight",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": "The height of the area, in pixels, in which content is displayed."},
{ "name": "contentHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the vertical extent of the text."},
{ "name": "contentHeight",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "contentLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "contentLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "contentMouseX",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "contentMouseX",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "contentMouseX",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "contentMouseY",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "contentMouseY",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "contentMouseY",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "contentProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": ""},
{ "name": "contentSize",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": ""},
{ "name": "contentSize",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": ""},
{ "name": "contentTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "contentTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "contentType",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "Type of content for service requests."},
{ "name": "contentType",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates the content type of this message."},
{ "name": "contentType",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Type of content for service requests."},
{ "name": "contentType",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": ""},
{ "name": "contentType",
  "type": "Property",
  "class": "org.apache.royale.net.URLRequest",
  "description": "Controls the HTTP form submission method."},
{ "name": "contentType",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "The content-type of the binary data."},
{ "name": "contentType",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Type of content for service requests."},
{ "name": "contentType",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.core.ILayoutHost",
  "description": "The container whose children are to be the subject of the layout."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.MXMLItemRenderer",
  "description": ""},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "The sub-element used as the parent of the container's elements."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.NumericStepperView",
  "description": "The area containing the TextInput and Spinner controls."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ContainerView",
  "description": "The sub-element used as the parent of the container's elements."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.html.beads.NumericStepperView",
  "description": "The area containing the TextInput and Spinner controls."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.html.DividedContainer",
  "description": ""},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.core.IViewport",
  "description": "Get the actual parent of the container's content."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": "Get the actual parent of the container's content."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutHost",
  "description": ""},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": "The sub-element used as the parent of the container's elements."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": "The sub-element used as the parent of the container's elements."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.OverflowViewport",
  "description": "Get the actual parent of the container's content."},
{ "name": "contentView",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": "The sub-element used as the parent of the container's elements."},
{ "name": "contentView",
  "type": "Property",
  "class": "mx.containers.beads.TabNavigatorView",
  "description": "The sub-element used as the parent of the container's elements."},
{ "name": "contentWidth",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "contentWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "contentWidth",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": "The width of the area, in pixels, in which content is displayed."},
{ "name": "contentWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the horizontal extent of the text."},
{ "name": "contentWidth",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "contentX",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": "The x coordinate of the area of the ViewStack container in which content is displayed, in pixels."},
{ "name": "contentY",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": "The y coordinate of the area of the ViewStack container in which content is displayed, in pixels."},
{ "name": "contextColor",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "An RGB value that can be used to associate an on-screen representation of the associated <code>chartItem</code>."},
{ "name": "control",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.MultiLine",
  "description": ""},
{ "name": "controlBar",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "controlBar",
  "type": "Property",
  "class": "org.apache.royale.core.IPanelModel",
  "description": "The items in the org."},
{ "name": "controlBar",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.PanelModel",
  "description": "The items in the org."},
{ "name": "controlBar",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "controlBar",
  "type": "Property",
  "class": "org.apache.royale.html.beads.PanelWithControlBarView",
  "description": "The org."},
{ "name": "controlBar",
  "type": "Property",
  "class": "org.apache.royale.html.PanelWithControlBar",
  "description": "The items in the org."},
{ "name": "controlButton",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "controlKey",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataItemRenderer",
  "description": "This should be an implementation like ItemRendererMouseController"},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.mobile.TitleView",
  "description": "Get the controller for the view."},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": "The controller."},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The controller (ContainerController object) for the container in which the line has been placed."},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.mobile.ToggleSwitch",
  "description": "Get the controller for the view."},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.createjs.Application",
  "description": "The controller."},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": "The controller."},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "controller",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.UpdateCompleteEvent",
  "description": "The controller of the container being updated"},
{ "name": "controls",
  "type": "Property",
  "class": "org.apache.royale.mobile.chrome.ToolBar",
  "description": "The control components of the ToolBar (eg, a settings button)."},
{ "name": "controls",
  "type": "Property",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "controls",
  "type": "Property",
  "class": "org.apache.royale.mobile.chrome.NavigationBar",
  "description": "The controls of the NavigationBar (eg, a button to go back and a title)."},
{ "name": "controls",
  "type": "Property",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "conversion",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Number used to convert incoming current bytes loaded value and the total bytes loaded values."},
{ "name": "conversionMode",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IME",
  "description": ""},
{ "name": "convert",
  "type": "Method",
  "class": "mx.events.utils.MouseEventConverter",
  "description": ""},
{ "name": "convert",
  "type": "Method",
  "class": "mx.events.utils.KeyboardEventConverter",
  "description": "Converts JS keyboard events to Royale ones."},
{ "name": "convert",
  "type": "Method",
  "class": "mx.events.utils.FocusEventConverter",
  "description": "Converts JS keyboard events to Royale ones."},
{ "name": "convert",
  "type": "Method",
  "class": "org.apache.royale.events.utils.KeyboardEventConverter",
  "description": "Converts JS keyboard events to Royale ones."},
{ "name": "convert",
  "type": "Method",
  "class": "org.apache.royale.events.utils.MouseEventConverter",
  "description": ""},
{ "name": "convertCharCode",
  "type": "Method",
  "class": "org.apache.royale.events.utils.KeyConverter",
  "description": "Converts Flash charCodes into rational string equivalents."},
{ "name": "convertColor",
  "type": "Method",
  "class": "org.apache.royale.core.IValuesImpl",
  "description": "Converts a color value into a uint."},
{ "name": "convertColor",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "convertColor",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "convertColorToString",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "convertFromRectangle",
  "type": "Method",
  "class": "mx.core.EdgeMetrics",
  "description": ""},
{ "name": "convertItem",
  "type": "Method",
  "class": "org.apache.royale.collections.converters.IItemConverter",
  "description": "Take the input string (could be serialized data set, XML, or JSON) and return a data class instance."},
{ "name": "convertItem",
  "type": "Method",
  "class": "org.apache.royale.collections.converters.JSONItemConverter",
  "description": ""},
{ "name": "convertKey",
  "type": "Method",
  "class": "org.apache.royale.events.utils.KeyConverter",
  "description": "Converts HTML key values into rational string equivalents."},
{ "name": "convertKeyCode",
  "type": "Method",
  "class": "org.apache.royale.events.utils.KeyConverter",
  "description": "Converts Flash keyCodes into rational string equivalents."},
{ "name": "convertLineRectToContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "convertParametersHandler",
  "type": "Property",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "An optional function, primarily intended for framework developers who need to install a function to get called with the parameters passed to each remote object invocation."},
{ "name": "convertResultHandler",
  "type": "Property",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "An optional function, primarily intended for framework developers who need to install a hook to process the results of an operation before notifying the result handlers."},
{ "name": "converted",
  "type": "Property",
  "class": "org.apache.royale.text.ime.CompositionAttributeRange",
  "description": "The converted flag, meaning this clause has been processed by the IME and is awaiting acceptance/confirmation by the user"},
{ "name": "converter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.FormatPropertyHandler",
  "description": ""},
{ "name": "converterMap",
  "type": "Property",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "copy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Copies TextLayoutFormat settings from the <code>values</code> ITextLayoutFormat instance into this TextLayoutFormat object."},
{ "name": "copy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": ""},
{ "name": "copy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuClipboardItems",
  "description": ""},
{ "name": "copy",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Copies the specified Object and returns a reference to the copy."},
{ "name": "copy",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Returns a deep copy of the XMLList object."},
{ "name": "copy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "copy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Copies TabStopFormat settings from the <code>values</code> ITabStopFormat instance into this TabStopFormat object."},
{ "name": "copy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "copyFrom",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Copies the values from another Matrix."},
{ "name": "copyFrom",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "copyFrom",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "copyItemWithUID",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Makes a deep copy of the object by calling the <code>ObjectUtil."},
{ "name": "coreStyles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "coreStyles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the <code>coreStyles</code> on this FlowElement."},
{ "name": "coreStyles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Returns the <code>coreStyles</code> on this TextLayoutFormat."},
{ "name": "coreStyles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the <code>coreStyles</code> on this ContainerController."},
{ "name": "cornerRadius",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "correlation",
  "type": "Property",
  "class": "mx.messaging.events.MessageAckEvent",
  "description": "The original Message correlated with this acknowledgement."},
{ "name": "correlationId",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AsyncMessage",
  "description": "Provides access to the correlation id of the message."},
{ "name": "correlationId",
  "type": "Property",
  "class": "mx.messaging.messages.AsyncMessage",
  "description": "Provides access to the correlation id of the message."},
{ "name": "correlationId",
  "type": "Property",
  "class": "mx.messaging.events.MessageAckEvent",
  "description": ""},
{ "name": "count",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "The number of items currently required in the cache."},
{ "name": "count",
  "type": "Property",
  "class": "spark.collections.SubListView",
  "description": "The number of items to be included in this SubListView or -1, which means that all items, beginning with the one at startIndex, are to be included."},
{ "name": "counter",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "counterIncrement",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "counterIncrement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IListMarkerFormat",
  "description": "@copy ListMarkerFormat#counterIncrement"},
{ "name": "counterIncrement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Controls incrementing the value of the counter."},
{ "name": "counterIncrementProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": ""},
{ "name": "counterReset",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "counterReset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IListMarkerFormat",
  "description": "@copy ListMarkerFormat#counterReset"},
{ "name": "counterReset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Controls resetting the value of the counter."},
{ "name": "counterResetProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": ""},
{ "name": "country",
  "type": "Property",
  "class": "mx.resources.Locale",
  "description": "The country code of this Locale instance."},
{ "name": "create",
  "type": "Method",
  "class": "mx.managers.SystemManager",
  "description": "A factory method that requests an instance of a definition known to the module."},
{ "name": "createAdornments",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "createBackgroundManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": ""},
{ "name": "createBadge",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.Badge",
  "description": "used to create the badge ui element that will be a Label"},
{ "name": "createBorder",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Creates the container's border skin if it is needed and does not already exist."},
{ "name": "createBorder",
  "type": "Method",
  "class": "mx.controls.TextInput",
  "description": "Creates the border for this component."},
{ "name": "createButton",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "createChangeEvent",
  "type": "Method",
  "class": "org.apache.royale.events.StyleChangeEvent",
  "description": "A convenience method to create an instance of the StyleChangeEvent."},
{ "name": "createChildren",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Create child objects of the component."},
{ "name": "createChildren",
  "type": "Method",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "createChildren",
  "type": "Method",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "createChildren",
  "type": "Method",
  "class": "spark.components.supportClasses.GroupBase",
  "description": "<p>If the layout object has not been set yet, createChildren() assigns this container a default layout object, BasicLayout."},
{ "name": "createChildren",
  "type": "Method",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "createChildren",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTip",
  "description": ""},
{ "name": "createChildren",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "createChildren",
  "type": "Method",
  "class": "mx.core.Application",
  "description": ""},
{ "name": "createChildren",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "createChildren",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartLabel",
  "description": ""},
{ "name": "createColumn",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.IDataGridColumn",
  "description": "Returns a new instance of a UIBase component to be used as the actual column in the grid."},
{ "name": "createColumn",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.DataGridColumn",
  "description": "Returns a new instance of a UIBase component to be used as the actual column in the grid."},
{ "name": "createColumn",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumn",
  "description": "Returns a new instance of a UIBase component to be used as the actual column in the grid."},
{ "name": "createColumn",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataGridColumn",
  "description": "Returns a new instance of a UIBase component to be used as the actual column in the grid."},
{ "name": "createColumn",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridColumn",
  "description": "Returns a new instance of a UIBase component to be used as the actual column in the grid."},
{ "name": "createColumnElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "createColumnElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Creates and returns a default column"},
{ "name": "createColumns",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": "Create 7 columns for calendar view (viewState = 0) or 4 columns for years or months view (viewState = 1 or 2)"},
{ "name": "createContentAsGroup",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "createContentElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "createContentElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "createContextMenu",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Creates a ContextMenu for the TextContainerManager."},
{ "name": "createContextMenu",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Creates a context menu for the ContainerController."},
{ "name": "createContextMenu",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": "Reroute to the TextContainerManger's override."},
{ "name": "createCursor",
  "type": "Method",
  "class": "mx.collections.ICollectionView",
  "description": "Creates a new IViewCursor that works with this view."},
{ "name": "createCursor",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "createCursor",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": "Returns a new instance of a view iterator over the items in this view"},
{ "name": "createCursor",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": "Returns a new instance of a view iterator over the items in this view."},
{ "name": "createDataID",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Creates a unique id to represent the dataPoint for comparison purposes."},
{ "name": "createDeferredContent",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Performs the equivalent action of calling the <code>createComponentsFromDescriptors(true)</code> method for containers that implement the IDeferredContentOwner interface to support deferred instantiation."},
{ "name": "createDelegate",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileBrowser",
  "description": ""},
{ "name": "createDictionaryFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": ""},
{ "name": "createDisabledRangeSet",
  "type": "Method",
  "class": "mx.charts.chartClasses.DateRangeUtilities",
  "description": "To build set of disabled ranges in terms of milliseconds for given sets of disabledDays and disabledRanges"},
{ "name": "createDiv",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Creates a new IDivElement that contains the entire range specified in the operationState at the lowest common parent element that contains both the start and end points of the range."},
{ "name": "createDiv",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "@copy IEditManager#createDiv()"},
{ "name": "createDivFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": ""},
{ "name": "createDivFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": ""},
{ "name": "createDragEvent",
  "type": "Method",
  "class": "org.apache.royale.events.DragEvent",
  "description": "Factory for DragEvents."},
{ "name": "createDragImage",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionDragImageBead",
  "description": "Creates an example/temporary component to be dragged and returns it."},
{ "name": "createDragIndicator",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Creates an instance of a class that is used to display the visuals of the dragged items during a drag and drop operation."},
{ "name": "createEditManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Create an edit manager to use for editing."},
{ "name": "createEditor",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Create the data grid editor."},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.core.GroupBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Table",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.core.StyledUIBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.NumericStepper",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.ButtonBar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.View",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Slider",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.TabBar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.Slider",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TBodyContentArea",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.createjs.graphics.GraphicShape",
  "description": "Creates a CreateJS Shape as the element."},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.SectionContent",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.ButtonBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemMouseRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.Form",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.TextInput",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.TextArea",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mobile.ManagerBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.MenuItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.ListItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.checkbox.CheckBoxIcon",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Span",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.LayoutTitle",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.TextArea",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.TextNode",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.RadioButtonIcon",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.CSSCheckBox",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.Label",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.ToolTip",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.TableCell",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Button",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.NavigationLinkItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.NavigationLinkItemMouseRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.svg.TransformableCompoundGraphic",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.controls.RadioButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.RadioButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.TableRow",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.drawer.DrawerHeader",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Button",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.IconButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "spark.components.supportClasses.ButtonBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "spark.components.RadioButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TabBarLayoutItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TBody",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TFoot",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.THead",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.StringItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jquery.TextButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.TabBarButtonItemRendererBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.ImageButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Bar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.TitleBar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.controls.Label",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.controls.Text",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.List",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Navigation",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Option",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.CheckBoxIcon",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Divider",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Select",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterLinkList",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Strong",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "spark.components.Image",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "spark.components.supportClasses.TextBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.LoadIndicator",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.SimpleList",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.A",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.B",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.I",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.P",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.S",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.U",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "spark.components.RichText",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.HRule",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.Image",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBarButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.Table",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.VRule",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.TextField",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.NavigationLink",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Spinner",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.TextInput",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Label",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Toast",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.DropDownListItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.TextArea",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Textarea",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Progress",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Spinner",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.HTMLText",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.NumericStepper",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.controls.CheckBox",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.CheckBox",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.ToggleTextButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Chip",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Menu",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Tabs",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.DropDownList",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Colgroup",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.tooltip.ToolTipLabel",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Caption",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.ControlBar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html5.DateField",
  "description": "Constructor"},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.core.Lookalike",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Form",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.express.MXMLViewer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardContent",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.TableHeader",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.ApplicationMainContent",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Input",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Label",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Small",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Table",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Tbody",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Tfoot",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Thead",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H4",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.DialogTitle",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H2",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.CardTitleText",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.MultilineLabel",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.core.UIElement",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Em",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H1",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H3",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H5",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.H6",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Hr",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Li",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Ol",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Td",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Th",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Tr",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Ul",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.NavigationLinkItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.drawer.DrawerBase",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.bar.BarTitle",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.ListItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.TableItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.ImageButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.ImageAndTextButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.FooterHeading",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Dialog",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.ControlBar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Footer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.DropDownListItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemSingleSelectionMouseRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Header",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Navigation",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.CloseButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.TabBarContent",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.createjs.CheckBox",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.ButtonChip",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.WebBrowser",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Slider",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Switch",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.svg.DOMWrapper",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.controls.TextArea",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Table",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.ToggleButton",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.ProgressBar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.TitleBar",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.Spinner",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Col",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Img",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Pre",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.itemRenderers.StringItemRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TableHeaderCell",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.bar.BarSection",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "spark.components.TextInput",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Code",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.html.elements.Form",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.radiobutton.RadioButtonIcon",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TableRow",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.list.DataGroup",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.SimpleTable",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.charts.renderers.AreaRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "mx.charts.renderers.LineRenderer",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "spark.components.CheckBox",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.TabBarPanel",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.drawer.DrawerContent",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Alert",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Image",
  "description": ""},
{ "name": "createElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.PopUp",
  "description": ""},
{ "name": "createElementRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "Creates an ElementRange object."},
{ "name": "createEmptySortField",
  "type": "Method",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "createEmptySortField",
  "type": "Method",
  "class": "mx.collections.Sort",
  "description": ""},
{ "name": "createEmptySortField",
  "type": "Method",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "createErrorMessage",
  "type": "Method",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Creates an ErrorMessage based on the ChannelFaultEvent by copying over the faultCode, faultString, faultDetail and rootCause to the new ErrorMessage."},
{ "name": "createErrorString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyUtil",
  "description": ""},
{ "name": "createErrorTip",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Create an errorTip that floats a error text over a control"},
{ "name": "createEvent",
  "type": "Method",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "Utility method to create a new ChannelEvent that doesn't bubble and is not cancelable."},
{ "name": "createEvent",
  "type": "Method",
  "class": "mx.messaging.events.MessageEvent",
  "description": "Utility method to create a new MessageEvent that doesn't bubble and is not cancelable."},
{ "name": "createEvent",
  "type": "Method",
  "class": "mx.rpc.events.FaultEvent",
  "description": "Given a Fault, this method constructs and returns a FaultEvent."},
{ "name": "createEvent",
  "type": "Method",
  "class": "org.apache.royale.events.utils.EventUtils",
  "description": ""},
{ "name": "createEvent",
  "type": "Method",
  "class": "mx.messaging.events.MessageAckEvent",
  "description": "Utility method to create a new MessageAckEvent that doesn't bubble and is not cancelable."},
{ "name": "createEvent",
  "type": "Method",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Utility method to create a new ChannelFaultEvent that doesn't bubble and is not cancelable."},
{ "name": "createEvent",
  "type": "Method",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "Utility method to create a new MessageFaultEvent that doesn't bubble and is not cancelable."},
{ "name": "createEventFromMessageFault",
  "type": "Method",
  "class": "mx.rpc.events.FaultEvent",
  "description": "Given a MessageFaultEvent, this method constructs and returns a FaultEvent."},
{ "name": "createEventInit",
  "type": "Method",
  "class": "org.apache.royale.conversions",
  "description": ""},
{ "name": "createFTETextField",
  "type": "Method",
  "class": "mx.core.ITextFieldFactory",
  "description": "Creates an instance of FTETextField in the context of the specified module factory."},
{ "name": "createFromClass",
  "type": "Method",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": "Creates an instance of an item renderer from itemRendererFactory."},
{ "name": "createFromFlowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.PointFormat",
  "description": ""},
{ "name": "createFromMXMLContent",
  "type": "Method",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": "Creates an instance of an item renderer from child MXML tags."},
{ "name": "createFunction",
  "type": "Property",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": "This is the method that actually does the work for createItemRenderer."},
{ "name": "createGradientBox",
  "type": "Method",
  "class": "mx.geom.Matrix",
  "description": ""},
{ "name": "createGridSelection",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Creates a grid selection object to use to manage selection."},
{ "name": "createGridSelection",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Creates a grid selection object to use to manage selection."},
{ "name": "createImage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": "Creates image and inserts it into specified FlowGroupElement"},
{ "name": "createImpliedSpan",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": "create an implied span with specified text"},
{ "name": "createInFontContext",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Creates a new object using a context based on the embedded font being used."},
{ "name": "createInlineGraphicFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create an inline graphic from XML"},
{ "name": "createInstance",
  "type": "Method",
  "class": "mx.effects.Effect",
  "description": ""},
{ "name": "createItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.core.IItemRendererClassFactory",
  "description": "This method is called to generate another instance of an item renderer and attach it to the given parent."},
{ "name": "createItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": ""},
{ "name": "createLabel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "createLabel",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormHeadingView",
  "description": ""},
{ "name": "createLinkFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse a LinkElement Block."},
{ "name": "createList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Creates a new ListElement that contains the entire range specified in the operationState at the lowest common parent element that contains both the start and end points of the range."},
{ "name": "createList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "@copy IEditManager#createList()"},
{ "name": "createListFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a list element from XML"},
{ "name": "createListItemFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a list item element from XML"},
{ "name": "createListMarkerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Creates a new ListMarkerFormat object."},
{ "name": "createListMarkerFormatDictionaryFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": ""},
{ "name": "createListener",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.Result",
  "description": "For internal use only."},
{ "name": "createMarker",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "createMarker",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Creates a marker for placement on the map."},
{ "name": "createMenu",
  "type": "Method",
  "class": "org.apache.royale.html.Menu",
  "description": "Creates a new instance of the menu, attaching the data given as the dataProvider to the menu."},
{ "name": "createMenu",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": "Creates and returns an instance of the Menu class."},
{ "name": "createMouseEvent",
  "type": "Method",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "createNumberLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": ""},
{ "name": "createNumberLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": ""},
{ "name": "createObjectURL",
  "type": "Method",
  "class": "org.apache.royale.utils.URLUtils",
  "description": "Creates an object URL for of a blob or a file"},
{ "name": "createParagraphFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a paragraph element from XML"},
{ "name": "createParcelList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "createPatternString",
  "type": "Method",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Creates a new string based RegEx pattern based on a given value and a selected pattern Type."},
{ "name": "createPopUp",
  "type": "Method",
  "class": "mx.managers.PopUpManager",
  "description": "Creates a top-level window and places it above other windows in the z-order."},
{ "name": "createRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyHandler",
  "description": ""},
{ "name": "createRegExp",
  "type": "Method",
  "class": "spark.components.supportClasses.RegExPatterns",
  "description": "Creates a new RegEx pattern based on a given value and a selected pattern Type."},
{ "name": "createRequestTimeoutErrorMessage",
  "type": "Method",
  "class": "mx.messaging.MessageResponder",
  "description": "Constructs an ErrorMessage that can be passed to the associated MessageAgent's callbacks upon a request timeout."},
{ "name": "createRowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "createRowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Creates and returns a default row"},
{ "name": "createSPGEFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": ""},
{ "name": "createSVG",
  "type": "Method",
  "class": "org.apache.royale.html.util",
  "description": "Utility function for creating a new SVG Element"},
{ "name": "createSelectTableColumnCursor",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Create a select table column cursor"},
{ "name": "createSelectTableCursor",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Create a select table cursor"},
{ "name": "createSelectTableRowCursor",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Create a select row cursor"},
{ "name": "createSelectionManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Create a selection manager to use for selection."},
{ "name": "createSelector",
  "type": "Method",
  "class": "mx.charts.styles.HaloDefaults",
  "description": "Creates a CSSStyleDeclaration object or returns an existing one."},
{ "name": "createShape",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "createSoftKeyboardEffect",
  "type": "Method",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Called by the soft keyboard <code>activate</code> and <code>deactive</code> event handlers, this method is responsible for creating the Spark effect played on the pop-up."},
{ "name": "createSpanFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a span element from XML"},
{ "name": "createStream",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": ""},
{ "name": "createStream",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryUploader",
  "description": ""},
{ "name": "createSubParagraphGroup",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Creates a new SubParagraphGroupElement that contains the entire range specified in the operationState at the lowest common parent element that contains both the start and end points of the range."},
{ "name": "createSubParagraphGroup",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "@copy IEditManager#createSubParagraphGroup()"},
{ "name": "createSubParagraphGroupFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a sub paragraph group element from XML"},
{ "name": "createTCYFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a tate chu yoko element from XML"},
{ "name": "createTLF",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.CreateTLFUtil",
  "description": ""},
{ "name": "createTableCellFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a table cell element from XML"},
{ "name": "createTableFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a table element from XML"},
{ "name": "createTableRowFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Create a table row element from XML"},
{ "name": "createTextBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "createTextField",
  "type": "Method",
  "class": "mx.core.ITextFieldFactory",
  "description": "Creates an instance of TextField in the context of the specified IFlexModuleFactory."},
{ "name": "createTextFlowFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": ""},
{ "name": "createTextLayoutFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Creates a new TextLayoutFormat object."},
{ "name": "createTextLine",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "createTextLine",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "createTextLines",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "Creates ITextLine objects using the text currently assigned to this factory object."},
{ "name": "createTextLines",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "createTextLines",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TextFlowTextLineFactory",
  "description": "Creates ITextLine objects from the specified text flow."},
{ "name": "createTextScrap",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextScrap",
  "description": "Creates a TextScrap object from a range of text represented by a TextRange object."},
{ "name": "createToolTip",
  "type": "Method",
  "class": "mx.managers.ToolTipManager",
  "description": "Creates an instance of the ToolTip class with the specified text and displays it at the specified location in stage coordinates."},
{ "name": "createTween",
  "type": "Method",
  "class": "mx.effects.effectClasses.TweenEffectInstance",
  "description": "Creates a Tween instance, assigns it the start, end, and duration values."},
{ "name": "createUID",
  "type": "Method",
  "class": "org.apache.royale.net.utils.RPCUIDUtil",
  "description": "Generates a UID (unique identifier) based on ActionScript's pseudo-random number generator and the current time."},
{ "name": "createUID",
  "type": "Method",
  "class": "mx.utils.RPCUIDUtil",
  "description": "Generates a UID (unique identifier) based on ActionScript's pseudo-random number generator and the current time."},
{ "name": "createUID",
  "type": "Method",
  "class": "mx.utils.UIDUtil",
  "description": "Generates a UID (unique identifier) based on ActionScript's pseudo-random number generator and the current time."},
{ "name": "createUID",
  "type": "Method",
  "class": "org.apache.royale.utils.UIDUtil",
  "description": "Generates a UID (unique identifier) based on ActionScript's pseudo-random number generator and the current time."},
{ "name": "createUpdateEvent",
  "type": "Method",
  "class": "mx.events.PropertyChangeEvent",
  "description": "Returns a new PropertyChangeEvent of kind <code>PropertyChangeEventKind."},
{ "name": "createUpdateEvent",
  "type": "Method",
  "class": "org.apache.royale.events.ValueChangeEvent",
  "description": "A convenience method to create an instance of the ValueChangeEvent."},
{ "name": "createdComponents",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "creatingContentPane",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Containers use an internal content pane to control scrolling."},
{ "name": "creationCallback",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "A callback invoked when new instances are created."},
{ "name": "creationComplete",
  "type": "Event",
  "description": "Dispatched when the component has finished its construction, property processing, measuring, layout, and drawing."},
{ "name": "creationIndex",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Specifies the order to instantiate and draw the children of the container."},
{ "name": "creationPolicy",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "The child creation policy for this MX Container."},
{ "name": "creationPolicy",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "ctrlKey",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "ctrlKey",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "ctrlKey",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Indicates whether the <code>Ctrl</code> key was pressed."},
{ "name": "ctrlKey",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Was ctrl key depressed."},
{ "name": "cubicCurveTo",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Adds a cubicCurveTo command"},
{ "name": "cubicIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "cubicInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "cubicOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "currencySymbol",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Character to use as a currency symbol for a formatted number."},
{ "name": "currencySymbol",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.CurrencyFormatter",
  "description": "The currency symbol, such as \"$\""},
{ "name": "current",
  "type": "Property",
  "class": "mx.collections.IViewCursor",
  "description": "Provides access the object at the location in the source collection referenced by this cursor."},
{ "name": "current",
  "type": "Property",
  "class": "mx.collections.LeafNodeCursor",
  "description": ""},
{ "name": "current",
  "type": "Property",
  "class": "org.apache.royale.events.ProgressEvent",
  "description": "The current value."},
{ "name": "current",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalViewCursor",
  "description": ""},
{ "name": "current",
  "type": "Method",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": "Returns a BrowserInfo object with properties of the current runtime."},
{ "name": "current",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "currentBuffer",
  "type": "Property",
  "class": "org.apache.royale.mdl.ProgressBar",
  "description": "Current progress of the buffer."},
{ "name": "currentCellSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The current Cell SelectionFormat object."},
{ "name": "currentCellSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "currentCenter",
  "type": "Property",
  "class": "org.apache.royale.maps.google.models.MapModel",
  "description": "The current center of the map."},
{ "name": "currentChannel",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "Returns the current Channel for the ChannelSet."},
{ "name": "currentContainer",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextFactory",
  "description": ""},
{ "name": "currentContainer",
  "type": "Property",
  "class": "org.apache.royale.text.html.HTMLTextFactory",
  "description": ""},
{ "name": "currentContainer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.ITLFFactory",
  "description": ""},
{ "name": "currentContainer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StandardTLFFactory",
  "description": ""},
{ "name": "currentCount",
  "type": "Property",
  "class": "org.apache.royale.utils.Timer",
  "description": ""},
{ "name": "currentCursorID",
  "type": "Property",
  "class": "mx.managers.CursorManager",
  "description": "ID of the current custom cursor, or NO_CURSOR if the system cursor is showing."},
{ "name": "currentCursorID",
  "type": "Property",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "currentCursorXOffset",
  "type": "Property",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "currentCursorYOffset",
  "type": "Property",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "currentDepth",
  "type": "Property",
  "class": "mx.collections.IHierarchicalCollectionViewCursor",
  "description": "Contains the depth of the node at the location in the source collection referenced by this cursor."},
{ "name": "currentDepth",
  "type": "Property",
  "class": "mx.collections.LeafNodeCursor",
  "description": ""},
{ "name": "currentDepth",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalViewCursor",
  "description": ""},
{ "name": "currentDepth",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "currentDomain",
  "type": "Property",
  "class": "mx.system.ApplicationDomain",
  "description": ""},
{ "name": "currentParcel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "currentParcelIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "currentProgress",
  "type": "Property",
  "class": "org.apache.royale.mdl.ProgressBar",
  "description": "Current progress of the progressbar"},
{ "name": "currentSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The current SelectionFormat object."},
{ "name": "currentSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "currentState",
  "type": "Property",
  "class": "org.apache.royale.core.IStatesObject",
  "description": "The current state name"},
{ "name": "currentState",
  "type": "Property",
  "class": "org.apache.royale.core.GroupBase",
  "description": "The name of the current state."},
{ "name": "currentState",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The current view state of the component."},
{ "name": "currentState",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": "The name of the current state."},
{ "name": "currentState",
  "type": "Property",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": "The name of the current state."},
{ "name": "currentState",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "Defines the appearance of the ChartItem."},
{ "name": "currentState",
  "type": "Property",
  "class": "org.apache.royale.createjs.Container",
  "description": "The name of the current state."},
{ "name": "currentStep",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": "the current step or page visualized in this wizard"},
{ "name": "currentStep",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": "the current step or page visualized in this wizard"},
{ "name": "currentTable",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": ""},
{ "name": "currentTable",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "currentTarget",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "currentTarget",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "currentTarget",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "currentTarget",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "The element the listener is attached to."},
{ "name": "currentTime",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "Used by effects to get the current effect time tick."},
{ "name": "currentToolTip",
  "type": "Property",
  "class": "mx.managers.ToolTipManager",
  "description": "The ToolTip object that is currently visible, or <code>null</code> if none is shown."},
{ "name": "currentToolTip",
  "type": "Property",
  "class": "mx.managers.IToolTipManager2",
  "description": ""},
{ "name": "currentView",
  "type": "Property",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": ""},
{ "name": "cursor",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Each ChartElement carries a cursor associated with their dataProvider for their own internal use."},
{ "name": "cursor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.Mouse",
  "description": ""},
{ "name": "cursor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "cursorFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the callback used for custom cursor."},
{ "name": "cursorFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "cursorManager",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Gets the CursorManager that controls the cursor for this component and its peers."},
{ "name": "curveTo",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Draws a curve using the current line style from the current drawing position to (anchorX, anchorY) and using the control point that (controlX, controlY) specifies."},
{ "name": "curveTo",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Draws a curve using the current line style from the current drawing position to (anchorX, anchorY) and using the control point that (controlX, controlY) specifies."},
{ "name": "curveTo",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "customItems",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenu",
  "description": ""},
{ "name": "customXMLStringHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyHandler",
  "description": ""},
{ "name": "customXMLStringHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.UintPropertyHandler",
  "description": ""},
{ "name": "customXMLStringHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.SpacingLimitPropertyHandler",
  "description": ""},
{ "name": "customXMLStringHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.CounterPropHandler",
  "description": ""},
{ "name": "customXMLStringHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.CounterContentHandler",
  "description": ""},
{ "name": "customizeSeries",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Applies per-series customization and formatting to the series of the chart."},
{ "name": "customizeSeries",
  "type": "Method",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Applies any customization to a sub-series when building the stacking behavior."},
{ "name": "customizeSeries",
  "type": "Method",
  "class": "mx.charts.series.ColumnSet",
  "description": ""},
{ "name": "cut",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuClipboardItems",
  "description": ""},
{ "name": "cutTextScrap",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Deletes the selected area and returns the deleted area in a TextScrap object."},
{ "name": "cutTextScrap",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "cycleArray",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "Cycle days array for offsetting when change firstDayOfWeek"},
{ "name": "d",
  "type": "Property",
  "class": "org.apache.royale.geom.Matrix",
  "description": ""},
{ "name": "damage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": ""},
{ "name": "damage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "damage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Mark lines as damaged and needing a recompose."},
{ "name": "damage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "damage",
  "type": "Event",
  "description": "Dispatched by a ITextFlow object each time it is damaged"},
{ "name": "damage",
  "type": "Event",
  "description": "Dispatched by a TextFlow object each time it is damaged  You can use this event to find out that the TextFlow has changed, but do not access the TextFlow itself when this event is sent out."},
{ "name": "damage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "damage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "damageAbsoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": "The absolute position immediately preceding the first element in the text flow that requires composition and updating."},
{ "name": "damageAbsoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "The first invalid position in the root element, as an absolute position from the start of the flow."},
{ "name": "damageAbsoluteStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.DamageEvent",
  "description": "Absolute start of the damage"},
{ "name": "damageLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.DamageEvent",
  "description": "Length of the damage"},
{ "name": "dark",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": "Activate \"dark\" class selector."},
{ "name": "dark",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "Activate \"md-dark\" class selector."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.core.IItemRenderer",
  "description": "The data item to be displayed by the item renderer."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "The data being represented by this itemRenderer."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.MXMLItemRenderer",
  "description": "The data being represented by this itemRenderer."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.storage.events.FileEvent",
  "description": "The data read from the file."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.MenuItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.ListItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "mx.core.IDataRenderer",
  "description": "The data to render or edit."},
{ "name": "data",
  "type": "Property",
  "class": "mx.controls.treeClasses.TreeItemRenderer",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "The <code>data</code> property lets you pass a value to the component when you use it as an item renderer or item editor."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.NavigationLinkItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": "The <code>data</code> property lets you pass a value to the component when you use it as an item renderer or item editor."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataTip",
  "description": "The HitData structure describing the data point that the DataTip is rendering."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.HLOCItemRenderer",
  "description": "The chart item that this renderer represents."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "The data being represented by this itemRenderer."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGBoxItemRenderer",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TabItemRendererBase",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "mx.net.FileReference",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.StringItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.NestedStringItemRenderer",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TabBarButtonItemRendererBase",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "mx.controls.Label",
  "description": "Lets you pass a value to the component when you use it in an item renderer or item editor."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ButtonBarButtonItemRenderer",
  "description": "The data to be displayed by the itemRenderer instance."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataGridButtonBarButtonItemRenderer",
  "description": "The data to be displayed by the itemRenderer instance."},
{ "name": "data",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridItemRenderer",
  "description": "Sets the data for the itemRenderer instance along with the listData (TreeListData)."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The <code>data</code> property lets you pass a value to the component when you use it in an item renderer or item editor."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.WedgeItemRenderer",
  "description": "The chart item that this renderer represents."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "The data of the task"},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Get the platform-specific data for sending."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.CircleItemRenderer",
  "description": "The chartItem that this itemRenderer displays."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.TriangleItemRenderer",
  "description": "The chartItem that this itemRenderer is displaying."},
{ "name": "data",
  "type": "Property",
  "class": "mx.controls.NumericStepper",
  "description": "The <code>data</code> property lets you pass a value to the component when you use it in an item renderer or item editor."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.BoxItemRenderer",
  "description": "The chartItem that this itemRenderer is displaying."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.MessageBody",
  "description": "The data to be sent."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.DropDownListItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "spark.components.DataRenderer",
  "description": "The implementation of the <code>data</code> property as defined by the IDataRenderer interface."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.net.URLLoader",
  "description": "The text returned from the server."},
{ "name": "data",
  "type": "Property",
  "class": "spark.events.PopUpEvent",
  "description": "The data to commit."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": "The binary result of the request."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.MouseCursorData",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.net.URLRequest",
  "description": "An object containing data to be transmitted with the URL request."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.ShadowBoxItemRenderer",
  "description": "The chartItem that this itemRenderer is displaying."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.events.ItemClickedEvent",
  "description": "The data of the item."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "The data to be displayed as the text value."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.MenuBarItemRenderer",
  "description": "The data being represented by this itemRenderer."},
{ "name": "data",
  "type": "Property",
  "class": "mx.net.SharedObject",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.CascadingMenuItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.svg.Path",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.DiamondItemRenderer",
  "description": "The chartItem that this itemRenderer is displaying."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.NavigationLinkItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.ListItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DayNameItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "Sometimes, after the upload, the server returns useful information which will be available after the COMPLETE event."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TreeItemRenderer",
  "description": "Sets the data for the itemRenderer instance along with the listData (TreeListData)."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.DateItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.ShadowLineRenderer",
  "description": "The chart item that this renderer represents."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.DropDownListItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.MessageHeader",
  "description": "The data to be sent."},
{ "name": "data",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": "Lets you pass a value to the component when you use it in an item renderer or item editor."},
{ "name": "data",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": "Lets you pass a value to the component when you use it in an item renderer or item editor."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.MenuItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": "A string containing a compact represention of the path segments."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.net.events.ResultEvent",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": "The array of desired data types."},
{ "name": "data",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Lets you pass a value to the component when you use it in an item renderer or item editor."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DateItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.CrossItemRenderer",
  "description": "The chartItem that this itemRenderer is displaying."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.CandlestickItemRenderer",
  "description": "The chart item that this renderer represents."},
{ "name": "data",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "The value of the data provider item for the grid row corresponding to the item renderer."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": "The text returned from the server."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.StringItemRenderer",
  "description": "Sets the data value and uses the String version of the data for display."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartLabel",
  "description": "Defines the contents of the label."},
{ "name": "data",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.AreaRenderer",
  "description": "The data that the AreaRenderer renders."},
{ "name": "data",
  "type": "Property",
  "class": "mx.charts.renderers.LineRenderer",
  "description": "The chart item that this renderer represents."},
{ "name": "dataBadge",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Badge",
  "description": "The current value of the Badge that appers inside the circle."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChange",
  "type": "Event",
  "description": "Dispatched when the <code>data</code> property changes."},
{ "name": "dataChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Indicates the underlying data represented by the element has changed."},
{ "name": "dataChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Triggers events that inform the range object when the chart data has changed."},
{ "name": "dataChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": ""},
{ "name": "dataChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "Informs the DataTransform that some of the underlying data being represented on the chart has changed."},
{ "name": "dataChildChangeHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "dataChildChangeHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "dataChildren",
  "type": "Property",
  "class": "mx.charts.chartClasses.IDataCanvas",
  "description": ""},
{ "name": "dataChildren",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "dataChildren",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "An array of child objects."},
{ "name": "dataDescriptions",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "An Array of DataDescription structures describing the data being represented by the chart."},
{ "name": "dataDescriptor",
  "type": "Property",
  "class": "mx.controls.Tree",
  "description": "Tree delegates to the data descriptor for information about the data."},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataItemRenderer",
  "description": "The name of the field within the data the itemRenderer should use."},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "The name of the field within the data the itemRenderer should use."},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": ""},
{ "name": "dataField",
  "type": "Property",
  "class": "mx.controls.dataGridClasses.DataGridListData",
  "description": "Name of the field or property in the data provider associated with the column."},
{ "name": "dataField",
  "type": "Property",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForIListData",
  "description": ""},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.IDataGridColumn",
  "description": "The name of the field containing the data value presented by the column."},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.DataGridColumn",
  "description": "The name of the field containing the data value presented by the column."},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataFieldProviderBead",
  "description": ""},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.PieSeries",
  "description": ""},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumn",
  "description": "The name of the field containing the data value presented by the column."},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataGridColumn",
  "description": "The name of the field containing the data value presented by the column."},
{ "name": "dataField",
  "type": "Property",
  "class": "mx.collections.SummaryField2",
  "description": "Data field for which the summary is computed."},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataFieldProviderBead",
  "description": ""},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataField",
  "type": "Property",
  "class": "mx.events.AdvancedDataGridEvent",
  "description": "The name of the field or property in the data associated with the column."},
{ "name": "dataField",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The name of the field or property in the data provider item associated with the column."},
{ "name": "dataField",
  "type": "Property",
  "class": "mx.collections.SummaryField",
  "description": "Data field for which the summary is computed."},
{ "name": "dataField",
  "type": "Property",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForICollectionViewData",
  "description": ""},
{ "name": "dataFieldPath",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": ""},
{ "name": "dataFieldProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataFieldProvider",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": ""},
{ "name": "dataFieldProvider",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataFieldProvider",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataForFormat",
  "type": "Method",
  "class": "mx.core.DragSource",
  "description": "Retrieves the data for the specified format."},
{ "name": "dataFunction",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "Specifies a method that returns the value that should be used for positioning the current chart item in the series."},
{ "name": "dataFunction",
  "type": "Property",
  "class": "mx.charts.CategoryAxis",
  "description": "Specifies a method that returns the value that should be used as categoryValue for current item."},
{ "name": "dataGrid",
  "type": "Property",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "Reference to the <code>DataGrid</code> that created the editor."},
{ "name": "dataGrid",
  "type": "Property",
  "class": "spark.components.gridClasses.IDataGridElement",
  "description": "The DataGrid control associated with this element."},
{ "name": "dataGrid",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The DataGrid control for which this Grid is used as the grid skin part."},
{ "name": "dataGrid",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemEditor",
  "description": "The control that owns this item editor."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": "The org."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableComponent",
  "description": "An optional skin part that defines the DataGroup in the skin class where data items get pushed into, rendered, and laid out."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": "The org."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IListView",
  "description": "The component which parents all of the itemRenderers for each datum being displayed by the List component."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": ""},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": "The parent of the item renderers."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": "The parent of the item renderers."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ListView",
  "description": ""},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TextItemRendererFactoryForStringVectorData",
  "description": "The IItemRendererParent that should parent the ITextItemRenderers"},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": "The org."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": "The parent of the item renderers."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TabsItemRendererFactoryForArrayData",
  "description": "The org."},
{ "name": "dataGroup",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": "The parent of the item renderers."},
{ "name": "dataInterval",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Specifies the interval between data in your chart, specified in <code>dataUnits</code>."},
{ "name": "dataMdlFor",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": "The id value of the associated control for this tooltip"},
{ "name": "dataMdlFor",
  "type": "Property",
  "class": "org.apache.royale.mdl.Menu",
  "description": "The id value of the associated button that opens this menu."},
{ "name": "dataMdlFor",
  "type": "Property",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": "The id value of the associated input Need to specify for display content of IconToggle"},
{ "name": "dataModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": ""},
{ "name": "dataNotifier",
  "type": "Property",
  "class": "org.apache.royale.express.DataGrid",
  "description": "The IDataProviderNotifier that will watch for data provider changes."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.Table",
  "description": "A list of data items that correspond to the rows in the table."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.core.IDataProviderModel",
  "description": "The set of choices displayed in the ComboBox's dropdown."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.DataContainer",
  "description": "The data being display by the List."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "A data provider assigned to the this specific element."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.List",
  "description": "The data being display by the List."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "Set of data to be viewed."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "Set of data to be viewed."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "Set of data to be viewed."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "spark.components.DataGroup",
  "description": "The data provider for this DataGroup."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies the data provider for the chart."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.core.IMenu",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.Tree",
  "description": "The dataProvider for a Tree is TreeData which is created from HierarchicalData."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumnList",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": "The data being display by the List."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionICollectionViewModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.core.IComboBoxModel",
  "description": "The set of choices displayed in the ComboBox's dropdown."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.Tree",
  "description": "An object that contains the data to be displayed."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.ComboBox",
  "description": "The data for display by the ComboBox."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "spark.components.supportClasses.ListBase",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Set of data to be used in the Legend."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.ToggleButtonBar",
  "description": "Set of data to be viewed."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.express.beads.models.DataGridModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.DataContainer",
  "description": "The data being display by the List."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.LinkBar",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.beads.models.MenuBarModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": "The dataProvider, which is a Vector."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.express.List",
  "description": "The data being display by the List."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.charts.CategoryAxis",
  "description": "Specifies the data source containing the label names."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionIListModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "spark.components.supportClasses.DropDownListBase",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.ComboBox",
  "description": "The data for display by the ComboBox."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.mdl.Tabs",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.MenuBar",
  "description": "The hierarchy of objects that are displayed as MenuBar items and menus."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.DropDownList",
  "description": "The data set to be displayed."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "spark.components.ComboBox",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.PopUpMenuButton",
  "description": "DataProvider for popUpMenu."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": "The set of items this component displays."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.combobox.ComboBoxPopUp",
  "description": "The data for display by the ComboBox."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.DataGrid",
  "description": "The object used to provide data to the org."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.TreeGrid",
  "description": "The dataProvider for a TreeGrid is TreeData which is created from HierarchicalData."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataProviderModel",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "A list of data items that correspond to the rows in the grid."},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.mdl.TabBar",
  "description": ""},
{ "name": "dataProvider",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DataProviderModel",
  "description": ""},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": "The org."},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.TabsDataItemRendererFactoryForArrayListData",
  "description": ""},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForIListData",
  "description": "The org."},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.DropDownListView",
  "description": ""},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.DropDownListView",
  "description": ""},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": "The org."},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.TabsItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": "The org."},
{ "name": "dataProviderChangeHandler",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForICollectionViewData",
  "description": "The org."},
{ "name": "dataProviderCollectionChanged",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Handles changes in the dataProvider."},
{ "name": "dataProviderCollectionChanged",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "dataProviderLength",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "Returns the value of <code>dataProvider."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": "The model holding the dataProvider."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": "The model holding the dataProvider."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": ""},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.CollectionChangeUpdateForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForIListData",
  "description": ""},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VirtualListVerticalLayout",
  "description": ""},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllByNullItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveListItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveAllItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "mx.controls.listClasses.VirtualListVerticalLayout",
  "description": ""},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.CollectionChangeUpdateForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": "The model holding the dataProvider."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TabsItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveItemRendererForArrayListData",
  "description": "The org."},
{ "name": "dataProviderModel",
  "type": "Property",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForICollectionViewData",
  "description": ""},
{ "name": "dataProviderView",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "dataRegion",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "The area of the chart used to display data."},
{ "name": "dataRegion",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "dataTipField",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "dataTipField",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "dataTipField",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The name of the field in the data provider to display as the datatip."},
{ "name": "dataTipFormatter",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Specifies the formatter used by the column's <code>itemToDataTip()</code> method to convert data provider items to Strings."},
{ "name": "dataTipFunction",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "dataTipFunction",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "User-supplied function to run on each item to determine its dataTip."},
{ "name": "dataTipFunction",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies a callback method used to generate data tips from values."},
{ "name": "dataTipFunction",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "A function provided by the HitData creator to generate a user-suitable String for display on screen that describes the referenced item."},
{ "name": "dataTipFunction",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "dataTipFunction",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Specifies a callback function to run on each item of the data provider to determine its data tip."},
{ "name": "dataTipItems",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "Array of chart items for which data tips are to be shown non-interactively on the chart."},
{ "name": "dataTipLayerIndex",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "The index of the child that is responsible for rendering data tips."},
{ "name": "dataTipMode",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies how Flex displays DataTip controls for the chart."},
{ "name": "dataToLocal",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement2",
  "description": "Converts a tuple of data values to an x-y coordinate on screen."},
{ "name": "dataToLocal",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "dataToLocal",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "dataToLocal",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "dataToString",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.StringItemRenderer",
  "description": ""},
{ "name": "dataToString",
  "type": "Method",
  "class": "mx.controls.listClasses.ListItemRenderer",
  "description": ""},
{ "name": "dataToString",
  "type": "Method",
  "class": "mx.controls.menuClasses.MenuBarItemRenderer",
  "description": ""},
{ "name": "dataTransform",
  "type": "Property",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "The DataTransform object that the element uses to map between data and screen coordinates."},
{ "name": "dataTransform",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "The DataTransform object that the element is associated with."},
{ "name": "dataTransform",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": ""},
{ "name": "dataTransform",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "dataTransform",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "dataUnits",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Specifies the units that you expect the data in your chart to represent."},
{ "name": "dateCompare",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Compares the two Date objects and returns an integer value indicating if the first Date object is before, equal to, or after the second item."},
{ "name": "dateCompare",
  "type": "Method",
  "class": "org.apache.royale.collections.CompareUtils",
  "description": "Compares the two Date objects and returns an integer value indicating if the first Date object is before, equal to, or after the second item."},
{ "name": "dateFormat",
  "type": "Property",
  "class": "org.apache.royale.core.IDateFormatter",
  "description": ""},
{ "name": "dateFormat",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.SimpleDateFormatter",
  "description": "The dateFormat of the date string."},
{ "name": "dateFormat",
  "type": "Property",
  "class": "org.apache.royale.jewel.DateField",
  "description": "A Date format using D for Days, M for Months and Y for Year i."},
{ "name": "dateToString",
  "type": "Method",
  "class": "mx.controls.DateField",
  "description": "Formats a Date into a String according to the <code>outputFormat</code> argument."},
{ "name": "dayList",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateChooserView",
  "description": ""},
{ "name": "dayNames",
  "type": "Property",
  "class": "org.apache.royale.core.IDateChooserModel",
  "description": "An array of strings used to name the days of the week with Sunday being the first element of the array."},
{ "name": "dayNames",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": "An array of strings used to name the days of the week with Sunday being the first element of the array."},
{ "name": "dayNames",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "The weekday names for DateChooser control."},
{ "name": "dayNames",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "An array of strings used to name the days of the week with Sunday being the first element of the array."},
{ "name": "dayNamesLong",
  "type": "Property",
  "class": "mx.formatters.DateBase",
  "description": "Long format of day names."},
{ "name": "dayNamesShort",
  "type": "Property",
  "class": "mx.formatters.DateBase",
  "description": "Short format of day names."},
{ "name": "dayOfMonth",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DateChooserButton",
  "description": "The day of the month the button represents."},
{ "name": "days",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": ""},
{ "name": "days",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The array of days in date form used in days view the number of days in view comes from NUM_DAYS_VIEW"},
{ "name": "de_DEvalidator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "deactivate",
  "type": "Method",
  "class": "mx.managers.IActiveWindowManager",
  "description": "Deactivates the FocusManager in an IFocusManagerContainer, and activate the FocusManager of the next highest window that is an IFocusManagerContainer."},
{ "name": "deactivateHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a deactivate event."},
{ "name": "deactivateHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "deactivateHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>Event."},
{ "name": "deactivateHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "debug",
  "type": "Method",
  "class": "mx.logging.ILogger",
  "description": "Logs the specified data using the <code>LogEventLevel."},
{ "name": "debug",
  "type": "Method",
  "class": "mx.logging.LogLogger",
  "description": ""},
{ "name": "debugCodeEnabled",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": "Returns true if the ActionScript text engine was built with debugging code enabled."},
{ "name": "decGraphicObjectCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "decInteractiveChildrenCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "decInteractiveChildrenCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "decInteractiveObjectCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "decimalAlignmentToken",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITabStopFormat",
  "description": "The alignment token to be used if the alignment is DECIMAL."},
{ "name": "decimalAlignmentToken",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TabStop",
  "description": ""},
{ "name": "decimalAlignmentToken",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "The alignment token to be used if the alignment is DECIMAL."},
{ "name": "decimalPointCountError",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Error message when the decimal separator character occurs more than once."},
{ "name": "decimalSeparator",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.NumericOnlyTextInputBead",
  "description": "The character used to separate the integer and fraction parts of numbers."},
{ "name": "decimalSeparator",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "The character used to separate the whole from the fractional part of the number."},
{ "name": "decimalSeparatorFrom",
  "type": "Property",
  "class": "mx.formatters.NumberFormatter",
  "description": "Decimal separator character to use when parsing an input String."},
{ "name": "decimalSeparatorFrom",
  "type": "Property",
  "class": "mx.formatters.NumberBase",
  "description": "Decimal separator character to use when parsing an input String."},
{ "name": "decimalSeparatorFrom",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Decimal separator character to use when parsing an input string."},
{ "name": "decimalSeparatorTo",
  "type": "Property",
  "class": "mx.formatters.NumberFormatter",
  "description": "Decimal separator character to use when outputting formatted decimal numbers."},
{ "name": "decimalSeparatorTo",
  "type": "Property",
  "class": "mx.formatters.NumberBase",
  "description": "Decimal separator character to use when outputting formatted decimal numbers."},
{ "name": "decimalSeparatorTo",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Decimal separator character to use when outputting formatted decimal numbers."},
{ "name": "declaredBy",
  "type": "Property",
  "class": "org.apache.royale.reflection.MethodDefinition",
  "description": "The type that defined this method This could be an ancestor class of the method's containing TypeDefinition"},
{ "name": "declaredBy",
  "type": "Property",
  "class": "org.apache.royale.reflection.AccessorDefinition",
  "description": "The type that defined this accessor This could be an ancestor class of the method's containing TypeDefinition"},
{ "name": "decode",
  "type": "Method",
  "class": "mx.utils.TextEncoderLiteWrapper",
  "description": ""},
{ "name": "decode",
  "type": "Method",
  "class": "org.apache.royale.utils.string.Base64",
  "description": "decode string from base64"},
{ "name": "decode",
  "type": "Method",
  "class": "mx.messaging.channels.URLVariables",
  "description": ""},
{ "name": "decode",
  "type": "Method",
  "class": "mx.utils.Base64Decoder",
  "description": "Decodes a Base64 encoded String and adds the result to an internal buffer."},
{ "name": "decodePath",
  "type": "Method",
  "class": "google.maps.geometry.encoding",
  "description": ""},
{ "name": "decodeWatcher",
  "type": "Method",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": ""},
{ "name": "decomposeMatrix",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Decompose a matrix into its component scale, rotation, and translation parts."},
{ "name": "decorateText",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": "Used to decorated the filtered text"},
{ "name": "decrement",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.spinner.ISpinnerView",
  "description": ""},
{ "name": "decrement",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IScrollBarView",
  "description": "The up arrow button in a vertical ScrollBar or left arrow button in a horizontal ScrollBar"},
{ "name": "decrement",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ISpinnerView",
  "description": ""},
{ "name": "decrement",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SpinnerView",
  "description": ""},
{ "name": "decrement",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SpinnerView",
  "description": ""},
{ "name": "decrementButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.RangeStepperView",
  "description": "Decrement control."},
{ "name": "deepCopy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "deepCopy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Makes a deep copy of this FlowElement object, including any children, copying the content between the two specified character positions and returning the copy as a FlowElement object."},
{ "name": "defaultButton",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableContainerBase",
  "description": "The Button control designated as the default button for the container."},
{ "name": "defaultButton",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "The Button control designated as the default button for the container."},
{ "name": "defaultButton",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": ""},
{ "name": "defaultColors",
  "type": "Property",
  "class": "mx.charts.styles.HaloDefaults",
  "description": "The default color values used by chart controls to color different series (or, in a PieSeries, different items)."},
{ "name": "defaultColumnCount",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The default number of columns to display."},
{ "name": "defaultColumnCount",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "description": "The default number of columns the layout should assume should any or all of the elements not have explicit or percentage widths."},
{ "name": "defaultColumnFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "defaultColumnFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Gets the column format for new columns."},
{ "name": "defaultColumnWidth",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "The default width of a column."},
{ "name": "defaultColumnWidth",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "defaultConcatHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyUtil",
  "description": ""},
{ "name": "defaultConfiguration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "The default configuration for this TextContainerManager."},
{ "name": "defaultConfiguration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "The default configuration used by this factory if none is specified."},
{ "name": "defaultConfiguration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "defaultConfiguration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Default ImportExportConfiguration to use when none specified"},
{ "name": "defaultConfiguration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ConfigurationHelper",
  "description": ""},
{ "name": "defaultConstantConventionCheck",
  "type": "Method",
  "class": "org.apache.royale.reflection.utils",
  "description": ""},
{ "name": "defaultCount",
  "type": "Property",
  "class": "spark.layouts.supportClasses.Block",
  "description": ""},
{ "name": "defaultErrorHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyUtil",
  "description": ""},
{ "name": "defaultFactory",
  "type": "Property",
  "class": "mx.styles.CSSStyleDeclaration",
  "description": "This function, if it isn't <code>null</code>, is usually autogenerated by the MXML compiler."},
{ "name": "defaultFills",
  "type": "Property",
  "class": "mx.charts.styles.HaloDefaults",
  "description": "The default SolidColor objects used as fills by chart controls to color different series (or, in a PieSeries, different items)."},
{ "name": "defaultFilterFunction",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "This is used if you do not set a custom function as the filterFunction for the series."},
{ "name": "defaultFilterFunction",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": "default filter function just filters substrings you can use other advanced methods like levenshtein distance"},
{ "name": "defaultFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Returns a TextLayoutFormat object with default settings."},
{ "name": "defaultFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Returns a TabStopFormat object with default settings."},
{ "name": "defaultHeaders",
  "type": "Property",
  "class": "mx.messaging.AbstractProducer",
  "description": "The default headers to apply to messages sent by the Producer."},
{ "name": "defaultInvalidFormatError",
  "type": "Property",
  "class": "mx.formatters.Formatter",
  "description": "Error message for an invalid format string specified to the formatter."},
{ "name": "defaultInvalidValueError",
  "type": "Property",
  "class": "mx.formatters.Formatter",
  "description": "Error messages for an invalid value specified to the formatter."},
{ "name": "defaultLinkActiveFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the active character format attributes that initially apply for all links (LinkElement objects) in the text flow."},
{ "name": "defaultLinkActiveFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "defaultLinkHoverFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the initial character format attributes that apply to a link (LinkElement) in the text flow when the cursor hovers over it."},
{ "name": "defaultLinkHoverFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "defaultLinkNormalFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the initial link attributes for all LinkElement objects in the text flow."},
{ "name": "defaultLinkNormalFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "defaultListMarkerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the active character format attributes that initially apply for all ListItems in the text flow."},
{ "name": "defaultListMarkerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "defaultMajorSize",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The size of items whose majorSize was not specified with setMajorSize."},
{ "name": "defaultMinorSize",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The default minimum value for the minorSize property."},
{ "name": "defaultNumber",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.CounterPropHandler",
  "description": ""},
{ "name": "defaultPrevented",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": "Whether the default action has been prevented."},
{ "name": "defaultPrevented",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "Whether the default action has been prevented."},
{ "name": "defaultPrevented",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": "Whether the default action has been prevented."},
{ "name": "defaultPrevented",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Whether the default action has been prevented."},
{ "name": "defaultRowCount",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The default number of rows to display."},
{ "name": "defaultRowFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "defaultRowFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Gets the row format for new rows."},
{ "name": "defaultRowHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "The default height of a row."},
{ "name": "defaultRowHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "defaultShiftEnterLevel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "defaultStringKey",
  "type": "Property",
  "class": "mx.formatters.DateBase",
  "description": ""},
{ "name": "defaultTLFFactory",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TLFFactory",
  "description": ""},
{ "name": "defaultThreshold",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": "The default movement in x and or y that means a drag should start"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ListItemElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SpanElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableBodyElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.DivElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ListElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.BreakElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TCYElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TabElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColGroupElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElement",
  "description": "@private"},
{ "name": "defaultTypeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "@private"},
{ "name": "defaultValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "The default value of this property"},
{ "name": "defaultValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.ArrayProperty",
  "description": "@private"},
{ "name": "defaultsAllHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyUtil",
  "description": "Helper function to initialize all property values from defaults."},
{ "name": "deferredBindings",
  "type": "Property",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": ""},
{ "name": "deferredSizeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "Handles the case where the size of the host is not immediately known, usually do to one of its dimensions being indicated as a percent size."},
{ "name": "defineGetter",
  "type": "Method",
  "class": "org.apache.royale.utils.object",
  "description": "Defines a getter function on a Javascript object (often used to add to prototypes) Takes a function which returns a value"},
{ "name": "defineProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.object",
  "description": "Defines getter and setter functions on a Javascript object (often used to add to prototypes) Takes functions for both setters and getters"},
{ "name": "defineSimpleGetter",
  "type": "Method",
  "class": "org.apache.royale.utils.object",
  "description": "Defines a getter function on a Javascript object (often used to add to prototypes) Takes a simple value to return."},
{ "name": "defineSimpleProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.object",
  "description": "Defines getter and setter on a Javascript object (often used to add to prototypes) Assigns simple values using a private var based on the property name."},
{ "name": "deflate",
  "type": "Method",
  "class": "org.apache.royale.utils.CompressionUtils",
  "description": ""},
{ "name": "delay",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ButtonAutoRepeatController",
  "description": "The number of milliseconds to wait before repeating the event for the first time."},
{ "name": "delay",
  "type": "Property",
  "class": "org.apache.royale.utils.Timer",
  "description": ""},
{ "name": "delayUpdates",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "By default, calls into IEditManager handle updates synchronously, so the requested change is made and the text recomposed and added to the display list within the IEditManager method."},
{ "name": "delayUpdates",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "delegate",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileBrowser",
  "description": ""},
{ "name": "delete",
  "type": "Property",
  "class": "org.apache.royale.utils.ObjectMap",
  "description": ""},
{ "name": "deleteDependentSubMenus",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": ""},
{ "name": "deleteNextCharacter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Deletes a range of text, or, if a point selection is given, deletes the next character."},
{ "name": "deleteNextCharacter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "deleteNextWord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Deletes the next word."},
{ "name": "deleteNextWord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "deleteParentMapping",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "deletePreviousCharacter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Deletes a range of text, or, if a point selection is given, deletes the previous character."},
{ "name": "deletePreviousCharacter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "deletePreviousWord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Deletes the previous word."},
{ "name": "deletePreviousWord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "deleteProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.Proxy",
  "description": ""},
{ "name": "deleteProperty",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "deleteRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": ""},
{ "name": "deleteSelectionState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.InsertTextOperation",
  "description": "The text deleted by this operation, if any."},
{ "name": "deleteSelectionState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.DeleteTextOperation",
  "description": "deleteSelectionState The range of text to delete"},
{ "name": "deleteText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Deletes a range of text."},
{ "name": "deleteText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "deleteText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ModelEdit",
  "description": ""},
{ "name": "deleteText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "delta",
  "type": "Property",
  "class": "mx.events.DividerEvent",
  "description": "The number of pixels that the divider has been dragged."},
{ "name": "delta",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "The vertical scroll delta for wheel events"},
{ "name": "delta",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ScrollEvent",
  "description": "The change in the scroll position value that resulted from the scroll."},
{ "name": "delta",
  "type": "Property",
  "class": "mx.events.ScrollEvent",
  "description": "The change in the scroll position value that resulted from the scroll."},
{ "name": "deltaTransformPoint",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Uses the Matrix to transform the point without the translation values."},
{ "name": "deltaX",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "The horizontal scroll delta for wheel events"},
{ "name": "deltaY",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "The vertical scroll delta for wheel events"},
{ "name": "depth",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TreeListData",
  "description": "The depth of the data within the tree with the root being zero."},
{ "name": "depth",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridListData",
  "description": "The level of the item in the AdvancedDataGrid control."},
{ "name": "depth",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "storage for the depth value."},
{ "name": "depth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Slug",
  "description": ""},
{ "name": "depth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "descendants",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Calls the <code>descendants()</code> method of each XML object in the XMLList and returns an XMLList containing the results."},
{ "name": "descender",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "descending",
  "type": "Property",
  "class": "mx.collections.ISortField",
  "description": "Specifies whether this field should be sorted in descending order."},
{ "name": "descending",
  "type": "Property",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "descending",
  "type": "Property",
  "class": "mx.collections.GroupingField",
  "description": "Set to <code>true</code> if the sort for this field should be in descending order."},
{ "name": "descending",
  "type": "Property",
  "class": "org.apache.royale.collections.ISortField",
  "description": "Specifies whether this field should be sorted in descending order."},
{ "name": "descending",
  "type": "Property",
  "class": "org.apache.royale.mdl.TableColumn",
  "description": "A boolean flag to activate \"mdl-data-table__header--sorted-descending\" effect selector."},
{ "name": "descending",
  "type": "Property",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "descent",
  "type": "Property",
  "class": "org.apache.royale.core.TextLineMetrics",
  "description": ""},
{ "name": "descent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IVerticalJustificationLine",
  "description": ""},
{ "name": "descent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": ""},
{ "name": "descent",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "descent",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "descent",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "Called by the governing DataTransform to obtain a description of the data represented by this IChartElement."},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": "Called by the governing DataTransform to obtain a description of the data represented by this IChartElement."},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.series.ColumnSet",
  "description": ""},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "Collects important displayed values for all elements associated with this data transform."},
{ "name": "describeData",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "describeSingleFlag",
  "type": "Method",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "describeType",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "The equivalent of flash."},
{ "name": "description",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Property descriptions accessible by name."},
{ "name": "description",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "A short description of the data in the chart."},
{ "name": "description",
  "type": "Property",
  "class": "org.apache.royale.test.runners.ITestRunner",
  "description": "A description of this test runner."},
{ "name": "description",
  "type": "Property",
  "class": "org.apache.royale.test.runners.MetadataRunner",
  "description": ""},
{ "name": "description",
  "type": "Property",
  "class": "org.apache.royale.test.runners.ParentRunner",
  "description": ""},
{ "name": "description",
  "type": "Property",
  "class": "org.apache.royale.test.runners.SuiteRunner",
  "description": ""},
{ "name": "description",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Failure",
  "description": "The description of the test that failed."},
{ "name": "description",
  "type": "Property",
  "class": "mx.net.FileFilter",
  "description": ""},
{ "name": "description",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Property descriptions accessible by name."},
{ "name": "description",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Property descriptions accessible by name."},
{ "name": "descriptor",
  "type": "Property",
  "class": "org.apache.royale.states.ItemAndDescriptor",
  "description": "The descriptor used to create the item(s)."},
{ "name": "deselect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Removes any selection from the text flow"},
{ "name": "deselect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "deserializeResult",
  "type": "Method",
  "class": "mx.rpc.http.SerializationFilter",
  "description": "This method takes the result from the HTTP request in a raw format."},
{ "name": "designMode",
  "type": "Property",
  "class": "mx.core.UIComponentGlobals",
  "description": "A global flag that can be read by any component to determine whether it is currently executing in the context of a design tool such as Flash Builder's design view."},
{ "name": "designViewDataType",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": ""},
{ "name": "desktopDenominator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The Y Number for \"desktop-col-X-Y\" effect selector."},
{ "name": "desktopDenominator",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "The Y Number for \"desktop-col-X-Y\" effect selector."},
{ "name": "desktopNumerator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The X Number for \"desktop-col-X-Y\" effect selector."},
{ "name": "desktopNumerator",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "The X Number for \"desktop-col-X-Y\" effect selector."},
{ "name": "desktopVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.ResponsiveVisibility",
  "description": "Makes the component to be visible or hidden in phone size Uses \"visible-desktop\" and \"hidden-desktop\" effect selectors."},
{ "name": "desktopVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "Makes the cell to be visible or hidden in phone size Uses \"visible-desktop\" and \"hidden-desktop\" effect selectors."},
{ "name": "desktopVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "Makes the cell to be visible or hidden in phone size Uses \"visible-desktop\" and \"hidden-desktop\" effect selectors."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "The message destination."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "The message destination."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.net.RemoteObject",
  "description": ""},
{ "name": "destination",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": "The destination of the service."},
{ "name": "destination",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "The destination of the service."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "destination",
  "type": "Property",
  "class": "mx.messaging.messages.IMessage",
  "description": "The message destination."},
{ "name": "destination",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "The message destination."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": "The object whose property will be changed by the binding expression."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.core.IBinding",
  "description": "The destination object."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": ""},
{ "name": "destination",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": "Provides access to the destination for the MessageAgent."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.MoveChildrenOperation",
  "description": "Specifies the new parent of the items."},
{ "name": "destination",
  "type": "Property",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Provides access to the destination for the MessageAgent."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.binding.ChainBinding",
  "description": "The destination property name or chain."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": ""},
{ "name": "destination",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "An HTTPService destination name in the services-config."},
{ "name": "destination",
  "type": "Property",
  "class": "org.apache.royale.net.SimpleRemoteObject",
  "description": ""},
{ "name": "destinationChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": ""},
{ "name": "destinationChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataProviderCollectionChangeNotifier",
  "description": ""},
{ "name": "destinationChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataProviderChangeNotifier",
  "description": ""},
{ "name": "destinationChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.EasyDataProviderChangeNotifier",
  "description": ""},
{ "name": "destinationChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataProviderItemsChangeNotifier",
  "description": ""},
{ "name": "destinationData",
  "type": "Property",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": "The string or array of strings that describe the chain of properties to access to assign the source property's value to the destination"},
{ "name": "destinationFunction",
  "type": "Property",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": "The function used to assign the source property's value to the destination if the destination is not a public property"},
{ "name": "destinationID",
  "type": "Property",
  "class": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": "The destination object."},
{ "name": "destinationIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.MoveChildrenOperation",
  "description": "Specifies the new child index of the first element."},
{ "name": "destinationPropertyName",
  "type": "Property",
  "class": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": "The name of the property on the strand that is set when the source property changes."},
{ "name": "destinationPropertyName",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": ""},
{ "name": "destinationPropertyName",
  "type": "Property",
  "class": "org.apache.royale.core.IBinding",
  "description": "The name of the property on the strand that is set when the source property changes."},
{ "name": "destinationPropertyName",
  "type": "Property",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": ""},
{ "name": "destinationPropertyName",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": ""},
{ "name": "destroyErrorTip",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Destroy the created errorTip"},
{ "name": "destroyItemEditor",
  "type": "Method",
  "class": "mx.controls.AdvancedDataGrid",
  "description": ""},
{ "name": "destroyToolTip",
  "type": "Method",
  "class": "mx.managers.ToolTipManager",
  "description": "Destroys a specified ToolTip that was created by the <code>createToolTip()</code> method."},
{ "name": "detachEventListeners",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataProviderChangeNotifier",
  "description": ""},
{ "name": "detail",
  "type": "Property",
  "class": "org.apache.royale.events.DetailEvent",
  "description": "The detail."},
{ "name": "detail",
  "type": "Property",
  "class": "org.apache.royale.events.CloseEvent",
  "description": "Identifies the button in the popped up control that was clicked."},
{ "name": "detail",
  "type": "Property",
  "class": "mx.events.CloseEvent",
  "description": ""},
{ "name": "detail",
  "type": "Property",
  "class": "mx.events.ScrollEvent",
  "description": "Provides the details of the scroll activity."},
{ "name": "determinant",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Calculates the Matrix determinant"},
{ "name": "determinate",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Progress",
  "description": "Whether the progress bar is determinate (true) or indeterminate (false)"},
{ "name": "determinePosition",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Determines the position of the errorTip."},
{ "name": "dialogPolyfill",
  "type": "Class",
  "description": ""},
{ "name": "digitCase",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The type of digit case used for this text."},
{ "name": "digitCase",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The type of digit case used for this text."},
{ "name": "digitCase",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The type of digit case used for this text."},
{ "name": "digitCase",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "digitCaseProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "digitWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Type of digit width used for this text."},
{ "name": "digitWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Type of digit width used for this text."},
{ "name": "digitWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Type of digit width used for this text."},
{ "name": "digitWidth",
  "type": "Property",
  "class": "spark.components.Label",
  "description": ""},
{ "name": "digitWidth",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "digitWidthProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "direction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the default bidirectional embedding level of the text in the text block."},
{ "name": "direction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the default bidirectional embedding level of the text in the text block."},
{ "name": "direction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the default bidirectional embedding level of the text in the text block."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.beads.BoxLayout",
  "description": ""},
{ "name": "direction",
  "type": "Property",
  "class": "mx.charts.effects.SeriesSlide",
  "description": "Defines the location from which the series slides."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Determines the direction in which the axis is rendered."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.charts.LogAxis",
  "description": "Determines the direction in which the axis is rendered."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.core.UITextFormat",
  "description": "The directionality of the text."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Determines how children are placed in the container."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.Box",
  "description": "The direction in which this Box container lays out its children."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.DividedBox",
  "description": "The direction in which this Box container lays out its children."},
{ "name": "direction",
  "type": "Property",
  "class": "org.apache.royale.effects.Wipe",
  "description": "The direction of the Wipe."},
{ "name": "direction",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.HBox",
  "description": "The direction in which this Box container lays out its children."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.Tile",
  "description": "Determines how children are placed in the container."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.VBox",
  "description": "The direction in which this Box container lays out its children."},
{ "name": "direction",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.FormItem",
  "description": "Direction of the FormItem subcomponents."},
{ "name": "direction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.ScrollEvent",
  "description": "The direction of motion."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Direction in which the fill of the ProgressBar expands toward completion."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesSlideInstance",
  "description": "Defines the location from which the series slides."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.charts.LinearAxis",
  "description": "Determines the direction in which the axis is rendered."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.HDividedBox",
  "description": "The direction in which this Box container lays out its children."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.events.ScrollEvent",
  "description": "The direction of motion."},
{ "name": "direction",
  "type": "Property",
  "class": "mx.containers.VDividedBox",
  "description": "The direction in which this Box container lays out its children."},
{ "name": "directionProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "disableAutoUpdate",
  "type": "Method",
  "class": "mx.collections.ICollectionView",
  "description": "Prevents changes to the collection itself and items within the collection from being dispatched by the view."},
{ "name": "disableAutoUpdate",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "disableAutoUpdate",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "stop processing update events from the source list."},
{ "name": "disableCompression",
  "type": "Property",
  "class": "org.apache.royale.net.CompressedRemoteObject",
  "description": "disable the compression if true  defaults to false"},
{ "name": "disableCompression",
  "type": "Property",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": "disable the compression if true  defaults to false"},
{ "name": "disableCompression",
  "type": "Property",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": "disable the compression if true  defaults to false"},
{ "name": "disableEvents",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Disables event dispatch for this list."},
{ "name": "disablePolling",
  "type": "Method",
  "class": "mx.messaging.channels.PollingChannel",
  "description": "Disables polling based on the number of times <code>enablePolling()</code> and <code>disablePolling()</code> have been invoked."},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Button",
  "description": "Whether the button is disabled"},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisableBead",
  "description": ""},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.svg.DisableClipBead",
  "description": ""},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Textarea",
  "description": "Whether the textarea is disabled"},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Input",
  "description": "Whether the input is disabled"},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Disabled",
  "description": "A boolean flag to enable or disable the host control."},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisableChildrenBead",
  "description": ""},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Disabled",
  "description": "A boolean flag to enable or disable the host control."},
{ "name": "disabled",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.EmailValidator",
  "description": "If disabled, this validator always considers its target as 'valid'"},
{ "name": "disabledAlpha",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisabledAlphaBead",
  "description": "The alpha of the element when disabled."},
{ "name": "disabledDays",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "The days to disable in a week."},
{ "name": "disabledDays",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "The days to disable in a week."},
{ "name": "disabledIcon",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": "The URL of an disabledIcon to use in the button"},
{ "name": "disabledRanges",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Disables single and multiple days."},
{ "name": "disabledRanges",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Disables single and multiple days."},
{ "name": "disabledRanges",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "Disables single and multiple days."},
{ "name": "discard",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "Determines if unneeded instances are discarded."},
{ "name": "discard",
  "type": "Method",
  "class": "spark.components.gridClasses.IGridItemEditor",
  "description": "Called just before the editor is closed."},
{ "name": "discard",
  "type": "Method",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "Called from the item renderer parent's <code>updateDisplayList()</code> method when it has been determined that this renderer will no longer be visible."},
{ "name": "discard",
  "type": "Method",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": ""},
{ "name": "disclosureIcon",
  "type": "Property",
  "class": "mx.controls.treeClasses.TreeItemRenderer",
  "description": "The internal IFlexDisplayObject that displays the disclosure icon in this renderer."},
{ "name": "disclosureIcon",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridListData",
  "description": "A Class representing the disclosure icon for the item in the AdvancedDataGrid control."},
{ "name": "disconnect",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Disconnects the ChannelSet from the Channel."},
{ "name": "disconnect",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": "Disconnects the service's network connection and removes any pending request responders."},
{ "name": "disconnect",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Disconnects the MessageAgent's network connection."},
{ "name": "disconnect",
  "type": "Method",
  "class": "mx.messaging.AbstractProducer",
  "description": "Disconnects the Producer from its remote destination."},
{ "name": "disconnect",
  "type": "Method",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Disconnects the Consumer from its remote destination."},
{ "name": "disconnect",
  "type": "Method",
  "class": "mx.rpc.http.HTTPService",
  "description": "Disconnects the service's network connection."},
{ "name": "disconnect",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Disconnects a specific MessageAgent from the ChannelSet."},
{ "name": "disconnectAll",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Disconnects all associated MessageAgents and disconnects any underlying Channel that is connected."},
{ "name": "disconnectFailed",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Processes a failed internal disconnect and dispatches the <code>FAULT</code> event for the channel."},
{ "name": "disconnectSuccess",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Processes a successful internal disconnect and dispatches the <code>DISCONNECT</code> event for the Channel."},
{ "name": "dismiss",
  "type": "Method",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": "Dismiss the snackbar."},
{ "name": "dispatchBubblingEvent",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "dispatchDragEvent",
  "type": "Method",
  "class": "org.apache.royale.events.DragEvent",
  "description": "Dispatch a DragEvent"},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.events.IEventDispatcher",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.events.EventDispatcher",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "mx.net.URLLoader",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEventManager",
  "description": "Dispatch the mouse and keyboard events that the owner sends."},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Property",
  "class": "mx.events.AdvancedDataGridEvent",
  "description": "Whether to dispatch an <code>ITEM_OPEN</code> or <code>ITEM_CLOSE</code> event after the open or close animation is complete."},
{ "name": "dispatchEvent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": ""},
{ "name": "dispatchEvent",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "Whether to dispatch an event (<code>ITEM_OPEN</code> or <code>ITEM_CLOSE</code>) after the open or close animation is complete."},
{ "name": "dispatchItemAdded",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TBodyContentArea",
  "description": ""},
{ "name": "dispatchPropertyChangeEvent",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Helper method for dispatching a PropertyChangeEvent when a property is updated."},
{ "name": "dispatchRpcEvent",
  "type": "Method",
  "class": "mx.rpc.AbstractOperation",
  "description": ""},
{ "name": "dispatchUpdateComplete",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "dispatcher",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.IJewelSelectionModel",
  "description": ""},
{ "name": "dispatcher",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "dispatcher",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": "The event dispatcher that dispatches an event when the source property changes."},
{ "name": "dispatcher",
  "type": "Property",
  "class": "org.apache.royale.binding.PropertyWatcher",
  "description": "The event dispatcher that dispatches an event when the source property changes."},
{ "name": "dispatchingEventToOtherSystemManagers",
  "type": "Property",
  "class": "mx.managers.SystemManagerGlobals",
  "description": ""},
{ "name": "display",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "displayAsPassword",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "displayAsPassword",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": "Indicates whether this control is used for entering passwords."},
{ "name": "displayAsPassword",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Indicates whether this control is used for entering passwords."},
{ "name": "displayLocalTime",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "When set to <code>true</code>, a DateTimeAxis considers all date values to be in the time zone of the client machine running the application."},
{ "name": "displayName",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "The name of the series, for display to the user."},
{ "name": "displayName",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "The name of the axis."},
{ "name": "displayName",
  "type": "Property",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": ""},
{ "name": "displayObjectSharingMode",
  "type": "Property",
  "class": "spark.core.IGraphicElement",
  "description": "Indicates the association between this IGraphicElement and its display objects."},
{ "name": "displayPopUp",
  "type": "Property",
  "class": "spark.components.PopUpAnchor",
  "description": "If <code>true</code>, adds the <code>popUp</code> control to the PopUpManager."},
{ "name": "displayStyleForLayout",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": ""},
{ "name": "displayStyleForLayout",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": ""},
{ "name": "displayStyleForLayout",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": ""},
{ "name": "displayText",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "A description of the associated item for display on screen."},
{ "name": "displayedMonth",
  "type": "Property",
  "class": "org.apache.royale.core.IDateChooserModel",
  "description": "The month currently displayed by the DateChooser."},
{ "name": "displayedMonth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": "The month currently displayed by the DateChooser."},
{ "name": "displayedMonth",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Used together with the <code>displayedYear</code> property, the <code>displayedMonth</code> property specifies the month displayed in the DateChooser control."},
{ "name": "displayedMonth",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The month currently displayed by the DateChooser."},
{ "name": "displayedYear",
  "type": "Property",
  "class": "org.apache.royale.core.IDateChooserModel",
  "description": "The year currently displayed by the DateChooser."},
{ "name": "displayedYear",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": "The year currently displayed by the DateChooser."},
{ "name": "displayedYear",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Used together with the <code>displayedMonth</code> property, the <code>displayedYear</code> property specifies the year displayed in the DateChooser control."},
{ "name": "displayedYear",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The year currently displayed by the DateChooser."},
{ "name": "dispose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "dispose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "distance",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "Specifies the distance between the data item on the screen and the location of the mouse pointer, in pixels."},
{ "name": "distance",
  "type": "Property",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "distance",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "distance",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": ""},
{ "name": "distributeExtraHeight",
  "type": "Method",
  "class": "mx.containers.utilityClasses.Flex",
  "description": "This function distributes excess space among the flexible children because of rounding errors where we want to keep children's dimensions full pixel amounts."},
{ "name": "distributeExtraWidth",
  "type": "Method",
  "class": "mx.containers.utilityClasses.Flex",
  "description": "This function distributes excess space among the flexible children because of rounding errors where we want to keep children's dimensions full pixel amounts."},
{ "name": "divider",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.MenuItemRenderer",
  "description": "A boolean flag to activate \"mdl-menu__item--full-bleed-divider\" effect selector."},
{ "name": "dividerIndex",
  "type": "Property",
  "class": "mx.events.DividerEvent",
  "description": "The zero-based index of the divider being pressed or dragged."},
{ "name": "dividerRelease",
  "type": "Event",
  "description": "Dispatched when the user releases a divider."},
{ "name": "doConversion",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IME",
  "description": ""},
{ "name": "doDrag",
  "type": "Method",
  "class": "mx.managers.DragManager",
  "description": "Initiates a drag and drop operation."},
{ "name": "doOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Executes a FlowOperation."},
{ "name": "doOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "Executes the operation."},
{ "name": "doOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Perform a SelectionManager operation - these may never modify the flow but clients still are able to cancel them."},
{ "name": "doOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "doValidation",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Executes the validation logic of this validator, including validating that a missing or empty value causes a validation error as defined by the value of the <code>required</code> property."},
{ "name": "doValidation",
  "type": "Method",
  "class": "mx.validators.StringValidator",
  "description": "Override of the base class <code>doValidation()</code> method to validate a String."},
{ "name": "doVerticalAlignment",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "doVerticalAlignment",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": ""},
{ "name": "doVerticalAlignment",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": ""},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": "The host mxml document for the source and destination objects."},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": ""},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.states.SetProperty",
  "description": ""},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": "The mxml document for the binding expression."},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": "The host mxml document for the source and destination objects."},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.binding.ChainBinding",
  "description": "The host mxml document for the source and destination objects."},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": "The host mxml document for the source and destination objects."},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.binding.PropertyWatcher",
  "description": "The document we belong to."},
{ "name": "document",
  "type": "Property",
  "class": "org.apache.royale.states.SetEventHandler",
  "description": ""},
{ "name": "doesComposedTextFit",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "Indicates whether the composed text fits in the line count limit and includes all text"},
{ "name": "domain",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Type of number to be validated."},
{ "name": "dominantBaseline",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies which element baseline snaps to the <code>alignmentBaseline</code> to determine the vertical position of the element on the line."},
{ "name": "dominantBaseline",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies which element baseline snaps to the <code>alignmentBaseline</code> to determine the vertical position of the element on the line."},
{ "name": "dominantBaseline",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies which element baseline snaps to the <code>alignmentBaseline</code> to determine the vertical position of the element on the line."},
{ "name": "dominantBaseline",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.LocaleUtil",
  "description": ""},
{ "name": "dominantBaseline",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "dominantBaselineProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "done",
  "type": "Method",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "done accepts a callback which is called when the task is resolved."},
{ "name": "done",
  "type": "Event",
  "description": ""},
{ "name": "doubleClick",
  "type": "Event",
  "description": "Set a different class for doubleClick events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "doubleClick",
  "type": "Event",
  "description": "Set a different class for doubleClick events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "doubleClickEnabled",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Specifies whether the UIComponent object receives <code>doubleClick</code> events."},
{ "name": "doubleClickEnabled",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "doubleClickEnabled",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "doubleClickEnabled",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Specifies whether the UIComponent object receives <code>doubleClick</code> events."},
{ "name": "doubleClickMode",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "doubleClickMode",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The doubleClick mode of the control."},
{ "name": "down",
  "type": "Property",
  "class": "org.apache.royale.core.ISelectableItemRenderer",
  "description": "<code>true</code> if the item renderer is rendering an item that is under the mouse pointer and the mouse button is down."},
{ "name": "down",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "Whether or not the itemRenderer is in a down (or pre-selected) state."},
{ "name": "down",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "Whether or not the itemRenderer is in a down (or pre-selected) state."},
{ "name": "down",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "Whether or not the itemRenderer is in a down (or pre-selected) state."},
{ "name": "down",
  "type": "Property",
  "class": "spark.components.supportClasses.ItemRenderer",
  "description": "Set to <code>true</code> when the user is pressing down on an item renderer."},
{ "name": "down",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "This property is set to <code>true</code> when one of two input gestures occurs within a grid cell:  either the mouse button or the touch screen is pressed."},
{ "name": "down",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": ""},
{ "name": "down",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "downArrowString",
  "type": "Property",
  "class": "mx.controls.PopUpMenuButton",
  "description": ""},
{ "name": "downColor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": ""},
{ "name": "dragCompleteHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Handles events of type <code>DragEvent."},
{ "name": "dragDrop",
  "type": "Event",
  "description": "Dispatched by the drop target when the user releases the mouse over it."},
{ "name": "dragDrop",
  "type": "Event",
  "description": "Indicates that a drop operation should be executed."},
{ "name": "dragDropHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Handles events of type <code>DragEvent."},
{ "name": "dragEnabled",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "A flag that indicates whether you can drag items out of this control and drop them on other controls."},
{ "name": "dragEnabled",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "A flag that indicates whether you can drag items out of this control and drop them on other controls."},
{ "name": "dragEnabled",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies whether you can drag items out of this chart and drop them on other controls."},
{ "name": "dragEnabled",
  "type": "Property",
  "class": "org.apache.royale.express.List",
  "description": ""},
{ "name": "dragEnabled",
  "type": "Property",
  "class": "org.apache.royale.express.DataGrid",
  "description": "Allows list items to be dragged"},
{ "name": "dragEnd",
  "type": "Event",
  "description": ""},
{ "name": "dragEnd",
  "type": "Event",
  "description": "Indicates that a drag/drop operation is ending."},
{ "name": "dragEnter",
  "type": "Event",
  "description": "Dispatched by a component when the user moves the mouse over the component during a drag operation."},
{ "name": "dragEnter",
  "type": "Event",
  "description": "Indicates that the mouse has entered the component during a drag operatino."},
{ "name": "dragEnterHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Handles events of type <code>DragEvent."},
{ "name": "dragExit",
  "type": "Event",
  "description": "Indicates that the mouse is moving out of a component during a drag/drop operation."},
{ "name": "dragExitHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Handles events of type <code>DragEvent."},
{ "name": "dragImage",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Gets an instance of a class that displays the visuals during a drag-and-drop operation."},
{ "name": "dragImage",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": "The drag image."},
{ "name": "dragImageOffsetX",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": "The offset of the drag image."},
{ "name": "dragImageOffsetY",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": "The offset of the drag image."},
{ "name": "dragInitiator",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The object that wants to know if a drop is accepted"},
{ "name": "dragInitiator",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The component that initiated the drag."},
{ "name": "dragMove",
  "type": "Event",
  "description": "Indicates that the mouse is moving during a drag/drop operation."},
{ "name": "dragMoveEnabled",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "A flag that indicates whether items can be moved instead of just copied from the control as part of a drag-and-drop operation."},
{ "name": "dragMoveEnabled",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "A flag that indicates whether items can be moved instead of just copied from the control as part of a drag-and-drop operation."},
{ "name": "dragMoveEnabled",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Indicates which display cursor to show as drag feedback."},
{ "name": "dragOver",
  "type": "Event",
  "description": "Indicates that the mouse is moving over a component during a drag/drop operation."},
{ "name": "dragOverHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Handles events of type <code>DragEvent."},
{ "name": "dragScrollHidesIndicator",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "dragScrollInitialDelay",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "dragScrollInterval",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "dragScrollRegionSizeHorizontal",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "dragScrollRegionSizeVertical",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "dragScrollSpeed",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "dragSource",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": "The data being dragged."},
{ "name": "dragSource",
  "type": "Property",
  "class": "mx.events.DragEvent",
  "description": "The DragSource object containing the data being dragged."},
{ "name": "dragSourceIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDragSourceBead",
  "description": "The index into the dataProvider of the strand's model where the dragSource can be found."},
{ "name": "dragStart",
  "type": "Event",
  "description": "Indicates that a drag/drop operation is starting."},
{ "name": "dragStartHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "The default handler for the <code>dragStart</code> event."},
{ "name": "dragStartHandler",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "The default handler for the <code>dragStart</code> event."},
{ "name": "dragType",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridDragDropBead",
  "description": "The type of drag operation to perform: move or copy."},
{ "name": "dragType",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDragSourceBead",
  "description": "The type of drag and drop operation: move or copy."},
{ "name": "draggableColumns",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "draggableColumns",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "Indicates whether you are allowed to reorder columns."},
{ "name": "dragging",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "Contains <code>true</code> if the item renderer is being dragged, typically as part of a drag and drop operation."},
{ "name": "dragging",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": ""},
{ "name": "dragging",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": "Whether there is a drag operation in progress."},
{ "name": "drain",
  "type": "Method",
  "class": "mx.utils.Base64Encoder",
  "description": ""},
{ "name": "draw",
  "type": "Method",
  "class": "org.apache.royale.textLayout.dummy.BitmapData",
  "description": ""},
{ "name": "draw",
  "type": "Method",
  "class": "org.apache.royale.graphics.IDrawable",
  "description": "Performs the default draw command."},
{ "name": "draw",
  "type": "Method",
  "class": "org.apache.royale.svg.Ellipse",
  "description": ""},
{ "name": "draw",
  "type": "Method",
  "class": "org.apache.royale.svg.Path",
  "description": ""},
{ "name": "draw",
  "type": "Method",
  "class": "org.apache.royale.svg.Rect",
  "description": ""},
{ "name": "draw",
  "type": "Method",
  "class": "org.apache.royale.svg.Text",
  "description": ""},
{ "name": "draw",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": ""},
{ "name": "draw",
  "type": "Method",
  "class": "org.apache.royale.svg.Circle",
  "description": ""},
{ "name": "drawAllRects",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "drawAllRects",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "drawArc",
  "type": "Method",
  "class": "mx.charts.chartClasses.GraphicsUtilities",
  "description": "Draws an arc in the target Graphics object."},
{ "name": "drawAxisLine",
  "type": "Method",
  "class": "org.apache.royale.charts.core.IAxisGroup",
  "description": ""},
{ "name": "drawAxisLine",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartAxisGroup",
  "description": "Draws the axis line at the given position."},
{ "name": "drawAxisLine",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartAxisGroup",
  "description": "Draws the axis line at the given position."},
{ "name": "drawBackground",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": ""},
{ "name": "drawBackgroundAndSetScrollRect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns <code>true</code> if it has filled in the container's scrollRect property."},
{ "name": "drawCircle",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawCircle",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draw the circle."},
{ "name": "drawCircle",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Draws a circle."},
{ "name": "drawCircle",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICircle",
  "description": "Draws the circle."},
{ "name": "drawCircle",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Draws a circle."},
{ "name": "drawCircle",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "drawCircle",
  "type": "Method",
  "class": "org.apache.royale.svg.Circle",
  "description": "Draw the circle."},
{ "name": "drawEllipse",
  "type": "Method",
  "class": "org.apache.royale.graphics.IEllipse",
  "description": "Draw the ellipse."},
{ "name": "drawEllipse",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawEllipse",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draw the ellipse."},
{ "name": "drawEllipse",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Draws an ellipse."},
{ "name": "drawEllipse",
  "type": "Method",
  "class": "org.apache.royale.svg.Ellipse",
  "description": "Draw the ellipse."},
{ "name": "drawEllipse",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Draws an ellipse."},
{ "name": "drawEllipse",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "drawHorizontalTickLabel",
  "type": "Method",
  "class": "org.apache.royale.charts.core.IAxisGroup",
  "description": ""},
{ "name": "drawHorizontalTickLabel",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartAxisGroup",
  "description": "Draws a horizontal tick label centered in the box at the given position."},
{ "name": "drawHorizontalTickLabel",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartAxisGroup",
  "description": "Draws a horizontal tick label centered in the box at the given position."},
{ "name": "drawImpl",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": "This is where the drawing methods get called from"},
{ "name": "drawImpl",
  "type": "Method",
  "class": "org.apache.royale.svg.Ellipse",
  "description": ""},
{ "name": "drawImpl",
  "type": "Method",
  "class": "org.apache.royale.svg.Path",
  "description": ""},
{ "name": "drawImpl",
  "type": "Method",
  "class": "org.apache.royale.svg.Rect",
  "description": ""},
{ "name": "drawImpl",
  "type": "Method",
  "class": "org.apache.royale.svg.Text",
  "description": ""},
{ "name": "drawImpl",
  "type": "Method",
  "class": "org.apache.royale.svg.Circle",
  "description": ""},
{ "name": "drawLine",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": ""},
{ "name": "drawPathCommands",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawPathCommands",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draw the path."},
{ "name": "drawPathCommands",
  "type": "Method",
  "class": "org.apache.royale.svg.Path",
  "description": "Draw the path."},
{ "name": "drawPointSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "drawPolyLine",
  "type": "Method",
  "class": "mx.charts.chartClasses.GraphicsUtilities",
  "description": "Draws a line connecting the datapoints using one of various forms."},
{ "name": "drawPolygon",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": ""},
{ "name": "drawRect",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawRect",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draw the rectangle."},
{ "name": "drawRect",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Draws a rectangle."},
{ "name": "drawRect",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Draws a rectangle."},
{ "name": "drawRect",
  "type": "Method",
  "class": "org.apache.royale.graphics.IRect",
  "description": "Draws the rect."},
{ "name": "drawRect",
  "type": "Method",
  "class": "org.apache.royale.core.FilledRectangle",
  "description": "Draw the rectangle."},
{ "name": "drawRect",
  "type": "Method",
  "class": "org.apache.royale.svg.Rect",
  "description": "Draw the rectangle."},
{ "name": "drawRect",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Adds a drawRect command"},
{ "name": "drawRect",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "drawRoundRect",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawRoundRect",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draws a rounded rectangle."},
{ "name": "drawRoundRect",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "drawRoundRectComplex",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawRoundRectComplex",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draws a rounded rectangle using the size of a radius to draw the rounded corners."},
{ "name": "drawRoundRectComplex",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Adds a drawRoundRectComplex command"},
{ "name": "drawRoundRectComplex2",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawRoundRectComplex2",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draws a rounded rectangle using the size of individual x and y radii to draw the rounded corners."},
{ "name": "drawRoundRectComplex2",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Draws a rounded rectangle using the size of individual x and y radii to draw the rounded corners."},
{ "name": "drawRoundedRect",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Draws a rounded rectangle."},
{ "name": "drawRoundedRect",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Draws a rounded rectangle."},
{ "name": "drawStringPath",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawStringPath",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draw the path."},
{ "name": "drawStringPath",
  "type": "Method",
  "class": "org.apache.royale.svg.Path",
  "description": "Draw the path."},
{ "name": "drawText",
  "type": "Method",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "drawText",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Draw a string of characters."},
{ "name": "drawText",
  "type": "Method",
  "class": "org.apache.royale.graphics.IText",
  "description": "Draw the text."},
{ "name": "drawText",
  "type": "Method",
  "class": "org.apache.royale.svg.Text",
  "description": "Draws text at the given point."},
{ "name": "drawTickMarks",
  "type": "Method",
  "class": "org.apache.royale.charts.core.IAxisGroup",
  "description": ""},
{ "name": "drawTickMarks",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartAxisGroup",
  "description": "Draws an set of tick marks are determined in the marks path."},
{ "name": "drawTickMarks",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartAxisGroup",
  "description": "Draws an set of tick marks are determined in the marks path."},
{ "name": "drawVerticalTickLabel",
  "type": "Method",
  "class": "org.apache.royale.charts.core.IAxisGroup",
  "description": ""},
{ "name": "drawVerticalTickLabel",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartAxisGroup",
  "description": "Draws a vertical tick label centered in the box at the given position."},
{ "name": "drawVerticalTickLabel",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartAxisGroup",
  "description": "Draws a vertical tick label centered in the box at the given position."},
{ "name": "drawing",
  "type": "Method",
  "class": "google.maps.drawing",
  "description": ""},
{ "name": "drawing",
  "type": "Class",
  "description": ""},
{ "name": "drop",
  "type": "Event",
  "description": "The drop event is dispatched just prior to incorporating the drag source data into the drop target's dataProvider."},
{ "name": "drop",
  "type": "Event",
  "description": "The drop event is dispatched just prior to incorporating the drag source data into the drop target's dataProvider."},
{ "name": "dropDirection",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDropTargetBead",
  "description": "The direction the drop indicator should display."},
{ "name": "dropDirection",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SensitiveSingleSelectionDropTargetBead",
  "description": "The direction the drop indicator should display."},
{ "name": "dropDown",
  "type": "Property",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": ""},
{ "name": "dropDown",
  "type": "Property",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": ""},
{ "name": "dropEnabled",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "A flag that indicates whether dragged items can be dropped onto the control."},
{ "name": "dropEnabled",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "A flag that indicates whether dragged items can be dropped onto the control."},
{ "name": "dropEnabled",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "A flag that specifies whether dragged items can be dropped onto the chart."},
{ "name": "dropEnabled",
  "type": "Property",
  "class": "org.apache.royale.express.List",
  "description": ""},
{ "name": "dropEnabled",
  "type": "Property",
  "class": "org.apache.royale.express.DataGrid",
  "description": "Allows items to be dropped in the list (such as reordering items)"},
{ "name": "dropIndex",
  "type": "Property",
  "class": "spark.layouts.supportClasses.DropLocation",
  "description": "The drop index corresponding to the event."},
{ "name": "dropIndicator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class that defines the appearance of the drop indicator."},
{ "name": "dropIndicator",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "The <code>DisplayObject</code> that this layout uses for the drop indicator during a drag-and-drop operation."},
{ "name": "dropPoint",
  "type": "Property",
  "class": "spark.layouts.supportClasses.DropLocation",
  "description": "The event point in local coordinates of the layout's target."},
{ "name": "dropShadowVisible",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": "dropShadowVisible (was a style in Flex)"},
{ "name": "dropShadowVisible",
  "type": "Property",
  "class": "spark.components.BorderContainer",
  "description": ""},
{ "name": "dropTarget",
  "type": "Property",
  "class": "org.apache.royale.core.MXMLDragInitiator",
  "description": "The dropTarget"},
{ "name": "dropType",
  "type": "Property",
  "class": "org.apache.royale.core.MXMLDragInitiator",
  "description": "The DropType"},
{ "name": "dropdown",
  "type": "Property",
  "class": "mx.controls.ComboBox",
  "description": "A reference to the List control that acts as the drop-down in the ComboBox."},
{ "name": "dropdown",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "Contains a reference to the DateChooser control contained by the DateField control."},
{ "name": "dump",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "dump",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": "Not sure if we need this."},
{ "name": "dump",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "dump",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "duration",
  "type": "Property",
  "class": "mx.effects.IEffectInstance",
  "description": "The duration of the effect, in milliseconds."},
{ "name": "duration",
  "type": "Property",
  "class": "mx.effects.EffectInstance",
  "description": ""},
{ "name": "duration",
  "type": "Property",
  "class": "org.apache.royale.effects.IEffect",
  "description": "Duration of the animation, in milliseconds."},
{ "name": "duration",
  "type": "Property",
  "class": "org.apache.royale.effects.Effect",
  "description": "Duration of the animation, in milliseconds."},
{ "name": "duration",
  "type": "Property",
  "class": "mx.effects.Effect",
  "description": ""},
{ "name": "duration",
  "type": "Property",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "duration",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Effect",
  "description": "The duration of the effect, defaults to 1000 (1 second)."},
{ "name": "duration",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SnackbarModel",
  "description": "Set how long to show the view for."},
{ "name": "duration",
  "type": "Property",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": "The number of milliseconds to show the Snackbar."},
{ "name": "duration",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.PopUpModel",
  "description": "Set how long to show the view for."},
{ "name": "dx",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "The drop shadow x offset"},
{ "name": "dx",
  "type": "Property",
  "class": "org.apache.royale.svg.OffsetFilterElement",
  "description": "The x offset"},
{ "name": "dy",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "The drop shadow y offset"},
{ "name": "dy",
  "type": "Property",
  "class": "org.apache.royale.svg.OffsetFilterElement",
  "description": "The y offset"},
{ "name": "dynamicPropertyWriter",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.amf.AMFBinaryData",
  "description": "Allows greater control over the serialization of dynamic properties of dynamic objects."},
{ "name": "easeIn",
  "type": "Method",
  "class": "mx.effects.easing.Bounce",
  "description": "The <code>easeIn()</code> method starts the bounce motion slowly, and then accelerates motion as it executes."},
{ "name": "easeInOut",
  "type": "Method",
  "class": "mx.effects.easing.Bounce",
  "description": "The <code>easeInOut()</code> method combines the motion of the <code>easeIn()</code> and <code>easeOut()</code> methods to start the bounce motion slowly, accelerate motion, then decelerate."},
{ "name": "easeOut",
  "type": "Method",
  "class": "mx.effects.easing.Exponential",
  "description": "The <code>easeOut()</code> method starts motion fast, and then decelerates motion as it executes."},
{ "name": "easeOut",
  "type": "Method",
  "class": "mx.effects.easing.Bounce",
  "description": "The <code>easeOut()</code> method starts the bounce motion fast, and then decelerates motion as it executes."},
{ "name": "easing",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Effect",
  "description": ""},
{ "name": "easingFunction",
  "type": "Property",
  "class": "mx.effects.TweenEffect",
  "description": "The easing function for the animation."},
{ "name": "easingFunction",
  "type": "Property",
  "class": "mx.effects.effectClasses.TweenEffectInstance",
  "description": "The easing function for the animation."},
{ "name": "easingFunction",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "Sets the easing function for the animation."},
{ "name": "editHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes an edit event."},
{ "name": "editHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "editHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes an edit event (CUT, COPY, PASTE, SELECT_ALL) when the client manages events."},
{ "name": "editHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "editable",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "A flag which enables editing the data items in the DataGrid."},
{ "name": "editable",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "A flag that indicates whether drag-selection is enabled."},
{ "name": "editable",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "editable",
  "type": "Property",
  "class": "mx.controls.List",
  "description": "A flag that indicates whether or not the user can edit items in the data provider."},
{ "name": "editable",
  "type": "Property",
  "class": "spark.components.RichEditableText",
  "description": "A flag indicating whether the user is allowed to edit the text in this control."},
{ "name": "editable",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": "Specifies whether the text is editable."},
{ "name": "editable",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": "A flag that indicates whether the control is editable, which lets the user directly type entries that are not specified in the dataProvider, or not editable, which requires the user select from the items in the dataProvider."},
{ "name": "editable",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "A flag that indicates whether the items in the column are editable."},
{ "name": "editable",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "Indicates whether the user is allowed to edit the text in this control."},
{ "name": "editable",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "editable",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Indicates whether the user is allowed to edit the text in this control."},
{ "name": "editable",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Indicates whether the items in the column are editable."},
{ "name": "editedItemPosition",
  "type": "Property",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "The column and row index of the item renderer for the data provider item being edited, if any."},
{ "name": "editedItemRenderer",
  "type": "Property",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "A reference to the item renderer in the DataGrid control whose item is currently being edited."},
{ "name": "editingMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The editing mode."},
{ "name": "editingMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Editing mode of this TextContainerManager."},
{ "name": "editingMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "editingMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "Returns the editing mode (READ_ONLY, READ_SELECT, or READ_WRITE) of the EditManager."},
{ "name": "editorActivationMouseEvent",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The type of mouse event that starts an editor session."},
{ "name": "editorActivationMouseEvent",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The type of mouse event that starts an editor session."},
{ "name": "editorColumnIndex",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The zero-based column index of the cell that is being edited."},
{ "name": "editorColumnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "The zero-based column index of the cell that is being edited."},
{ "name": "editorDataField",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "The name of the property of the item editor that contains the new data for the list item."},
{ "name": "editorIndicator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render a background behind item renderers that are being edited."},
{ "name": "editorRowIndex",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The zero-based row index of the cell that is being edited."},
{ "name": "editorRowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "The zero-based row index of the cell that is being edited."},
{ "name": "editorUsesEnterKey",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "A flag that indicates whether the item editor uses Enter key."},
{ "name": "effectEnd",
  "type": "Event",
  "description": ""},
{ "name": "effectEndHandler",
  "type": "Method",
  "class": "org.apache.royale.utils.LayoutTweener",
  "description": ""},
{ "name": "effectGenerators",
  "type": "Property",
  "class": "org.apache.royale.utils.LayoutTweener",
  "description": ""},
{ "name": "effectInstance",
  "type": "Property",
  "class": "mx.events.EffectEvent",
  "description": "The effect instance object for the event."},
{ "name": "effectiveBlockProgression",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "effectiveFloat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "effectiveFloat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "@private"},
{ "name": "effectiveLinkElementTextLayoutFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "The state-dependent character attributes for the link."},
{ "name": "effects",
  "type": "Property",
  "class": "org.apache.royale.states.Transition",
  "description": "The list of effects to play"},
{ "name": "elasticIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "elasticInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "elasticOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "elemStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementMark",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.core.IRenderedObject",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.core.IInitialViewApplication",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.checkbox.CheckBoxIcon",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.UpgradeElement",
  "description": "The element we wish to upgrade"},
{ "name": "element",
  "type": "Property",
  "class": "mx.charts.series.renderData.AreaSeriesRenderData",
  "description": "The AreaSeries that this structure is associated with."},
{ "name": "element",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "The series or element that owns the ChartItem."},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.CheckBoxIcon",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "Specifies the chart element rendering this data item that generated the HitData structure."},
{ "name": "element",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesSegment",
  "description": "The series or element that owns this segment."},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineMirrorRegion",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.StatusChangeEvent",
  "description": "The FlowElement instance that has experienced a change in status."},
{ "name": "element",
  "type": "Property",
  "class": "mx.charts.chartClasses.LegendData",
  "description": "The chart item that generated this legend item."},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "element",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": ""},
{ "name": "elementAdded",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Called by the target after a layout element has been added and before the target's size and display list are validated."},
{ "name": "elementBounds",
  "type": "Property",
  "class": "mx.charts.chartClasses.RenderData",
  "description": "An Array of rectangles describing the bounds of the series's ChartItems, relative to the series's coordinate system."},
{ "name": "elementCount",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "elementErrorStrings",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "Each Vector item contains the error string from a content element."},
{ "name": "elementEvents",
  "type": "Property",
  "class": "org.apache.royale.events.ElementEvents",
  "description": ""},
{ "name": "elementFormat",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "elementFormat",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextElement",
  "description": ""},
{ "name": "elementHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "elementHeight",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GraphicElement",
  "description": ""},
{ "name": "elementHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "Height used by composition for laying out text around the graphic."},
{ "name": "elementHeightWithMarginsAndPadding",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "elementOffset",
  "type": "Property",
  "class": "mx.charts.effects.SeriesEffect",
  "description": "Specifies the amount of time, in milliseconds, that Flex delays the start of the effect on each element in the series."},
{ "name": "elementOffset",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesEffectInstance",
  "description": "Specifies the amount of time, in milliseconds, that Flex delays the start of the effect on each element in the series."},
{ "name": "elementRemoved",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "This method must is called by the target after a layout element has been removed and before the target's size and display list are validated."},
{ "name": "elementWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "elementWidth",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GraphicElement",
  "description": ""},
{ "name": "elementWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "Width used by composition for laying out text around the graphic."},
{ "name": "elementWidthWithMarginsAndPadding",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "elements",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "The elements that are associated with this transform."},
{ "name": "elements",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Calls the <code>elements()</code> method of each XML object in the XMLList."},
{ "name": "elevation",
  "type": "Property",
  "class": "org.apache.royale.svg.DiffuseLightingFilterElement",
  "description": ""},
{ "name": "emBox",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "emphasis",
  "type": "Property",
  "class": "org.apache.royale.jewel.Button",
  "description": "Activate \"emphasis\" effect selector."},
{ "name": "emphasis",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Badge",
  "description": "The color of this Badge"},
{ "name": "emphasis",
  "type": "Property",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": ""},
{ "name": "emptyCells",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "emptyStroke",
  "type": "Property",
  "class": "mx.charts.styles.HaloDefaults",
  "description": "A pre-defined invisible Stroke that is used by several chart styles."},
{ "name": "emptyTabStopFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Returns an ITabStopFormat instance with all properties set to <code>undefined</code>."},
{ "name": "emptyTextLayoutFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Returns an ITextLayoutFormat instance with all properties set to <code>undefined</code>."},
{ "name": "en_USvalidator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "enableAccessibility",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies whether accessibility support is turned on or not."},
{ "name": "enableAccessibility",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "enableAutoUpdate",
  "type": "Method",
  "class": "mx.collections.ICollectionView",
  "description": "Enables auto-updating."},
{ "name": "enableAutoUpdate",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "enableAutoUpdate",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "restore updates from the source list"},
{ "name": "enableDefaultTabStops",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.GlobalSettings",
  "description": ""},
{ "name": "enableEvents",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Enables event dispatch for this list."},
{ "name": "enableIME",
  "type": "Property",
  "class": "mx.core.IIMESupport",
  "description": "Specifies whether the IME should be enabled when this component has focus."},
{ "name": "enableIME",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "A flag that indicates whether the IME should be enabled when the component receives focus."},
{ "name": "enableIME",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IIMESupport",
  "description": "Specifies whether the IME should be enabled when this component has focus."},
{ "name": "enableIME",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "enableIME",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellContainer",
  "description": ""},
{ "name": "enablePolling",
  "type": "Method",
  "class": "mx.messaging.channels.PollingChannel",
  "description": "Enables polling based on the number of times <code>enablePolling()</code> and <code>disablePolling()</code> have been invoked."},
{ "name": "enableSearch",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.GlobalSettings",
  "description": "Controls whether the text will be visible to a search engine indexer."},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Whether the component can accept user interaction."},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "Setting this value to <code>false</code> will stop the validator from performing validation."},
{ "name": "enabled",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableComponent",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "spark.components.RadioButton",
  "description": "The RadioButton component is enabled if the RadioButtonGroup is enabled and the RadioButton itself is enabled."},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.validators.IValidator",
  "description": "Property to enable/disable validation process."},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.managers.ToolTipManager",
  "description": "If <code>true</code>, the ToolTipManager will automatically show ToolTips when the user moves the mouse pointer over components."},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.controls.Label",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IME",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.controls.RadioButtonGroup",
  "description": "Determines whether selection is allowed."},
{ "name": "enabled",
  "type": "Property",
  "class": "org.apache.royale.express.TextButton",
  "description": "Can enable or disable interaction with the control."},
{ "name": "enabled",
  "type": "Property",
  "class": "spark.components.ComboBox",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "spark.components.RadioButtonGroup",
  "description": "Determines whether selection is allowed."},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.managers.IToolTipManager2",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "org.apache.royale.express.TextInput",
  "description": "Can enable or disable interaction with the control."},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.containers.ControlBar",
  "description": ""},
{ "name": "enabled",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": ""},
{ "name": "enabledAlpha",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisabledAlphaBead",
  "description": "The alpha of the element when enabled."},
{ "name": "encode",
  "type": "Method",
  "class": "mx.utils.Base64Encoder",
  "description": ""},
{ "name": "encode",
  "type": "Method",
  "class": "mx.utils.TextEncoderLiteWrapper",
  "description": ""},
{ "name": "encode",
  "type": "Method",
  "class": "org.apache.royale.utils.string.Base64",
  "description": "encode a string in base64"},
{ "name": "encodePath",
  "type": "Method",
  "class": "google.maps.geometry.encoding",
  "description": ""},
{ "name": "encodeUTFBytes",
  "type": "Method",
  "class": "mx.utils.Base64Encoder",
  "description": ""},
{ "name": "encodeUrlVariables",
  "type": "Method",
  "class": "org.apache.royale.net.HTTPUtils",
  "description": "Encode URL variables."},
{ "name": "encoding",
  "type": "Method",
  "class": "google.maps.geometry.encoding",
  "description": ""},
{ "name": "encoding",
  "type": "Class",
  "description": ""},
{ "name": "encoding",
  "type": "Property",
  "class": "google.maps.geometry",
  "description": ""},
{ "name": "end",
  "type": "Method",
  "class": "mx.effects.EffectInstance",
  "description": ""},
{ "name": "end",
  "type": "Method",
  "class": "mx.effects.Effect",
  "description": ""},
{ "name": "end",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Stops the tween, ending it without dispatching an event or calling the Tween's endFunction or <code>onTweenEnd()</code>."},
{ "name": "end",
  "type": "Method",
  "class": "mx.effects.Parallel",
  "description": ""},
{ "name": "end",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesSegment",
  "description": "The index into the items array of the last item in this segment, inclusive."},
{ "name": "end",
  "type": "Method",
  "class": "mx.graphics.IFill",
  "description": "Ends the fill."},
{ "name": "end",
  "type": "Method",
  "class": "mx.graphics.LinearGradient",
  "description": ""},
{ "name": "end",
  "type": "Method",
  "class": "mx.graphics.SolidColor",
  "description": ""},
{ "name": "end",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The cumulative distance to the end of the item at index, including the gaps between items."},
{ "name": "endCompositeOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Ends a group of operations."},
{ "name": "endCompositeOperation",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "endFill",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "endFill",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "<i>Note: With the exception of the <code>beginGradientFill()</code> method, the following information from the <code>flash."},
{ "name": "endFill",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "endGeneration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "The text flow generation after the operation."},
{ "name": "endInteraction",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Terminates interaction."},
{ "name": "endInterpolation",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Called by the SeriesInterpolate effect to end an interpolation effect."},
{ "name": "endItemEditorSession",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Closes the currently active editor and optionally saves the editor's value by calling the item editor's <code>save()</code> method."},
{ "name": "endItemEditorSession",
  "type": "Method",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "Closes the currently active editor and optionally saves the editor's value by calling the item editor's save() method."},
{ "name": "endLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Called when we are finished composing a line, and it is committed."},
{ "name": "endLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": "Called when we are finished composing a line."},
{ "name": "endLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": ""},
{ "name": "endMouseCapture",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ISandboxSupport",
  "description": "Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed."},
{ "name": "endMouseCapture",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed."},
{ "name": "endMouseCapture",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed."},
{ "name": "endOfDocument",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange at the end of the document."},
{ "name": "endOfLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange at the end of the line."},
{ "name": "endOfParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange at the end of the paragraph."},
{ "name": "endPoint",
  "type": "Property",
  "class": "org.apache.royale.net.RemoteObject",
  "description": ""},
{ "name": "endPoint",
  "type": "Property",
  "class": "org.apache.royale.net.SimpleRemoteObject",
  "description": ""},
{ "name": "endStroke",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": "JS needs some way to know the stroke is done if there isn't going to be an endFill call"},
{ "name": "endTableBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Called when we are finished composing a line, and it is committed."},
{ "name": "endTableBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": ""},
{ "name": "endTween",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Interrupt the tween, jump immediately to the end of the tween, and invoke the <code>onTweenEnd()</code> callback function."},
{ "name": "endValue",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "Final value of the animation."},
{ "name": "endian",
  "type": "Property",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "endian",
  "type": "Property",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "endian",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Indicates the byte order for the data."},
{ "name": "endian",
  "type": "Property",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": "Indicates the byte order for the data."},
{ "name": "endian",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "Indicates the byte order for the data."},
{ "name": "endpoint",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Provides access to the endpoint for this channel."},
{ "name": "endpoint",
  "type": "Property",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "This property allows the developer to quickly specify an endpoint for a RemoteObject destination without referring to a services configuration file at compile time or programmatically creating a ChannelSet."},
{ "name": "engine",
  "type": "Property",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": "The rendering engine used by the browser."},
{ "name": "engineVersion",
  "type": "Property",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": "The specific version of the rendering engine used."},
{ "name": "ensureCellIsVisible",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "ensureCellIsVisible",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If necessary, set the <code>verticalScrollPosition</code> and <code>horizontalScrollPosition</code> properties so that the specified cell is completely visible."},
{ "name": "ensureTerminatorAfterReplace",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "enter",
  "type": "Event",
  "description": "Dispatched when the user presses the Enter key."},
{ "name": "enter",
  "type": "Event",
  "description": "The enter event is dispatched when a DragEnter has been detected in the drop target strand."},
{ "name": "enter",
  "type": "Event",
  "description": "The enter event is dispatched when a DragEnter has been detected in the drop target strand."},
{ "name": "enter",
  "type": "Event",
  "description": "Dispatched when the user presses the Enter key."},
{ "name": "enter",
  "type": "Event",
  "description": "Dispatched if the <code>editable</code> property is set to <code>true</code> and the user presses the Enter key while typing in the editable text field."},
{ "name": "enterPage",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "enter page"},
{ "name": "enterPage",
  "type": "Event",
  "description": "Dispatched When the wizard reach to this page"},
{ "name": "entries",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": "An Array of GradientEntry objects defining the fill patterns for the gradient fill."},
{ "name": "entries",
  "type": "Property",
  "class": "mx.graphics.LinearGradient",
  "description": ""},
{ "name": "enumString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "equalAllHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyUtil",
  "description": "Helper function to compare two sets of properties."},
{ "name": "equalHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "Helper function when comparing the property"},
{ "name": "equalUserStyles",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Compare the userStyles of this with otherElement's userStyles."},
{ "name": "equals",
  "type": "Method",
  "class": "QName",
  "description": ""},
{ "name": "equals",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "equals",
  "type": "Method",
  "class": "google.maps.LatLng",
  "description": ""},
{ "name": "equals",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "equals",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "Determines whether this SelectionFormat object has the same property values as another SelectionFormat object."},
{ "name": "equals",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "error",
  "type": "Method",
  "class": "mx.logging.ILogger",
  "description": "Logs the specified data using the <code>LogEventLevel."},
{ "name": "error",
  "type": "Method",
  "class": "mx.logging.LogLogger",
  "description": ""},
{ "name": "error",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowOperationEvent",
  "description": "The error thrown, if any, during an operation."},
{ "name": "error",
  "type": "Event",
  "description": "Dispatched when an HTTPService call fails."},
{ "name": "error",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "Convenience function for error event to allow chaining."},
{ "name": "error",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.NonEmptyTextField",
  "description": "The string to use as error text in the associated span."},
{ "name": "error",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "Convenience function for error event to allow chaining."},
{ "name": "error",
  "type": "Property",
  "class": "mx.formatters.Formatter",
  "description": "Description saved by the formatter when an error occurs."},
{ "name": "error",
  "type": "Event",
  "description": "Dispatched when an HTTPService call fails."},
{ "name": "error",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.RestrictTextField",
  "description": "The string to use as error text in the associated span."},
{ "name": "errorClass",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.amf.AMFNetConnection",
  "description": "The class to use to test if success or failure"},
{ "name": "errorCode",
  "type": "Property",
  "class": "org.apache.royale.storage.events.FileErrorEvent",
  "description": "An error code, if any, associated with the error that triggered this event."},
{ "name": "errorCode",
  "type": "Property",
  "class": "mx.validators.ValidationResult",
  "description": "The validation error code if the value of the <code>isError</code> property is <code>true</code>."},
{ "name": "errorHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyUtil",
  "description": ""},
{ "name": "errorMessage",
  "type": "Property",
  "class": "org.apache.royale.storage.events.FileEvent",
  "description": "If not null, the error that occurred opening or reading the file."},
{ "name": "errorMessage",
  "type": "Property",
  "class": "org.apache.royale.storage.events.FileErrorEvent",
  "description": "If not null, the error that occurred opening or reading the file."},
{ "name": "errorMessage",
  "type": "Property",
  "class": "mx.validators.ValidationResult",
  "description": "The validation error message if the value of the <code>isError</code> property is <code>true</code>."},
{ "name": "errorString",
  "type": "Property",
  "class": "mx.validators.IValidatorListener",
  "description": "The text that will be displayed by a component's error tip when a component is monitored by a Validator and validation fails."},
{ "name": "errorString",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The text that displayed by a component's error tip when a component is monitored by a Validator and validation fails."},
{ "name": "errorText",
  "type": "Property",
  "class": "mx.events.ModuleEvent",
  "description": "The error message if the type is <code>ModuleEvent."},
{ "name": "errorTextDisplay",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "A reference to the visual element that display the FormItem's error strings."},
{ "name": "errors",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextImporter",
  "description": "This property contains a vector of error messages as strings after a call to an importer method is the <code>throwOnError</code> property is set to <code>false</code>, which is the default."},
{ "name": "errors",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextExporter",
  "description": "This property contains a vector of error messages as strings after a call to an exporter method is the <code>throwOnError</code> property is set to <code>false</code>, which is the default."},
{ "name": "errors",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ConverterBase",
  "description": "Errors encountered while parsing."},
{ "name": "es_ESvalidator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "event",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "event",
  "type": "Class",
  "description": ""},
{ "name": "event",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ThrottleBead",
  "description": ""},
{ "name": "eventMirror",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "eventName",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": "The event name that is dispatched when the source property changes."},
{ "name": "eventNames",
  "type": "Property",
  "class": "org.apache.royale.core.EventLoggingBead",
  "description": "Array of event names to listen to."},
{ "name": "eventNames",
  "type": "Property",
  "class": "org.apache.royale.binding.PropertyWatcher",
  "description": "The name or array of names of events that get dispatched when the property changes."},
{ "name": "eventTarget",
  "type": "Method",
  "class": "org.apache.royale.events.utils.MouseUtils",
  "description": "Returns the event target."},
{ "name": "exceedsMaxError",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Error message when the value exceeds the <code>maxValue</code> property."},
{ "name": "exception",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Failure",
  "description": "The exception that caused the test to fail."},
{ "name": "excludeClasses",
  "type": "Property",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": ""},
{ "name": "excludeClasses",
  "type": "Property",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": ""},
{ "name": "excludeClasses",
  "type": "Property",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": ""},
{ "name": "excludeClasses",
  "type": "Property",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": ""},
{ "name": "execute",
  "type": "Method",
  "class": "org.apache.royale.graphics.IPathCommand",
  "description": ""},
{ "name": "execute",
  "type": "Method",
  "class": "org.apache.royale.graphics.QuadraticCurve",
  "description": ""},
{ "name": "execute",
  "type": "Method",
  "class": "org.apache.royale.graphics.CubicCurve",
  "description": ""},
{ "name": "execute",
  "type": "Method",
  "class": "org.apache.royale.graphics.LineTo",
  "description": ""},
{ "name": "execute",
  "type": "Method",
  "class": "org.apache.royale.graphics.MoveTo",
  "description": ""},
{ "name": "executeChildBindings",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Executes the bindings into this Container's child UIComponent objects."},
{ "name": "executeJS",
  "type": "Method",
  "class": "org.apache.royale.utils.BrowserUtils",
  "description": "evals arbitrary javascript code in the current browser context"},
{ "name": "exit",
  "type": "Event",
  "description": "The exit event is sent when the drag goes outside of the drop target space."},
{ "name": "exit",
  "type": "Event",
  "description": "The exit event is sent when the drag goes outside of the drop target space."},
{ "name": "exitPage",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "exit page"},
{ "name": "exitPage",
  "type": "Event",
  "description": "Dispatched When the wizard exit this page"},
{ "name": "exitState",
  "type": "Event",
  "description": "Dispatched just before a view state is exited."},
{ "name": "expand",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.CardInner",
  "description": "A boolean flag to activate \"mdl-card--expand\" effect selector."},
{ "name": "expandChildrenOf",
  "type": "Method",
  "class": "mx.controls.Tree",
  "description": "Opens or closes all the tree items below the specified item."},
{ "name": "expandColumns",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": "The columns this cell will expand to occupy notice that you must not define the ocuppied cells"},
{ "name": "expandExponents",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Formats a number in exponent notation, into a number in decimal notation."},
{ "name": "expandItem",
  "type": "Method",
  "class": "mx.controls.Tree",
  "description": "Opens or closes a branch item."},
{ "name": "expandRows",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": "The rows this cell will expand to occupy notice that you must not define the ocuppied cells"},
{ "name": "explicitColumnCount",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The column count requested by explicitly setting the <code>columnCount</code> property."},
{ "name": "explicitColumnWidth",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The column width requested by explicitly setting the <code>columnWidth</code>."},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "The height of this component if set by the height property"},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "The explicitly specified height for the component, in pixels, as the component's coordinates."},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "explicitHeight",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Number that specifies the explicit height of the ConstraintRow instance, in pixels, in the ConstraintRow instance's coordinates."},
{ "name": "explicitLineBreaks",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "explicitMaxHeight",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the maximum height of the component, in pixels, as the component's coordinates."},
{ "name": "explicitMaxHeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The maximum recommended height of the component to be considered by the parent during layout."},
{ "name": "explicitMaxWidth",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the maximum width of the component, in pixels, as the component's coordinates."},
{ "name": "explicitMaxWidth",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The maximum recommended width of the component to be considered by the parent during layout."},
{ "name": "explicitMinHeight",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the minimum height of the component, in pixels, as the component's coordinates."},
{ "name": "explicitMinHeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The minimum recommended height of the component to be considered by the parent during layout."},
{ "name": "explicitMinWidth",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the minimum width of the component, in pixels, as the component's coordinates."},
{ "name": "explicitMinWidth",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The minimum recommended width of the component to be considered by the parent during layout."},
{ "name": "explicitRowCount",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The row count requested by explicitly setting <code>rowCount</code>."},
{ "name": "explicitRowHeight",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The row height requested by explicitly setting <code>rowHeight</code>."},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "The width of this component if set by the width property"},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "The explicitly specified width for the component, in pixels, as the component's coordinates."},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": "The explicitly set width (as opposed to measured width or percentage width)."},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "explicitWidth",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "Number that specifies the explicit width of the ConstraintColumn instance, in pixels, in the ConstraintColumn instance's coordinates."},
{ "name": "explodeRadius",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "A number from 0 to 1, specifying how far all wedges of the pie series should be exploded from the center of the chart as a percentage of the total radius."},
{ "name": "export",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.ITextExporter",
  "description": "Export text content from a TextFlow instance in String, or XML, or a user defined format."},
{ "name": "export",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlExporter",
  "description": "@copy ITextExporter#export()"},
{ "name": "export",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Exports a TextFlow to a specified format."},
{ "name": "export",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.PlainTextExporter",
  "description": "@copy ITextExporter#export()"},
{ "name": "export",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "exportChild",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Exports the object."},
{ "name": "exportContainerFormattedElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a IContainerFormattedElement."},
{ "name": "exportContainerFormattedElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Overridable worker method for exporting a IParagraphFormattedElement."},
{ "name": "exportDiv",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlExporter",
  "description": "Export a DIV element"},
{ "name": "exportFlowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a FlowElement."},
{ "name": "exportFlowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Overridable worker method for exporting a FlowElement."},
{ "name": "exportFlowGroupElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a FlowGroupElement."},
{ "name": "exportList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "exportList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "exportListItem",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "exportListItem",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "exportParagraphFormattedElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a IParagraphFormattedElement."},
{ "name": "exportParagraphFormattedElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Overridable worker method for exporting a IParagraphFormattedElement."},
{ "name": "exportSpan",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a Span."},
{ "name": "exportSpanText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "exportStyles",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Helper function to export styles (core or user) in the form of xml attributes or xml children."},
{ "name": "exportSubParagraphElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlExporter",
  "description": ""},
{ "name": "exportTableCellElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a TableCellElement."},
{ "name": "exportTableCellElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Overridable worker method for exporting a TableCellElement."},
{ "name": "exportTableElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a TableElement."},
{ "name": "exportTableElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Overridable worker method for exporting a TableElement."},
{ "name": "exportTableRowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a TableRowElement."},
{ "name": "exportTableRowElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Overridable worker method for exporting a TableRowElement."},
{ "name": "exportTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Base functionality for exporting a TextFlow."},
{ "name": "exportToXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Export text content of a TextFlow into XFL format."},
{ "name": "exporterClass",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.FormatDescriptor",
  "description": "Returns the class used for converting to the format."},
{ "name": "expression",
  "type": "Property",
  "class": "mx.validators.RegExpValidator",
  "description": "The regular expression to use for validation."},
{ "name": "extend",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "extendLabelToEnd",
  "type": "Property",
  "class": "mx.charts.ColumnChart",
  "description": "Determines whether or not data labels can extend to the end of the chart."},
{ "name": "extendToLinkBoundary",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyLinkOperation",
  "description": "Whether to extend the selection to include the entire text of any existing links overlapped by the selection, and then apply the change."},
{ "name": "extendedData",
  "type": "Property",
  "class": "mx.messaging.messages.ErrorMessage",
  "description": "Extended data that the remote destination has chosen to associate with this error to facilitate custom error processing on the client."},
{ "name": "extension",
  "type": "Property",
  "class": "mx.net.FileFilter",
  "description": ""},
{ "name": "extractInCategory",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyUtil",
  "description": ""},
{ "name": "extractMinInterval",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Extracts the minimum value, maximum value, and, optionally, the minimum interval from an Array of ChartItem objects."},
{ "name": "extractMinMax",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Extracts the minimum value, maximum value, and, optionally, the minimum interval from an Array of ChartItem objects."},
{ "name": "extractSuffixFromCounters3",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.CounterContentHandler",
  "description": ""},
{ "name": "extractTextFormatAttributesHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Extract text format attributes"},
{ "name": "fab",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A boolean flag to activate \"mdl-button--fab\" effect selector."},
{ "name": "factory",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "A factory that generates the type of object to cache."},
{ "name": "fail",
  "type": "Method",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "Resolves the task as failed"},
{ "name": "fail",
  "type": "Method",
  "class": "org.apache.royale.test.asserts",
  "description": "Alias for org."},
{ "name": "fail",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails."},
{ "name": "failCount",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Result",
  "description": "The number of tests that failed."},
{ "name": "failEarly",
  "type": "Property",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": "If <code>failEarly</code> is true, the task will fail as soon as the first subtask fails."},
{ "name": "failEquals",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails if the values are loosely equal."},
{ "name": "failFalse",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails if the condition is false."},
{ "name": "failNotEquals",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails if the values are not loosely equal."},
{ "name": "failNotNull",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails if the value is not null."},
{ "name": "failNotStrictlyEquals",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails if the values are not strictly equal."},
{ "name": "failNull",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails if the value is null."},
{ "name": "failStrictlyEquals",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails if the values are strictly equal."},
{ "name": "failTrue",
  "type": "Method",
  "class": "org.apache.royale.test.Assert",
  "description": "Fails if the condition is true."},
{ "name": "failed",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.FailureListener",
  "description": "Indicates of the test runner failed."},
{ "name": "failed",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "failed (and a status of `failed`) means the task resolved to a failed state"},
{ "name": "failed",
  "type": "Event",
  "description": ""},
{ "name": "failedTasks",
  "type": "Property",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": ""},
{ "name": "failoverURIs",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Provides access to the set of endpoint URIs that this channel can attempt to failover to if the endpoint is clustered."},
{ "name": "failures",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Result",
  "description": "The collection of test failures."},
{ "name": "fallback",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "family",
  "type": "Property",
  "class": "org.apache.royale.text.engine.IFont",
  "description": ""},
{ "name": "fatal",
  "type": "Method",
  "class": "mx.logging.ILogger",
  "description": "Logs the specified data using the <code>LogEventLevel."},
{ "name": "fatal",
  "type": "Method",
  "class": "mx.logging.LogLogger",
  "description": ""},
{ "name": "fault",
  "type": "Event",
  "description": ""},
{ "name": "fault",
  "type": "Event",
  "description": "The fault event is dispatched when a service call fails and isn't handled by the Operation itself."},
{ "name": "fault",
  "type": "Event",
  "description": "Dispatched when an HTTPMultiService call fails."},
{ "name": "fault",
  "type": "Property",
  "class": "mx.messaging.errors.MessageSerializationError",
  "description": "Provides specific information about the fault that occurred and for which message."},
{ "name": "fault",
  "type": "Event",
  "description": "Dispatched when an Operation call fails."},
{ "name": "fault",
  "type": "Property",
  "class": "mx.rpc.events.FaultEvent",
  "description": "The Fault object that contains the details of what caused this event."},
{ "name": "fault",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Invoked by a MessageResponder upon receiving a fault for a sent message."},
{ "name": "fault",
  "type": "Event",
  "description": "Dispatched when a message fault occurs."},
{ "name": "fault",
  "type": "Method",
  "class": "mx.rpc.IResponder",
  "description": "This method is called by a service when an error has been received."},
{ "name": "fault",
  "type": "Method",
  "class": "mx.rpc.CallResponder",
  "description": "This method is called by the AsyncToken when it wants to deliver a <code>FaultEvent</code> to the CallResponder."},
{ "name": "fault",
  "type": "Event",
  "description": "Dispatched when an Operation call fails."},
{ "name": "fault",
  "type": "Event",
  "description": ""},
{ "name": "fault",
  "type": "Event",
  "description": "Dispatched when an HTTPService call fails."},
{ "name": "fault",
  "type": "Method",
  "class": "mx.rpc.Responder",
  "description": "This method is called by a service when an error has been received."},
{ "name": "fault",
  "type": "Event",
  "description": "The fault event is dispatched when a login or logout call fails."},
{ "name": "fault",
  "type": "Event",
  "description": ""},
{ "name": "faultCode",
  "type": "Property",
  "class": "mx.rpc.Fault",
  "description": "A simple code describing the fault."},
{ "name": "faultCode",
  "type": "Property",
  "class": "mx.messaging.messages.ErrorMessage",
  "description": "The fault code for the error."},
{ "name": "faultCode",
  "type": "Property",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Provides access to the destination-specific failure code."},
{ "name": "faultCode",
  "type": "Property",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "Provides access to the destination specific failure code."},
{ "name": "faultDetail",
  "type": "Property",
  "class": "mx.rpc.Fault",
  "description": "Any extra details of the fault."},
{ "name": "faultDetail",
  "type": "Property",
  "class": "mx.messaging.messages.ErrorMessage",
  "description": "Detailed description of what caused the error."},
{ "name": "faultDetail",
  "type": "Property",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Provides destination-specific details of the failure."},
{ "name": "faultDetail",
  "type": "Property",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "Provides destination specific details of the failure."},
{ "name": "faultHandler",
  "type": "Method",
  "class": "org.apache.royale.net.RemoteObject",
  "description": ""},
{ "name": "faultHandler",
  "type": "Method",
  "class": "org.apache.royale.net.SimpleRemoteObject",
  "description": ""},
{ "name": "faultString",
  "type": "Property",
  "class": "mx.rpc.Fault",
  "description": "Text description of the fault."},
{ "name": "faultString",
  "type": "Property",
  "class": "mx.messaging.messages.ErrorMessage",
  "description": "A simple description of the error."},
{ "name": "faultString",
  "type": "Property",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Provides access to the destination-specific reason for the failure."},
{ "name": "faultString",
  "type": "Property",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "Provides access to the destination specific reason for the failure."},
{ "name": "field",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "Specifies the field of the data provider that determines the data for each wedge of the PieChart control."},
{ "name": "field",
  "type": "Property",
  "class": "mx.events.ValidationResultEvent",
  "description": "The name of the field that failed validation and triggered the event."},
{ "name": "fieldSeparator",
  "type": "Property",
  "class": "mx.logging.targets.LineFormattedTarget",
  "description": "The separator string to use between fields (the default is \" \")"},
{ "name": "fields",
  "type": "Property",
  "class": "mx.collections.ISort",
  "description": "An <code>Array</code> of <code>ISortField</code> objects that specifies the fields to compare."},
{ "name": "fields",
  "type": "Property",
  "class": "mx.collections.Grouping",
  "description": "An Array of GroupingField objects that specifies the fields used to group the data."},
{ "name": "fields",
  "type": "Property",
  "class": "mx.collections.SummaryRow",
  "description": "Array of SummaryField/SummaryField2 instances that define the characteristics of the data fields used to create the summary."},
{ "name": "fields",
  "type": "Property",
  "class": "org.apache.royale.collections.ISort",
  "description": "An <code>Array</code> of <code>ISortField</code> objects that specifies the fields to compare."},
{ "name": "fields",
  "type": "Property",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "fields",
  "type": "Property",
  "class": "mx.collections.Sort",
  "description": ""},
{ "name": "file",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileModel",
  "description": ""},
{ "name": "fileLoadHandler",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileLoader",
  "description": ""},
{ "name": "fill",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.CreateJSBase",
  "description": "The color and alpha values of a fill."},
{ "name": "fill",
  "type": "Property",
  "class": "org.apache.royale.graphics.IGraphicShape",
  "description": "The fill of the graphic."},
{ "name": "fill",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": "A solid color fill."},
{ "name": "fill",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The fill value associated with this wedge of the PieChart control."},
{ "name": "fill",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.IWedgeItemRenderer",
  "description": "The color of the wedge."},
{ "name": "fill",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The color used to fill the interior of the box."},
{ "name": "fill",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "Holds the fill color of the item."},
{ "name": "fill",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "Holds the fill color of the item."},
{ "name": "fill",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "Holds fill color of the item."},
{ "name": "fill",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": "The color used to fill the interior of the box."},
{ "name": "fill",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "Holds the fill color of the item."},
{ "name": "fill",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The color used to fill the interior of the box."},
{ "name": "fill",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "Holds the fill color of the item."},
{ "name": "fill",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "Holds the fill color of the item."},
{ "name": "fill",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": "The object that defines the properties of the fill."},
{ "name": "fill",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The object that defines the properties of the fill."},
{ "name": "fill",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "Holds the fill color of the item."},
{ "name": "fillColor",
  "type": "Property",
  "class": "org.apache.royale.core.FilledRectangle",
  "description": "The color of the rectangle."},
{ "name": "fillColor",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": "The color used to fill the interior of the box."},
{ "name": "fillColor",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": "The color used to fill the interior of the box."},
{ "name": "fillFromStyle",
  "type": "Method",
  "class": "mx.charts.chartClasses.GraphicsUtilities",
  "description": "Converts a style value into a Fill object."},
{ "name": "fillFunction",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Specifies a method that returns the fill for the current chart item in the series."},
{ "name": "fillFunction",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Specifies a method that returns the fill for the current chart item in the series."},
{ "name": "fillFunction",
  "type": "Property",
  "class": "mx.charts.series.CandlestickSeries",
  "description": "Specifies a method that returns the fill for the current chart item in the series."},
{ "name": "fillFunction",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Specifies a method that returns the fill for the current chart item in the series."},
{ "name": "fillFunction",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": "Specifies a method that returns the fill for the current chart item in the series."},
{ "name": "fillFunction",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "Specifies a method that returns the fill for the current chart item in the series."},
{ "name": "fillFunction",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "Specifies a method that returns the fill for the current chart item in the series."},
{ "name": "fillFunction",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "Specifies a method that returns the fill for the current chart item in the series."},
{ "name": "fillRect",
  "type": "Method",
  "class": "mx.charts.chartClasses.GraphicsUtilities",
  "description": "Fill a rectangle using the provided IFill and IStroke objects."},
{ "name": "filter",
  "type": "Method",
  "class": "org.apache.royale.svg.Filter",
  "description": ""},
{ "name": "filter",
  "type": "Method",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": ""},
{ "name": "filter",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "filter",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileBrowserWithFilter",
  "description": "The filter for the FileBrowser"},
{ "name": "filter",
  "type": "Method",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "filter",
  "type": "Method",
  "class": "org.apache.royale.svg.SuperimposeFilter",
  "description": ""},
{ "name": "filterCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Filters a set of values of arbitrary type to a set of numbers that can be mapped."},
{ "name": "filterCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "filterCache",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "filterCache",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": ""},
{ "name": "filterData",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "If <code>filterFuction</code> or <code>filterDataValues</code> is set, <code>filterData</code> is ignored."},
{ "name": "filterDataValues",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "If <code>filterFuction</code> is set, <code>filterDataValues</code> and <code>filterData</code> are ignored."},
{ "name": "filterElement",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "filterElementResult",
  "type": "Property",
  "class": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": "Where to write the result of this filter."},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.BlurFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.SpreadFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.DiffuseLightingFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.BlendFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.OffsetFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.MergeFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.TileFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.AdjustBrightnessFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.FullAlphaFilterElement",
  "description": ""},
{ "name": "filterElementType",
  "type": "Property",
  "class": "org.apache.royale.svg.InvertFilterElement",
  "description": ""},
{ "name": "filterElementWrapper",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "filterElementWrapper",
  "type": "Property",
  "class": "org.apache.royale.svg.Filter",
  "description": "This is the DOM element where filter elements get added"},
{ "name": "filterForMetaTags",
  "type": "Method",
  "class": "org.apache.royale.reflection.utils",
  "description": ""},
{ "name": "filterForResultFormatTable",
  "type": "Property",
  "class": "mx.rpc.http.SerializationFilter",
  "description": ""},
{ "name": "filterFunction",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "Specifies a method that returns the array of chart items in the series that are to be displayed."},
{ "name": "filterFunction",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": "the filter function to use to filter entries in the list"},
{ "name": "filterFunction",
  "type": "Property",
  "class": "mx.collections.ICollectionView",
  "description": "A function that the view will use to eliminate items that do not match the function's criteria."},
{ "name": "filterFunction",
  "type": "Property",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "filterFunction",
  "type": "Property",
  "class": "org.apache.royale.collections.IArrayListView",
  "description": "A function that the view will use to eliminate items that do not match the function's criteria."},
{ "name": "filterFunction",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "filterFunction",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": "Not Supported in Tree."},
{ "name": "filterFunction",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "filteredCache",
  "type": "Property",
  "class": "mx.charts.chartClasses.RenderData",
  "description": "The list of ChartItems representing the items in the series's <code>dataProvider</code> that remain after filtering."},
{ "name": "filters",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "filters",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "filters",
  "type": "Property",
  "class": "mx.logging.ILoggingTarget",
  "description": "In addition to the <code>level</code> setting, filters are used to provide a psuedo-hierarchical mapping for processing only those events for a given category."},
{ "name": "filters",
  "type": "Property",
  "class": "mx.logging.AbstractTarget",
  "description": "In addition to the <code>level</code> setting, filters are used to provide a psuedo-hierarchical mapping for processing only those events for a given category."},
{ "name": "finalParcelAdjustment",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "finalParcelAdjustment",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": "Final adjustment on the content bounds."},
{ "name": "finalParcelAdjustment",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": "Final adjustment on the content bounds."},
{ "name": "finalParcelStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "finalParcelStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "finalizeLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "finalizeLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "finalizeLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.FactoryBackgroundManager",
  "description": ""},
{ "name": "find",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Searches through all nodes for the given row index."},
{ "name": "findAbsoluteFlowGroupElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "findAbsoluteParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "findAny",
  "type": "Method",
  "class": "mx.collections.IViewCursor",
  "description": "Finds an item with the specified properties within the collection and positions the cursor to that item."},
{ "name": "findAny",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": "<p>Note that for this class, the view does not need to be sorted in order to call this method."},
{ "name": "findCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "findCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Finds the cell at the specified cell coordinates or null if no cell is found."},
{ "name": "findCellAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "findChildIndexAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "findChildIndexAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Given a relative text position, find the index of the first child FlowElement that contains the relative position."},
{ "name": "findControllerIndexAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Returns the index of the controller containing the content at the specified position."},
{ "name": "findControllerIndexAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Returns the index of the controller containing the content at the specified position."},
{ "name": "findDataPoints",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "Returns a HitData object describing the nearest data point to the coordinates passed to the method."},
{ "name": "findDataPoints",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Finds the closest data point represented by the element under the given coordinates."},
{ "name": "findDataPoints",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Returns an array of HitData objects that describe the nearest data point to the coordinates passed to the method."},
{ "name": "findDataPoints",
  "type": "Method",
  "class": "mx.charts.series.CandlestickSeries",
  "description": ""},
{ "name": "findDataPoints",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "findElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ElementMark",
  "description": ""},
{ "name": "findFirst",
  "type": "Method",
  "class": "mx.collections.IViewCursor",
  "description": "Finds the first item with the specified properties within the collection and positions the cursor to that item."},
{ "name": "findFirst",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": "<p>Note that for this class, the view does not need to be sorted in order to call this method."},
{ "name": "findFloatIndexAfter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "findFloatIndexAtOrAfter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "findHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": ""},
{ "name": "findIndex",
  "type": "Method",
  "class": "org.apache.royale.collections.CollectionUtils",
  "description": "Search for an index in a collection of objects, given the key and the value"},
{ "name": "findItem",
  "type": "Method",
  "class": "mx.collections.ISort",
  "description": "Finds the specified object within the specified array (or the insertion point if asked for), returning the index if found or -1 if not."},
{ "name": "findItem",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Find the item specified using the Sort find mode constants."},
{ "name": "findItem",
  "type": "Method",
  "class": "org.apache.royale.collections.ISort",
  "description": "Finds the specified object within the specified array (or the insertion point if asked for), returning the index if found or -1 if not."},
{ "name": "findItem",
  "type": "Method",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "findItem",
  "type": "Method",
  "class": "mx.collections.Sort",
  "description": ""},
{ "name": "findItem",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "Find the item specified using the Sort find mode constants."},
{ "name": "findLast",
  "type": "Method",
  "class": "mx.collections.IViewCursor",
  "description": "Finds the last item with the specified properties within the collection and positions the cursor on that item."},
{ "name": "findLast",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": "<p>Note that for this class, the view does not need to be sorted in order to call this method."},
{ "name": "findLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "findLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Given a relative text position, find the leaf element that contains the position."},
{ "name": "findLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "findLineAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": ""},
{ "name": "findLineAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Returns the ITextFlowLine object containing the content at the specified position."},
{ "name": "findLineIndexAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": ""},
{ "name": "findLineIndexAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Returns the sequential line number of the ITextFlowLine object that contains the content at the specified position."},
{ "name": "findMenuDispatcher",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuSelectionMouseController",
  "description": "Finds and returns the object from which events should be dispatched."},
{ "name": "findNearestLTE",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Searches through all nodes for the one with a row index closest and less than equal to the specified index."},
{ "name": "findNextAtomBoundary",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "Scans ahead from the supplied position to find the location in the text of the next atom and returns the index."},
{ "name": "findNextAtomBoundary",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "findNextAtomBoundary",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "findNextParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "returns next paragraph in reading order after para."},
{ "name": "findNextTransition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "findNextWordBoundary",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "findNextWordBoundary",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "Returns the index of the next word boundary in the text."},
{ "name": "findNextWordBoundary",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "findNextWordBoundary",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "findPopUpHost",
  "type": "Method",
  "class": "org.apache.royale.utils.UIUtils",
  "description": "Given a component starting point, this function walks up the parent chain looking for a component that implements the IPopUpHost interface."},
{ "name": "findPreviousAtomBoundary",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "Scans backward from the supplied position to find the location in the text of the previous atom and returns the index."},
{ "name": "findPreviousAtomBoundary",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "findPreviousAtomBoundary",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "findPreviousWordBoundary",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "findPreviousWordBoundary",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "Returns the index of the previous word boundary in the text."},
{ "name": "findPreviousWordBoundary",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "findPreviousWordBoundary",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "findResourceBundleWithResource",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Searches the locales in the <code>localeChain</code> for the specified resource and returns the first resource bundle in which it is found."},
{ "name": "findResourceBundleWithResource",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "findRowIndex",
  "type": "Method",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "This will search through a dataprovider checking the given field and for the given value and return the index for the match."},
{ "name": "findRowIndex",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "findRowIndex",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "This will search through a dataprovider checking the given field and for the given value and return the index for the match."},
{ "name": "findRowIndices",
  "type": "Method",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "This will search through a dataprovider checking the given field and for the given values and return an array of indexes that matched."},
{ "name": "findRowIndices",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "findRowIndices",
  "type": "Method",
  "class": "spark.components.supportClasses.ListBase",
  "description": "This will search through a dataprovider checking the given field and for the given values and return an array of indices that matched."},
{ "name": "findRowIndices",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "This will search through a dataprovider checking the given field and for the given values and return an array of indices that matched."},
{ "name": "findSelectedIndex",
  "type": "Method",
  "class": "org.apache.royale.collections.CollectionUtils",
  "description": "Tries to find the object or the propertyId in a collection and returns the index if found."},
{ "name": "findStepByName",
  "type": "Method",
  "class": "org.apache.royale.jewel.Wizard",
  "description": ""},
{ "name": "findStyleDeclaration",
  "type": "Method",
  "class": "mx.charts.styles.HaloDefaults",
  "description": "Returns the CSSStyleDeclaration by chasing the chain of styleManagers if necessary."},
{ "name": "finishComposeLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "finishController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "finishEffect",
  "type": "Method",
  "class": "mx.effects.EffectInstance",
  "description": ""},
{ "name": "finishParcel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "finishSetup",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridColumnChangePropagator",
  "description": ""},
{ "name": "finishSetup",
  "type": "Method",
  "class": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": ""},
{ "name": "finishSetup",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "finishSetup",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "finishedThrottle",
  "type": "Event",
  "description": "Dispatched after the timeout occurs"},
{ "name": "fireListenerOverride",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "fireListenerOverride",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "fireListenerOverride",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CrossBrowserFireListenerOverrideBead",
  "description": ""},
{ "name": "fireTestFailure",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Notification when an individual test has failed."},
{ "name": "fireTestFailure",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "fireTestFinished",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Notification when an individual test has finished, regardless of whether it passed or failed."},
{ "name": "fireTestFinished",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "fireTestIgnored",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Notification when an individual test was ignored."},
{ "name": "fireTestIgnored",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "fireTestRunFinished",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Notification when a test run has finished."},
{ "name": "fireTestRunFinished",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "fireTestRunStarted",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Notification when a test run has started."},
{ "name": "fireTestRunStarted",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "fireTestStarted",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Notification when an individual test has started."},
{ "name": "fireTestStarted",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "first",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "First node in list."},
{ "name": "firstBaselineOffset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the baseline position of the first line in the container."},
{ "name": "firstBaselineOffset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the baseline position of the first line in the container."},
{ "name": "firstBaselineOffset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the baseline position of the first line in the container."},
{ "name": "firstBaselineOffsetProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "firstButton",
  "type": "Property",
  "class": "spark.components.ButtonBar",
  "description": "A skin part that defines the first button."},
{ "name": "firstChildIndex",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The index of the first content child, when dealing with both content and non-content children."},
{ "name": "firstDayOfWeek",
  "type": "Property",
  "class": "org.apache.royale.core.IDateChooserModel",
  "description": "The index of the first day of the week, Sunday = 0."},
{ "name": "firstDayOfWeek",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": "The index of the first day of the week, Sunday = 0."},
{ "name": "firstDayOfWeek",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Number representing the day of the week to display in the first column of the DateChooser control."},
{ "name": "firstDayOfWeek",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The index of the first day of the week, Sunday = 0."},
{ "name": "firstIndexInView",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The index of the first layout element that is part of the layout and within the layout target's scroll rectangle, or -1 if nothing has been displayed yet."},
{ "name": "firstIndexInView",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The index of the first column that is part of the layout and within the layout target's scroll rectangle, or -1 if nothing has been displayed yet."},
{ "name": "firstInvalidLine",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "firstInvalidLine",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "firstLeaf",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The IFlowLeafElement object that contains the start of the range."},
{ "name": "firstLine",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "firstLine",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "firstParagraph",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The IParagraphElement object that contains the start of the range."},
{ "name": "fitAny",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "fitBounds",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "fitBounds",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "<code>fitBounds</code> Calculates a size (x,y) for a bounding box (0,0,x,y) such that the bounding box transformed with <code>matrix</code> will fit into (0,0,width,height)."},
{ "name": "fitContent",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fitFloat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "fitLineToParcel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "fitsInHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "fixed",
  "type": "Property",
  "class": "org.apache.royale.jewel.Drawer",
  "description": "A boolean flag to switch between \"float\" and \"fixed\" effect selector."},
{ "name": "fixed",
  "type": "Property",
  "class": "org.apache.royale.jewel.TopAppBar",
  "description": "A boolean flag to activate \"fixed\" effect selector."},
{ "name": "fixed",
  "type": "Property",
  "class": "org.apache.royale.jewel.FooterBar",
  "description": "A boolean flag to activate \"fixed\" effect selector."},
{ "name": "fixedDrawer",
  "type": "Property",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": "A boolean flag to activate \"mdl-layout--fixed-drawer\" effect selector."},
{ "name": "fixedHeader",
  "type": "Property",
  "class": "org.apache.royale.jewel.Table",
  "description": "Makes the header of the table fixed so the data rows will scroll behind it."},
{ "name": "fixedHeader",
  "type": "Property",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": "A boolean flag to activate \"mdl-layout--fixed-header\" effect selector."},
{ "name": "fixedHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": ""},
{ "name": "flags",
  "type": "Property",
  "class": "mx.validators.RegExpValidator",
  "description": "The regular expression flags to use when matching."},
{ "name": "flags",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "A bitmask of Alert constants that describe which buttons to show in the Alert."},
{ "name": "flags",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "Which buttons to display (see Alert for details)."},
{ "name": "flags",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "Which buttons to display (see Alert for details)."},
{ "name": "flags",
  "type": "Property",
  "class": "org.apache.royale.html.Alert",
  "description": "The buttons to display on the Alert as bit-mask values."},
{ "name": "flags",
  "type": "Property",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": "the compilation flags applicable to the inspected item"},
{ "name": "flags",
  "type": "Property",
  "class": "org.apache.royale.jewel.Alert",
  "description": "The buttons to display on the Alert as bit-mask values."},
{ "name": "flex",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "flex",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "flex",
  "type": "Property",
  "class": "mx.containers.gridClasses.GridRowInfo",
  "description": "Input: Measurement for the GridRow."},
{ "name": "flexBasis",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "flexChildHeightsProportionally",
  "type": "Method",
  "class": "mx.containers.utilityClasses.Flex",
  "description": "This function sets the height of each child so that the heights add up to spaceForChildren."},
{ "name": "flexChildWidthsProportionally",
  "type": "Method",
  "class": "mx.containers.utilityClasses.Flex",
  "description": "This function sets the width of each child so that the widths add up to spaceForChildren."},
{ "name": "flexChildrenProportionally",
  "type": "Method",
  "class": "mx.containers.utilityClasses.Flex",
  "description": "This function distributes excess space among the flexible children."},
{ "name": "flexDirection",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "flexFlow",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "flexGrow",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "flexGrow",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "flexGrow",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "flexShrink",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "flexShrink",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "flexShrink",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "flexWrap",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "flexibleChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.IOneFlexibleChildLayout",
  "description": ""},
{ "name": "flexibleChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayoutForOverflow",
  "description": "The id of the flexible child"},
{ "name": "flexibleChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayout",
  "description": "The id of the flexible child"},
{ "name": "flexibleChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayout",
  "description": "The id of the flexible child"},
{ "name": "flexibleChild",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayoutForOverflow",
  "description": "The id of the flexible child"},
{ "name": "float",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "float",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "float",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "Controls the placement of the graphic relative to the text."},
{ "name": "floatPropertyDefinition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": ""},
{ "name": "floatType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "floatingLabel",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TextFieldBase",
  "description": "A boolean flag to activate \"mdl-textfield--floating-label\" effect selector."},
{ "name": "floor",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "floor a number to the nearest twip."},
{ "name": "flowComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IContainerFormattedElement",
  "description": ""},
{ "name": "flowComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ContainerFormattedElement",
  "description": "@private"},
{ "name": "flowComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "flowComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "flowComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the flow composer object that composes and highlights text into the container that this controller manages."},
{ "name": "flowComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "Manages the containers for this element."},
{ "name": "flowComposerClass",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the type of flow composer to attach to a new TextFlow object by default."},
{ "name": "flowComposerClass",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "flowElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "The FlowElement that dispatched the event."},
{ "name": "flowElementClassList",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ImportExportConfiguration",
  "description": ""},
{ "name": "flowElementInfoList",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ImportExportConfiguration",
  "description": "array of FlowElementInfo objects (key = name, value = FlowElementInfo)"},
{ "name": "flowNS",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "flowOperationBegin",
  "type": "Event",
  "description": ""},
{ "name": "flowOperationBegin",
  "type": "Event",
  "description": ""},
{ "name": "flowOperationComplete",
  "type": "Event",
  "description": ""},
{ "name": "flowOperationComplete",
  "type": "Event",
  "description": ""},
{ "name": "flowOperationEnd",
  "type": "Event",
  "description": ""},
{ "name": "flowOperationEnd",
  "type": "Event",
  "description": ""},
{ "name": "flush",
  "type": "Method",
  "class": "mx.net.SharedObject",
  "description": ""},
{ "name": "flush",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "This method removes all of the current loggers from the cache."},
{ "name": "flushPendingOperations",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Executes any pending FlowOperations."},
{ "name": "flushPendingOperations",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "focusChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a focusChange event."},
{ "name": "focusChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "focusChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>FocusEvent."},
{ "name": "focusChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "focusEnabled",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Indicates whether the component can receive focus when tabbed to."},
{ "name": "focusEnabled",
  "type": "Property",
  "class": "mx.managers.IFocusManagerComponent",
  "description": "A flag that indicates whether the component can receive focus when selected."},
{ "name": "focusIn",
  "type": "Event",
  "description": "Dispatched when the component has finished its construction and has all initialization properties set."},
{ "name": "focusInHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a focusIn event."},
{ "name": "focusInHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Process a focusIn event."},
{ "name": "focusInHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>FocusEvent."},
{ "name": "focusInHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "focusManager",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Gets the FocusManager that controls focus for this component and its peers."},
{ "name": "focusManager",
  "type": "Property",
  "class": "mx.managers.IFocusManagerContainer",
  "description": "The FocusManager for this component."},
{ "name": "focusOut",
  "type": "Event",
  "description": ""},
{ "name": "focusOutHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a focusOut event."},
{ "name": "focusOutHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "focusOutHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>FocusEvent."},
{ "name": "focusOutHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "focused",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Indicates whether a container in the text flow has the focus."},
{ "name": "focused",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "focusedCellSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The SelectionFormat object used to draw cell selections in a focused container."},
{ "name": "focusedCellSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "focusedSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The SelectionFormat object used to draw the selection in a focused container."},
{ "name": "focusedSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "focusedSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "The initial selection format (SelectionFormat) for a text flow (TextFlow) when its window has focus."},
{ "name": "focusedSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "font",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "font",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontDescription",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "fontFamily",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "fontFamily",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The name of the font to use, or a comma-separated list of font names."},
{ "name": "fontFamily",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The name of the font to use, or a comma-separated list of font names."},
{ "name": "fontFamily",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The name of the font to use, or a comma-separated list of font names."},
{ "name": "fontFamily",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontFamily",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "fontFamily",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "fontFamily",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "fontFamily",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "fontFamilyProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "fontFeatureSettings",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontKerning",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontLanguageOverride",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontLoaded",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFontLoader",
  "description": ""},
{ "name": "fontLoader",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "fontLookup",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Font lookup to use."},
{ "name": "fontLookup",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Font lookup to use."},
{ "name": "fontLookup",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Font lookup to use."},
{ "name": "fontLookupProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "fontMapperFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.GlobalSettings",
  "description": "Specifies the callback used for font mapping."},
{ "name": "fontMetrics",
  "type": "Property",
  "class": "org.apache.royale.text.engine.IFont",
  "description": ""},
{ "name": "fontName",
  "type": "Property",
  "class": "org.apache.royale.createjs.Label",
  "description": "The font to use for the text."},
{ "name": "fontName",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "fontName",
  "type": "Property",
  "class": "org.apache.royale.createjs.CheckBox",
  "description": "The font to use for the text."},
{ "name": "fontName",
  "type": "Property",
  "class": "org.apache.royale.createjs.TextButton",
  "description": "The font to use for the button's label."},
{ "name": "fontPosture",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "fontSize",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The size of the text in pixels."},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": "The size of the text in pixels."},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The size of the text in pixels."},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The size of the text in pixels."},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "fontSize",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": ""},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "fontSize",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "fontSizeAdjust",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontSizeProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "fontStretch",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Style of text."},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Style of text."},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Style of text."},
{ "name": "fontStyle",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "spark.components.supportClasses.ButtonBase",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "spark.components.Label",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "fontStyle",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "fontStyleProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "fontSynthesis",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontVariant",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontVariantAlternates",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontVariantCaps",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontVariantEastAsian",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontVariantLigatures",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontVariantNumeric",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontVariantPosition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontWeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "fontWeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Weight of text."},
{ "name": "fontWeight",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "fontWeight",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "fontWeight",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "fontWeight",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": ""},
{ "name": "fontWeight",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "fontWeight",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "fontWeight",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "fontWeightProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "footerRowCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "footerRowCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the number of footer rows in the table"},
{ "name": "for",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Label",
  "description": "The id of the associated element"},
{ "name": "forEach",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "forceClipping",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "formFactor",
  "type": "Property",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": "The form factor of the device."},
{ "name": "formHeading",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormHeadingView",
  "description": "The org."},
{ "name": "formItem",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": "The org."},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat properties applied directly to this element."},
{ "name": "format",
  "type": "Method",
  "class": "org.apache.royale.core.IFormatter",
  "description": "Takes the source object to format and returns the formatted string"},
{ "name": "format",
  "type": "Method",
  "class": "org.apache.royale.core.FormatBase",
  "description": "The resulting formatted value as a string."},
{ "name": "format",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.NumberFormatter",
  "description": "The formatted string."},
{ "name": "format",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.SimpleDateFormatter",
  "description": "The formatted date"},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "format",
  "type": "Method",
  "class": "mx.formatters.DateFormatter",
  "description": "Generates a date-formatted String from either a date-formatted String or a Date object."},
{ "name": "format",
  "type": "Method",
  "class": "mx.formatters.NumberFormatter",
  "description": "Formats the number as a String."},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateSubParagraphGroupOperation",
  "description": "Format to be applied to the new SubParagraphGroupElement"},
{ "name": "format",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "A TextFormat to apply to any instances created."},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Stores the ITextLayoutFormat object that contains the attributes for this container."},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.FormatDescriptor",
  "description": "Returns the data format used by the converter."},
{ "name": "format",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.StringDateFormatter",
  "description": "Formats the date."},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateDivOperation",
  "description": "TextLayoutFormat to be applied to the new IDivElement."},
{ "name": "format",
  "type": "Method",
  "class": "mx.formatters.IFormatter",
  "description": "Formats a value and returns a <code>String</code> containing the new formatted value."},
{ "name": "format",
  "type": "Method",
  "class": "mx.formatters.Formatter",
  "description": "Formats a value and returns a String containing the new, formatted, value."},
{ "name": "format",
  "type": "Method",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Formats <code>value</code> as currency."},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyFormatToElementOperation",
  "description": "The character formats applied in this operation."},
{ "name": "format",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.CurrencyFormatter",
  "description": "Computes the formatted string."},
{ "name": "format",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.DateAndTimeFormatter",
  "description": ""},
{ "name": "format",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ClearFormatOnElementOperation",
  "description": "The character formats applied in this operation."},
{ "name": "formatChanged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "formatChanged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "formatDataTip",
  "type": "Method",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Provides custom text for DataTip objects."},
{ "name": "formatDataTip",
  "type": "Method",
  "class": "mx.charts.series.ColumnSet",
  "description": ""},
{ "name": "formatDataTip",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Generates a text description of a ChartItem suitable for display as a DataTip."},
{ "name": "formatDays",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": "The default formatting function used when the axis renders with day-based <code>labelUnits</code>."},
{ "name": "formatDecimal",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Formats a number by replacing the default decimal separator, \"."},
{ "name": "formatDescription",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": ""},
{ "name": "formatError",
  "type": "Property",
  "class": "mx.validators.DateValidator",
  "description": "Error message when the <code>inputFormat</code> property is not in the correct format."},
{ "name": "formatForCascade",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "formatForCascade",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Concatenates tlf attributes with any other tlf attributes  Return the concatenated result"},
{ "name": "formatForCascade",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "formatForCascade",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "@private TODO: Possible optimization - replace this with prototype chaining??"},
{ "name": "formatForScreen",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Formats values for display in DataTips."},
{ "name": "formatForScreen",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "formatForScreen",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "formatMilliseconds",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": "The default formatting function used when the axis renders with millisecond-based <code>labelUnits</code>."},
{ "name": "formatMinutes",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": "The default formatting function used when the axis renders with minute-based <code>labelUnits</code>."},
{ "name": "formatMonths",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": "The default formatting function used when the axis renders with month-based <code>labelUnits</code>."},
{ "name": "formatNegative",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Formats a negative number with either a minus sign (-) or parentheses ()."},
{ "name": "formatPrecision",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Formats a number by setting its decimal precision by using the <code>decimalSeparatorTo</code> property as the decimal separator."},
{ "name": "formatResolver",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "formatResolver",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "A callback function for resolving element styles."},
{ "name": "formatRounding",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Formats a number by rounding it."},
{ "name": "formatRoundingWithPrecision",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Formats a number by rounding it and setting the decimal precision."},
{ "name": "formatSeconds",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": "The default formatting function used when the axis renders with second-based <code>labelUnits</code>."},
{ "name": "formatString",
  "type": "Property",
  "class": "mx.formatters.DateFormatter",
  "description": "The mask pattern."},
{ "name": "formatString",
  "type": "Property",
  "class": "mx.formatters.PhoneFormatter",
  "description": "String that contains mask characters that represent a specified phone number format."},
{ "name": "formatString",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "The format of the displayed date in the text field."},
{ "name": "formatThousands",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Formats a number by using the <code>thousandsSeparatorTo</code> property as the thousands separator and the <code>decimalSeparatorTo</code> property as the decimal separator."},
{ "name": "formatToString",
  "type": "Method",
  "class": "mx.messaging.events.ChannelEvent",
  "description": ""},
{ "name": "formatToString",
  "type": "Method",
  "class": "mx.messaging.events.MessageEvent",
  "description": ""},
{ "name": "formatToString",
  "type": "Method",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": ""},
{ "name": "formatYears",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": "The default formatting function used when the axis renders with year-based <code>labelUnits</code>."},
{ "name": "formats",
  "type": "Property",
  "class": "mx.core.DragSource",
  "description": "Contains the formats of the drag data, as an Array of Strings."},
{ "name": "formatter",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.datefield.DateFieldMaskedTextInput",
  "description": ""},
{ "name": "formatter",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Specifies the formatter used by the column's <code>itemToLabel()</code> method to convert data provider items to strings."},
{ "name": "forum",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "forum",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "forwardAndBack",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuBuiltInItems",
  "description": ""},
{ "name": "foundIndex",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "fractionOfElementInView",
  "type": "Method",
  "class": "spark.layouts.VerticalLayout",
  "description": "Returns 1."},
{ "name": "fractionOfElementInView",
  "type": "Method",
  "class": "spark.layouts.HorizontalLayout",
  "description": "Returns 1."},
{ "name": "fractionalDigits",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.CurrencyFormatter",
  "description": "Number of digits after the decimal separator"},
{ "name": "frame",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "frame specifies which sides of the frame surrounding a table will be visible."},
{ "name": "frame",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: frame specifies which sides of the frame surrounding a table will be visible."},
{ "name": "frame",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "frame specifies which sides of the frame surrounding a table will be visible."},
{ "name": "frameProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "frameRate",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.MouseCursorData",
  "description": ""},
{ "name": "freeItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.core.IDataProviderVirtualItemRendererMapper",
  "description": ""},
{ "name": "freeItemRendererForIndex",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForIListData",
  "description": "Free an item renderer for a given index."},
{ "name": "freeItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": "Free an item renderer for a given index."},
{ "name": "freeItemRendererForIndex",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForICollectionViewData",
  "description": "Free an item renderer for a given index."},
{ "name": "from",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "Convert Twips to pixels."},
{ "name": "fromBinary",
  "type": "Method",
  "class": "mx.utils.RPCUIDUtil",
  "description": "Converts a 128-bit UID encoded as a ByteArray to a String representation."},
{ "name": "fromBinary",
  "type": "Method",
  "class": "org.apache.royale.utils.UIDUtil",
  "description": "Converts a 128-bit UID encoded as a ByteArray to a String representation."},
{ "name": "fromByteArray",
  "type": "Method",
  "class": "org.apache.royale.net.utils.RPCUIDUtil",
  "description": "Converts a 128-bit UID encoded as a ByteArray to a String representation."},
{ "name": "fromByteArray",
  "type": "Method",
  "class": "mx.utils.Base64JSWrapper",
  "description": ""},
{ "name": "fromByteArray",
  "type": "Method",
  "class": "mx.utils.UIDUtil",
  "description": "Converts a 128-bit UID encoded as a ByteArray to a String representation."},
{ "name": "fromJSONString",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "fromObject",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "fromState",
  "type": "Property",
  "class": "org.apache.royale.states.Transition",
  "description": "The state or states from which the view is leaving."},
{ "name": "fromString",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Utility method to create a BinaryData object from a string."},
{ "name": "fullWidth",
  "type": "Property",
  "class": "org.apache.royale.mdl.DialogActions",
  "description": "A boolean flag to activate \"mdl-dialog__actions--full-width\" effect selector."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.VGroup",
  "description": "Assigns variable gap in steps of GAP_STEP."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalCategoryAxisBead",
  "description": "The amount of space to leave between series."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "Assigns variable gap in steps of GAP_STEP."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalCategoryAxisBead",
  "description": "The amount of space to leave between series."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.StackedBarChartLayout",
  "description": "The amount of space to leave between series."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "Assigns variable gap in steps of GAP_STEP."},
{ "name": "gap",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The vertical space between layout elements, in pixels."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "Assigns variable gap in steps of GAP_STEP."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridLayout",
  "description": "Assigns variable gap to grid from 1 to 20 Activate \"gap-Xdp\" effect selector to set a numeric gap between grid cells"},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.StackedColumnChartLayout",
  "description": "The amount of space to leave between series."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.ColumnChartLayout",
  "description": "The amount of space to leave between series."},
{ "name": "gap",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The horizontal space between layout elements, in pixels."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "Assigns variable gap in steps of GAP_STEP."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.BarChartLayout",
  "description": "The amount of space to leave between series."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.Grid",
  "description": "Assigns variable gap to grid from 1 to 20 Activate \"gap-Xdp\" effect selector to set a numeric gap between grid cells"},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": "The gap between items."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "Assigns variable gap in steps of GAP_STEP."},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayoutWithPaddingAndGap",
  "description": "The gap between items."},
{ "name": "gap",
  "type": "Property",
  "class": "spark.components.HGroup",
  "description": ""},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "Assigns variable gap in steps of GAP_STEP."},
{ "name": "gap",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The distance between items."},
{ "name": "gap",
  "type": "Property",
  "class": "spark.components.VGroup",
  "description": ""},
{ "name": "gap",
  "type": "Property",
  "class": "org.apache.royale.jewel.HGroup",
  "description": "Assigns variable gap in steps of GAP_STEP."},
{ "name": "generalClipboard",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.Clipboard",
  "description": ""},
{ "name": "generateCSSStyleDeclarations",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": ""},
{ "name": "generateEffect",
  "type": "Method",
  "class": "org.apache.royale.utils.IEffectsGenerator",
  "description": "Takes a source ILayoutChild and creates an effect that sets the source child to match the destination child."},
{ "name": "generateEffect",
  "type": "Method",
  "class": "org.apache.royale.utils.ResizeGenerator",
  "description": ""},
{ "name": "generateEffect",
  "type": "Method",
  "class": "org.apache.royale.utils.MoveGenerator",
  "description": ""},
{ "name": "generateKey",
  "type": "Method",
  "class": "org.apache.royale.reflection.beads.JSONReviver",
  "description": ""},
{ "name": "generateMXMLArray",
  "type": "Method",
  "class": "org.apache.royale.utils.MXMLDataInterpreter",
  "description": "Generates an Array of objects based on the encoded data."},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.View",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.core.IMXMLDocument",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.jewel.Container",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.html.Group",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": "An method called by the compiler's generated code to kick off the setting of MXML attribute values and instantiation of child tags."},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.html.DividedContainer",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.core.View",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.html.Container",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.jewel.View",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.createjs.Application",
  "description": "An method called by the compiler's generated code to kick off the setting of MXML attribute values and instantiation of child tags."},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": "An method called by the compiler's generated code to kick off the setting of MXML attribute values and instantiation of child tags."},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.createjs.Container",
  "description": ""},
{ "name": "generateMXMLAttributes",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "generateMXMLInstances",
  "type": "Method",
  "class": "org.apache.royale.utils.MXMLDataInterpreter",
  "description": "Generates the instances of objects in an MXML document based on the encoded data."},
{ "name": "generateMXMLObject",
  "type": "Method",
  "class": "org.apache.royale.utils.MXMLDataInterpreter",
  "description": "Generates an object based on the encoded data."},
{ "name": "generateMXMLProperties",
  "type": "Method",
  "class": "org.apache.royale.utils.MXMLDataInterpreter",
  "description": "Generates the properties of the top-level object in an MXML document based on the encoded data."},
{ "name": "generation",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "generation",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "The generation number for this TextFlow object."},
{ "name": "generator",
  "type": "Property",
  "class": "org.apache.royale.core.ClassFactory",
  "description": "The class to instantiate."},
{ "name": "geocode",
  "type": "Method",
  "class": "google.maps.Geocoder",
  "description": ""},
{ "name": "geocodeHandler",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": ""},
{ "name": "geometry",
  "type": "Method",
  "class": "google.maps.geometry",
  "description": ""},
{ "name": "geometry",
  "type": "Class",
  "description": ""},
{ "name": "get",
  "type": "Property",
  "class": "org.apache.royale.utils.ObjectMap",
  "description": ""},
{ "name": "get",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Mimics the simple -100 to 100 easing in Flash Pro."},
{ "name": "get",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "getAbsoluteStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getAbsoluteStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the start location of the element in the text flow as an absolute index."},
{ "name": "getAbsoluteStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Returns the absolute position of the first content element in the specified ContainerController object."},
{ "name": "getActualResponder",
  "type": "Method",
  "class": "org.apache.royale.net.Responder",
  "description": ""},
{ "name": "getAdornmentOffsetBase",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAdornmentOffsetBase",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAliasByClass",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "Retrieves a an alias for a class, based on an alias mapping, previously registered with registerClassAlias, or possibly using [RemoteClass(alias='someAlias')] metadata"},
{ "name": "getAllDataPoints",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement2",
  "description": "Returns an array of HitData of the items of all the underlying objects that implement <code>IChartElement2</code> whose dataTips are to be shown when <code>showAllDataTips</code> is set to <code>true</code> on chart."},
{ "name": "getAllDataPoints",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Returns an array of HitData of the items of all the underlying ChartElements whose dataTips are to be shown when <code>showAllDataTips</code> is set to <code>true</code> on chart"},
{ "name": "getAllDataPoints",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Returns an array of HitData objects representing the chart items in the underlying objects that implement the IChartElement2 interface."},
{ "name": "getAllMessages",
  "type": "Method",
  "class": "mx.rpc.ActiveCalls",
  "description": ""},
{ "name": "getAncestorWithContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getAnimation",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getArgsByKey",
  "type": "Method",
  "class": "org.apache.royale.reflection.MetaDataDefinition",
  "description": "convenience method for retrieving a set of args with a specific key Most often this would be of length 1, but it is possible for there to be multiple MetaDataArgDefinitions with the same key"},
{ "name": "getArray",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "getArrayValues",
  "type": "Method",
  "class": "mx.utils.ArrayUtil",
  "description": "Used to obtain the values in an Array, whether indexed or associative."},
{ "name": "getAt",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "getAtomBidiLevel",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomBidiLevel",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": "Gets the bidirectional level of the atom at the specified index."},
{ "name": "getAtomBounds",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomBounds",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAtomCenter",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomCenter",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAtomGraphic",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomGraphic",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAtomIndexAtCharIndex",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomIndexAtCharIndex",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAtomIndexAtPoint",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomIndexAtPoint",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAtomTextBlockBeginIndex",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomTextBlockBeginIndex",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAtomTextBlockEndIndex",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomTextBlockEndIndex",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAtomTextRotation",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomTextRotation",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAtomWordBoundaryOnLeft",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getAtomWordBoundaryOnLeft",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getAxis",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "You typically retrieve the Axis instance directly through a named property (such as for a Cartesian-based series <code>horizontalAxis</code>, <code>verticalAxis</code>, or <code>radiusAxis</code>)."},
{ "name": "getAxis",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "Retrieves the axis instance responsible for transforming the data dimension specified by the <code>dimension</code> parameter."},
{ "name": "getBackIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable \"back in\" ease."},
{ "name": "getBackInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable \"back in out\" ease."},
{ "name": "getBackOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable \"back out\" ease."},
{ "name": "getBackgroundManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "getBackgroundShape",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getBaselinePosition",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getBaselinePosition",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getBeadByType",
  "type": "Method",
  "class": "org.apache.royale.core.IStrand",
  "description": "Find a bead (IBead instance) on the strand."},
{ "name": "getBeadByType",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "getBeadByType",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "getBeadByType",
  "type": "Method",
  "class": "org.apache.royale.core.Strand",
  "description": ""},
{ "name": "getBeadByType",
  "type": "Method",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": ""},
{ "name": "getBeadByType",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "getBeadByType",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "getBeadByType",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "getBlendMode",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.ITLFFactory",
  "description": ""},
{ "name": "getBlendMode",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.StandardTLFFactory",
  "description": ""},
{ "name": "getBodyRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getBodyRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "returns the body rows (sans header and footer cells) for composition"},
{ "name": "getBookmark",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Create a bookmark for this view."},
{ "name": "getBookmarkIndex",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Given a bookmark find the location for the value."},
{ "name": "getBoolean",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Gets the value of a specified resource as a Boolean."},
{ "name": "getBoolean",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getBorderAndPaddingMetrics",
  "type": "Method",
  "class": "org.apache.royale.core.IBorderPaddingMarginValuesImpl",
  "description": "Return a rectangle that contains the width of the border sides along with the padding."},
{ "name": "getBorderAndPaddingMetrics",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "Combine padding and border."},
{ "name": "getBorderMetrics",
  "type": "Method",
  "class": "org.apache.royale.core.IBorderPaddingMarginValuesImpl",
  "description": "Return a rectangle that contains the width of the border sides."},
{ "name": "getBorderMetrics",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "Compute the width/thickness of the four border edges."},
{ "name": "getBorderPaddingAndMargins",
  "type": "Method",
  "class": "org.apache.royale.core.IBorderPaddingMarginValuesImpl",
  "description": "Return a LayoutData that contains the margins, border and padding for the object."},
{ "name": "getBorderPaddingAndMargins",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "Combine padding and border."},
{ "name": "getBorderStyles",
  "type": "Method",
  "class": "org.apache.royale.core.IBorderPaddingMarginValuesImpl",
  "description": "Return the styles needed to determine how to draw the border"},
{ "name": "getBorderStyles",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "Compute the width/thickness of the four border edges."},
{ "name": "getBottomMostRenderer",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getBottomValue",
  "type": "Method",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "Computes paddingBottom or marginBottom."},
{ "name": "getBoundingBox",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": ""},
{ "name": "getBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.dummy.BoundsUtil",
  "description": ""},
{ "name": "getBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "getBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "Returns the bounds of the line as a rectangle."},
{ "name": "getBounds",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "getBounds",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "getBounds",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getBounds",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.PathHelper",
  "description": ""},
{ "name": "getBounds",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Returns the implict bounds of the item at index."},
{ "name": "getBoundsXAtSize",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the x coordinate of the element's bounds at the specified element size."},
{ "name": "getBoundsXAtSize",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getBoundsXAtSize",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getBoundsYAtSize",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the y coordinate of the element's bounds at the specified element size."},
{ "name": "getBoundsYAtSize",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getBoundsYAtSize",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getBrowserEvent",
  "type": "Method",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "The underlying browser event object."},
{ "name": "getBundleNamesForLocale",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Returns an Array of Strings specifying the bundle names for all ResourceBundle objects that exist in the ResourceManager and that belong to the specified locale."},
{ "name": "getBundleNamesForLocale",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getButtonIndices",
  "type": "Method",
  "class": "spark.components.supportClasses.ButtonBarBase",
  "description": "Gets the index for several of a ButtonBar's Buttons, referencing them by the ButtonBarbutton's <code>label</code>."},
{ "name": "getCSSInlineBox",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowLeafElement",
  "description": ""},
{ "name": "getCSSLineBox",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "getCellAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the table cell at the row and column specified."},
{ "name": "getCellAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "Returns the cell at the specified index or null if out of range."},
{ "name": "getCellAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": ""},
{ "name": "getCellAt",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Return the row and column indices of the cell that overlaps the pixel at the specified grid coordinate."},
{ "name": "getCellBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the table block for the given table cell."},
{ "name": "getCellBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the layout bounds of the specified cell."},
{ "name": "getCellBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getCellBounds",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Returns the current pixel bounds of the specified cell, or null if no such cell exists."},
{ "name": "getCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the height of the specified cell."},
{ "name": "getCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": "Returns the cell height at the specified column."},
{ "name": "getCellRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": ""},
{ "name": "getCellRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "getCellX",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the X coordinate of the origin of the specified cell."},
{ "name": "getCellX",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getCellX",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Return the X coordinate of the specified cell's origin."},
{ "name": "getCellY",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the Y coordinate of the origin of the specified cell."},
{ "name": "getCellY",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getCellY",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Return the Y coordinate of the specified cell's origin."},
{ "name": "getCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a vector of all the table cell elements in the table."},
{ "name": "getCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "Returns a vector of table cell elements or null if the row contains no cells"},
{ "name": "getCellsArray",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellsArray",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns an array of all the table cells."},
{ "name": "getCellsAt",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Returns a vector of CellPosition objects whose <code>rowIndex</code> and <code>columnIndex</code> properties specify the row and column indices of the cells that overlap the specified grid region."},
{ "name": "getCellsForColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellsForColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a Vector of the TableCellElements for the column specified."},
{ "name": "getCellsForColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellsForColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a Vector of the TableCellElements for the column at the specified index."},
{ "name": "getCellsForRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellsForRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a vector of the cells for the row specified."},
{ "name": "getCellsForRowArray",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellsForRowArray",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a vector of the cells for the row specified."},
{ "name": "getCellsForRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellsForRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a vector of the cells for the row at the specified index."},
{ "name": "getCellsForRowAtArray",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellsForRowAtArray",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns an array of the cells for the row specified."},
{ "name": "getCellsInRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
  "description": ""},
{ "name": "getCellsInRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getCellsInRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a vector of table cell elements in the given cell range."},
{ "name": "getCellsInRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Returns a vector of table cell elements in the given cell range."},
{ "name": "getCenter",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "getCenter",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getChangeEvents",
  "type": "Method",
  "class": "mx.binding.BindabilityInfo",
  "description": "Object containing { eventName: true } for each change event (class- or child-level) that applies to the specified child."},
{ "name": "getChannel",
  "type": "Method",
  "class": "mx.messaging.config.ServerConfig",
  "description": "Returns a shared instance of the configured Channel."},
{ "name": "getChannelSet",
  "type": "Method",
  "class": "mx.messaging.config.ServerConfig",
  "description": "Returns a shared ChannelSet for use with the specified destination belonging to the service that handles the specified message type."},
{ "name": "getCharAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getCharAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the character at the specified position, relative to this FlowElement object."},
{ "name": "getCharCodeAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getCharCodeAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the character code at the specified position, relative to this FlowElement."},
{ "name": "getCharIndexAtPoint",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "getChild",
  "type": "Method",
  "class": "org.apache.royale.utils.JXON",
  "description": "Returns an array of all children whose tag name matches the name."},
{ "name": "getChildAt",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Gets the child DisplayObject at the specified index in this child list."},
{ "name": "getChildAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "getChildAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Returns the FlowElement child at the specified index."},
{ "name": "getChildAt",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Gets the <i>n</i>th child component object."},
{ "name": "getChildAt",
  "type": "Method",
  "class": "org.apache.royale.effects.ICompoundEffect",
  "description": "Get an effect from the parent."},
{ "name": "getChildAt",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "getChildByName",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Gets the child DisplayObject with the specified name in this child list."},
{ "name": "getChildByName",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Returns the child whose <code>name</code> property is the specified String."},
{ "name": "getChildIndex",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Gets the index of a specific child in this child list."},
{ "name": "getChildIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "getChildIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Searches in children for the specified FlowElement object and returns its index position."},
{ "name": "getChildIndex",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Gets the zero-based index of a specific child."},
{ "name": "getChildIndex",
  "type": "Method",
  "class": "org.apache.royale.effects.ICompoundEffect",
  "description": "Gets the index of this subeffect."},
{ "name": "getChildIndex",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "getChildren",
  "type": "Method",
  "class": "mx.core.Container",
  "description": "Returns an Array of DisplayObject objects consisting of the content children of the container."},
{ "name": "getChildren",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Returns an Array of DisplayObject objects consisting of the content children of the container."},
{ "name": "getChildren",
  "type": "Method",
  "class": "mx.collections.IHierarchicalData",
  "description": "Returns an Object representing the node's children."},
{ "name": "getChildren",
  "type": "Method",
  "class": "mx.collections.HierarchicalData",
  "description": ""},
{ "name": "getChildren",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor",
  "description": "Provides access to a node's children, returning a collection view of children if they exist."},
{ "name": "getChildren",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Returns a collection of children, if they exist."},
{ "name": "getChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.IHierarchicalData",
  "description": "Returns an Object representing the node's children."},
{ "name": "getChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "getChildren",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Provides access to a node's children."},
{ "name": "getChildren",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "getClass",
  "type": "Method",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "convenience method to access the class definition from this TypeDefinition"},
{ "name": "getClass",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Gets the value of a specified resource as a Class."},
{ "name": "getClass",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getClassByAlias",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "Retrieves a class based on an alias mapping, previously registered with registerClassAlias, or possibly using [RemoteClass(alias='someAlias')] metadata  alias, or null if no alias mapping exists."},
{ "name": "getClassInfo",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Returns information about the class, and properties of the class, for the specified Object."},
{ "name": "getClickable",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getCollection",
  "type": "Method",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": ""},
{ "name": "getColorName",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Returns the numeric RGB color value that corresponds to the specified color string."},
{ "name": "getColorNames",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Converts each element of the colors Array from a color name to a numeric RGB color value."},
{ "name": "getColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the column at the index specified or null if the index is out of range."},
{ "name": "getColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": "Returns the area that a column takes within the container."},
{ "name": "getColumnBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the layout bounds of the specified column."},
{ "name": "getColumnBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getColumnBounds",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Returns the current pixel bounds of the specified column, or null if no such column exists."},
{ "name": "getColumnCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "Get an estimate column count for this row."},
{ "name": "getColumnIndexAt",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the index of the column at the specified coordinates."},
{ "name": "getColumnIndexAt",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getColumnIndexAt",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Returns the column index corresponding to the specified grid coordinates, or -1 if the coordinates are out of bounds."},
{ "name": "getColumnWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the width of the column at the given index."},
{ "name": "getColumnWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getColumnWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getColumnWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Get the width of the column."},
{ "name": "getColumnWidth",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Return the width of the specified column."},
{ "name": "getCommonCharacterFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Gets the character format attributes that are common to all characters in the specified text range or current selection."},
{ "name": "getCommonCharacterFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "getCommonCharacterFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "Gets the character format attributes that are common to all characters in the text range or current selection."},
{ "name": "getCommonContainerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Gets the container format attributes that are common to all containers in the specified text range or current selection."},
{ "name": "getCommonContainerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "getCommonContainerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "Gets the container format attributes that are common to all containers in the element range."},
{ "name": "getCommonParagraphFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Gets the paragraph format attributes that are common to all paragraphs in the specified text range or current selection."},
{ "name": "getCommonParagraphFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "getCommonParagraphFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "Gets the paragraph format attributes that are common to all paragraphs in the element range."},
{ "name": "getComponentDispatcher",
  "type": "Method",
  "class": "mx.controls.listClasses.ListItemRenderer",
  "description": ""},
{ "name": "getComposeHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "getComposeWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "getComposeXCoord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "getComposeYCoord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "getComposedHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "getComposedHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "getComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.utils.FactoryHelper",
  "description": ""},
{ "name": "getCompoundGraphic",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.ITLFFactory",
  "description": ""},
{ "name": "getCompoundGraphic",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.StandardTLFFactory",
  "description": ""},
{ "name": "getComputedFontMetrics",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowLeafElement",
  "description": ""},
{ "name": "getComputedFontMetrics",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowLeafElement",
  "description": "Returns the FontMetrics object for the span."},
{ "name": "getContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.ITLFFactory",
  "description": ""},
{ "name": "getContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.StandardTLFFactory",
  "description": ""},
{ "name": "getContent",
  "type": "Method",
  "class": "mx.resources.ResourceBundle",
  "description": "When a properties file is compiled into a resource bundle, the MXML compiler autogenerates a subclass of ResourceBundle."},
{ "name": "getContentBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getContentBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Creates a rectangle that shows where the last call to either the <code>compose()</code> method or the <code>updateContainer()</code> method placed the text."},
{ "name": "getContentBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "The smallest rectangle in which the layed-out content fits."},
{ "name": "getContentBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the area that the text occupies, as reflected by the last compose or update operation."},
{ "name": "getContentHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the total layout height of the content including gaps."},
{ "name": "getContentHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getContentWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the total layout width of the content including gaps."},
{ "name": "getContentWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getContents",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextClipboard",
  "description": "Gets any text on the system clipboard as a TextScrap object."},
{ "name": "getController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerUtil",
  "description": ""},
{ "name": "getControllerAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Returns the ContainerController object at the specified index."},
{ "name": "getControllerAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#getControllerAt()"},
{ "name": "getControllerIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Returns the index of the specified ContainerController object."},
{ "name": "getControllerIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#getControllerIndex()"},
{ "name": "getCurrentPosition",
  "type": "Method",
  "class": "org.apache.royale.cordova.geolocation.Geolocation",
  "description": "Gets the device current location."},
{ "name": "getCurrentRendererState",
  "type": "Method",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "Returns the name of the state to be applied to the renderer."},
{ "name": "getCurrentSkinState",
  "type": "Method",
  "class": "spark.components.supportClasses.SkinnableComponent",
  "description": ""},
{ "name": "getCurrentSkinState",
  "type": "Method",
  "class": "spark.components.supportClasses.SkinnableContainerBase",
  "description": ""},
{ "name": "getCursor",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getCursor",
  "type": "Method",
  "class": "org.apache.royale.css2.Cursors",
  "description": "The name of the cursor"},
{ "name": "getData",
  "type": "Method",
  "class": "org.apache.royale.reflection.ExtraData",
  "description": "this is non-reflectable"},
{ "name": "getData",
  "type": "Method",
  "class": "mx.collections.IHierarchicalData",
  "description": "Returns data from a node."},
{ "name": "getData",
  "type": "Method",
  "class": "mx.collections.HierarchicalData",
  "description": ""},
{ "name": "getData",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor",
  "description": "Gets the data from a node."},
{ "name": "getData",
  "type": "Method",
  "class": "org.apache.royale.collections.IHierarchicalData",
  "description": "Returns data from a node."},
{ "name": "getData",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "getData",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Returns a node's data."},
{ "name": "getData",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.Clipboard",
  "description": ""},
{ "name": "getDataView",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "getDateFromString",
  "type": "Method",
  "class": "org.apache.royale.core.IDateFormatter",
  "description": ""},
{ "name": "getDateFromString",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.SimpleDateFormatter",
  "description": "Returns a Date created from a date string"},
{ "name": "getDefaultTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The static getDefinition method is the primary access to TypeDefinitions."},
{ "name": "getDefinitionByName",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "The equivalent of flash."},
{ "name": "getDepth",
  "type": "Method",
  "class": "org.apache.royale.collections.ITreeData",
  "description": ""},
{ "name": "getDepth",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "getDepth",
  "type": "Method",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": "Returns the depth of the node with the root being zero."},
{ "name": "getDepth",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "getDepth",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": ""},
{ "name": "getDetails",
  "type": "Method",
  "class": "google.maps.places.PlacesService",
  "description": ""},
{ "name": "getDirectChannelSet",
  "type": "Method",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": ""},
{ "name": "getDisabledRange",
  "type": "Method",
  "class": "mx.charts.chartClasses.DateRangeUtilities",
  "description": "Returns sum of milliseconds disabled in a given range and milliseconds disabled before that range."},
{ "name": "getDiv",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getDocument",
  "type": "Method",
  "class": "mx.rpc.remoting.mxml.RemoteObject",
  "description": ""},
{ "name": "getDraggable",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getDraggable",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "getDropIndicator",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SingleSelectionDropIndicatorBead",
  "description": "This function returns a UIBase component that is used to indicate where a drop action will occur or be accepted."},
{ "name": "getDynamicFields",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "A utility method to check if an object is dynamic (i."},
{ "name": "getEditable",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "getEffectiveBorderBottomWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectiveBorderLeftWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectiveBorderRightWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectiveBorderTopWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectiveDominantBaseline",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getEffectiveFontSize",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowLeafElement",
  "description": ""},
{ "name": "getEffectiveFontSize",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowLeafElement",
  "description": "Returns the fontSize from this element's properties."},
{ "name": "getEffectiveJustificationRule",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getEffectiveLeadingModel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getEffectiveLineHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowLeafElement",
  "description": ""},
{ "name": "getEffectiveMarginBottom",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectiveMarginLeft",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectiveMarginRight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectiveMarginTop",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectivePaddingBottom",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectivePaddingLeft",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectivePaddingRight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEffectivePaddingTop",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getElasticIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable elastic ease."},
{ "name": "getElasticInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable elastic ease."},
{ "name": "getElasticOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable elastic ease."},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.IParent",
  "description": "Get a component from the parent."},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutView",
  "description": "Returns the element child at the given index."},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "Get a component from the parent."},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "Get a component from the parent."},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.createjs.Application",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.utils.MockParent",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.mdl.Table",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "Get a component from the parent."},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "getElementAt",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "getElementAtCharIndex",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "getElementBounds",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Fills in the <code>elementBounds</code>, <code>bounds</code>, and <code>visibleBounds</code> properties of a renderData structure that is generated by this series."},
{ "name": "getElementBounds",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the specified element's layout bounds as a Rectangle or null if the index is invalid, the corresponding element is null, <code>includeInLayout=false</code>, or if this layout's <code>target</code> property is null."},
{ "name": "getElementBounds",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "getElementBounds",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "getElementBounds",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "getElementBoundsAboveScrollRect",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the bounds of the first layout element that either spans or is above the scrollRect's top edge."},
{ "name": "getElementBoundsBelowScrollRect",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the bounds of the first layout element that either spans or is below the scrollRect's bottom edge."},
{ "name": "getElementBoundsLeftOfScrollRect",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the bounds of the first layout element that either spans or is to the left of the scrollRect's left edge."},
{ "name": "getElementBoundsRightOfScrollRect",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the bounds of the first layout element that either spans or is to the right of the scrollRect's right edge."},
{ "name": "getElementByID",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "Returns an element whose <code>id</code> property matches the <code>idName</code> parameter."},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.core.IParent",
  "description": "Gets the index of this subcomponent."},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "Gets the index of this subcomponent."},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "Gets the index of this subcomponent."},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.createjs.Application",
  "description": ""},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.utils.MockParent",
  "description": ""},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "Gets the index of this subcomponent."},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "getElementIndex",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "getElementRelativeStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getElementRelativeStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the start of this element relative to an ancestor element."},
{ "name": "getElementRelativeStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "getElementsByStyleName",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "Returns all elements that have <code>styleName</code> set to <code>styleNameValue</code>."},
{ "name": "getElementsByTypeName",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "getElementsByTypeName",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "Returns all elements that have <code>typeName</code> set to <code>typeNameValue</code>."},
{ "name": "getEllipseBoundingBox",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Calculates the bounding box of a post-transformed ellipse."},
{ "name": "getEntry",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "getEnumerableProperties",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Returns all the properties defined dynamically on an object."},
{ "name": "getEventMirror",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getEvents",
  "type": "Method",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Returns all binding events for a bindable property in the host object."},
{ "name": "getExplicitOrMeasuredHeight",
  "type": "Method",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "getExplicitOrMeasuredHeight",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "A convenience method for determining whether to use the explicit or measured height  or measuredHeight if not."},
{ "name": "getExplicitOrMeasuredHeight",
  "type": "Method",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "getExplicitOrMeasuredWidth",
  "type": "Method",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "getExplicitOrMeasuredWidth",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "A convenience method for determining whether to use the explicit or measured width  or measuredWidth if not."},
{ "name": "getExplicitOrMeasuredWidth",
  "type": "Method",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "getExplicitStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "getExporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Creates and returns an export converter, which you can then use to export from a TextFlow to a source string or XML object."},
{ "name": "getFirstBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getFirstBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Gets the first TextFlowTableBlock in the table."},
{ "name": "getFirstFullyVisibleRowIndex",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "Return the Grid-relative index of the first fully visible row: if the first rowIndex element of visibleRowIndices hasn't been completely scrolled into view, then return the second element."},
{ "name": "getFirstIndentCharPos",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "getFirstItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Gets the first item in the chart, with respect to the axes."},
{ "name": "getFirstItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getFirstItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": ""},
{ "name": "getFirstLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "getFirstLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Returns the first FlowLeafElement descendant of this group."},
{ "name": "getFirstLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "getFirstTextLineChildIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Gets the index at which the first text line must appear in its parent."},
{ "name": "getFirstTextLineChildIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "getFlat",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getFloatAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getFloatAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getFocus",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getFocus",
  "type": "Method",
  "class": "mx.managers.IFocusManager",
  "description": ""},
{ "name": "getFocus",
  "type": "Method",
  "class": "mx.managers.FocusManager",
  "description": ""},
{ "name": "getFocusedSelectionFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the focusedSelectionFormat - by default get it from the configuration."},
{ "name": "getFont",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFontLoader",
  "description": ""},
{ "name": "getFontFamily",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFontLoader",
  "description": ""},
{ "name": "getFontLoader",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextFactory",
  "description": ""},
{ "name": "getFontLoader",
  "type": "Method",
  "class": "org.apache.royale.text.html.HTMLTextFactory",
  "description": ""},
{ "name": "getFontMetrics",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "getFooterHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getFooterHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Computed height of the footer cells"},
{ "name": "getFooterRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getFooterRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "returns the footer rows for composition"},
{ "name": "getFormatAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Returns the format name for the index'th format."},
{ "name": "getFormatDescriptorAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Returns the FormatDescriptor for the index'th format."},
{ "name": "getFormatValue",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter",
  "description": ""},
{ "name": "getFormattedHour",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.DateAndTimeFormatter",
  "description": ""},
{ "name": "getFormattedResult",
  "type": "Method",
  "class": "org.apache.royale.html.accessories.DateAndTimeFormatter",
  "description": ""},
{ "name": "getFullPath",
  "type": "Method",
  "class": "org.apache.royale.utils.URLUtils",
  "description": ""},
{ "name": "getFullURL",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Converts a potentially relative URL to a fully-qualified URL."},
{ "name": "getGroupName",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Returns the name of the radio button group to which the node belongs, if any."},
{ "name": "getHeaderHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getHeaderHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Computed height of the header cells"},
{ "name": "getHeaderRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getHeaderRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "returns the header rows for composition"},
{ "name": "getHeaders",
  "type": "Method",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Returns the HTTP request headers."},
{ "name": "getHeading",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getHierarchicalCollectionAdaptor",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor2",
  "description": "Returns an ICollectionView instance that makes the hierarchical data appear as if it was a linear ICollectionView instance."},
{ "name": "getHierarchicalCollectionAdaptor",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": ""},
{ "name": "getHighlightBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.GeometryUtil",
  "description": "Returns an array of line/rectangle object pairs describing the highlight area of the text based on the content bounded within the indicies."},
{ "name": "getHorizontalScrollPositionDelta",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the change to the horizontal scroll position to handle different scrolling options."},
{ "name": "getHost",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DateFieldView",
  "description": ""},
{ "name": "getHost",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.DateFieldView",
  "description": ""},
{ "name": "getHost",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.PopUpView",
  "description": ""},
{ "name": "getID",
  "type": "Method",
  "class": "mx.rpc.remoting.mxml.RemoteObject",
  "description": ""},
{ "name": "getIcon",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getImmutableClone",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": ""},
{ "name": "getImplementation",
  "type": "Method",
  "class": "mx.core.IFlexModuleFactory",
  "description": "Get the implementation for an interface."},
{ "name": "getImporter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Creates and returns an import converter, which you can then use to import from a source string, an XML object, or any user defined data formats to a TextFlow."},
{ "name": "getInactiveSelectionFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the inactiveSelectionFormat - by default get it from the configuration This can be overridden in the subclass to supply a different SelectionFormat"},
{ "name": "getInline",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getInstance",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.RoyaleClient",
  "description": "Returns the sole instance of this singleton class, creating it if it does not already exist."},
{ "name": "getInstance",
  "type": "Method",
  "class": "mx.messaging.RoyaleClient",
  "description": "Returns the sole instance of this singleton class, creating it if it does not already exist."},
{ "name": "getInstance",
  "type": "Method",
  "class": "mx.utils.XMLNotifier",
  "description": "Get the singleton instance of the XMLNotifier."},
{ "name": "getInstance",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": "Gets the single instance of the ResourceManagerImpl class."},
{ "name": "getInstance",
  "type": "Method",
  "class": "mx.managers.BrowserManager",
  "description": "Returns the sole instance of this Singleton class; creates it if it does not already exist."},
{ "name": "getInstance",
  "type": "Method",
  "class": "mx.resources.ResourceManager",
  "description": "Gets the single instance of the ResourceManager class."},
{ "name": "getInstance",
  "type": "Method",
  "class": "org.apache.royale.core.IValuesImpl",
  "description": "Returns a shared instance, instantiating the shared instance if it doesn't exist."},
{ "name": "getInstance",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "getInstance",
  "type": "Method",
  "class": "mx.messaging.ConsumerMessageDispatcher",
  "description": "Returns the sole instance of this singleton class, creating it if it does not already exist."},
{ "name": "getInstance",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "getInt",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Gets the value of a specified resource as an int."},
{ "name": "getInt",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getItem",
  "type": "Method",
  "class": "org.apache.royale.storage.LocalStorage",
  "description": "Returns the value associated with the key, or undefined if there is no value stored."},
{ "name": "getItem",
  "type": "Method",
  "class": "org.apache.royale.storage.IWebStorage",
  "description": "Returns the value of a key, if present."},
{ "name": "getItem",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.LocalStorageProvider",
  "description": "Returns the value associated with the key, or undefined if there is no value stored."},
{ "name": "getItemAt",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Gets the item at the specified index."},
{ "name": "getItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.IStringCollection",
  "description": "Get the string at a particular index."},
{ "name": "getItemAt",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Get the item at the specified index."},
{ "name": "getItemAt",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "getItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollection",
  "description": "Get the item at a particular index."},
{ "name": "getItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Fetches an item from the collection"},
{ "name": "getItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Fetches an item from the collection"},
{ "name": "getItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "getItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "Fetches an item from the collection at a given index"},
{ "name": "getItemAt",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "getItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": "Fetches an item from the collection, converting it first if necessary."},
{ "name": "getItemAt",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Get the item at the specified index."},
{ "name": "getItemByField",
  "type": "Method",
  "class": "org.apache.royale.collections.CollectionUtils",
  "description": "Get a item in a given collection given a key and a value"},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Returns the index of the item if it is in the list such that getItemAt(index) == item."},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Return the index of the item if it is in the list such that getItemAt(index) == item."},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Fetches an item from the collection given an index."},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Fetches an item from the collection given an index."},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "mx.utils.ArrayUtil",
  "description": "Returns the index of the item in the Array."},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "getItemIndex",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Return the index of the item if it is in the list such that getItemAt(index) == item."},
{ "name": "getItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.core.IItemRendererParent",
  "description": ""},
{ "name": "getItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TBodyContentArea",
  "description": ""},
{ "name": "getItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": ""},
{ "name": "getItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": ""},
{ "name": "getItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "getItemRendererAt",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "getItemRendererAt",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartDataGroup",
  "description": ""},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.core.IItemRendererParent",
  "description": ""},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TBodyContentArea",
  "description": ""},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": ""},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": ""},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.core.IDataProviderVirtualItemRendererMapper",
  "description": ""},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForIListData",
  "description": "Get an item renderer for a given index."},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartDataGroup",
  "description": ""},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": "Get an item renderer for a given index."},
{ "name": "getItemRendererForIndex",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualDataItemRendererFactoryForICollectionViewData",
  "description": "Get an item renderer for a given index."},
{ "name": "getItemRendererForSeriesAtIndex",
  "type": "Method",
  "class": "org.apache.royale.charts.core.IChartDataGroup",
  "description": "Returns the itemRenderer that matches both the series and child index value."},
{ "name": "getItemRendererForSeriesAtIndex",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": "Returns the itemRenderer that matches both the series and child index."},
{ "name": "getItemRendererForSeriesAtIndex",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartDataGroup",
  "description": "Returns the itemRenderer that matches both the series and child index."},
{ "name": "getItemRendererUnderPoint",
  "type": "Method",
  "class": "org.apache.royale.charts.core.IChartDataGroup",
  "description": "Returns the first itemRenderer that encompasses the point."},
{ "name": "getItemRendererUnderPoint",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": ""},
{ "name": "getItemRendererUnderPoint",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartDataGroup",
  "description": "Returns the first itemRenderer that encompasses the point."},
{ "name": "getItemsInRegion",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Gets all the items that are in a rectangular region for the series."},
{ "name": "getItemsInRegion",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Gets all the chart items that are within the defined rectangular region."},
{ "name": "getItemsInRegion",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "getJustifierForLocale",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextJustifier",
  "description": ""},
{ "name": "getLabelEstimate",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Determines the range to estimate what the axis labels should be."},
{ "name": "getLabelEstimate",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "getLabelEstimate",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "getLabelForIndex",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.RangeModelExtended",
  "description": "Returns the label, using the labelFunction (if provided) for the value at the given index."},
{ "name": "getLabelFromData",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.util",
  "description": "Utility function to get a label string from a value object"},
{ "name": "getLabelFromData",
  "type": "Method",
  "class": "org.apache.royale.html.util",
  "description": "Utility function to get a label string from a value object"},
{ "name": "getLabels",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Gets the labels text that is rendered."},
{ "name": "getLabels",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "getLabels",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "getLastFullyVisibleRowIndex",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "Return the Grid-relative index of the last fully visible row: if the last rowIndex element of visibleRowIndices hasn't been completely scrolled into view, then return the second to last element."},
{ "name": "getLastItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Gets the last chart item in the chart, with respect to the axes."},
{ "name": "getLastItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getLastItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": ""},
{ "name": "getLastLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "getLastLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Returns the last FlowLeafElement descendent of this group."},
{ "name": "getLastLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "getLastVisibleLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getLayoutBoundsHeight",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the element's layout height."},
{ "name": "getLayoutBoundsHeight",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getLayoutBoundsHeight",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getLayoutBoundsWidth",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the element's layout width."},
{ "name": "getLayoutBoundsWidth",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getLayoutBoundsWidth",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getLayoutBoundsX",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the x coordinate that the element uses to draw on screen."},
{ "name": "getLayoutBoundsX",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getLayoutBoundsX",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getLayoutBoundsY",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the y coordinate that the element uses to draw on screen."},
{ "name": "getLayoutBoundsY",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getLayoutBoundsY",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getLayoutChildAt",
  "type": "Method",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "getLayoutChildAt",
  "type": "Method",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "getLayoutChildAt",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutParent",
  "description": ""},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "org.apache.royale.core.GroupBase",
  "description": "Returns the ILayoutHost which is its view."},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.MXMLItemRenderer",
  "description": ""},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "mx.controls.listClasses.ListBase",
  "description": "Returns the ILayoutHost which is its view."},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "spark.components.supportClasses.GroupBase",
  "description": "Returns the ILayoutHost which is its view."},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "mx.core.Container",
  "description": "Returns the ILayoutHost which is its view."},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": "Returns the ILayoutHost which is its view."},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "mx.controls.ToggleButtonBar",
  "description": "Returns the ILayoutHost which is its view."},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "mx.controls.MenuBar",
  "description": ""},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "mx.controls.DateChooser",
  "description": "Returns the ILayoutHost which is its view."},
{ "name": "getLayoutHost",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "getLeftMostRenderer",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getLeftValue",
  "type": "Method",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "Computes paddingLeft or marginLeft."},
{ "name": "getLength",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "getLevelString",
  "type": "Method",
  "class": "mx.logging.LogEvent",
  "description": "Returns a string value representing the level specified."},
{ "name": "getLineAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": ""},
{ "name": "getLineAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Returns the line with the specified line number."},
{ "name": "getLineAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Return the ITextLine at the index from array of composed lines."},
{ "name": "getLineForReuse",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextLineRecycler",
  "description": "Return a ITextLine from the pool for reuse."},
{ "name": "getLineLeading",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "getLineSlug",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": "Return the slug rectangle for a line that goes at the current vertical location, and could extend down for at least height pixels."},
{ "name": "getLineSlug",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "getLineTypographicAscent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "getLink",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getLinks",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "getList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getListItem",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getListItemNumber",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IListItemElement",
  "description": ""},
{ "name": "getLocal",
  "type": "Method",
  "class": "mx.net.SharedObject",
  "description": ""},
{ "name": "getLocalItemIndex",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "getLocalItemIndex",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "getLocalName",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "getLocale",
  "type": "Method",
  "class": "org.apache.royale.utils.LocaleUtils",
  "description": "Gets the locale of the operating system."},
{ "name": "getLocales",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Returns an Array of Strings specifying all locales for which ResourceBundle objects exist in the ResourceManager."},
{ "name": "getLocales",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getLogger",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "Returns the logger associated with the specified category."},
{ "name": "getMajorSize",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Return the size of the item at index."},
{ "name": "getMap",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getMap",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "getMapTypeId",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getMargins",
  "type": "Method",
  "class": "org.apache.royale.core.IBorderPaddingMarginValuesImpl",
  "description": "Return a MarginData that contains the margins for the object."},
{ "name": "getMargins",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "Returns a MarginData for the given child."},
{ "name": "getMaxBoundsHeight",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the element's maximum height."},
{ "name": "getMaxBoundsHeight",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getMaxBoundsHeight",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getMaxBoundsWidth",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the element's maximum width."},
{ "name": "getMaxBoundsWidth",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getMaxBoundsWidth",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getMdlContainerParent",
  "type": "Method",
  "class": "org.apache.royale.mdl.utils",
  "description": "To some MDL components after upgrading process MDL framework adding additional container which is not part of Royale."},
{ "name": "getMdlElementColor",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.MdlColor",
  "description": "get mdl element color"},
{ "name": "getMdlElementTextColor",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.MdlTextColor",
  "description": "get mdl element text color"},
{ "name": "getMembersWithMetadata",
  "type": "Method",
  "class": "org.apache.royale.reflection.utils",
  "description": "A utility method to retrieve all members with a single metadata tag name (String) or one of various tag names (an Array of Strings) It will return variables, accessors or methods that have the specified metadata (assuming it is included in the build)"},
{ "name": "getMembersWithNameMatch",
  "type": "Method",
  "class": "org.apache.royale.reflection.utils",
  "description": "A utility method to retrieve all members with a name that matches via the matcher argument"},
{ "name": "getMenuDataProvider",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": ""},
{ "name": "getMenuDataProvider",
  "type": "Method",
  "class": "mx.controls.beads.controllers.MenuBarMouseController",
  "description": ""},
{ "name": "getMergedStyleDeclaration",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Gets a CSSStyleDeclaration object that stores the rules for the specified CSS selector."},
{ "name": "getMessageResponder",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Returns the appropriate MessageResponder for the Channel's <code>send()</code> method."},
{ "name": "getMessageResponder",
  "type": "Method",
  "class": "mx.messaging.channels.DirectHTTPChannel",
  "description": "Returns the appropriate MessageResponder for the Channel."},
{ "name": "getMinBoundsHeight",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the element's minimum height."},
{ "name": "getMinBoundsHeight",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getMinBoundsHeight",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getMinBoundsWidth",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the element's minimum width."},
{ "name": "getMinBoundsWidth",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getMinBoundsWidth",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getMissingInterpolationValues",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Fills in missing values in an interpolation structure."},
{ "name": "getMissingInterpolationValues",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "getMissingInterpolationValues",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "getMissingInterpolationValues",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "getModule",
  "type": "Method",
  "class": "mx.modules.ModuleManager",
  "description": "Get the IModuleInfo interface associated with a particular URL."},
{ "name": "getNamespace",
  "type": "Method",
  "class": "QName",
  "description": ""},
{ "name": "getNavigationDestinationIndex",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Delegation method that determines which item to navigate to based on the current item in focus and user input in terms of NavigationUnit."},
{ "name": "getNewComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.utils.StandardHelper",
  "description": ""},
{ "name": "getNextBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getNextBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Gets the next TextFlowTableBlock."},
{ "name": "getNextCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getNextCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the next table cell after the supplied table cell"},
{ "name": "getNextCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "getNextCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "Returns the next cell in the table or null if not part of a table or no cells exist after this cell."},
{ "name": "getNextFocusManagerComponent",
  "type": "Method",
  "class": "mx.managers.IFocusManager",
  "description": ""},
{ "name": "getNextFocusManagerComponent",
  "type": "Method",
  "class": "mx.managers.FocusManager",
  "description": ""},
{ "name": "getNextItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Gets the chart item next to the currently focused item in the chart, with respect to the axes."},
{ "name": "getNextItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getNextItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": ""},
{ "name": "getNextLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowLeafElement",
  "description": ""},
{ "name": "getNextLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowLeafElement",
  "description": "Returns the next FlowLeafElement object."},
{ "name": "getNextLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "getNextLeafHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "getNextParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getNextParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "Returns the paragraph that follows this one, or null if there are no more paragraphs."},
{ "name": "getNextRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getNextRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "returns a vector of table cells in the next row during composition"},
{ "name": "getNextSibling",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getNextSibling",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the next FlowElement sibling in the text flow hierarchy."},
{ "name": "getNextTruncationPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "Gets the next truncation position by shedding an atom's worth of characters."},
{ "name": "getNextVisibleColumnIndex",
  "type": "Method",
  "class": "spark.components.gridClasses.GridView",
  "description": "Returns the view-relative index of the next GridColumn."},
{ "name": "getNodeDepth",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor2",
  "description": "Returns the depth of the node, meaning the number of ancestors it has."},
{ "name": "getNodeDepth",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Returns the depth of the node in the collection."},
{ "name": "getNodeDepth",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": ""},
{ "name": "getNodeDepth",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "getNorthEast",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "getNumber",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Gets the value of a specified resource as a Number."},
{ "name": "getNumber",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getNumberFactory",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NumberFactoryUtil",
  "description": ""},
{ "name": "getOS",
  "type": "Method",
  "class": "org.apache.royale.utils.OSUtils",
  "description": "Gets the name of the operating system."},
{ "name": "getOSVersion",
  "type": "Method",
  "class": "org.apache.royale.utils.OSUtils",
  "description": "Gets the version of the operating system."},
{ "name": "getObject",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Gets the value of a specified resource as an Object."},
{ "name": "getObject",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getOperation",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": "Returns an Operation of the given name."},
{ "name": "getOperation",
  "type": "Method",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "Returns an Operation of the given name."},
{ "name": "getOperation",
  "type": "Method",
  "class": "mx.rpc.remoting.mxml.RemoteObject",
  "description": "Returns an Operation of the given name."},
{ "name": "getOperationAsString",
  "type": "Method",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Provides a description of the operation specified."},
{ "name": "getPadRowBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Return the dimensions of a row that's being used to \"pad\" the grid by filling unused space below the last row in a layout where all rows are visible."},
{ "name": "getPadRowBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getPaddingMetrics",
  "type": "Method",
  "class": "org.apache.royale.core.IBorderPaddingMarginValuesImpl",
  "description": "Return a rectangle that contains the width of the padding sides."},
{ "name": "getPaddingMetrics",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "Compute the width/thickness of the four padding sides."},
{ "name": "getPano",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "getParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": ""},
{ "name": "getParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "getParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.utils.ParagraphHelper",
  "description": ""},
{ "name": "getParcelAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "getParent",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor2",
  "description": "Returns the parent of the node The parent of a top-level node is <code>null</code>."},
{ "name": "getParent",
  "type": "Method",
  "class": "mx.collections.GroupingCollection",
  "description": "Returns the parent of a node."},
{ "name": "getParent",
  "type": "Method",
  "class": "mx.collections.GroupingCollection2",
  "description": "Returns the parent of a node."},
{ "name": "getParent",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": ""},
{ "name": "getParentByType",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getParentCellElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getParentCellElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": ""},
{ "name": "getParentItem",
  "type": "Method",
  "class": "mx.controls.Tree",
  "description": "Returns the known parent of a child item."},
{ "name": "getParentItem",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Returns the parent of a node."},
{ "name": "getParentItem",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": "Returns the parent of a node."},
{ "name": "getParentItem",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": "Returns the parent of a node."},
{ "name": "getParentOrSelfByType",
  "type": "Method",
  "class": "org.apache.royale.utils",
  "description": "Traverses the display list up until it finds an object of the given type."},
{ "name": "getPath",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "getPathString",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Gets a string representation of the path which can be used in SVG."},
{ "name": "getPaths",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "getPhotoFromLibrary",
  "type": "Method",
  "class": "org.apache.royale.cordova.Camera",
  "description": ""},
{ "name": "getPhotographerPov",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "getPort",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Returns the port number from the specified URL."},
{ "name": "getPosition",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getPosition",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "getPositions",
  "type": "Method",
  "class": "org.apache.royale.core.IBorderPaddingMarginValuesImpl",
  "description": "Return a LayoutData that contains the margins, border and padding for the object."},
{ "name": "getPositions",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "Returns an object containing the child's positioning values."},
{ "name": "getPov",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "getPowIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable exponential ease."},
{ "name": "getPowInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable exponential ease."},
{ "name": "getPowOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": "Configurable exponential ease."},
{ "name": "getPreferredBoundsHeight",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the element's preferred height."},
{ "name": "getPreferredBoundsHeight",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getPreferredBoundsHeight",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getPreferredBoundsWidth",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Returns the element's preferred width."},
{ "name": "getPreferredBoundsWidth",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "getPreferredBoundsWidth",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "getPreferredLocaleChain",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Returns an Array of Strings specifying all locales for which ResourceBundle objects exist in the ResourceManager, ordered using  user preferences as reported by <code>Capabilities."},
{ "name": "getPreferredLocaleChain",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getPreviousCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getPreviousCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the previous table cell after the supplied table cell"},
{ "name": "getPreviousCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "getPreviousCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "Returns the previous cell in the table or null if not part of a table or no cells exist before this cell."},
{ "name": "getPreviousItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Gets the chart item that is before the currently focused item in the chart, with respect to the axes."},
{ "name": "getPreviousItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getPreviousItem",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": ""},
{ "name": "getPreviousLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowLeafElement",
  "description": ""},
{ "name": "getPreviousLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowLeafElement",
  "description": "Returns the previous FlowLeafElement object."},
{ "name": "getPreviousLeaf",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "getPreviousLeafHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "getPreviousParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getPreviousParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "Returns the paragraph that precedes this one, or null, if this paragraph is the first one in the ITextFlow."},
{ "name": "getPreviousSibling",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getPreviousSibling",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the previous FlowElement sibling in the text flow hierarchy."},
{ "name": "getPreviousVisibleColumnIndex",
  "type": "Method",
  "class": "spark.components.gridClasses.GridView",
  "description": "Returns the view-relative index of the previous GridColumn."},
{ "name": "getPrivateData",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowValueHolder",
  "description": ""},
{ "name": "getPrivateStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getProjection",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getProperties",
  "type": "Method",
  "class": "mx.messaging.config.ServerConfig",
  "description": "Returns the property information for the specified destination"},
{ "name": "getProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.Proxy",
  "description": ""},
{ "name": "getProperty",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "getProperty",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "getProperty",
  "type": "Method",
  "class": "org.apache.royale.collections.converters.JSONItemConverter",
  "description": "Get a property from an object."},
{ "name": "getProtocol",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Returns the protocol section of the specified URL."},
{ "name": "getQBezierSegmentBBox",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "the segment bounding box."},
{ "name": "getQualifiedClassName",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "The equivalent of flash."},
{ "name": "getQualifiedSuperclassName",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "The equivalent of flash."},
{ "name": "getRadioButtonAt",
  "type": "Method",
  "class": "mx.controls.RadioButtonGroup",
  "description": "Returns the RadioButton control at the specified index."},
{ "name": "getRadioButtonAt",
  "type": "Method",
  "class": "spark.components.RadioButtonGroup",
  "description": "Returns the RadioButton component at the specified index."},
{ "name": "getRect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.ITLFFactory",
  "description": ""},
{ "name": "getRect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.StandardTLFFactory",
  "description": ""},
{ "name": "getRelativeStart",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "getRelativeStart",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "getRenderDataForTransition",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Captures the before and after states of the series for animation."},
{ "name": "getRequestContentType",
  "type": "Method",
  "class": "mx.rpc.http.SerializationFilter",
  "description": "This method is called by the HTTP service just before a call is made."},
{ "name": "getResolverForNewFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFormatResolver",
  "description": "Returns the format resolver when a ITextFlow is copied."},
{ "name": "getResourceBundle",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Returns a ResourceBundle with the specified <code>locale</code> and <code>bundleName</code> that has been previously added to the ResourceManager with <code>addResourceBundle()</code>."},
{ "name": "getResourceBundle",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getRightMostRenderer",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getRightValue",
  "type": "Method",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "Computes paddingRight or marginRight."},
{ "name": "getRomanSelectionHeightAndVerticalAdjustment",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "getRoot",
  "type": "Method",
  "class": "mx.collections.IHierarchicalData",
  "description": "Returns the root data item."},
{ "name": "getRoot",
  "type": "Method",
  "class": "mx.collections.HierarchicalData",
  "description": ""},
{ "name": "getRoot",
  "type": "Method",
  "class": "mx.collections.GroupingCollection",
  "description": "Return <code>super."},
{ "name": "getRoot",
  "type": "Method",
  "class": "org.apache.royale.collections.IHierarchicalData",
  "description": "Returns the root data item."},
{ "name": "getRoot",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "getRoot",
  "type": "Method",
  "class": "mx.collections.GroupingCollection2",
  "description": "Return <code>super."},
{ "name": "getRootMenu",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": "From any menu, walks up the parent menu chain and finds the root menu."},
{ "name": "getRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "getRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "Return the row that this cell is part of or null if not part of a row."},
{ "name": "getRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the row at the index specified or null if the index is out of range."},
{ "name": "getRowBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the layout bounds of the specified row."},
{ "name": "getRowBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getRowBounds",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Returns the current pixel bounds of the specified row, or null if no such row exists."},
{ "name": "getRowHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the height of the row at the given index."},
{ "name": "getRowHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getRowHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "getRowIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getRowIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Return the index of the row provided or -1 if the row is not found."},
{ "name": "getRowIndexAt",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the index of the row at the specified coordinates."},
{ "name": "getRowIndexAt",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getRowIndexAt",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Returns the row index corresponding to the specified grid coordinates, or -1 if the coordinates are out of bounds."},
{ "name": "getSandboxRoot",
  "type": "Method",
  "class": "mx.managers.ISystemManager",
  "description": "Gets the system manager that is the root of all top level system managers in this SecurityDomain."},
{ "name": "getSandboxRoot",
  "type": "Method",
  "class": "mx.managers.SystemManager",
  "description": "Go up the parent chain to get the top level system manager in this SecurityDomain."},
{ "name": "getScaledMetrics",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": "Returns a new FontMetrics object with values scaled to the specified fontSize in points/pixels."},
{ "name": "getScreenBoundingRect",
  "type": "Method",
  "class": "org.apache.royale.utils.DisplayUtils",
  "description": "Gets the bounding box of an object relative to the screen ignoring any scrolling."},
{ "name": "getScrollDelta",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": ""},
{ "name": "getScrollDelta",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Figure out the scroll distance required to scroll up or down by the specified number of lines."},
{ "name": "getScrollPositionDeltaToElement",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Computes the <code>verticalScrollPosition</code> and <code>horizontalScrollPosition</code> deltas needed to scroll the element at the specified index into view."},
{ "name": "getScrollRect",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the bounds of the target's scroll rectangle in layout coordinates."},
{ "name": "getSegments",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.PathHelper",
  "description": ""},
{ "name": "getSelectionState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Gets the SelectionState object of the current selection."},
{ "name": "getSelectionState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "getSerializationFilter",
  "type": "Method",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Returns the serialization filter."},
{ "name": "getSeriesLabelPos",
  "type": "Method",
  "class": "mx.charts.ColumnChart",
  "description": ""},
{ "name": "getSeriesLabelPos",
  "type": "Method",
  "class": "mx.charts.BarChart",
  "description": ""},
{ "name": "getSeriesLabelPosSet",
  "type": "Method",
  "class": "mx.charts.ColumnChart",
  "description": ""},
{ "name": "getSeriesLabelPosSet",
  "type": "Method",
  "class": "mx.charts.BarChart",
  "description": ""},
{ "name": "getSeriesTransformState",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getServerName",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Returns the server name from the specified URL."},
{ "name": "getServerNameWithPort",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Returns the domain and port information from the specified URL."},
{ "name": "getShadow",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getShape",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getShapeRectArray",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "getShapeRectArray",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "getSideValue",
  "type": "Method",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "Computes padding or margin."},
{ "name": "getSmallMessage",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.ISmallMessage",
  "description": "This method must be implemented by subclasses that have a \"small\" form, typically achieved through the use of <code>flash."},
{ "name": "getSmallMessage",
  "type": "Method",
  "class": "mx.messaging.messages.ISmallMessage",
  "description": "This method must be implemented by subclasses that have a \"small\" form, typically achieved through the use of <code>flash."},
{ "name": "getSortFieldValue",
  "type": "Method",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "getSortFieldValue",
  "type": "Method",
  "class": "spark.collections.ComplexSortField",
  "description": ""},
{ "name": "getSortFieldValue",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSortFieldComplex",
  "description": ""},
{ "name": "getSortFieldValue",
  "type": "Method",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "getSortFieldValue",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSortFieldSimple",
  "description": ""},
{ "name": "getSouthWest",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "getSpan",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getSpanText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getSpanTextReplacementXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Gets the xml element used to represent a character in the export format"},
{ "name": "getStackTrace",
  "type": "Method",
  "class": "mx.rpc.Fault",
  "description": ""},
{ "name": "getStandardClass",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.utils.StandardHelper",
  "description": ""},
{ "name": "getStaticConstantsByConvention",
  "type": "Method",
  "class": "org.apache.royale.reflection.utils",
  "description": "A utility method to retrieve public static constants that is only reliable in a cross-target way by using a convention check."},
{ "name": "getStreetView",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getString",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Gets the value of a specified resource as a String, after substituting specified values for placeholders."},
{ "name": "getString",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getStringArray",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Gets the value of a specified resource as an Array of Strings."},
{ "name": "getStringArray",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getStyle",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Gets a style property that has been set anywhere in this component's style lookup chain."},
{ "name": "getStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Return the value of the style specified by the <code>styleProp</code> parameter which specifies the style name."},
{ "name": "getStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": ""},
{ "name": "getStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the value of the style specified by the <code>styleProp</code> parameter, which specifies the style name and can include any user style name."},
{ "name": "getStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Returns the value of the style specified by the <code>styleProp</code> parameter, which specifies the style name."},
{ "name": "getStyle",
  "type": "Method",
  "class": "mx.styles.IStyleClient",
  "description": "Gets a style property that has been set anywhere in this component's style lookup chain."},
{ "name": "getStyle",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "getStyle",
  "type": "Method",
  "class": "mx.styles.CSSStyleDeclaration",
  "description": "Gets the value for a specified style property, as determined solely by this CSSStyleDeclaration."},
{ "name": "getStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.ITabStopFormat",
  "description": "Return the value of the style specified by the <code>styleProp</code> parameter which specifies the style name."},
{ "name": "getStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the value of the style specified by the <code>styleProp</code> parameter."},
{ "name": "getStyle",
  "type": "Method",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "getStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Return the value of the style specified by the <code>styleProp</code> parameter which specifies the style name."},
{ "name": "getStyle",
  "type": "Method",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "getStyle",
  "type": "Method",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "getStyleDeclaration",
  "type": "Method",
  "class": "mx.styles.IStyleManager",
  "description": "Gets the CSSStyleDeclaration object that stores the rules for the specified CSS selector."},
{ "name": "getStyleDeclaration",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Gets the CSSStyleDeclaration object that stores the rules for the specified CSS selector."},
{ "name": "getStyleDeclarations",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Retrieve all style declarations applicable to this subject."},
{ "name": "getStyleManager",
  "type": "Method",
  "class": "mx.styles.StyleManager",
  "description": "Returns the style manager for an object."},
{ "name": "getStyleStr",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "getTCY",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getTabAt",
  "type": "Method",
  "class": "mx.containers.TabNavigator",
  "description": "Returns the tab of the navigator's TabBar control at the specified index."},
{ "name": "getTableBlocksInRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "getTableBlocksInRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a vector of the table blocks in the specified cell range."},
{ "name": "getTableCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getTableCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
  "description": ""},
{ "name": "getTableCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Returns a vector of table cell elements."},
{ "name": "getTableRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getTableWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableBlockContainer",
  "description": ""},
{ "name": "getTargetWrapper",
  "type": "Method",
  "class": "org.apache.royale.events",
  "description": ""},
{ "name": "getTerminator",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "getText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Gets the specified range of text from a flow element."},
{ "name": "getText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": ""},
{ "name": "getText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the current text using a separator between paragraphs."},
{ "name": "getText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "getText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupHelper",
  "description": ""},
{ "name": "getTextBlock",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextFactory",
  "description": ""},
{ "name": "getTextBlock",
  "type": "Method",
  "class": "org.apache.royale.text.html.HTMLTextFactory",
  "description": ""},
{ "name": "getTextBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getTextBlockAbsoluteStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getTextBlockAbsoluteStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "getTextBlockAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getTextBlockStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "getTextBlocks",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "getTextBlocks",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "getTextBounds",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "This callback is used by the IME to query the bounding box of the text being edited with the IME client."},
{ "name": "getTextContainer",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextFactory",
  "description": ""},
{ "name": "getTextContainer",
  "type": "Method",
  "class": "org.apache.royale.text.html.HTMLTextFactory",
  "description": ""},
{ "name": "getTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Climbs the text flow hierarchy to return the root TextFlow object for the element."},
{ "name": "getTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "getTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "The current ITextFlow."},
{ "name": "getTextFlowContent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Creates default text flow from the text value passed in."},
{ "name": "getTextInRange",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "Gets the specified range of text from the component."},
{ "name": "getTextLayoutFormatStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "getTextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "getTextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "Returns the <code>org."},
{ "name": "getTextLineAtCharIndex",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "getTextLineAtCharIndex",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "getTilt",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getTitle",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getTopMostRenderer",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "getTopValue",
  "type": "Method",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "Computes paddingTop or marginTop."},
{ "name": "getTotalPaddingBottom",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getTotalPaddingHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "Adds in the table cell spacing, border stroke height."},
{ "name": "getTotalPaddingLeft",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getTotalPaddingRight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getTotalPaddingTop",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "getTotalPaddingWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "Adds in the table cell spacing, border stroke width."},
{ "name": "getTransormMatrix",
  "type": "Method",
  "class": "org.apache.royale.utils.DisplayUtils",
  "description": "Gets a composition all transform matrices applied to an IUIBase."},
{ "name": "getTxtStyleStr",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": ""},
{ "name": "getType",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Returns the type identifier of a node."},
{ "name": "getTypedArray",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "getTypicalCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Return the preferred bounds height of the grid's typicalItem when rendered with the item renderer for the specified column."},
{ "name": "getTypicalCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getTypicalCellWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Return the preferred bounds width of the grid's typicalItem when rendered with the item renderer for the specified column."},
{ "name": "getTypicalCellWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getTypicalContentHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the content height which is maximum cell height of the typical item times the total number of rows including gaps."},
{ "name": "getTypicalContentHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getTypicalContentWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Returns the sum of the typical cell widths including gaps."},
{ "name": "getTypicalContentWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "getTypographicAscent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "getUID",
  "type": "Method",
  "class": "mx.utils.UIDUtil",
  "description": "Returns the UID (unique identifier) for the specified object."},
{ "name": "getUITextFormat",
  "type": "Method",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "getUTFBytes",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "getUint",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Gets the value of a specified resource as a uint."},
{ "name": "getUint",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "getUndoManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the undo manager to use."},
{ "name": "getUnfocusedSelectionFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns the unfocusedSelectionFormat - by default get it from the configuration You can override this method in the subclass to supply a different SelectionFormat."},
{ "name": "getUserStyleWorker",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "getValue",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ApplicationParametersBead",
  "description": "Returns the value of the specified URL parameter."},
{ "name": "getValue",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Returns the value at the end of the property chain <code>path</code>."},
{ "name": "getValue",
  "type": "Method",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Retrieves the current value of the watched property or property chain, or null if the host object is null."},
{ "name": "getValue",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ApplicationParametersCaseInsensitiveBead",
  "description": "Returns the value of the specified URL parameter."},
{ "name": "getValue",
  "type": "Property",
  "class": "org.apache.royale.reflection.VariableDefinition",
  "description": "provides a function that supports reading the value described by this definition For instance member definitions it requires the instance to be passed as a single argument For static member definitions it requires no arguments"},
{ "name": "getValue",
  "type": "Method",
  "class": "org.apache.royale.core.IValuesImpl",
  "description": "Returns a value for a given object based on a property name, and optionally, the current state, and a set of property value pairs."},
{ "name": "getValue",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "getValue",
  "type": "Property",
  "class": "org.apache.royale.reflection.AccessorDefinition",
  "description": ""},
{ "name": "getValue",
  "type": "Method",
  "class": "org.apache.royale.core.ILocalizedValuesImpl",
  "description": "Returns a value for a given object based on a property name, and optionally, the current state, and a set of property value pairs."},
{ "name": "getValue",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleLocalizedValuesImpl",
  "description": ""},
{ "name": "getValue",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "getValueFromField",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.NestedStringItemRenderer",
  "description": "Takes a labelField (or dataField) path (eg, \"foo."},
{ "name": "getValueFromSource",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Returns the Object to validate."},
{ "name": "getVerticalScrollPositionDelta",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Returns the change to the vertical scroll position to handle different scrolling options."},
{ "name": "getViewIndex",
  "type": "Method",
  "class": "mx.collections.CursorBookmark",
  "description": "Classes that extend CursorBookmark override this method to return the approximate index of the item represented by this bookmark in its view."},
{ "name": "getVirtualElementAt",
  "type": "Method",
  "class": "spark.components.supportClasses.GroupBase",
  "description": "Layouts that honor the <code>useVirtualLayout</code> flag will use this method at updateDisplayList() time to get layout elements that are \"in view\", i."},
{ "name": "getVisible",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getVisible",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "getVisible",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "getVisibleBounds",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "Returns the Grid-relative bounds of the visible part of the target GridView."},
{ "name": "getVisibleColumnIndices",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "getVisibleItemRenderer",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "Return the visible item renderer at the specified GridView row,columnIndex."},
{ "name": "getVisibleRowIndices",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "getZIndex",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "getZoom",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "getZoom",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "getterFunction",
  "type": "Property",
  "class": "org.apache.royale.binding.PropertyWatcher",
  "description": "A function to call to get the value of the property changes if the property is not public."},
{ "name": "globalSWFContext",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.SWFContext",
  "description": ""},
{ "name": "globalToLocal",
  "type": "Method",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "globalToLocal",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "globalToLocal"},
{ "name": "globalToLocal",
  "type": "Method",
  "class": "org.apache.royale.utils.PointUtils",
  "description": "Converts a point from global coordinates to local coordinates"},
{ "name": "globalX",
  "type": "Method",
  "class": "org.apache.royale.events.utils.MouseUtils",
  "description": "Returns the globel X value."},
{ "name": "globalY",
  "type": "Method",
  "class": "org.apache.royale.events.utils.MouseUtils",
  "description": "Returns the global Y value."},
{ "name": "goToNextStep",
  "type": "Event",
  "description": "Indicates that wizard navigates to the next page."},
{ "name": "goToNextStepHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": ""},
{ "name": "goToPreviousStep",
  "type": "Event",
  "description": "Indicates that wizard navigates to the previous page."},
{ "name": "goToPreviousStepHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": ""},
{ "name": "googFireListener",
  "type": "Property",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": "The original fireListener."},
{ "name": "googFireListener",
  "type": "Property",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "gotoParcel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "grad",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "graphic",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "graphic",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GraphicElement",
  "description": ""},
{ "name": "graphic",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "graphic",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "The embedded graphic."},
{ "name": "graphicObjectCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "graphicObjectCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "@private - count of interactive objects"},
{ "name": "graphics",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "green",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "The green component of the drop shadow."},
{ "name": "green",
  "type": "Property",
  "class": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": "The green value."},
{ "name": "grid",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "A reference to the Grid control that displays row and columns."},
{ "name": "grid",
  "type": "Property",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "Convenience property to get the <code>Grid</code> associated with the parent <code>DataGrid</code>."},
{ "name": "grid",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "grid",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "The grid control associated with this object."},
{ "name": "grid",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "The Grid parent of this layout's target."},
{ "name": "grid",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "The Grid associated with this item renderer, typically just the value of <code>column."},
{ "name": "grid",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "Returns the Grid associated with this item renderer."},
{ "name": "grid",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The Grid object associated with this column."},
{ "name": "gridArea",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridAutoColumns",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridAutoFlow",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridAutoRows",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridClick",
  "type": "Event",
  "description": "Dispatched by the <code>grid</code> skin part when the mouse is clicked over a cell."},
{ "name": "gridClick",
  "type": "Event",
  "description": "Dispatched when the mouse is clicked over a cell"},
{ "name": "gridColumn",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridColumnEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridColumnGap",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridColumnStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridDimensions",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "gridDimensions",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "gridDimensionsView",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "gridDoubleClick",
  "type": "Event",
  "description": "Dispatched by the <code>grid</code> skin part when the mouse is double-clicked over a cell."},
{ "name": "gridDoubleClick",
  "type": "Event",
  "description": "Dispatched when the mouse is double-clicked over a cell"},
{ "name": "gridFitType",
  "type": "Property",
  "class": "mx.core.UITextFormat",
  "description": "Defines the grid-fitting setting for the UITextField class."},
{ "name": "gridGap",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridItemEditorSessionCancel",
  "type": "Event",
  "description": "Dispatched after the item editor has been closed without saving its data."},
{ "name": "gridItemEditorSessionSave",
  "type": "Event",
  "description": "Dispatched after the data in item editor has been saved into the data provider and the editor has been closed."},
{ "name": "gridItemEditorSessionStart",
  "type": "Event",
  "description": "Dispatched immediately after an item editor has been opened."},
{ "name": "gridItemEditorSessionStarting",
  "type": "Event",
  "description": "Dispatched when a new item editor session has been requested."},
{ "name": "gridMouseDown",
  "type": "Event",
  "description": "Dispatched by the <code>grid</code> skin part when the mouse button is pressed over a grid cell."},
{ "name": "gridMouseDown",
  "type": "Event",
  "description": "Dispatched when the mouse button is pressed over a Grid cell."},
{ "name": "gridMouseDrag",
  "type": "Event",
  "description": "Dispatched by the <code>grid</code> skin part after a <code>gridMouseDown</code> event if the mouse moves before the button is released."},
{ "name": "gridMouseDrag",
  "type": "Event",
  "description": "Dispatched after a <code>gridMouseDown</code> event if the mouse moves before the button is released."},
{ "name": "gridMouseUp",
  "type": "Event",
  "description": "Dispatched by the <code>grid</code> skin part after a <code>gridMouseDown</code> event when the mouse button is released, even if the mouse is no longer within the grid."},
{ "name": "gridMouseUp",
  "type": "Event",
  "description": "Dispatched when the mouse button is released over a Grid cell."},
{ "name": "gridRollOut",
  "type": "Event",
  "description": "Dispatched by the <code>grid</code> skin part when the mouse leaves a grid cell."},
{ "name": "gridRollOut",
  "type": "Event",
  "description": "Dispatched when the mouse leaves a grid cell."},
{ "name": "gridRollOver",
  "type": "Event",
  "description": "Dispatched by the <code>grid</code> skin part when the mouse enters a grid cell."},
{ "name": "gridRollOver",
  "type": "Event",
  "description": "Dispatched when the mouse enters a grid cell."},
{ "name": "gridRow",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridRowEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridRowGap",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridRowStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridSelection",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "This object becomes the grid's gridSelection property after the grid skin part has been added."},
{ "name": "gridSelection",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If this Grid is serving as a DataGrid skin part, then this property is created by DataGrid/partAdded() and then set here."},
{ "name": "gridTemplate",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridTemplateAreas",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridTemplateColumns",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridTemplateRows",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "gridView",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "Used to initialize this grid's gridViews: centerGridView, leftGridView, topGridView, topLeftGridView."},
{ "name": "gridViewLayout",
  "type": "Property",
  "class": "spark.components.gridClasses.GridView",
  "description": "Return this GridView's GridViewLayout."},
{ "name": "grid_gridMouseWheelHandler",
  "type": "Method",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "Grid MouseWheel event handler."},
{ "name": "group",
  "type": "Property",
  "class": "mx.controls.RadioButton",
  "description": "The RadioButtonGroup object to which this RadioButton belongs."},
{ "name": "group",
  "type": "Property",
  "class": "spark.components.RadioButton",
  "description": "The RadioButtonGroup component to which this RadioButton belongs."},
{ "name": "groupElement",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "groupElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElementBase",
  "description": "@private"},
{ "name": "groupElements",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "groupName",
  "type": "Property",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": ""},
{ "name": "groupName",
  "type": "Property",
  "class": "mx.controls.RadioButton",
  "description": "Specifies the name of the group to which this RadioButton control belongs, or specifies the value of the <code>id</code> property of a RadioButtonGroup control if this RadioButton is part of a group defined by a RadioButtonGroup control."},
{ "name": "groupName",
  "type": "Property",
  "class": "org.apache.royale.html.RadioButton",
  "description": ""},
{ "name": "groupName",
  "type": "Property",
  "class": "spark.components.RadioButton",
  "description": "Specifies the name of the group to which this RadioButton component belongs, or specifies the value of the <code>id</code> property of a RadioButtonGroup component if this RadioButton is part of a group defined by a RadioButtonGroup component."},
{ "name": "groupName",
  "type": "Property",
  "class": "mx.managers.IFocusManagerGroup",
  "description": "The name of the group of controls to which the control belongs."},
{ "name": "groupName",
  "type": "Property",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "groupName",
  "type": "Property",
  "class": "org.apache.royale.core.IValueToggleButtonModel",
  "description": "The name of the group that this ToggleButton belongs to."},
{ "name": "groupName",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ValueToggleButtonModel",
  "description": "The name of the collection has shared by all of the buttons in the collection."},
{ "name": "groupName",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.RadioButtonValidator",
  "description": "Specifies the radio button group to be validated."},
{ "name": "groupedColumns",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "An Array that defines the hierarchy of AdvancedDataGridColumn instances when performing column grouping."},
{ "name": "grouping",
  "type": "Property",
  "class": "mx.collections.IGroupingCollection",
  "description": "The Grouping object applied to the source data."},
{ "name": "grouping",
  "type": "Property",
  "class": "mx.collections.GroupingCollection",
  "description": "Specifies the Grouping instance applied to the source data."},
{ "name": "grouping",
  "type": "Property",
  "class": "mx.collections.IGroupingCollection2",
  "description": "The Grouping object applied to the source data."},
{ "name": "grouping",
  "type": "Property",
  "class": "mx.collections.GroupingCollection2",
  "description": "Specifies the Grouping instance applied to the source data."},
{ "name": "groupingFunction",
  "type": "Property",
  "class": "mx.collections.GroupingField",
  "description": "A function that determines the label for this group."},
{ "name": "groupingObjectFunction",
  "type": "Property",
  "class": "mx.collections.GroupingField",
  "description": "A callback function to run on each group node to determine the grouping object."},
{ "name": "groupingObjectFunction",
  "type": "Property",
  "class": "mx.collections.Grouping",
  "description": "A callback function to run on each group node to determine the grouping object."},
{ "name": "grow",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalFlexLayout",
  "description": "Sets the amount items grow in proportion to other items."},
{ "name": "grow",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlexLayout",
  "description": "Sets the amount items grow in proportion to other items."},
{ "name": "growBuffer",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "A convenience method to extend the length of the BinaryData so you can efficiently write more bytes to it."},
{ "name": "guardMinMax",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Protects the range against invalid values for this axis type."},
{ "name": "guid",
  "type": "Property",
  "class": "org.apache.royale.cordova.Weinre",
  "description": "The guid to use at the Weinre server http://debug."},
{ "name": "gutters",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "The distance between the axisRenderer and the sides of the surrounding chart."},
{ "name": "gutters",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "h",
  "type": "Property",
  "class": "org.apache.royale.utils.HSV",
  "description": ""},
{ "name": "handleAllItemsRemoved",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveAllItemRendererForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleAllItemsRemoved",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllItemRendererForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleAuthenticationFault",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Handles the authentication fault on the server."},
{ "name": "handleButtonClick",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "handleChildrenAdded",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Handles the addition of children to the host's layoutView by listening for size changes in the children."},
{ "name": "handleChildrenAdded",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DividedContainerView",
  "description": "Handles the \"childrenAdded\" event and generates the separators between them based on the direction of the box."},
{ "name": "handleCollectionChanged",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.CollectionChangeUpdateForArrayListData",
  "description": "Handles the COLLECTION_CHANGED event by refreshing the full set of renderers."},
{ "name": "handleCollectionChanged",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CollectionChangeUpdateForArrayListData",
  "description": "Handles the COLLECTION_CHANGED event by refreshing the full set of renderers."},
{ "name": "handleControlMouseDown",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DateFieldMouseController",
  "description": ""},
{ "name": "handleControlMouseDown",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.PopUpMouseController",
  "description": ""},
{ "name": "handleControlMouseDown",
  "type": "Method",
  "class": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": ""},
{ "name": "handleControlMouseDown",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "handleDataProviderChanged",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridColumnChangePropagator",
  "description": ""},
{ "name": "handleDataProviderChanged",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridColumnForceChangePropagator",
  "description": ""},
{ "name": "handleInitComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "Handles the initComplete event by completing the setup and kicking off the presentation of the contents."},
{ "name": "handleInitComplete",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Handles the final start-up condition by running the layout an initial time."},
{ "name": "handleInitComplete",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.ViewManagerViewBase",
  "description": ""},
{ "name": "handleInitComplete",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.DropDownListView",
  "description": ""},
{ "name": "handleInitComplete",
  "type": "Method",
  "class": "mx.controls.beads.DataGridView",
  "description": ""},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.DynamicTabsAddItemRendererForArrayListData",
  "description": ""},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": ""},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuSelectionMouseController",
  "description": ""},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": ""},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleItemAdded",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": ""},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveTableRowForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": ""},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuSelectionMouseController",
  "description": ""},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": ""},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveListItemRendererForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicRemoveItemRendererForArrayListData",
  "description": "Handles the itemRemoved event by removing the item."},
{ "name": "handleItemRemoved",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": ""},
{ "name": "handleItemUpdated",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": "Handles the itemUpdated event by updating the item."},
{ "name": "handleItemUpdated",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": "Handles the itemUpdated event by updating the item."},
{ "name": "handleLayoutNeeded",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Called whenever \"layoutNeeded\" event is dispatched against the host strand."},
{ "name": "handleModelChange",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Handles changes to properties of the MapModel."},
{ "name": "handleMouseOut",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ItemRendererMouseController",
  "description": ""},
{ "name": "handleMouseOut",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ItemRendererMouseController",
  "description": ""},
{ "name": "handleMouseOver",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ItemRendererMouseController",
  "description": ""},
{ "name": "handleMouseOver",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ItemRendererMouseController",
  "description": ""},
{ "name": "handleNavigationRequest",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": ""},
{ "name": "handlePopupHide",
  "type": "Method",
  "class": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": ""},
{ "name": "handlePopupShow",
  "type": "Method",
  "class": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": ""},
{ "name": "handleResults",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Returns a ValidationResultEvent from the Array of error results."},
{ "name": "handleShiftAsSoftReturn",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "handleSizeChange",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Changes in size to the host strand are handled (by default) by running the layout sequence."},
{ "name": "handleSizeChange",
  "type": "Method",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": ""},
{ "name": "handleSizeChange",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "handleSizeChange",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "handleSizeChange",
  "type": "Method",
  "class": "org.apache.royale.html.beads.PanelWithControlBarView",
  "description": ""},
{ "name": "handleTopMostEventDispatcherMouseDown",
  "type": "Method",
  "class": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": ""},
{ "name": "handlerFunction",
  "type": "Property",
  "class": "org.apache.royale.states.SetEventHandler",
  "description": ""},
{ "name": "handlersState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@private"},
{ "name": "has",
  "type": "Property",
  "class": "org.apache.royale.utils.ObjectMap",
  "description": ""},
{ "name": "hasActiveCalls",
  "type": "Method",
  "class": "mx.rpc.ActiveCalls",
  "description": ""},
{ "name": "hasActiveEventMirror",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "hasAdvancedSelectors",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Determines whether any of the selectors registered with the style manager have been advanced selectors (descendant selector, id selector, non-global class selector, pseudo selector)."},
{ "name": "hasAnySelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Indicates whether there is a text or cell selection."},
{ "name": "hasAnySelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "hasBlockElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "hasBorderOrBackground",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.BackgroundUtil",
  "description": ""},
{ "name": "hasCSSState",
  "type": "Method",
  "class": "mx.styles.IAdvancedStyleClient",
  "description": "Returns <code>true</code> if <code>currentCSSState</code> is not <code>null</code>."},
{ "name": "hasCSSState",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "hasCSSState",
  "type": "Method",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "hasCellDamage",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "hasCellDamage",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Indicates elements in the table have been modified and the table must be recomposed."},
{ "name": "hasCellRangeSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": ""},
{ "name": "hasCellRangeSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "hasChildren",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TreeListData",
  "description": "Whether or not the node for this data has any children."},
{ "name": "hasChildren",
  "type": "Method",
  "class": "mx.collections.IHierarchicalData",
  "description": "Returns <code>true</code> if the node has children."},
{ "name": "hasChildren",
  "type": "Method",
  "class": "mx.collections.HierarchicalData",
  "description": ""},
{ "name": "hasChildren",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor",
  "description": "Tests for the existence of children in a non-terminating node."},
{ "name": "hasChildren",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridListData",
  "description": "Contains <code>true</code> if the item has children."},
{ "name": "hasChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.ITreeData",
  "description": ""},
{ "name": "hasChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "hasChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": "Returns true if the node has children nodes."},
{ "name": "hasChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.IHierarchicalData",
  "description": "Returns <code>true</code> if the node has children."},
{ "name": "hasChildren",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "hasChildren",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Determines if the node actually has children."},
{ "name": "hasChildren",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": ""},
{ "name": "hasCompilationOption",
  "type": "Method",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "hasData",
  "type": "Method",
  "class": "org.apache.royale.reflection.ExtraData",
  "description": "this is non-reflectable"},
{ "name": "hasDispatcher",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.IJewelSelectionModel",
  "description": ""},
{ "name": "hasDispatcher",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "hasDrawer",
  "type": "Property",
  "class": "org.apache.royale.jewel.TopAppBar",
  "description": "a boolean flag to indicate if the container needs to make some room for a Drawer so content doesn't get lost on the right"},
{ "name": "hasDrawer",
  "type": "Property",
  "class": "org.apache.royale.jewel.FooterBar",
  "description": "a boolean flag to indicate if the container needs to make some room for a Drawer so content doesn't get lost on the right"},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.events.IEventDispatcher",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.events.EventDispatcher",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "hasEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": ""},
{ "name": "hasFocusableChildren",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A flag that indicates whether child objects can receive focus."},
{ "name": "hasFocusableChildren",
  "type": "Property",
  "class": "mx.managers.IFocusManagerComponent",
  "description": ""},
{ "name": "hasFocusableContent",
  "type": "Property",
  "class": "mx.managers.IFocusManagerComplexComponent",
  "description": "A flag that indicates whether the component currently has internal focusable targets"},
{ "name": "hasFooterBar",
  "type": "Property",
  "class": "org.apache.royale.jewel.ApplicationMainContent",
  "description": "a boolean flag to indicate if the container needs to make some room for a FooterBar so content doesn't be hide"},
{ "name": "hasFormat",
  "type": "Method",
  "class": "mx.core.DragSource",
  "description": "Returns <code>true</code> if the data source contains the requested format; otherwise, it returns <code>false</code>."},
{ "name": "hasFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.Clipboard",
  "description": ""},
{ "name": "hasGraphicElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "hasGraphicElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "hasGraphicElement",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "hasGraphicElement",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "hasIllegalCharacters",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "This method checks the specified string value for illegal characters."},
{ "name": "hasInteractiveChildren",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "hasInteractiveChildren",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "hasItem",
  "type": "Method",
  "class": "org.apache.royale.storage.LocalStorage",
  "description": "Returns true if there is a value stored for the key."},
{ "name": "hasItem",
  "type": "Method",
  "class": "org.apache.royale.storage.IWebStorage",
  "description": "Returns true if there is a value associated with the key."},
{ "name": "hasItem",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.LocalStorageProvider",
  "description": "Returns true if there is a value stored for the key."},
{ "name": "hasLineBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "hasMergedCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "hasMergedCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Convenience method for checking if table has merged cells"},
{ "name": "hasMetadata",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Uses <code>getClassInfo</code> and examines the metadata information to determine whether a property on a given object has the specified metadata."},
{ "name": "hasNavigationBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": "True if this view manager instance is displaying a NavigationBar."},
{ "name": "hasNumberLine",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "hasNumberLine",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "hasParagraphTerminator",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ISpanElement",
  "description": ""},
{ "name": "hasParagraphTerminator",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SpanElement",
  "description": "Specifies whether this SpanElement object terminates the paragraph."},
{ "name": "hasPendingRequestForMessage",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Returns true if there are any pending requests for the passed in message."},
{ "name": "hasPendingRequestForMessage",
  "type": "Method",
  "class": "mx.rpc.AsyncRequest",
  "description": "Returns <code>true</code> if there are any pending requests for the passed in message."},
{ "name": "hasProperties",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectUtil",
  "description": "Check if an object has any properties"},
{ "name": "hasProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.Proxy",
  "description": ""},
{ "name": "hasProperty",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "hasProperty",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "hasResponder",
  "type": "Method",
  "class": "mx.rpc.AsyncToken",
  "description": "Determines if this token has at least one <code>mx."},
{ "name": "hasRoot",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": "A flag that indicates that the current data provider has a root node; for example, a single top node in a hierarchical structure."},
{ "name": "hasRoot",
  "type": "Property",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "A flag that, if <code>true</code>, indicates that the current data provider has a root node; for example, a single top-level node in a hierarchical structure."},
{ "name": "hasRoot",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "hasSameAncestry",
  "type": "Method",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": "Check the ancestry for consistent compilation settings."},
{ "name": "hasScrollRect",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "<p>This property enables a client to test for a ScrollRect object without accessing the DisplayObject."},
{ "name": "hasSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Indicates whether there is a text selection."},
{ "name": "hasSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "hasState",
  "type": "Method",
  "class": "org.apache.royale.core.GroupBase",
  "description": "<code>true</code> if the array of states contains a state with this name."},
{ "name": "hasState",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.View",
  "description": "<code>true</code> if the array of states contains a state with this name."},
{ "name": "hasState",
  "type": "Method",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": "<code>true</code> if the array of states contains a state with this name."},
{ "name": "hasState",
  "type": "Method",
  "class": "org.apache.royale.createjs.Container",
  "description": "<code>true</code> if the array of states contains a state with this name."},
{ "name": "hasTabs",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "hasTabs",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "hasTokens",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Given a url, determines whether the url contains the server."},
{ "name": "hasToolBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.StackedViewManager",
  "description": "True if this view manager is displaying a ToolBar."},
{ "name": "hasTopAppBar",
  "type": "Property",
  "class": "org.apache.royale.jewel.ApplicationMainContent",
  "description": "a boolean flag to indicate if the container needs to make some room for a TopAppBar so content doesn't be hide"},
{ "name": "hasTouchScreen",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.GlobalSettings",
  "description": ""},
{ "name": "hasUnresolvableTokens",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "If the <code>LoaderConfig."},
{ "name": "hash",
  "type": "Property",
  "class": "org.apache.royale.routing.HashChangeNotifierBead",
  "description": ""},
{ "name": "hash",
  "type": "Method",
  "class": "org.apache.royale.utils.MD5",
  "description": ""},
{ "name": "hashChange",
  "type": "Event",
  "description": "Dispatched when the hash portion of the URL has changed"},
{ "name": "hdata",
  "type": "Property",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": ""},
{ "name": "head",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Node representing head of the list."},
{ "name": "header",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.IDataGridLayout",
  "description": ""},
{ "name": "header",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IDataGridView",
  "description": ""},
{ "name": "header",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridView",
  "description": "Returns the component used as the header for the DataGrid."},
{ "name": "header",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TreeGridView",
  "description": "Returns the component used as the header for the DataGrid."},
{ "name": "headerClassName",
  "type": "Property",
  "class": "org.apache.royale.jewel.Bar",
  "description": ""},
{ "name": "headerClassName",
  "type": "Property",
  "class": "org.apache.royale.jewel.TopAppBar",
  "description": ""},
{ "name": "headerClassName",
  "type": "Property",
  "class": "org.apache.royale.jewel.FooterBar",
  "description": ""},
{ "name": "headerHeight",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "The height of the header cell of the column, in pixels."},
{ "name": "headerModel",
  "type": "Property",
  "class": "org.apache.royale.core.IDataGridModel",
  "description": "The model to use for the DataGrid's header."},
{ "name": "headerModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataGridCollectionViewModel",
  "description": "The model to use for the DataGrid's header."},
{ "name": "headerModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TreeGridModel",
  "description": "The model to use for the DataGrid's header."},
{ "name": "headerModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataGridModel",
  "description": "The model to use for the DataGrid's header."},
{ "name": "headerRelease",
  "type": "Event",
  "description": "Dispatched when the user releases the mouse button on a column header to request the control to sort the grid contents based on the contents of the column."},
{ "name": "headerRenderer",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "The class factory for item renderer instances that display the column header for the column."},
{ "name": "headerRenderer",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The class factory for the IGridItemRenderer class used as the header for this column."},
{ "name": "headerRowCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "headerRowCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the number of header rows in the table"},
{ "name": "headerStyleName",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": ""},
{ "name": "headerText",
  "type": "Property",
  "class": "org.apache.royale.mdl.TableColumn",
  "description": "The text of the th"},
{ "name": "headerText",
  "type": "Property",
  "class": "mx.controls.dataGridClasses.DataGridColumn",
  "description": "Text for the header of this column."},
{ "name": "headerText",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Text for the header of this column."},
{ "name": "headerWordWrap",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "If <code>true</code>, specifies that text in the header is wrapped if it does not fit on one line."},
{ "name": "headerWordWrap",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "Set to <code>true</code> to wrap the text in the column header if it does not fit on one line."},
{ "name": "headers",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "Provides access to the headers of the message."},
{ "name": "headers",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "The headers of a message are an associative array where the key is the header name and the value is the header value."},
{ "name": "headers",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "Custom HTTP headers to be sent to the third party endpoint."},
{ "name": "headers",
  "type": "Property",
  "class": "mx.rpc.events.ResultEvent",
  "description": "In certain circumstances, headers may also be returned with a result to provide further context."},
{ "name": "headers",
  "type": "Property",
  "class": "mx.rpc.events.FaultEvent",
  "description": "In certain circumstances, headers may also be returned with a fault to provide further context to the failure."},
{ "name": "headers",
  "type": "Property",
  "class": "mx.messaging.messages.IMessage",
  "description": "Provides access to the headers of the message."},
{ "name": "headers",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "The headers of a message are an associative array where the key is the header name and the value is the header value."},
{ "name": "headers",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Custom HTTP headers to be sent to the third party endpoint."},
{ "name": "headers",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "The HTTP headers to be sent with the upload."},
{ "name": "headers",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.ActionMessage",
  "description": "The array of MessageHeaders"},
{ "name": "headers",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Custom HTTP headers to be sent to the third party endpoint."},
{ "name": "headers",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "heading",
  "type": "Property",
  "class": "google.maps.StreetViewPov",
  "description": ""},
{ "name": "heartbeatInterval",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "The number of milliseconds between heartbeats sent to the remote host while this ChannelSet is actively connected but idle."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.core.IUIBase",
  "description": "The height of the bounding box."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.core.ILayoutView",
  "description": "Returns the height of the layout object's content area."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.CreateJSBase",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "mx.core.IVisualElement",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The display height for the itemRenderer."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.core.IContentView",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "spark.primitives.BitmapImage",
  "description": "The height of the graphic element."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGBoxItemRenderer",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.core.TextLineMetrics",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.InsertInlineGraphicOperation",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "spark.components.Group",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "The height of the bounding box."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IVerticalJustificationLine",
  "description": "The height of the line in pixels."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The height of the line in pixels."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.svg.Ellipse",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableBodyElement",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Sets the height of the container"},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "The height of the bounding box."},
{ "name": "height",
  "type": "Property",
  "class": "mx.containers.gridClasses.GridRowInfo",
  "description": "Output: The actual height of each row, as determined by updateDisplayList()."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DateChooserHeader",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "Returns the height of the cell."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DayNameItemRenderer",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ModifyInlineGraphicOperation",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.geom.Size",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Slug",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "The height of the bounding box."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DateItemRenderer",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColGroupElement",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Number that specifies the height of the ConstraintRow instance, in pixels, in the parent's coordinates."},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "height",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "The height of the image."},
{ "name": "heightBy",
  "type": "Property",
  "class": "org.apache.royale.effects.Resize",
  "description": "The change in height."},
{ "name": "heightFrom",
  "type": "Property",
  "class": "org.apache.royale.effects.Resize",
  "description": "Starting height value."},
{ "name": "heightInLines",
  "type": "Property",
  "class": "spark.components.RichEditableText",
  "description": "The default height of the control, measured in lines."},
{ "name": "heightLimit",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "The maximum amount of space, in pixels, that an axis renderer will take from a chart."},
{ "name": "heightLimit",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "heightPropertyDefinition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": ""},
{ "name": "heightTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "heightTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "heightTo",
  "type": "Property",
  "class": "org.apache.royale.effects.Resize",
  "description": "Ending height value."},
{ "name": "helpContent",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "The set of components to include in the help content area of the FormItem."},
{ "name": "helpContentGroup",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "A reference to the Group that contains the FormItem's helpContentGroup."},
{ "name": "hide",
  "type": "Method",
  "class": "org.apache.royale.core.IMenu",
  "description": ""},
{ "name": "hide",
  "type": "Method",
  "class": "org.apache.royale.html.Menu",
  "description": "Hides the menu if displayed."},
{ "name": "hide",
  "type": "Event",
  "description": "Dispatched when an object's state changes from visible to invisible."},
{ "name": "hide",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": "Hides the Menu control and any of its submenus if the Menu control is visible."},
{ "name": "hide",
  "type": "Method",
  "class": "org.apache.royale.html.beads.plugin.IModalDisplay",
  "description": ""},
{ "name": "hide",
  "type": "Method",
  "class": "org.apache.royale.html.beads.plugin.ModalDisplay",
  "description": "Removes the host from the display list"},
{ "name": "hide",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "Determines if unneeded instances should be hidden."},
{ "name": "hide",
  "type": "Event",
  "description": "Dispatched when an object's state changes from visible to invisible."},
{ "name": "hideAllMenus",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": ""},
{ "name": "hideCursor",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "hideData",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Informs the chart that the underlying data displayed in the chart has been changed."},
{ "name": "hideDelay",
  "type": "Property",
  "class": "mx.managers.ToolTipManager",
  "description": "The amount of time, in milliseconds, that Flex waits to hide the ToolTip after it appears."},
{ "name": "hideDelay",
  "type": "Property",
  "class": "mx.managers.IToolTipManager2",
  "description": ""},
{ "name": "hideDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--hide-desktop\" effect selector."},
{ "name": "hideDropFeedback",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Hides the drop indicator that indicates that a drag-and-drop operation is allowed."},
{ "name": "hideDropIndicator",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Hides the previously shown drop indicator, created by the <code>showDropIndicator()</code> method, removes it from the display list and also stops the drag scrolling."},
{ "name": "hideEffect",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Played when the component becomes invisible."},
{ "name": "hideEffect",
  "type": "Property",
  "class": "mx.managers.ToolTipManager",
  "description": "The effect that plays when a ToolTip is hidden, or <code>null</code> if the ToolTip should disappear with no effect."},
{ "name": "hideEffect",
  "type": "Property",
  "class": "mx.managers.IToolTipManager2",
  "description": ""},
{ "name": "hideOnClick",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalOverlay",
  "description": "If <code>hideOnClick</code> is true, the host will be closed when clicking on the overlay."},
{ "name": "hideOpenMenus",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuSelectionMouseController",
  "description": "Hides any menus that are open."},
{ "name": "hidePhone",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--hide-phone\" effect selector."},
{ "name": "hidePopup",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "hideTablet",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--hide-tablet\" effect selector."},
{ "name": "hidesBackButton",
  "type": "Method",
  "class": "org.apache.royale.mobile.chrome.NavigationBar",
  "description": ""},
{ "name": "hierarchicalCollectionView",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "The IHierarchicalCollectionView instance used by the control."},
{ "name": "hierarchicalData",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TreeModel",
  "description": "Setting the hierarchicalData in this model is a convenience."},
{ "name": "high",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The high value of this item converted into screen coordinates."},
{ "name": "highField",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Specifies the field of the data provider that determines the y-axis location of the high value of the element."},
{ "name": "highFilter",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The high value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "highNumber",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The high value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "highValue",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The high value of this item."},
{ "name": "highlightBlock",
  "type": "Method",
  "class": "hljs",
  "description": ""},
{ "name": "highlightColor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": ""},
{ "name": "highlightColor",
  "type": "Property",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "highlightElements",
  "type": "Method",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": ""},
{ "name": "highlightElements",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": "Specifies wheter to highlight chart elements like Series on mouse rollover."},
{ "name": "hiliteBlockSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "hiliteBlockSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": ""},
{ "name": "hilitePointSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "hitData",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "The first item in the hitSet array."},
{ "name": "hitSet",
  "type": "Property",
  "class": "mx.charts.events.ChartItemEvent",
  "description": "A set of HitData structures describing the chart items that triggered the event."},
{ "name": "hitTest",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.HitTestArea",
  "description": "Do a hit test."},
{ "name": "hitTestPoint",
  "type": "Method",
  "class": "org.apache.royale.utils.DisplayUtils",
  "description": "Evaluates the object to see if it overlaps or intersects with the point specified by the x and y parameters."},
{ "name": "hljs",
  "type": "Method",
  "class": "hljs",
  "description": "<inject_html> <script src=\"https://cdnjs."},
{ "name": "hljs",
  "type": "Class",
  "description": ""},
{ "name": "horizontal",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "<code>true</code> if the axis renderer is being used as a horizontal axis."},
{ "name": "horizontal",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "horizontalAlign",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "horizontalAlign (was a style in Flex)"},
{ "name": "horizontalAlign",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The horizontal alignment of layout elements."},
{ "name": "horizontalAlign",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The horizontal alignment of the content relative to the container's width."},
{ "name": "horizontalAlign",
  "type": "Property",
  "class": "spark.components.HGroup",
  "description": ""},
{ "name": "horizontalAlign",
  "type": "Property",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "horizontalAlign",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Specifies how to align the elements within the cells in the horizontal direction."},
{ "name": "horizontalAlign",
  "type": "Property",
  "class": "spark.components.VGroup",
  "description": ""},
{ "name": "horizontalAlign",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.LineChart",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.AreaChart",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxis",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "Defines the labels, tick marks, and data position for items on the x-axis."},
{ "name": "horizontalAxisBead",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.ChartBaseLayout",
  "description": "The horizontal axis bead or null if one is not present."},
{ "name": "horizontalAxisGroup",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.ChartView",
  "description": "The IAxisGroup that represents the horizontal axis."},
{ "name": "horizontalAxisRatio",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Determines the height limit of the horiztonal axis."},
{ "name": "horizontalAxisRenderer",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "horizontalAxisRenderers",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Specifies how data appears along the x-axis of a chart."},
{ "name": "horizontalCenter",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "The horizontal distance in pixels from the center of the component to the center of the anchor target's content area."},
{ "name": "horizontalCenter",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "<p>For components, this layout constraint property is a facade on top of the similarly-named style."},
{ "name": "horizontalFocus",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesZoomInstance",
  "description": "Defines the location of the focul point of the zoom."},
{ "name": "horizontalFocus",
  "type": "Property",
  "class": "mx.charts.effects.SeriesZoom",
  "description": "Defines the location of the focul point of the zoom."},
{ "name": "horizontalGap",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "horizontalGap",
  "type": "Property",
  "class": "mx.core.FlexCSSStyles",
  "description": ""},
{ "name": "horizontalGap",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Horizontal space between columns, in pixels."},
{ "name": "horizontalGap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The horizontalGap between items."},
{ "name": "horizontalGap",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "horizontalScrollPolicy",
  "type": "Property",
  "class": "mx.core.ScrollControlBase",
  "description": "A property that indicates whether the horizontal scroll bar is always on, always off, or automatically changes based on the parameters passed to the <code>setScrollBarProperties()</code> method."},
{ "name": "horizontalScrollPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "horizontalScrollPolicy",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "A property that indicates whether the horizontal scroll bar is always on, always off, or automatically changes based on the parameters passed to the <code>setScrollBarProperties()</code> method."},
{ "name": "horizontalScrollPolicy",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": ""},
{ "name": "horizontalScrollPolicy",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Specifies whether the horizontal scroll bar is always present, always absent, or automatically added when needed."},
{ "name": "horizontalScrollPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Controls whether the factory generates all text lines or stops when the container bounds are filled."},
{ "name": "horizontalScrollPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "Specifies how lines are created when the composition bounds are not large enough."},
{ "name": "horizontalScrollPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Specifies the horizontal scrolling policy, which you can set by assigning one of the constants of the ScrollPolicy class: ON, OFF, or AUTO."},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "mx.core.ScrollControlBase",
  "description": "The offset into the content from the left edge."},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The current position of the horizontal scroll bar."},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": ""},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.core.IScrollingViewport",
  "description": "Horizontal scroll position."},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport",
  "description": ""},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Specifies the current horizontal scroll location on the stage."},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ScrollingViewport",
  "description": ""},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "Pixel position in the content area of the leftmost pixel that is currently displayed."},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "horizontalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.VScrollViewport",
  "description": ""},
{ "name": "horizontalScrollingLocked",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.core.TransformBeadBase",
  "description": "The host component."},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisableLoaderBead",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.core.IBeadView",
  "description": "The host component."},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.core.BeadViewBase",
  "description": "The host component."},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "The strand/host container is also an ILayoutChild because it can have its size dictated by the host's parent which is important to know for layout optimization."},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ContainerContentArea",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AccordionCollapseBead",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileUploader",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalSliderLayout",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.svg.Filter",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalDisplay",
  "description": "The host component."},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.svg.MaskBead",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.svg.DisableClipBead",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DividedContainerView",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.svg.ClipBead",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AbsolutePositioningViewBeadBase",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.WebBrowserView",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalOverlay",
  "description": "The host component."},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalSliderLayout",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SnackbarView",
  "description": "The Snackbar component"},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUp",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.list.DataGroup",
  "description": ""},
{ "name": "host",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.ToggleSwitchView",
  "description": ""},
{ "name": "hostClassList",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": ""},
{ "name": "hostClassList",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "hostComponent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": ""},
{ "name": "hostComponent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "hostElement",
  "type": "Property",
  "class": "org.apache.royale.html.beads.StyleInheritanceBead",
  "description": ""},
{ "name": "hostFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "hostFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Sets the format when display just a string."},
{ "name": "hostFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "The TextLayoutFormat object for this TextFlow object."},
{ "name": "hotSpot",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.MouseCursorData",
  "description": ""},
{ "name": "hoverColumnIndex",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>showHoverIndicator</code> is <code>true</code>, Specifies column index of the <code>hoverIndicator</code>."},
{ "name": "hoverIndicator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to provide hover feedback."},
{ "name": "hoverIndicator",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "hoverRowIndex",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>showHoverIndicator</code> is <code>true</code>, specifies the column index of the <code>hoverIndicator</code>."},
{ "name": "hoverable",
  "type": "Property",
  "class": "org.apache.royale.core.IRuntimeSelectableItemRenderer",
  "description": "<code>true</code> if the item renderer is can be hovered false otherwise."},
{ "name": "hoverable",
  "type": "Property",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": "<code>true</code> if the item renderer is can be hovered false otherwise."},
{ "name": "hoverable",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "<code>true</code> if the item renderer is can be hovered false otherwise."},
{ "name": "hoverable",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "<code>true</code> if the item renderer is can be hovered false otherwise."},
{ "name": "hoverable",
  "type": "Property",
  "class": "spark.components.supportClasses.ItemRenderer",
  "description": "Set to <code>true</code> when the user is hovered over the item renderer."},
{ "name": "hoverable",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": "<code>true</code> if the item renderer is can be hovered false otherwise."},
{ "name": "hovered",
  "type": "Property",
  "class": "org.apache.royale.core.ISelectableItemRenderer",
  "description": "<code>true</code> if the item renderer is rendering an item that is under the mouse pointer."},
{ "name": "hovered",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "Whether or not the itemRenderer is in a hovered state."},
{ "name": "hovered",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "Whether or not the itemRenderer is in a hovered state."},
{ "name": "hovered",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "Whether or not the itemRenderer is in a hovered state."},
{ "name": "hovered",
  "type": "Property",
  "class": "spark.components.supportClasses.ItemRenderer",
  "description": "Set to <code>true</code> when the user is hovered over the item renderer."},
{ "name": "hovered",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "Contains <code>true</code> if the item renderer is under the mouse and the Grid's selectionMode is <code>GridSelectionMode."},
{ "name": "hovered",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": ""},
{ "name": "hovered",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemRenderer",
  "description": "the link url"},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.INavigationRenderer",
  "description": "the navigation link url"},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": "the navigation link url"},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ILinkElement",
  "description": ""},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.NavigationLinkItemRenderer",
  "description": "the navigation link url"},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.html.elements.A",
  "description": "the link url"},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyLinkOperation",
  "description": "The URI to be associated with the link."},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.NavigationLinkItemRenderer",
  "description": "the navigation link url"},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.DeletableLinkChip",
  "description": "The link"},
{ "name": "href",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "The Uniform Resource Identifier (URI) associated with the LinkElement object."},
{ "name": "hsvModifiedColor",
  "type": "Property",
  "class": "org.apache.royale.core.IColorSpectrumModel",
  "description": "The resultant color after hue and saturation were modified"},
{ "name": "hsvModifiedColor",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ColorSpectrumModel",
  "description": ""},
{ "name": "hsvModifiedColor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorSpectrum",
  "description": ""},
{ "name": "hsvToHex",
  "type": "Method",
  "class": "org.apache.royale.utils",
  "description": "Converts HSV values to RGB values."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.TextButton",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.TextInput",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.TextArea",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.Label",
  "description": "The html-formatted text to display in the label."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.jewel.Button",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.core.IComboBoxModel",
  "description": "The html formatted text displayed in the ComboBox."},
{ "name": "html",
  "type": "Property",
  "class": "mx.controls.beads.models.ComboBoxModel",
  "description": "The HTML string to display in the org."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.core.ITextModel",
  "description": "The html formatted text displayed in the control."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TextModel",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.core.IToggleButtonModel",
  "description": "The html formatted text displayed in the control."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ToggleButtonModel",
  "description": "The HTML string for the Button's label."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": "The HTML string for the title."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.jewel.Label",
  "description": "The html-formatted text to display in the label."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ComboBoxModel",
  "description": "The HTML string to display in the org."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.jewel.FormHeading",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.HTMLText",
  "description": "The html-formatted text to display in the HTMLText."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.jewel.FormItem",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ComboBoxModel",
  "description": "The HTML string to display in the org."},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.NonNullTextModel",
  "description": ""},
{ "name": "html",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TextModel",
  "description": ""},
{ "name": "htmlMessage",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "The message to be displayed by the Alert as HTML."},
{ "name": "htmlMessage",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The HTML message to display."},
{ "name": "htmlMessage",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The HTML message to display."},
{ "name": "htmlText",
  "type": "Property",
  "class": "mx.controls.Label",
  "description": "Specifies the text displayed by the Label control, including HTML markup that expresses the styles of that text."},
{ "name": "htmlText",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": "Specifies the text displayed by the TextInput control, including HTML markup that expresses the styles of that text."},
{ "name": "htmlText",
  "type": "Property",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "htmlText",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": "Specifies the text displayed by the Label control, including HTML markup that expresses the styles of that text."},
{ "name": "htmlText",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Specifies the text displayed by the TextArea control, including HTML markup that expresses the styles of that text."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": "The HTML string to display in the org."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.core.ITitleBarModel",
  "description": "The title of the TitleBar as HTML."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.PanelModel",
  "description": "The HTML string for the title."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.jewel.TitleBar",
  "description": "The HTML title to display."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "The title of the Alert as HTML."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The HTML title for the Alert."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The HTML title for the Alert."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.html.Panel",
  "description": "The HTML string to display in the org."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TitleBarModel",
  "description": "The HTML string for the title."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.html.TitleBar",
  "description": "The HTML title to display."},
{ "name": "htmlTitle",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TitleBarModel",
  "description": "The HTML string for the title."},
{ "name": "httpHeaders",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Contains specific HTTP headers that should be placed on the request made to the destination."},
{ "name": "httpResponseStatus",
  "type": "Event",
  "description": "Dispatched if Adobe AIR is able to detect and return the status code for the request."},
{ "name": "httpResponseStatus",
  "type": "Event",
  "description": "Dispatched if Adobe AIR is able to detect and return the status code for the request."},
{ "name": "httpStatus",
  "type": "Event",
  "description": "Dispatched when a network request is made over HTTP and Flash Player or AIR can detect the HTTP status code."},
{ "name": "httpStatus",
  "type": "Event",
  "description": "Dispatched when an httpStatus code is received from the server."},
{ "name": "httpStatus",
  "type": "Event",
  "description": "Dispatched when an httpStatus code is received from the server."},
{ "name": "httpStatus",
  "type": "Event",
  "description": "Dispatched when an httpStatus code is received from the server."},
{ "name": "hueSelector",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUp",
  "description": ""},
{ "name": "hyphens",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "iMaxRowDepth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "icon",
  "type": "Property",
  "class": "mx.controls.treeClasses.TreeItemRenderer",
  "description": "The internal IFlexDisplayObject that displays the icon in this renderer."},
{ "name": "icon",
  "type": "Property",
  "class": "mx.core.INavigatorContent",
  "description": "The icon displayed by the navigator container for this container."},
{ "name": "icon",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "The Class of the icon displayed by some navigator containers to represent this Container."},
{ "name": "icon",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": "The URL of an icon to use in the button"},
{ "name": "icon",
  "type": "Property",
  "class": "org.apache.royale.core.IIconSupport",
  "description": ""},
{ "name": "icon",
  "type": "Property",
  "class": "org.apache.royale.jewel.IconButton",
  "description": "The icon to use with the button."},
{ "name": "icon",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The Class of the icon displayed by some navigator containers to represent this Container."},
{ "name": "icon",
  "type": "Property",
  "class": "org.apache.royale.jewel.IconTextInput",
  "description": "The icon to use with the button."},
{ "name": "icon",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridListData",
  "description": "A Class representing the icon for the item in the AdvancedDataGrid control."},
{ "name": "icon",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A boolean flag to activate \"mdl-button--icon\" effect selector."},
{ "name": "icon",
  "type": "Property",
  "class": "org.apache.royale.jewel.ToggleButton",
  "description": "The icon to use with the button."},
{ "name": "icon",
  "type": "Property",
  "class": "spark.components.NavigatorContent",
  "description": "The Class of the icon displayed by some navigator containers to represent this Container."},
{ "name": "iconField",
  "type": "Property",
  "class": "spark.components.supportClasses.ButtonBarBase",
  "description": "The name of the field in the data provider items which serves as the icon to display."},
{ "name": "iconField",
  "type": "Property",
  "class": "mx.controls.MenuBar",
  "description": "The name of the field in the data provider that determines the icon to display for each menu item."},
{ "name": "iconFunction",
  "type": "Property",
  "class": "spark.components.supportClasses.ButtonBarBase",
  "description": "A user-supplied function to run on each item to determine its icon."},
{ "name": "iconText",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": "the icon text that matchs with font icon."},
{ "name": "iconText",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "the icon text that matchs with MDL icon."},
{ "name": "iconText",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIcon",
  "description": "The icon text"},
{ "name": "iconText",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIcon",
  "description": "The icon text"},
{ "name": "iconText",
  "type": "Property",
  "class": "org.apache.royale.icons.ToggleFontIcon",
  "description": "The icon text"},
{ "name": "iconToggleLabel",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "Activate \"mdl-icon-toggle__label\" class selector, for use in a list item"},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.core.IStyleableObject",
  "description": "Get the id that will be used to choose id selectors in most CSS style implementations."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.core.IId",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Assigns an identifying name to the element, making it possible to set a style for the element by referencing the <code>id</code>."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.core.Strand",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "mx.styles.IAdvancedStyleClient",
  "description": "The identity of the component."},
{ "name": "id",
  "type": "Property",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.checkbox.CheckBoxIcon",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.RoyaleClient",
  "description": "The global RoyaleClient Id for this this instance."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.RadioButtonIcon",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "mx.controls.RadioButton",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.html.RadioButton",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Provides access to the id of this channel."},
{ "name": "id",
  "type": "Property",
  "class": "spark.components.RadioButton",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumnList",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.CheckBoxIcon",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.PointFormat",
  "description": "Assigns an identifying name to the element, making it possible to set a style for the element by referencing the <code>id</code>."},
{ "name": "id",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "Specifies a unique identifier representing the data point."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.mdl.TextField",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.core.ParentDocumentBead",
  "description": "An id property for MXML documents."},
{ "name": "id",
  "type": "Property",
  "class": "mx.logging.AbstractTarget",
  "description": "Provides access to the id of this target."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayList",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "ID of the ConstraintRow instance."},
{ "name": "id",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.radiobutton.RadioButtonIcon",
  "description": ""},
{ "name": "id",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "ID of the ConstraintColumn instance."},
{ "name": "identity",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Resets the matrix to the default values."},
{ "name": "ignoreCount",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Result",
  "description": "The number of tests that were ignored."},
{ "name": "ignoreWhiteSpace",
  "type": "Property",
  "class": "org.apache.royale.utils.JXON",
  "description": "Static flag to ignore whitespace text nodes"},
{ "name": "image",
  "type": "Property",
  "class": "org.apache.royale.html.ImageAndTextButton",
  "description": "The URL of an icon to use in the button"},
{ "name": "image",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ImageAndTextModel",
  "description": "The URL of an icon to use in the button"},
{ "name": "imageElement",
  "type": "Property",
  "class": "org.apache.royale.core.IImage",
  "description": ""},
{ "name": "imageElement",
  "type": "Property",
  "class": "org.apache.royale.core.ImageBase",
  "description": ""},
{ "name": "imageElement",
  "type": "Property",
  "class": "org.apache.royale.core.ImageViewBase",
  "description": ""},
{ "name": "imageElement",
  "type": "Property",
  "class": "spark.components.Image",
  "description": ""},
{ "name": "imageElement",
  "type": "Property",
  "class": "org.apache.royale.html.Image",
  "description": ""},
{ "name": "imageElement",
  "type": "Property",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "imageElement",
  "type": "Property",
  "class": "org.apache.royale.core.supportClasses.StyledImageBase",
  "description": ""},
{ "name": "imageElement",
  "type": "Property",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "imageElement",
  "type": "Property",
  "class": "org.apache.royale.jewel.Image",
  "description": ""},
{ "name": "imageHeight",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactImageChip",
  "description": "Specifies the height of the image Chip, in pixels."},
{ "name": "imageOrientation",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "imageRendering",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "imageResolution",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "imageSourceResolveFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextLayoutImporter",
  "description": "This property allows specification of a function to modify the source property supplied to an <code>&lt;img&gt;</code> element."},
{ "name": "imageSourceResolveFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.IHTMLImporter",
  "description": "This property allows specification of a function to modify the source property supplied to an <code>&lt;img&gt;</code> element."},
{ "name": "imageSourceResolveFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": "@copy IHTMLExporter#imageSourceResolveFunction"},
{ "name": "imageSourceResolveFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "@copy ITextLayoutImporter#imageSourceResolveFunction"},
{ "name": "imageWidth",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactImageChip",
  "description": "Specifies the width of the image Chip, in pixels."},
{ "name": "imeClient",
  "type": "Property",
  "class": "org.apache.royale.text.events.IMEEvent",
  "description": ""},
{ "name": "imeMode",
  "type": "Property",
  "class": "mx.core.IIMESupport",
  "description": "The IME mode of the component."},
{ "name": "imeMode",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The default value for the GridColumn <code>imeMode</code> property, which specifies the IME (Input Method Editor) mode."},
{ "name": "imeMode",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "imeMode",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IIMESupport",
  "description": "The IME mode of the component."},
{ "name": "imeMode",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": ""},
{ "name": "imeMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellContainer",
  "description": ""},
{ "name": "imeMode",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": ""},
{ "name": "imeStartCompositionHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes an imeStartComposition event"},
{ "name": "imeStartCompositionHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Processes the <code>IME_START_COMPOSITION</code> event when the client manages events."},
{ "name": "imeStartCompositionHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>IMEEvent."},
{ "name": "imeStartCompositionHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "impliedElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "impliedElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "@private"},
{ "name": "importFromString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": "Parse and convert input data"},
{ "name": "importFromString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.PlainTextImporter",
  "description": "Import text content, from an external source, and convert it into a ITextFlow."},
{ "name": "importFromXML",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": "Parse and convert input XML data"},
{ "name": "importOneFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.IFormatImporter",
  "description": ""},
{ "name": "importOneFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TLFormatImporter",
  "description": ""},
{ "name": "importOneFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.FontImporter",
  "description": ""},
{ "name": "importOneFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.HtmlCustomParaFormatImporter",
  "description": ""},
{ "name": "importOneFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.TextFormatImporter",
  "description": ""},
{ "name": "importOneFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.importers.CaseInsensitiveTLFFormatImporter",
  "description": ""},
{ "name": "importToFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.ITextImporter",
  "description": "Import text content from an external source and convert it into a TextFlow."},
{ "name": "importToFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Creates a TextFlow from source content in a specified format."},
{ "name": "importToFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.PlainTextImporter",
  "description": "@copy ITextImporter#importToFlow()"},
{ "name": "import_contacts",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "import_contacts",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "import_export",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "import_export",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "importerClass",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.FormatDescriptor",
  "description": "Returns the class used for converting data from the format."},
{ "name": "in",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "in2",
  "type": "Property",
  "class": "org.apache.royale.svg.BlendFilterElement",
  "description": "The filter element result which is blended with the source graphic."},
{ "name": "in2",
  "type": "Property",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "inactive",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": "Activate \"inactive\" class selector."},
{ "name": "inactive",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "Activate \"md-inactive\" class selector."},
{ "name": "inactiveCellSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The SelectionFormat object used to draw cell selections when they are not in the active window."},
{ "name": "inactiveCellSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "inactiveSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The SelectionFormat object used to draw the selection when it is not in the active window."},
{ "name": "inactiveSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "inactiveSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "The initial selection format (SelectionFormat) for a text flow (TextFlow) when its window is inactive."},
{ "name": "inactiveSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "incGraphicObjectCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "incInteractiveChildrenCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "incInteractiveChildrenCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "incInteractiveObjectCount",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "includeCategory",
  "type": "Property",
  "class": "mx.logging.targets.LineFormattedTarget",
  "description": "Indicates if the category for this target should added to the trace."},
{ "name": "includeClasses",
  "type": "Property",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": ""},
{ "name": "includeClasses",
  "type": "Property",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": ""},
{ "name": "includeClasses",
  "type": "Property",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": ""},
{ "name": "includeClasses",
  "type": "Property",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": ""},
{ "name": "includeDate",
  "type": "Property",
  "class": "mx.logging.targets.LineFormattedTarget",
  "description": "Indicates if the date should be added to the trace."},
{ "name": "includeDescentInCellBounds",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "includeInLayout",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "includeInLayout",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": ""},
{ "name": "includeInLayout",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Specifies whether this component is included in the layout of the parent container."},
{ "name": "includeInLayout",
  "type": "Property",
  "class": "mx.containers.FormItem",
  "description": "Specifies whether this component is included in the layout of the parent container."},
{ "name": "includeInLayout",
  "type": "Property",
  "class": "mx.containers.ControlBar",
  "description": "Specifies whether this component is included in the layout of the parent container."},
{ "name": "includeInRanges",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "If <code>true</code>, the computed range of the chart is affected by this canvas."},
{ "name": "includeInRanges",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "If <code>true</code>, the computed range of the chart is affected by this canvas."},
{ "name": "includeLevel",
  "type": "Property",
  "class": "mx.logging.targets.LineFormattedTarget",
  "description": "Indicates if the level for the event should added to the trace."},
{ "name": "includePackages",
  "type": "Property",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": ""},
{ "name": "includePackages",
  "type": "Property",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": ""},
{ "name": "includePackages",
  "type": "Property",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": ""},
{ "name": "includePackages",
  "type": "Property",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": ""},
{ "name": "includeTime",
  "type": "Property",
  "class": "mx.logging.targets.LineFormattedTarget",
  "description": "Indicates if the time should be added to the trace."},
{ "name": "increment",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.spinner.ISpinnerView",
  "description": ""},
{ "name": "increment",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IScrollBarView",
  "description": "The down arrow button in a vertical ScrollBar or right arrow button in a horizontal ScrollBar"},
{ "name": "increment",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ISpinnerView",
  "description": ""},
{ "name": "increment",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SpinnerView",
  "description": ""},
{ "name": "increment",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SpinnerView",
  "description": ""},
{ "name": "incrementButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.RangeStepperView",
  "description": "Increment control."},
{ "name": "indent",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridListData",
  "description": "The default indentation for this row of the AdvancedDataGrid control."},
{ "name": "indeterminate",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Whether the ProgressBar control has a determinate or indeterminate appearance."},
{ "name": "indeterminate",
  "type": "Property",
  "class": "org.apache.royale.mdl.ProgressBar",
  "description": "Indeterminate state."},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.core.ISelectableItemRenderer",
  "description": "The index of the data item in the data provider."},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "The position with the dataProvider being shown by the itemRenderer instance."},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The index of this itemRenderer instance with its series."},
{ "name": "index",
  "type": "Property",
  "class": "mx.collections.LeafNodeCursor",
  "description": ""},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "The position with the dataProvider being shown by the itemRenderer instance."},
{ "name": "index",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "The index of the data from the series' data provider that the ChartItem represents."},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": "The index of the item added, removed, or changed"},
{ "name": "index",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesSegment",
  "description": "The index of this segment in the array of segments representing the line series."},
{ "name": "index",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalViewCursor",
  "description": ""},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.events.ItemClickedEvent",
  "description": "The index of the item beginning with zero."},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "The position with the dataProvider being shown by the itemRenderer instance."},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.reflection.ParameterDefinition",
  "description": "The 1-based index of this parameter in its owner function/method"},
{ "name": "index",
  "type": "Property",
  "class": "mx.events.MenuEvent",
  "description": "The index of the associated menu item within its parent menu or submenu."},
{ "name": "index",
  "type": "Property",
  "class": "spark.components.supportClasses.ItemRenderer",
  "description": ""},
{ "name": "index",
  "type": "Property",
  "class": "mx.events.ItemClickEvent",
  "description": "The index of the associated navigation item."},
{ "name": "index",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "index",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "indexOf",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Returns the index of the item that overlaps the specified distance."},
{ "name": "indicator",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": ""},
{ "name": "indicatorParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ButtonBarReorderBead",
  "description": ""},
{ "name": "indicatorParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDropTargetBead",
  "description": ""},
{ "name": "indicatorParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SensitiveSingleSelectionDropTargetBead",
  "description": ""},
{ "name": "indicator_content",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": ""},
{ "name": "inflate",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "inflate",
  "type": "Method",
  "class": "org.apache.royale.utils.CompressionUtils",
  "description": ""},
{ "name": "inflatePoint",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "info",
  "type": "Method",
  "class": "org.apache.royale.core.IFlexInfo",
  "description": "The compiler overrides this getter to provide the data structure."},
{ "name": "info",
  "type": "Method",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": "An Object containing information generated by the compiler that is useful at startup time."},
{ "name": "info",
  "type": "Method",
  "class": "mx.logging.ILogger",
  "description": "Logs the specified data using the <code>LogEvent."},
{ "name": "info",
  "type": "Method",
  "class": "mx.logging.LogLogger",
  "description": ""},
{ "name": "info",
  "type": "Method",
  "class": "mx.core.IFlexModuleFactory",
  "description": "Returns a block of key/value pairs that hold static data known to the module."},
{ "name": "info",
  "type": "Property",
  "class": "mx.events.NetStatusEvent",
  "description": ""},
{ "name": "info",
  "type": "Method",
  "class": "mx.core.Application",
  "description": "An Object containing information generated by the compiler that is useful at startup time."},
{ "name": "info",
  "type": "Method",
  "class": "org.apache.royale.html.UIModule",
  "description": "An Object containing information generated by the compiler that is useful at startup time."},
{ "name": "info",
  "type": "Method",
  "class": "spark.components.Application",
  "description": "An Object containing information generated by the compiler that is useful at startup time."},
{ "name": "info",
  "type": "Method",
  "class": "org.apache.royale.jewel.Module",
  "description": "An Object containing information generated by the compiler that is useful at startup time."},
{ "name": "infoType",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Sets the info type of this message (IN or OUT)."},
{ "name": "inherit",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "inherited",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "Is this property inherited"},
{ "name": "inheritingStyles",
  "type": "Property",
  "class": "mx.styles.StyleManagerImpl",
  "description": ""},
{ "name": "inheritingStyles",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "A map of inheriting styles"},
{ "name": "init",
  "type": "Method",
  "class": "mx.charts.styles.HaloDefaults",
  "description": "Initializes the common values used by the default styles for the chart and element classes."},
{ "name": "init",
  "type": "Method",
  "class": "org.apache.royale.core.IValuesImpl",
  "description": "MXML Documents that support &lt;fx:Style&gt; blocks should call init to install the styles for each instance."},
{ "name": "init",
  "type": "Method",
  "class": "mx.messaging.config.LoaderConfig",
  "description": ""},
{ "name": "init",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "init",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "initBindingsHandler",
  "type": "Method",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": ""},
{ "name": "initBindingsHandler",
  "type": "Method",
  "class": "org.apache.royale.binding.ItemRendererDataBinding",
  "description": ""},
{ "name": "initBindingsHandler",
  "type": "Method",
  "class": "org.apache.royale.binding.ViewDataBinding",
  "description": ""},
{ "name": "initBindingsHandler",
  "type": "Method",
  "class": "org.apache.royale.binding.ContainerDataBinding",
  "description": ""},
{ "name": "initBindingsHandler",
  "type": "Method",
  "class": "org.apache.royale.binding.MXMLBeadViewDataBinding",
  "description": ""},
{ "name": "initChannelSet",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Used to automatically initialize the <code>channelSet</code> property for the MessageAgent before it connects for the first time."},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the container is complete."},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the container is complete."},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the list is complete."},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the list is complete."},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the list is complete."},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the list is complete."},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Event",
  "description": ""},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the list is complete."},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.DynamicTabsAddItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Event",
  "description": ""},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Event",
  "description": "Dispatched at startup."},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": ""},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.TabsDataItemRendererFactoryForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveTableRowForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.CollectionChangeUpdateForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the list is complete."},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllByNullItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the container is complete."},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveListItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveAllItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CollectionChangeUpdateForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DynamicRemoveItemRendererForArrayListData",
  "description": "finish setup"},
{ "name": "initComplete",
  "type": "Event",
  "description": "Indicates that the initialization of the container is complete."},
{ "name": "initComplete",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": "finish setup"},
{ "name": "initCompleteHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.StyleInheritanceBead",
  "description": ""},
{ "name": "initInstance",
  "type": "Method",
  "class": "mx.charts.effects.SeriesSlide",
  "description": ""},
{ "name": "initStyleToLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": "Get the component layout style and init to if exists"},
{ "name": "initial",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "initialDestinationId",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "Provides access to the initial destination this ChannelSet is used to access."},
{ "name": "initialPage",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "the initial page to show in the wizard"},
{ "name": "initialValue",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.LayoutChangeNotifier",
  "description": "The value of the property being watched."},
{ "name": "initialView",
  "type": "Property",
  "class": "org.apache.royale.core.IInitialViewApplication",
  "description": "The application's initial view."},
{ "name": "initialView",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": "The initial view."},
{ "name": "initialView",
  "type": "Property",
  "class": "org.apache.royale.createjs.Application",
  "description": "The initial view."},
{ "name": "initialView",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": "The initial view."},
{ "name": "initializationComplete",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Finalizes the initialization of this component."},
{ "name": "initialize",
  "type": "Method",
  "class": "mx.core.IUIComponent",
  "description": "Initialize the object."},
{ "name": "initialize",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Initializes the internal structure of this component."},
{ "name": "initialize",
  "type": "Event",
  "description": "Dispatched when the component has finished its construction and has all initialization properties set."},
{ "name": "initialize",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "initialize",
  "type": "Event",
  "description": "Dispatched at startup."},
{ "name": "initialize",
  "type": "Event",
  "description": "Dispatched at startup."},
{ "name": "initialize",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": "Called to initialize the service."},
{ "name": "initialize",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "initialize",
  "type": "Method",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "Called by the <code>DataGrid</code> after construction to initialize the editor."},
{ "name": "initialize",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": ""},
{ "name": "initialize",
  "type": "Method",
  "class": "mx.rpc.remoting.mxml.CompressedRemoteObject",
  "description": ""},
{ "name": "initialize",
  "type": "Event",
  "description": "Dispatched at startup."},
{ "name": "initialize",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "initialize",
  "type": "Event",
  "description": "Dispatched at startup."},
{ "name": "initialize",
  "type": "Method",
  "class": "mx.rpc.remoting.CompressedRemoteObject",
  "description": ""},
{ "name": "initialize",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "initializeApplication",
  "type": "Method",
  "class": "mx.core.Application",
  "description": ""},
{ "name": "initializeDefaultCompareFunction",
  "type": "Method",
  "class": "mx.collections.ISortField",
  "description": "A helper function called by the <code>Sort</code> class to set the default comparison function to perform a comparison based on one of three things: whether or not a custom compare function has been set, the data type for the specified field or the the value of the numeric property."},
{ "name": "initializeDefaultCompareFunction",
  "type": "Method",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "initializeDefaultCompareFunction",
  "type": "Method",
  "class": "org.apache.royale.collections.ISortField",
  "description": "A helper function called by the <code>Sort</code> class to set the default comparison function to perform a comparison based on one of three things: whether or not a custom compare function has been set, the data type for the specified field or the the value of the numeric property."},
{ "name": "initializeDefaultCompareFunction",
  "type": "Method",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "initializeForComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Initialize for a composition that will compose up through the controllerEndIndex, or all the way to the end of the flow"},
{ "name": "initializeForComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": ""},
{ "name": "initializeForComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": ""},
{ "name": "initializeInterpolationData",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Helper method to implement the interpolation effect."},
{ "name": "initializeLocaleChain",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Initializes the <code>localeChain</code> property of the ResourceManager using an algorithm that compares the operating system's list of user-preferred locales with the list of locales available in the SWF."},
{ "name": "initializeLocaleChain",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "initializeRendererToolTip",
  "type": "Method",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "If the effective value of showDataTips has changed for this column, then set the renderer's toolTip property to a placeholder."},
{ "name": "initialized",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A flag that determines if an object has been through all three phases of layout: commitment, measurement, and layout (provided that any were required)."},
{ "name": "initialized",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Called for MXML objects after the implementing object has been created and all component properties specified on the MXML tag have been initialized."},
{ "name": "initialized",
  "type": "Method",
  "class": "mx.core.IMXMLObject",
  "description": "Called after the implementing object has been created and all component properties specified on the MXML tag have been initialized."},
{ "name": "initialized",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "initialized",
  "type": "Property",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": ""},
{ "name": "initialized",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "initialized",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "initialized",
  "type": "Property",
  "class": "mx.managers.ILayoutManagerClient",
  "description": "A flag that determines if an object has been through all three phases of layout validation (provided that any were required) This flag should only be modified by the LayoutManager."},
{ "name": "initialized",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Called automatically by the MXML compiler when the ListCollectionView is created using an MXML tag."},
{ "name": "initialized",
  "type": "Method",
  "class": "mx.logging.AbstractTarget",
  "description": "Called after the implementing object has been created and all properties specified on the tag have been assigned."},
{ "name": "initialized",
  "type": "Method",
  "class": "mx.rpc.remoting.mxml.RemoteObject",
  "description": "Called automatically by the MXML compiler if the RemoteObject is set up using a tag."},
{ "name": "initialized",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Called after the implementing object has been created and all properties specified on the tag have been assigned."},
{ "name": "initialized",
  "type": "Method",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "initialized",
  "type": "Method",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Called automatically by the MXML compiler when the ConstraintRow instance is created using an MXML tag."},
{ "name": "initialized",
  "type": "Method",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "Called automatically by the MXML compiler when the ConstraintColumn instance is created using an MXML tag."},
{ "name": "inlineGraphicResolverFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the callback used for resolving an inline graphic element."},
{ "name": "inlineGraphicResolverFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "inlineGraphicStatusChanged",
  "type": "Event",
  "description": "Dispatched when a InlineGraphicElement is resized due to having width or height as auto or percent and the graphic has finished loading."},
{ "name": "inlineGraphicStatusChanged",
  "type": "Event",
  "description": "Dispatched when a InlineGraphicElement is resized due to having width or height as auto or percent and the graphic has finished loading."},
{ "name": "inlineSize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "innerHTML",
  "type": "Property",
  "class": "org.apache.royale.html.TextNodeContainerBase",
  "description": "Sets the HTML of the Div"},
{ "name": "innerRadius",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The distance of the inner edge of this wedge from its origin, measured in pixels."},
{ "name": "input",
  "type": "Event",
  "description": "Dispatched each time user moves the slider thumb from one position to another"},
{ "name": "input",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TextFieldBase",
  "description": ""},
{ "name": "input",
  "type": "Property",
  "class": "org.apache.royale.html.beads.NumericStepperView",
  "description": ""},
{ "name": "input",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": ""},
{ "name": "input",
  "type": "Property",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": ""},
{ "name": "input",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": ""},
{ "name": "input",
  "type": "Event",
  "description": "Dispatched each time user moves the slider thumb from one position to another"},
{ "name": "input",
  "type": "Property",
  "class": "org.apache.royale.mdl.Switch",
  "description": ""},
{ "name": "input",
  "type": "Property",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": ""},
{ "name": "inputFormat",
  "type": "Property",
  "class": "mx.validators.DateValidator",
  "description": "The date format to validate the value against."},
{ "name": "inputParser",
  "type": "Property",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": "A lazy collection uses an IInputParser to convert the source data items into an array of data items."},
{ "name": "insert",
  "type": "Method",
  "class": "mx.collections.IViewCursor",
  "description": "Inserts the specified item before the cursor's current position."},
{ "name": "insert",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Inserts new node at the specified row index."},
{ "name": "insert",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Make room for a new item at index by shifting all of the sizes one position to the right, beginning with startIndex."},
{ "name": "insert",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "insertAfter",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Inserts a new node after the specified node."},
{ "name": "insertAt",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "insertBefore",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Inserts a new node after the specified node."},
{ "name": "insertBlockElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "insertColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "insertColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Inserts a column at the end of the table."},
{ "name": "insertColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "insertColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Inserts a column at the column specified."},
{ "name": "insertColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Inserts count number of columns starting from startColumn."},
{ "name": "insertColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Inserts count number of columns into each node and increases numColumns by count."},
{ "name": "insertColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": "Shifts values such that count columns are inserted from the startIndex."},
{ "name": "insertCurrentView",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.TabbedViewManagerView",
  "description": ""},
{ "name": "insertCurrentView",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.TopTabbedViewManagerView",
  "description": ""},
{ "name": "insertElementsToVector",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Inserts specified elements starting from startIndex."},
{ "name": "insertInlineGraphic",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Inserts an image."},
{ "name": "insertInlineGraphic",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "Returns the new InlineGraphicElement that was created."},
{ "name": "insertPosition",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "The position of the instance in the parent's child list."},
{ "name": "insertRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "insertRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Inserts a row at the end of the table."},
{ "name": "insertRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "insertRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Inserts a row at the index specified."},
{ "name": "insertRows",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Inserts count number of rows starting from startRow."},
{ "name": "insertTableElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": ""},
{ "name": "insertTableElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "insertText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Inserts text."},
{ "name": "insertText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": "Inserts text into specified paragraph"},
{ "name": "insertText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "insertTextScrap",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Replaces the range of text positions that the <code>startPos</code> and <code>endPos</code> parameters specify with the <code>textScrap</code> parameter in <code>theFlow</code>."},
{ "name": "insertValueToVector",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Insert count elements of the specified value starting from startIndex."},
{ "name": "inset",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "Whether or not the drop shadow is inset."},
{ "name": "insideLineWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.utils.NumberLineUserData",
  "description": ""},
{ "name": "insideListItemMargin",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "installCompiledResourceBundles",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Creates instances of all ResourceBundle subclasses that were compiled into the SWF and adds them to the ResourceManager."},
{ "name": "installOverride",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": "Static initializer"},
{ "name": "installOverride",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": "Static initializer"},
{ "name": "installedOverride",
  "type": "Property",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": "The properties that triggers the static initializer."},
{ "name": "installedOverride",
  "type": "Property",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": "The properties that triggers the static initializer."},
{ "name": "instanceClass",
  "type": "Property",
  "class": "mx.effects.Effect",
  "description": ""},
{ "name": "instanceParent",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "instanceParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "instances",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "The Array of cached instances."},
{ "name": "intOrEnum",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "integerError",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Error message when the number must be an integer, as defined by the <code>domain</code> property."},
{ "name": "interactionManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "interactionManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "interactionManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "The InteractionManager associated with this TextFlow object."},
{ "name": "interactionManagerChanged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "interactionManagerChanged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Called by the TextFlow when the interaction manager changes."},
{ "name": "interactionManagerChanged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Called by the TextFlow when the interaction manager changes."},
{ "name": "interactive",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "Determines whether data tips appear when users interact with chart data on the screen."},
{ "name": "interactiveChildrenCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "interactiveObjectCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "interactiveObjectCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "@private - count of interactive objects"},
{ "name": "interactiveObjects",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "interactiveObjects",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "interfaces",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "returns the full set of interfaces that this class implements or that this interface extends, depending on the 'kind' value (\"interface\" or \"class\")"},
{ "name": "internalChildren",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "internalChildren",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "internalChildren",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "internalChildren",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "internalConnect",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Connects the Channel to its endpoint."},
{ "name": "internalDisconnect",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Disconnects the Channel from its endpoint."},
{ "name": "internalGetDefinition",
  "type": "Method",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": ""},
{ "name": "internalLog",
  "type": "Method",
  "class": "mx.logging.targets.LineFormattedTarget",
  "description": "Descendants of this class should override this method to direct the specified message to the desired output."},
{ "name": "internalLog",
  "type": "Method",
  "class": "mx.logging.targets.TraceTarget",
  "description": "Implementation to log the message via the <code>trace()</code> method."},
{ "name": "internalPiggybackingEnabled",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "internalPollingEnabled",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "internalPollingInterval",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "internalSend",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Sends the Message out over the Channel and routes the response to the responder."},
{ "name": "internalSend",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Sends a Message from the MessageAgent to its destination using the agent's ChannelSet."},
{ "name": "internalSend",
  "type": "Method",
  "class": "mx.messaging.channels.DirectHTTPChannel",
  "description": ""},
{ "name": "internalStyleName",
  "type": "Property",
  "class": "mx.charts.chartClasses.DualStyleObject",
  "description": "The name of a class selector this instance inherits values from."},
{ "name": "interpolate",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Called by the SeriesInterpolate effect to advance an interpolation."},
{ "name": "interpolate",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "interpolate",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "interpolate",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "interpolateValues",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Specifies how to represent missing data."},
{ "name": "interpolationValues",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesEffectInstance",
  "description": "The current position of each chart item being managed by this effect."},
{ "name": "intersection",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "intersects",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "intersects",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "interval",
  "type": "Property",
  "class": "mx.charts.LogAxis",
  "description": "Specifies the multiplier label values along the axis."},
{ "name": "interval",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Specifies the number of <code>labelUnits</code> between label values along the axis."},
{ "name": "interval",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ButtonAutoRepeatController",
  "description": "The number of milliseconds to wait before repeating the event after the first time."},
{ "name": "interval",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ThrottleBead",
  "description": ""},
{ "name": "interval",
  "type": "Property",
  "class": "mx.charts.LinearAxis",
  "description": "Specifies the numeric difference between label values along the axis."},
{ "name": "interval",
  "type": "Property",
  "class": "org.apache.royale.html.beads.InfiniteVScroller",
  "description": "Minimum number of milliseconds between scrollEnd events."},
{ "name": "invalid",
  "type": "Event",
  "description": "Dispatched when validation fails."},
{ "name": "invalid",
  "type": "Event",
  "description": "Dispatched when the form validation fails."},
{ "name": "invalidCharError",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Error message when the value contains invalid characters."},
{ "name": "invalidElements",
  "type": "Property",
  "class": "spark.components.Form",
  "description": "A sorted Array of descendant elements that are in an invalid state."},
{ "name": "invalidEmailError",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.EmailValidator",
  "description": "A generic description of any error that occurred when validating the email address"},
{ "name": "invalidate",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFormatResolver",
  "description": "Invalidates cached formatting information on this element because, for example, the <code>parent</code> changed, or the <code>id</code> or the <code>styleName</code> changed or the <code>typeName</code> changed."},
{ "name": "invalidateAll",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFormatResolver",
  "description": "Invalidates any cached formatting information for a ITextFlow so that formatting must be recomputed."},
{ "name": "invalidateAllFormats",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "invalidateAllFormats",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "Invalidates all formatting information for the TextFlow, forcing it to be recomputed."},
{ "name": "invalidateCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Invalidates the cached labels and tick marks that represent this axis's values."},
{ "name": "invalidateCell",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "invalidateCell",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "Reinitialize and layout the visible renderer at rowIndex, columnIndex."},
{ "name": "invalidateChildOrder",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Informs the chart that its child list was modified and should be reordererd."},
{ "name": "invalidateContents",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Marks all the text in this container as needing composing."},
{ "name": "invalidateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Informs the series that the underlying data in the data provider has changed."},
{ "name": "invalidateData",
  "type": "Method",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "invalidateData",
  "type": "Method",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "invalidateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Triggers a redraw of the chart."},
{ "name": "invalidateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Informs the canvas that the underlying data in the dataProvider has changed."},
{ "name": "invalidateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Informs the canvas that the underlying data in the data provider has changed."},
{ "name": "invalidateData",
  "type": "Method",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "invalidateDisplayList",
  "type": "Method",
  "class": "mx.core.IInvalidating",
  "description": "Calling this method results in a call to the component's <code>validateDisplayList()</code> method before the display list is rendered."},
{ "name": "invalidateDisplayList",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Marks a component so that its <code>updateDisplayList()</code> method gets called during a later screen update."},
{ "name": "invalidateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "invalidateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "invalidateDisplayList",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "invalidateDisplayListFlag",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "invalidateFilter",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Informs the series that the filter of the data against the axes has changed and must be recalculated."},
{ "name": "invalidateGraphicElementDisplayList",
  "type": "Method",
  "class": "spark.core.IGraphicElementContainer",
  "description": "Notify the host component that an element has changed and needs to be redrawn."},
{ "name": "invalidateGraphicElementProperties",
  "type": "Method",
  "class": "spark.core.IGraphicElementContainer",
  "description": "Notify the host component that an element changed and needs to validate properties."},
{ "name": "invalidateGraphicElementSharing",
  "type": "Method",
  "class": "spark.core.IGraphicElementContainer",
  "description": "Notify the host component that an element layer has changed."},
{ "name": "invalidateGraphicElementSize",
  "type": "Method",
  "class": "spark.core.IGraphicElementContainer",
  "description": "Notify the host component that an element size has changed."},
{ "name": "invalidateList",
  "type": "Method",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "Refresh all rows on next update."},
{ "name": "invalidateMapping",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Informs the series that the mapping of the data into numeric values has changed and must be recalculated."},
{ "name": "invalidateMapping",
  "type": "Method",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "invalidateMapping",
  "type": "Method",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "invalidateMapping",
  "type": "Method",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "invalidateParentSizeAndDisplayList",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Helper method to invalidate parent size and display list if this object affects its layout (includeInLayout is true)."},
{ "name": "invalidateProperties",
  "type": "Method",
  "class": "mx.core.IInvalidating",
  "description": "Calling this method results in a call to the component's <code>validateProperties()</code> method before the display list is rendered."},
{ "name": "invalidateProperties",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Marks a component so that its <code>commitProperties()</code> method gets called during a later screen update."},
{ "name": "invalidatePropertiesFlag",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "invalidateSelectionFormats",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Call this if you change the selection formats (SelectionFormat) and want the interactionManager to update."},
{ "name": "invalidateSeries",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Informs the chart that its series array was modified and should be reprocessed."},
{ "name": "invalidateSeries",
  "type": "Method",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Call this method to trigger a call to the <code>buildSubSeries()</code> method on the next call to the <code>commitProperties()</code> method."},
{ "name": "invalidateSeriesStyles",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Triggers a redraw of the chart."},
{ "name": "invalidateSize",
  "type": "Method",
  "class": "mx.core.IInvalidating",
  "description": "Calling this method results in a call to the component's <code>validateSize()</code> method before the display list is rendered."},
{ "name": "invalidateSize",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Marks a component so that its <code>measure()</code> method gets called during a later screen update."},
{ "name": "invalidateSize",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "invalidateSize",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartLabel",
  "description": ""},
{ "name": "invalidateSkinState",
  "type": "Method",
  "class": "spark.components.supportClasses.SkinnableComponent",
  "description": "Marks the component so that the new state of the skin is set during a later screen update."},
{ "name": "invalidateStacking",
  "type": "Method",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Call this method to trigger a regeneration of the stacked values on the next call to the <code>commitProperties()</code> method."},
{ "name": "invalidateTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Informs the series that the transform of the data to screen coordinates has changed and must be recalculated."},
{ "name": "invalidateTransitions",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Informs the series that a significant change has occured in the display of data."},
{ "name": "invalidateTypicalItem",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "invalidateTypicalItemRenderer",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Clears cached column width data that had been based on the <code>typicalItem</code> property, and requests a new layout pass."},
{ "name": "invalidateUndoManager",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Call this if you are editing, and want to reset the undo manager used for editing."},
{ "name": "invert",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Inverts the Matrix."},
{ "name": "invertTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Maps a position along the axis back to a numeric data value."},
{ "name": "invertTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "invertTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "Transforms x and y coordinates relative to the DataTransform coordinate system into a two-dimensional value in data space."},
{ "name": "invertTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianTransform",
  "description": "Transforms x and y coordinates relative to the DataTransform coordinate system into a 2-dimensional value in data space."},
{ "name": "invertTransform",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "invert_colors_off",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "invert_colors_off",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "invoke",
  "type": "Event",
  "description": "The invoke event is dispatched when a service Operation is invoked so long as an Error is not thrown before the Channel attempts to send the message."},
{ "name": "invoke",
  "type": "Event",
  "description": "The invoke event is fired when an HTTPMultiService call is invoked so long as an Error is not thrown before the Channel attempts to send the message."},
{ "name": "invoke",
  "type": "Method",
  "class": "mx.rpc.remoting.Operation",
  "description": ""},
{ "name": "invoke",
  "type": "Method",
  "class": "mx.rpc.http.AbstractOperation",
  "description": ""},
{ "name": "invoke",
  "type": "Event",
  "description": "The invoke event is fired when an HTTPService call is invoked so long as an Error is not thrown before the Channel attempts to send the message."},
{ "name": "invoke",
  "type": "Method",
  "class": "mx.rpc.AsyncRequest",
  "description": "Dispatches the asynchronous request and stores the responder to call later."},
{ "name": "ioError",
  "type": "Event",
  "description": "Dispatched when an input or output error occurs."},
{ "name": "ioError",
  "type": "Event",
  "description": "Dispatched if an error occurs in the upload."},
{ "name": "ioError",
  "type": "Event",
  "description": "Dispatched if an error occurs in the server communication."},
{ "name": "is",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "is()  binary as operator in AS3."},
{ "name": "is3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "returns true if the transform has 3D values."},
{ "name": "is3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "returns true if the transform has 3D values."},
{ "name": "is3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "True if the computed transform has 3D values."},
{ "name": "is3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "true if the computed transform has 3D values."},
{ "name": "isActive",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.ITabItemRenderer",
  "description": "Indicates whether specific Tab is currently selected/active"},
{ "name": "isActive",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TabItemRendererBase",
  "description": ""},
{ "name": "isActive",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TabBarButtonItemRendererBase",
  "description": "isActive."},
{ "name": "isActive",
  "type": "Property",
  "class": "org.apache.royale.mdl.TabBarButton",
  "description": "Marks this Button as the active one in the TabBar"},
{ "name": "isActive",
  "type": "Property",
  "class": "org.apache.royale.mdl.Spinner",
  "description": "Indicates whether Spinner is active and visible"},
{ "name": "isActive",
  "type": "Property",
  "class": "org.apache.royale.mdl.TabBarPanel",
  "description": "Marks this Button as the active one in the TabBar"},
{ "name": "isAttribute",
  "type": "Property",
  "class": "QName",
  "description": ""},
{ "name": "isBranch",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor",
  "description": "Tests a node for termination."},
{ "name": "isBranch",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Tests a node for termination."},
{ "name": "isButton",
  "type": "Method",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Tests to see which button was pressed during the event."},
{ "name": "isCellEditable",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Returns true if a datagrid cell is editable."},
{ "name": "isCellVisible",
  "type": "Method",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "isCellVisible",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Returns <code>true</code> if the specified cell is at least partially visible."},
{ "name": "isChannelUsedForSubscriptions",
  "type": "Method",
  "class": "mx.messaging.ConsumerMessageDispatcher",
  "description": "Determines whether any subscriptions are using the specified channel."},
{ "name": "isClass",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "convenience check for whether this definition represents a Class or instance of a Class"},
{ "name": "isColorName",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Tests to see if the given String is an alias for a color value."},
{ "name": "isDamaged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": ""},
{ "name": "isDamaged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "isDamaged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Indicates whether any ITextFlowLine objects between the beginning of the flow and the line containing the content at the specified position are marked as damaged."},
{ "name": "isDamaged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Returns <code>true</code> if the content needs composing."},
{ "name": "isDamaged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Determines whether the container has text that requires composing."},
{ "name": "isDamaged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "isDataEditable",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Override to make a datagrid cell editable based on the data item."},
{ "name": "isDebug",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "Indicates whether a debug level log event will be processed by a log target."},
{ "name": "isDefaultPrevented",
  "type": "Method",
  "class": "org.apache.royale.events.Event",
  "description": ""},
{ "name": "isDeltaIdentity",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "for any <code>pt:Point</code> (<code>matrix</code> is identity matrix, when disregarding the translation part)."},
{ "name": "isDeviceFontCompatible",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "isDeviceReady",
  "type": "Property",
  "class": "org.apache.royale.cordova.Application",
  "description": "A flag to tell if the device is ready."},
{ "name": "isDisabled",
  "type": "Method",
  "class": "mx.charts.chartClasses.DateRangeUtilities",
  "description": "Returns true if given time is in disabled range"},
{ "name": "isDynamicObject",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Returns <code>true</code> if the object is an instance of a dynamic class."},
{ "name": "isDynamicObject",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "A utility method to check if an object is dynamic (can have non-sealed members added or deleted) Note that static class objects are always dynamic, as are Interface Objects"},
{ "name": "isEmpty",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "isEmpty",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "isEnabled",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Returns whether the node is enabled."},
{ "name": "isEqual",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Compares properties in ITextLayoutFormat instance <code>p1</code> with properties in ITextLayoutFormat instance <code>p2</code> and returns <code>true</code> if all properties match."},
{ "name": "isEqual",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.PointFormat",
  "description": ""},
{ "name": "isEqual",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Compares properties in ITabStopFormat instance <code>p1</code> with properties in ITabStopFormat instance <code>p2</code> and returns <code>true</code> if all properties match."},
{ "name": "isEqual",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Determine if two Matrix instances are equal."},
{ "name": "isEqual3D",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Determine if two Matrix3D instances are equal."},
{ "name": "isError",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Contains true if the field generated a validation failure."},
{ "name": "isError",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.FormValidator",
  "description": "Contains true if any validator in the form generated a validation failure."},
{ "name": "isError",
  "type": "Property",
  "class": "mx.validators.ValidationResult",
  "description": "Contains <code>true</code> if the field generated a validation failure."},
{ "name": "isError",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "Indicates whether an error level log event will be processed by a log target."},
{ "name": "isFatal",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "Indicates whether a fatal level log event will be processed by a log target."},
{ "name": "isFirstRow",
  "type": "Property",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "Returns if the selectedIndex is equal to the first row."},
{ "name": "isFirstRow",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "If a <code>grid</code> is not assigned, will always return false;"},
{ "name": "isFirstRow",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "Returns if the selectedIndex is equal to the first row."},
{ "name": "isFontCompatible",
  "type": "Method",
  "class": "org.apache.royale.text.engine.FontDescription",
  "description": ""},
{ "name": "isHeightSizedToContent",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "True if no percentHeight or explicitHeight has been assigned"},
{ "name": "isHeightSizedToContent",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "isHeightSizedToContent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "isHeightSizedToContent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "isHighSurrogate",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.CharacterUtil",
  "description": "Returns <code>true</code> if the <code>charCode</code> argument is a high word in a surrogate pair."},
{ "name": "isHttpURL",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Determines if the URL uses the HTTP, HTTPS, or RTMP protocol."},
{ "name": "isHttpsURL",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Determines if the URL uses the secure HTTPS protocol."},
{ "name": "isInTable",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": ""},
{ "name": "isInTable",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "isInfo",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "Indicates whether an info level log event will be processed by a log target."},
{ "name": "isInheritingStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Tests to see if a style is inheriting."},
{ "name": "isInheritingTextFormatStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Test to see if a TextFormat style is inheriting."},
{ "name": "isInterface",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "convenience check for whether this definition represents an interface"},
{ "name": "isInvalid",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TextFieldBase",
  "description": "A boolean flag to activate \"is-invalid\" effect selector."},
{ "name": "isItemOpen",
  "type": "Method",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "Returns <code>true</code> if the specified branch node is open."},
{ "name": "isItemOpen",
  "type": "Method",
  "class": "mx.controls.Tree",
  "description": "Returns <code>true</code> if the specified item branch is open (is showing its children)."},
{ "name": "isLastRow",
  "type": "Property",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "Returns if the selectedIndex is equal to the last row."},
{ "name": "isLastRow",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "If a <code>grid</code> is not assigned, will always return false;"},
{ "name": "isLastRow",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "Returns if the selectedIndex is equal to the last row."},
{ "name": "isLineVisible",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "isLineVisible",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": ""},
{ "name": "isLoaded",
  "type": "Property",
  "class": "org.apache.royale.text.engine.IFont",
  "description": ""},
{ "name": "isLocationOnEdge",
  "type": "Method",
  "class": "google.maps.geometry.poly",
  "description": ""},
{ "name": "isLowSurrogate",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.CharacterUtil",
  "description": "Returns <code>true</code> if the <code>charCode</code> argument is a low word in a surrogate pair."},
{ "name": "isMaxHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableRowElement",
  "description": ""},
{ "name": "isMaxHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "isMobile",
  "type": "Method",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": "True if the platform is a tablet or phone."},
{ "name": "isMonitoring",
  "type": "Method",
  "class": "mx.netmon.NetworkMonitor",
  "description": "Returns true if the monitor is linked and monitoring."},
{ "name": "isMonitoringImpl",
  "type": "Property",
  "class": "mx.netmon.NetworkMonitor",
  "description": "To be assigned by mix-in."},
{ "name": "isMouseActionButton",
  "type": "Method",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Whether this has an \"action\"-producing mouse button."},
{ "name": "isNavigationUnit",
  "type": "Method",
  "class": "spark.core.NavigationUnit",
  "description": "Returns <code>true</code> if the <code>keyCode</code> maps directly to a NavigationUnit enum value."},
{ "name": "isNice",
  "type": "Property",
  "class": "org.apache.royale.svg.IChainableFilter",
  "description": "Nice filters are generally less visible (e."},
{ "name": "isNice",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": ""},
{ "name": "isNice",
  "type": "Property",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "isNumberedList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IListElement",
  "description": ""},
{ "name": "isOpen",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TreeListData",
  "description": "Whether or not the node for this data is open (and its children visible)."},
{ "name": "isOpen",
  "type": "Method",
  "class": "org.apache.royale.collections.ITreeData",
  "description": ""},
{ "name": "isOpen",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "isOpen",
  "type": "Method",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": "Returns true if the node is currently open."},
{ "name": "isOpen",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Contains <code>true</code> when the container is open and is currently showing as a pop-up."},
{ "name": "isOpen",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "isOpen",
  "type": "Property",
  "class": "org.apache.royale.jewel.Drawer",
  "description": "Open or close the drawer"},
{ "name": "isOpen",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": ""},
{ "name": "isParentDisplayListInvalidatingStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Tests to see if this style affects the component's parent container in such a way as to require that the parent container redraws itself when this style changes."},
{ "name": "isParentSizeInvalidatingStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Tests to see if the style changes the size of the component's parent container."},
{ "name": "isPlainText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextScrap",
  "description": "Returns true if the text is plain text (not formatted)"},
{ "name": "isPlaying",
  "type": "Property",
  "class": "mx.effects.Parallel",
  "description": ""},
{ "name": "isPopUp",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "isPopUp",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Set to <code>true</code> by the PopUpManager to indicate that component has been popped up."},
{ "name": "isPotentiallyDamaged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": ""},
{ "name": "isPotentiallyDamaged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Indicates whether any ITextFlowLine objects between the beginning of the flow and the line containing the content at the specified position are marked as damaged OR if there are other clues that the textFlow should be rebuilt."},
{ "name": "isRangeSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Indicates whether the selection covers a range of text."},
{ "name": "isRangeSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "isRealValue",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Returns <code>true</code> if <code>value</code> is not null."},
{ "name": "isRectangular",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": "Returns true if the parcel has no knockouts"},
{ "name": "isRelevant",
  "type": "Property",
  "class": "org.apache.royale.reflection.ExtraData",
  "description": "this is non-reflectable"},
{ "name": "isSameTarget",
  "type": "Method",
  "class": "org.apache.royale.events.Event",
  "description": "Determine if the target is the same as the event's target."},
{ "name": "isScaled",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "isSelected",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ISelectableContent",
  "description": "isSelected checks if this content is the selected one"},
{ "name": "isSelected",
  "type": "Property",
  "class": "org.apache.royale.jewel.SectionContent",
  "description": "a boolean flag to indicate if the container is active or not defaults to false."},
{ "name": "isSimple",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Returns <code>true</code> if the object reference specified is a simple data type."},
{ "name": "isSizeInvalidatingStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Tests to see if a style changes the size of a component."},
{ "name": "isSoftKeyboardEffectActive",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Returns true if the soft keyboard is active and the pop-up is moved and/or resized."},
{ "name": "isStatic",
  "type": "Property",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": "Flag used to indicate that the document value refers to a Class with a static bindable source"},
{ "name": "isStatic",
  "type": "Property",
  "class": "org.apache.royale.reflection.MemberDefinitionBase",
  "description": ""},
{ "name": "isSupported",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IME",
  "description": ""},
{ "name": "isSupported",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenu",
  "description": ""},
{ "name": "isSynthType",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": ""},
{ "name": "isToggled",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Returns whether the node is toggled."},
{ "name": "isTruncated",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "Indicates whether text was truncated when lines were last created."},
{ "name": "isTruncated",
  "type": "Property",
  "class": "spark.core.IDisplayText",
  "description": "A flag that indicates whether the text has been truncated."},
{ "name": "isUID",
  "type": "Method",
  "class": "org.apache.royale.net.utils.RPCUIDUtil",
  "description": "A utility method to check whether a String value represents a correctly formatted UID value."},
{ "name": "isUID",
  "type": "Method",
  "class": "mx.utils.RPCUIDUtil",
  "description": "A utility method to check whether a String value represents a correctly formatted UID value."},
{ "name": "isUID",
  "type": "Method",
  "class": "mx.utils.UIDUtil",
  "description": "A utility method to check whether a String value represents a correctly formatted UID value."},
{ "name": "isUID",
  "type": "Method",
  "class": "org.apache.royale.utils.UIDUtil",
  "description": "A utility method to check whether a String value represents a correctly formatted UID value."},
{ "name": "isUniformPropertyType",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectUtil",
  "description": "Check if the properties of an object are all the same"},
{ "name": "isValid",
  "type": "Property",
  "class": "mx.formatters.NumberBase",
  "description": "If <code>true</code>, the format succeeded, otherwise it is <code>false</code>."},
{ "name": "isValid",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.CellCoordinates",
  "description": "Returns true if the column and row are greater than -1"},
{ "name": "isValidStyleValue",
  "type": "Method",
  "class": "mx.styles.IStyleManager",
  "description": "Determines if a specified parameter is a valid style property."},
{ "name": "isValidStyleValue",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Determines if a specified parameter is a valid style property."},
{ "name": "isWarn",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "Indicates whether a warn level log event will be processed by a log target."},
{ "name": "isWatching",
  "type": "Method",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Returns <code>true</code> if each watcher in the chain is attached to at least one change event."},
{ "name": "isWhitespace",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.CharacterUtil",
  "description": "Returns <code>true</code> if <code>charCode</code> is a whitespace character."},
{ "name": "isWhitespace",
  "type": "Method",
  "class": "org.apache.royale.utils.StringTrimmer",
  "description": "Returns <code>true</code> if the specified string is a single space, tab, carriage return, newline, or formfeed character."},
{ "name": "isWhitespace",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": "Returns <code>true</code> if the specified string is a single space, tab, carriage return, newline, or formfeed character."},
{ "name": "isWhitespace",
  "type": "Method",
  "class": "mx.utils.StringUtil",
  "description": "Returns <code>true</code> if the specified string is a single space, tab, carriage return, newline, or formfeed character."},
{ "name": "isWhitespace",
  "type": "Method",
  "class": "org.apache.royale.utils.string",
  "description": "Returns <code>true</code> if the specified string is a single space, tab, carriage return, newline, or formfeed character."},
{ "name": "isWhitespace",
  "type": "Method",
  "class": "mx.utils.RPCStringUtil",
  "description": "Returns <code>true</code> if the specified string is a single space, tab, carriage return, newline, or formfeed character."},
{ "name": "isWidthSizedToContent",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "True if no percentWidth or explicitWidth has been assigned"},
{ "name": "isWidthSizedToContent",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "isWidthSizedToContent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "isWidthSizedToContent",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "isolation",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "italic",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "item",
  "type": "Property",
  "class": "org.apache.royale.events.ItemRemovedEvent",
  "description": "The item being removed."},
{ "name": "item",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "The item from the series' data provider that the ChartItem represents."},
{ "name": "item",
  "type": "Property",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": "The item being removed/added/updated"},
{ "name": "item",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "Specifies the data item that the HitData structure describes."},
{ "name": "item",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridListData",
  "description": "The data for this item in the AdvancedDataGrid control."},
{ "name": "item",
  "type": "Property",
  "class": "mx.events.MenuEvent",
  "description": ""},
{ "name": "item",
  "type": "Property",
  "class": "org.apache.royale.events.ItemAddedEvent",
  "description": "The item being added."},
{ "name": "item",
  "type": "Property",
  "class": "mx.controls.treeClasses.TreeListData",
  "description": "The data for this item in the Tree control."},
{ "name": "item",
  "type": "Property",
  "class": "mx.events.ItemClickEvent",
  "description": "The item in the data provider of the associated navigation item."},
{ "name": "item",
  "type": "Property",
  "class": "mx.charts.events.LegendMouseEvent",
  "description": "The item in the Legend on which this event was triggered."},
{ "name": "item",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "Storage for the item property."},
{ "name": "item",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": ""},
{ "name": "itemAdded",
  "type": "Event",
  "description": "Dispatched when the collection has added an item."},
{ "name": "itemAdded",
  "type": "Event",
  "description": "Dispatched when the collection has added an item."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when the user clicks on an item in the control."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when the user clicks on an item in the control."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when a data point is found under the mouse pointer when it is clicked."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when a menu item is selected."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when the user clicks on a LegendItem in the Legend control."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when a user clicks a button."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when a user selects a RadioButton control in the group."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when the user selects an item in a pop-up submenu."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when a user selects an item from the pop-up menu."},
{ "name": "itemClick",
  "type": "Event",
  "description": "Dispatched when a user selects a RadioButton component in the group."},
{ "name": "itemConverter",
  "type": "Property",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": "A lazy collection uses an IItemConverter to convert the source data items into the desired data type."},
{ "name": "itemDoubleClick",
  "type": "Event",
  "description": "Dispatched when the user double-clicks on an item in the control."},
{ "name": "itemDoubleClick",
  "type": "Event",
  "description": "Dispatched when the user double-clicks on an item in the control."},
{ "name": "itemDoubleClick",
  "type": "Event",
  "description": "Dispatched when a data point is found under the mouse pointer when it is double clicked."},
{ "name": "itemEditBegin",
  "type": "Event",
  "description": "Dispatched when an item editing session ends for any reason."},
{ "name": "itemEditBeginning",
  "type": "Event",
  "description": "Dispatched when the user releases the mouse button while over an item renderer, tabs to the AdvancedDataGrid control or within the AdvancedDataGrid control, or in any other way attempts to edit an item."},
{ "name": "itemEditEnd",
  "type": "Event",
  "description": "Dispatched when an item editing session ends for any reason."},
{ "name": "itemEditor",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The default value for the GridColumn <code>itemEditor</code> property, which specifies the IGridItemEditor class used to create item editor instances."},
{ "name": "itemEditor",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "A class factory for the instances of the item editor to use for the column, when it is editable."},
{ "name": "itemEditor",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "A class factory for IGridItemEditor class used to edit individual grid cells in this column."},
{ "name": "itemEditorInstance",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "A reference to the currently active instance of the item editor, if it exists."},
{ "name": "itemEditorInstance",
  "type": "Property",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "A reference to the currently active instance of the item editor, if it exists."},
{ "name": "itemLabel",
  "type": "Property",
  "class": "mx.containers.FormItem",
  "description": "A read-only reference to the FormItemLabel subcomponent displaying the label of the FormItem."},
{ "name": "itemMouseDown",
  "type": "Event",
  "description": "Dispatched when a data point is found under the mouse pointer when it is pressed down."},
{ "name": "itemMouseDown",
  "type": "Event",
  "description": "Dispatched when the user presses the mouse button while over a LegendItem in the Legend control."},
{ "name": "itemMouseMove",
  "type": "Event",
  "description": "Dispatched when the mouse pointer moves while over a data point."},
{ "name": "itemMouseOut",
  "type": "Event",
  "description": "Dispatched when the user moves the mouse off of a LegendItem in the Legend."},
{ "name": "itemMouseOver",
  "type": "Event",
  "description": "Dispatched when the user moves the mouse over a LegendItem in the Legend control."},
{ "name": "itemMouseUp",
  "type": "Event",
  "description": "Dispatched when a data point is found under the mouse pointer when it is released."},
{ "name": "itemMouseUp",
  "type": "Event",
  "description": "Dispatched when the user releases the mouse button while over a LegendItem in the Legend."},
{ "name": "itemRemoved",
  "type": "Event",
  "description": "Dispatched when the collection has removed an item."},
{ "name": "itemRemoved",
  "type": "Event",
  "description": "Dispatched when the collection has removed an item."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.core.IItemRendererProvider",
  "description": "Returns the class factory that will generate instances of the itemRenderer."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.core.DataContainerBase",
  "description": "The class or factory used to display each item."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The class or factory used to display each item."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "spark.components.DataGroup",
  "description": "The item renderer to use for data items."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "mx.charts.ChartItem",
  "description": "The instance of the chart's itemRenderer that represents this ChartItem."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.events.ItemRendererEvent",
  "description": "The itemRenderer that has been created."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "spark.components.supportClasses.ListBase",
  "description": ""},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.IDataGridColumn",
  "description": "The itemRenderer class or factory to use to make instances of itemRenderers for display of data."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.DataGridColumn",
  "description": "The itemRenderer class or factory to use to make instances of itemRenderers for display of data."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartSeries",
  "description": "The itemRenderer class or factory that produces an instance of that class."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.PieSeries",
  "description": "The class or class factory to use as the itemRenderer for each X/Y pair."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumn",
  "description": "The itemRenderer class or factory to use to make instances of itemRenderers for display of data."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataGridColumn",
  "description": "The itemRenderer class or factory to use to make instances of itemRenderers for display of data."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The item renderer where the event occurred."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The item renderer that's used for columns that do not specify one."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.ColumnSeries",
  "description": "The class or class factory to use as the itemRenderer for each X/Y pair."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BarSeries",
  "description": "The class or class factory to use as the itemRenderer for each X/Y pair."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSeries",
  "description": "The class or class factory to use as the itemRenderer for each X/Y pair."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The class factory for the IGridItemRenderer class used to render individual grid cells."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "The ListItemRenderer for the node that closed or opened."},
{ "name": "itemRenderer",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererCreated",
  "type": "Event",
  "description": ""},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.core.IDataProviderItemRendererMapper",
  "description": "IDataProviderItemRendererMapper use an IItemRendererClassFactory to generate instances of item renderers."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.DataItemRendererFactoryForSeriesArrayListData",
  "description": "For series data, the 'global' itemRendererFactory is not used."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.ChartItemRendererFactory",
  "description": ""},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.DataItemRendererFactoryForSeriesData",
  "description": "For series data, the 'global' itemRendererFactory is not used."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TextItemRendererFactoryForArrayData",
  "description": "An IItemRendererClassFactory that should generate ITextItemRenderers"},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForColumnData",
  "description": "The factory used to create the itemRenderers."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TextItemRendererFactoryForStringVectorData",
  "description": "An IItemRendererClassFactory that should generate ITextItemRenderers"},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TabsItemRendererFactoryForArrayData",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": "The org."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": "Stores the IFactory that will be used to generate item renderer instances if createFromClass is the createFunction."},
{ "name": "itemRendererFactory",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": "The org."},
{ "name": "itemRendererFunction",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "If specified, the value of this property must be an idempotent function that returns an item renderer IFactory based on its data provider item and column parameters."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.core.IItemRenderer",
  "description": "The parent component of the itemRenderer instance."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "The parent container for the itemRenderer instance."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "The parent container for the itemRenderer instance."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveTableRowForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllByNullItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "spark.components.DataRenderer",
  "description": "The parent container for the itemRenderer instance."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveListItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "The parent container for the itemRenderer instance."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveAllItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveItemRendererForArrayListData",
  "description": "The org."},
{ "name": "itemRendererParent",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "itemRollOut",
  "type": "Event",
  "description": "Dispatched when the closest data point under the mouse pointer changes."},
{ "name": "itemRollOut",
  "type": "Event",
  "description": "Dispatched when a user rolls the mouse out of a menu item."},
{ "name": "itemRollOut",
  "type": "Event",
  "description": "Dispatched when user rolls the mouse out of a drop-down list item."},
{ "name": "itemRollOver",
  "type": "Event",
  "description": "Dispatched when a new data point is found under the mouse pointer."},
{ "name": "itemRollOver",
  "type": "Event",
  "description": "Dispatched when a user rolls the mouse over a menu item."},
{ "name": "itemRollOver",
  "type": "Event",
  "description": "Dispatched when the user rolls the mouse over a drop-down list item."},
{ "name": "itemSum",
  "type": "Property",
  "class": "mx.charts.series.renderData.PieSeriesRenderData",
  "description": "The total sum of the values represented in the pie series."},
{ "name": "itemToDataTip",
  "type": "Method",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Convert the specified data provider item to a column-specific datatip String."},
{ "name": "itemToLabel",
  "type": "Method",
  "class": "mx.controls.listClasses.ListBase",
  "description": "Returns the string the renderer would display for the given data object based on the labelField and labelFunction properties."},
{ "name": "itemToLabel",
  "type": "Method",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Convert the specified data provider item to a column-specific String."},
{ "name": "itemToLabel",
  "type": "Method",
  "class": "mx.controls.ComboBox",
  "description": "Returns a string representing the <code>item</code> parameter."},
{ "name": "itemToRenderer",
  "type": "Method",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Convert the specified data provider item to a column-specific item renderer factory."},
{ "name": "itemToUID",
  "type": "Method",
  "class": "mx.controls.listClasses.ListBase",
  "description": "Determines the UID for a data provider item."},
{ "name": "itemType",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "The subtype of ChartItem used by this series to represent individual items."},
{ "name": "itemType",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "The subtype of ChartItem used by this series to represent individual items."},
{ "name": "itemType",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "The subtype of ChartItem used by this series to represent individual items."},
{ "name": "itemType",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "The subtype of ChartItem used by this series to represent individual items."},
{ "name": "itemType",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": "The subtype of ChartItem used by this series to represent individual items."},
{ "name": "itemType",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "The subtype of ChartItem used by this series to represent individual items."},
{ "name": "itemType",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "The subtype of ChartItem used by this series to represent individual items."},
{ "name": "itemType",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "The subtype of ChartItem used by this series to represent individual items."},
{ "name": "itemUpdateHandler",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Called when any of the contained items in the list dispatches a <code>PropertyChangeEvent</code>."},
{ "name": "itemUpdateHandler",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Called whenever any of the contained items in the list fires a <code>PropertyChangeEvent</code>."},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Notifies the view that an item has been updated."},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Notify the view that an item has been updated."},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "mx.collections.ICollectionView",
  "description": "Notifies the view that an item has been updated."},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Signals that an item in the array has been updated."},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Signals that an item in the array has been updated."},
{ "name": "itemUpdated",
  "type": "Event",
  "description": "Dispatched when the collection has updated an item."},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "trigger notification events that the item has been updated."},
{ "name": "itemUpdated",
  "type": "Event",
  "description": "Dispatched when the collection has updated an item."},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "itemUpdated",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Notify the view that an item has been updated."},
{ "name": "itemUpdatedAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "itemUpdatedAt",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Signals that an item in the array has been updated."},
{ "name": "itemUpdatedAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Signals that an item in the array has been updated."},
{ "name": "itemUpdatedAt",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "itemUpdatedAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "trigger notification events that the item has been updated."},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "Gets all the items that are there in the series after filtering."},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "org.apache.royale.states.ItemAndDescriptor",
  "description": "The item or items created from the descriptor."},
{ "name": "items",
  "type": "Property",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "org.apache.royale.events.CollectionEvent",
  "description": "The items being removed"},
{ "name": "items",
  "type": "Property",
  "class": "mx.events.CollectionEvent",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesSegment",
  "description": "The array of chartItems representing the full line series that owns this segment."},
{ "name": "items",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenu",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "items",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "itemsCreatedHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.TabsView",
  "description": ""},
{ "name": "itemsCreatedHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.DropDownListView",
  "description": ""},
{ "name": "itemsCreatedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.DropDownListView",
  "description": ""},
{ "name": "itemsCreatedHandler",
  "type": "Method",
  "class": "org.apache.royale.mdl.beads.views.TabBarView",
  "description": ""},
{ "name": "itemsDescriptor",
  "type": "Property",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "itemsDescriptorIndex",
  "type": "Property",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "itemsExpand",
  "type": "Property",
  "class": "org.apache.royale.jewel.Container",
  "description": "A boolean flag to activate \"itemsExpand\" effect selector."},
{ "name": "itemsExpand",
  "type": "Property",
  "class": "org.apache.royale.jewel.Group",
  "description": "A boolean flag to activate \"itemsExpand\" effect selector."},
{ "name": "itemsExpand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": "A boolean flag to activate \"itemsExpand\" effect selector."},
{ "name": "itemsHorizontalAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.Container",
  "description": "Distribute all items horizontally Possible values are: - itemsLeft - itemsCenter - itemsRight - itemsSpaceBetween - itemsSpaceAround"},
{ "name": "itemsHorizontalAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.Group",
  "description": "Distribute all items horizontally Possible values are: - itemsLeft - itemsCenter - itemsRight - itemsSpaceBetween - itemsSpaceAround"},
{ "name": "itemsHorizontalAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": "Distribute all items horizontally Possible values are: - itemsLeft - itemsCenter - itemsRight - itemsSpaceBetween - itemsSpaceAround"},
{ "name": "itemsHorizontalAlignInitialized",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": ""},
{ "name": "itemsVerticalAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.Container",
  "description": "Distribute all items vertically Possible values are: - itemsSameHeight - itemsCentered - itemsTop - itemsBottom"},
{ "name": "itemsVerticalAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.Group",
  "description": "Distribute all items vertically Possible values are: - itemsSameHeight - itemsCentered - itemsTop - itemsBottom"},
{ "name": "itemsVerticalAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": "Distribute all items vertically Possible values are: - itemsSameHeight - itemsCentered - itemsTop - itemsBottom"},
{ "name": "itemsVerticalAlignInitialized",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": ""},
{ "name": "iterateAll",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.FormValidator",
  "description": ""},
{ "name": "joinElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ModelEdit",
  "description": ""},
{ "name": "joinNextParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Joins this paragraph's next sibling to this if it is a paragraph"},
{ "name": "joinToElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Joins this element2 to element1 -- all children of element2 added to end of element1"},
{ "name": "joinToNextElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Joins this element1 to element2 -- all children of element1 added to front of element2"},
{ "name": "joinToNextParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Joins this paragraph's next sibling to this if it is a paragraph"},
{ "name": "jsLoader",
  "type": "Property",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": ""},
{ "name": "json",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": "A JSON object parsed from the data."},
{ "name": "justificationRule",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Rule used to justify text in a paragraph."},
{ "name": "justificationRule",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Rule used to justify text in a paragraph."},
{ "name": "justificationRule",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Rule used to justify text in a paragraph."},
{ "name": "justificationRule",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.LocaleUtil",
  "description": ""},
{ "name": "justificationRuleProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "justificationStyle",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The style used for justification of the paragraph."},
{ "name": "justificationStyle",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The style used for justification of the paragraph."},
{ "name": "justificationStyle",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The style used for justification of the paragraph."},
{ "name": "justificationStyle",
  "type": "Property",
  "class": "org.apache.royale.text.engine.EastAsianJustifier",
  "description": ""},
{ "name": "justificationStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.LocaleUtil",
  "description": ""},
{ "name": "justificationStyleProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "justifyContent",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "k1",
  "type": "Property",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "k2",
  "type": "Property",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "k3",
  "type": "Property",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "k4",
  "type": "Property",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "keepLastResult",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": "Flag indicating whether the service's operations should keep their last call result for later access."},
{ "name": "keepLastResult",
  "type": "Property",
  "class": "mx.rpc.AbstractInvoker",
  "description": "Flag indicating whether the operation should keep its last call result for later access."},
{ "name": "kerning",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Kerning adjusts the pixels between certain character pairs to improve readability."},
{ "name": "kerning",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Kerning adjusts the pixels between certain character pairs to improve readability."},
{ "name": "kerning",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Kerning adjusts the pixels between certain character pairs to improve readability."},
{ "name": "kerning",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "kerningProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "key",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "key",
  "type": "Property",
  "class": "org.apache.royale.reflection.MetaDataArgDefinition",
  "description": "the 'key' value of a metadata argument in [Event(name=\"boom\")] the key for the 1st (only) argument is 'name'"},
{ "name": "keyCode",
  "type": "Property",
  "class": "mx.events.KeyboardEvent",
  "description": ""},
{ "name": "keyCode",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "keyCode",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "If the event was triggered by a key press, the keycode for the key."},
{ "name": "keyCode",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Keycode of key press."},
{ "name": "keyDown",
  "type": "Event",
  "description": ""},
{ "name": "keyDown",
  "type": "Event",
  "description": "Dispatched when the user types, deletes, or pastes text into the control."},
{ "name": "keyDownForCapsLockHandler",
  "type": "Method",
  "class": "mx.core.Application",
  "description": ""},
{ "name": "keyDownHandler",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "The event handler called for a <code>keyDown</code> event."},
{ "name": "keyDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a keyDown event."},
{ "name": "keyDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "keyDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>KeyboardEvent."},
{ "name": "keyDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "keyFocusChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a keyFocusChange event."},
{ "name": "keyFocusChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "keyFocusChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>FocusEvent."},
{ "name": "keyFocusChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "keyUp",
  "type": "Event",
  "description": ""},
{ "name": "keyUp",
  "type": "Event",
  "description": ""},
{ "name": "keyUpHandler",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "The event handler called for a <code>keyUp</code> event."},
{ "name": "keyUpHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a keyUp event."},
{ "name": "keyUpHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": ""},
{ "name": "keyUpHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "keyUpHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>Keyboard."},
{ "name": "keyUpHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "keyUpLogic",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": ""},
{ "name": "keyUpLogic",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.SearchFilter",
  "description": ""},
{ "name": "kind",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The type of definition this TypeDefinition describes values can be \"class\", \"interface\", \"unknown\" This can sometimes be different between swf and js targets."},
{ "name": "kind",
  "type": "Property",
  "class": "mx.events.PropertyChangeEvent",
  "description": ""},
{ "name": "kind",
  "type": "Property",
  "class": "mx.events.CollectionEvent",
  "description": ""},
{ "name": "kind",
  "type": "Property",
  "class": "spark.events.GridSelectionEvent",
  "description": "Indicates the kind of event that occurred."},
{ "name": "knockOut",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "knockOutWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "knockout",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TextFieldBase",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "mx.controls.treeClasses.TreeItemRenderer",
  "description": "The internal UITextField that displays the text in this renderer."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.html.beads.NumericStepperView",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "mx.core.INavigatorContent",
  "description": "The text displayed by the navigator container for this container."},
{ "name": "label",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.NavigationLinkItemRenderer",
  "description": "The label of the navigation link"},
{ "name": "label",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "mx.controls.RadioButton",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "spark.components.supportClasses.ButtonBase",
  "description": "Text to appear on the ButtonBase control."},
{ "name": "label",
  "type": "Property",
  "class": "spark.components.RadioButton",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The text displayed by some navigator containers to represent this Container."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "mx.controls.listClasses.BaseListData",
  "description": "The textual representation of the item data, based on the list class's <code>itemToLabel()</code> method."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.IDataGridColumn",
  "description": "The label for the column (appears in the header area)."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.datagrid.DataGridColumn",
  "description": "The label for the column (appears in the header area)."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.jewel.FormHeading",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "mx.collections.Grouping",
  "description": "The name of the field added to the flat data to create the hierarchy."},
{ "name": "label",
  "type": "Property",
  "class": "mx.controls.CheckBox",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "mx.containers.FormItem",
  "description": "Text label for the FormItem."},
{ "name": "label",
  "type": "Property",
  "class": "mx.containers.FormHeading",
  "description": "Form heading text."},
{ "name": "label",
  "type": "Property",
  "class": "mx.charts.chartClasses.LegendData",
  "description": "The text identifying the series or item displayed in the legend item."},
{ "name": "label",
  "type": "Property",
  "class": "mx.charts.LegendItem",
  "description": "Specifies the text that Flex displays alongside the legend element."},
{ "name": "label",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Text that accompanies the progress bar."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumn",
  "description": "The label for the column (appears in the header area)."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataGridColumn",
  "description": "The label for the column (appears in the header area)."},
{ "name": "label",
  "type": "Property",
  "class": "mx.collections.SummaryField2",
  "description": "The property used inside the summary object, an instance of the SummaryObject class, to hold summary information."},
{ "name": "label",
  "type": "Property",
  "class": "mx.events.MenuEvent",
  "description": "The label text of the associated menu item."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.jewel.FormItem",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "Text label for the FormItem."},
{ "name": "label",
  "type": "Property",
  "class": "mx.events.ItemClickEvent",
  "description": "The label of the associated navigation item."},
{ "name": "label",
  "type": "Property",
  "class": "org.apache.royale.mdl.Switch",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "The String to display in the item renderer."},
{ "name": "label",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "spark.components.NavigatorContent",
  "description": "The text displayed by some navigator containers to represent this Container."},
{ "name": "label",
  "type": "Property",
  "class": "mx.collections.SummaryField",
  "description": "The property used inside the summary object, an instance of the SummaryObject class, to hold summary information."},
{ "name": "label",
  "type": "Property",
  "class": "spark.components.CheckBox",
  "description": ""},
{ "name": "label",
  "type": "Property",
  "class": "spark.components.beads.DropDownListView",
  "description": ""},
{ "name": "labelAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.FormItemModel",
  "description": "How textLabel form item part will align."},
{ "name": "labelAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.FormItem",
  "description": "The align of the textLabel component"},
{ "name": "labelAngle",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The angle of the label, in radians, for this wedge."},
{ "name": "labelCache",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The most recent set of AxisLabel objects generated to represent this axis."},
{ "name": "labelContainer",
  "type": "Property",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "The DisplayObject that displays labels rendered by this element."},
{ "name": "labelContainer",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "labelContainer",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "labelContainer",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "labelContainer",
  "type": "Property",
  "class": "mx.charts.series.ColumnSet",
  "description": ""},
{ "name": "labelContainer",
  "type": "Property",
  "class": "mx.charts.series.BarSet",
  "description": ""},
{ "name": "labelContainer",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "labelContent",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "labelData",
  "type": "Property",
  "class": "mx.charts.series.renderData.ColumnSeriesRenderData",
  "description": "A structure of data associated with the layout of the labels rendered by the column series."},
{ "name": "labelData",
  "type": "Property",
  "class": "mx.charts.series.renderData.BarSeriesRenderData",
  "description": "A structure of data associated with the layout of the labels rendered by the bar series."},
{ "name": "labelData",
  "type": "Property",
  "class": "mx.charts.series.renderData.PieSeriesRenderData",
  "description": "A structure of data associated with the layout of the labels rendered by the pie series."},
{ "name": "labelDisplay",
  "type": "Property",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": ""},
{ "name": "labelDisplay",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "A reference to the visual element that displays this FormItem's label."},
{ "name": "labelDisplay",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "An optional visual component in the item renderer for displaying the <code>label</code> property."},
{ "name": "labelElements",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "The set of display objects that represent the labels for the chart elements."},
{ "name": "labelElementsArray",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.core.IDataProviderModel",
  "description": "The property on the data item that the item renderer should renderer."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.DataContainer",
  "description": "The name of field within the data used for display."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.core.ISelectableItemRenderer",
  "description": "The property on the data item that the item renderer should renderer."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "The name of the field within the data to use as a label."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Name of a field in the data provider whose value appears as the label."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.List",
  "description": "The name of field within the data used for display."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Name of a field in the data provider whose value appears as the label."},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The name of the field in the data provider items to display as the label."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.core.IMenu",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "The name of the field within the data to use as a label."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumnList",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": "The name of field within the data used for display."},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionICollectionViewModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "spark.components.supportClasses.ListBase",
  "description": "The name of the field in the data provider items to display as the label."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveTableRowForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.CollectionChangeUpdateForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.DataContainer",
  "description": "The name of field within the data used for display."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "spark.components.DataRenderer",
  "description": "The name of the field within the data to use as a label."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": "The labelField, which is not used in this implementation."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionIListModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "spark.components.supportClasses.DropDownListBase",
  "description": "The name of the field in the data provider items to display as the label."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.ComboBox",
  "description": "The name of field within the data used for display."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.mdl.Tabs",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.controls.MenuBar",
  "description": "The name of the field in the data provider that determines the text to display for each menu item."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.DropDownList",
  "description": "The name of field within the data used for display."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "The name of the field within the data to use as a label."},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.controls.PopUpMenuButton",
  "description": "Name of the field in the <code>dataProvider</code> Array that contains the text to show for each menu item."},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.CollectionChangeUpdateForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataProviderModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "Name of a field in the data provider whose value appears as label Ignored if labelFunction is specified"},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TabsItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.mdl.TabBar",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DataProviderModel",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "mx.controls.ComboBox",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "labelField",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "labelFunction",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Specifies a callback function used to render each label of the Series."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Specifies a callback function used to render each label of the Series."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Called to format axis values for display as labels."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModelExtended",
  "description": "A function used to format a value in the model."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "mx.charts.CategoryAxis",
  "description": "Specifies a function that defines the labels that are generated for each item in the CategoryAxis's <code>dataProvider</code>."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.DataTipBead",
  "description": "An optional function that can format the data tip text."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "mx.controls.dataGridClasses.DataGridColumn",
  "description": "A function that determines the text to display in this column."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "Specifies a callback function used to render each label of the PieSeries."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": "Called to format axis renderer values for display as labels."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "An idempotent function that converts a data provider item into a column-specific string that's used to initialize the item renderer's <code>label</code> property."},
{ "name": "labelFunction",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "Function used to format the date displayed in the text field of the DateField control."},
{ "name": "labelMaximum",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The maximum value where a label should be placed."},
{ "name": "labelMinimum",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The minimum value where a label should be placed."},
{ "name": "labelPlacement",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": "Orientation of the label in relation to a specified icon."},
{ "name": "labelPlacement",
  "type": "Property",
  "class": "mx.controls.RadioButton",
  "description": "Position of the label relative to the RadioButton icon."},
{ "name": "labelPlacement",
  "type": "Property",
  "class": "mx.controls.RadioButtonGroup",
  "description": "Position of the RadioButton label relative to the RadioButton icon for each control in the group."},
{ "name": "labelPlacement",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Placement of the label."},
{ "name": "labelRenderer",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": "A reference to the factory used to render the axis labels."},
{ "name": "labelScale",
  "type": "Property",
  "class": "mx.charts.series.renderData.ColumnSeriesRenderData",
  "description": "The scale factor of the labels rendered by the column series."},
{ "name": "labelScale",
  "type": "Property",
  "class": "mx.charts.series.renderData.BarSeriesRenderData",
  "description": "The scale factor of the labels rendered by the bar series."},
{ "name": "labelScale",
  "type": "Property",
  "class": "mx.charts.series.renderData.PieSeriesRenderData",
  "description": "The scale factor of the labels rendered by the pie series."},
{ "name": "labelUnits",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "The units that the axis uses to generate labels."},
{ "name": "labels",
  "type": "Property",
  "class": "mx.charts.chartClasses.AxisLabelSet",
  "description": "An array of AxisLabel objects representing the values of the generating axis."},
{ "name": "language",
  "type": "Property",
  "class": "mx.resources.Locale",
  "description": "The language code of this Locale instance."},
{ "name": "large",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": "A boolean flag to activate \"mdl-tooltip--large\" effect selector."},
{ "name": "last",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Last node in list."},
{ "name": "lastButton",
  "type": "Property",
  "class": "spark.components.ButtonBar",
  "description": "A skin part that defines the last button."},
{ "name": "lastIndexInView",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The index of the last row that's part of the layout and within the container's scroll rectangle, or -1 if nothing has been displayed yet."},
{ "name": "lastIndexInView",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The index of the last column that is part of the layout and within the layout target's scroll rectangle, or -1 if nothing has been displayed yet."},
{ "name": "lastLeaf",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The IFlowLeafElement object that contains the end of the range."},
{ "name": "lastLine",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "lastLine",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "lastModified",
  "type": "Property",
  "class": "org.apache.royale.file.IFileModel",
  "description": "The last modified time of the file, in millisecond since the UNIX epoch (January 1st, 1970 at Midnight)."},
{ "name": "lastModified",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileModel",
  "description": ""},
{ "name": "lastModified",
  "type": "Property",
  "class": "org.apache.royale.file.FileProxy",
  "description": ""},
{ "name": "lastParagraph",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The IParagraphElement object that contains the end of the range."},
{ "name": "lastResult",
  "type": "Property",
  "class": "mx.rpc.AbstractInvoker",
  "description": "The result of the last invocation."},
{ "name": "lastResult",
  "type": "Property",
  "class": "mx.rpc.CallResponder",
  "description": "This property stores the result property of the token each time it delivers a successful result."},
{ "name": "lastResult",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "The result of the last invocation."},
{ "name": "lastRollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ListView",
  "description": ""},
{ "name": "lastRollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualListView",
  "description": ""},
{ "name": "lastRollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ListView",
  "description": ""},
{ "name": "lastSelectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ListView",
  "description": ""},
{ "name": "lastSelectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualListView",
  "description": ""},
{ "name": "lastSelectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ListView",
  "description": ""},
{ "name": "lastSelectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DropDownListView",
  "description": ""},
{ "name": "lastTestFailed",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": ""},
{ "name": "lastTestTime",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": ""},
{ "name": "lat",
  "type": "Method",
  "class": "google.maps.LatLng",
  "description": ""},
{ "name": "layer",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IDrawingLayerBead",
  "description": "Returns the component to use as the actual drawing surface."},
{ "name": "layer",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ListDrawingLayerBead",
  "description": "Returns the component drawing layer."},
{ "name": "layer",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridDrawingLayerBead",
  "description": "The component used as the drawing layer."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.core.IBeadLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.TableCellLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "org.apache.royale.jewel.VGroup",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": "The layout object for this container."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalFlexLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AccordionCollapseBead",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.DataGridLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.SimpleHorizontalLayout",
  "description": "Layout children vertically"},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "mx.containers.beads.BoxLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.BasicLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalSliderLayout",
  "description": "Performs the layout (size and positioning) of the elements of the slider."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.SimpleVerticalLayout",
  "description": "Layout children vertically"},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "Layout children vertically"},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.FormLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.TableHeaderLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "mx.modules.Module",
  "description": "Specifies the layout mechanism used for this application."},
{ "name": "layout",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "mx.containers.beads.CanvasLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.TableLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.NoLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.FormItemLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": "Specifies the layout mechanism used for this container."},
{ "name": "layout",
  "type": "Property",
  "class": "mx.core.Application",
  "description": "Specifies the layout mechanism used for this application."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayoutForOverflow",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.FlexibleFirstChildHorizontalLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.GridLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VirtualListVerticalLayout",
  "description": "Layout children vertically"},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "mx.containers.beads.ViewStackLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.TileLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "spark.layouts.supportClasses.SparkLayoutBead",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlexLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualListVerticalLayout",
  "description": "Layout children vertically"},
{ "name": "layout",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AccordionView",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "org.apache.royale.jewel.Grid",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.DataGridPercentageLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayout",
  "description": "Layout children vertically"},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalSliderLayout",
  "description": "Performs the layout (size and positioning) of the Slide elements."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.express.beads.layouts.DataGridLayout",
  "description": "This layout algorithm handles columns of both pixel and percent widths."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayoutWithPaddingAndGap",
  "description": "Layout children vertically"},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayoutForOverflow",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.ButtonBarLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "mx.containers.beads.models.PanelModel",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.SimpleTableLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "spark.components.HGroup",
  "description": "The layout object for this container."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "spark.components.VGroup",
  "description": "The layout object for this container."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.TreeGridLayout",
  "description": "Performs the layout function, placing the ButtonBar header at the top and spread across the width and the columns below that, laid out horizontally."},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "Layout children"},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.BasicLayout",
  "description": ""},
{ "name": "layout",
  "type": "Property",
  "class": "org.apache.royale.jewel.HGroup",
  "description": ""},
{ "name": "layout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VerticalColumnLayout",
  "description": ""},
{ "name": "layoutChrome",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Respond to size changes by setting the positions and sizes of this container's borders."},
{ "name": "layoutCompleteHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.ScrollingFlexibleChild",
  "description": ""},
{ "name": "layoutIs3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "True if the layout transform has 3D values."},
{ "name": "layoutIs3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "true if the layout transform has 3D values."},
{ "name": "layoutMatrix",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The 2D matrix used during layout calculations to determine the layout and size of the component and its parent and siblings."},
{ "name": "layoutMatrix",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": ""},
{ "name": "layoutMatrix3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The 3D matrix used during layout calculations to determine the layout and size of the component and its parent and siblings."},
{ "name": "layoutMatrix3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": ""},
{ "name": "layoutNeeded",
  "type": "Method",
  "class": "org.apache.royale.core.GroupBase",
  "description": "Dispatches a \"layoutNeeded\" event"},
{ "name": "layoutNeeded",
  "type": "Method",
  "class": "mx.core.Container",
  "description": "Dispatches a \"layoutNeeded\" event"},
{ "name": "layoutObject",
  "type": "Property",
  "class": "mx.containers.Box",
  "description": ""},
{ "name": "layoutRotationX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutRotationX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "layoutRotationY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutRotationY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "layoutRotationZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutRotationZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "layoutScaleX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutScaleX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "layoutScaleY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutScaleY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "layoutScaleZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutScaleZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "layoutView",
  "type": "Property",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Returns the ILayoutView for the host."},
{ "name": "layoutViewportAfterContentLayout",
  "type": "Method",
  "class": "org.apache.royale.core.IViewport",
  "description": "This method is invoked after layout is complete."},
{ "name": "layoutViewportAfterContentLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": ""},
{ "name": "layoutViewportAfterContentLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport",
  "description": ""},
{ "name": "layoutViewportAfterContentLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ClippingViewport",
  "description": ""},
{ "name": "layoutViewportAfterContentLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.OverflowViewport",
  "description": ""},
{ "name": "layoutViewportBeforeContentLayout",
  "type": "Method",
  "class": "org.apache.royale.core.IViewport",
  "description": "Size the content area based on any visible scrolling controls and the given width and height."},
{ "name": "layoutViewportBeforeContentLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": ""},
{ "name": "layoutViewportBeforeContentLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport",
  "description": ""},
{ "name": "layoutViewportBeforeContentLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ClippingViewport",
  "description": ""},
{ "name": "layoutViewportBeforeContentLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.OverflowViewport",
  "description": ""},
{ "name": "layoutWidth",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Used by the mirroring transform."},
{ "name": "layoutWidth",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "Used by the mirroring transform."},
{ "name": "layoutX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "layoutY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "layoutZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "Layout transform convenience property."},
{ "name": "layoutZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "layout transform convenience property."},
{ "name": "leading",
  "type": "Property",
  "class": "org.apache.royale.core.TextLineMetrics",
  "description": ""},
{ "name": "leading",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "leadingModel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the leading model, which is a combination of leading basis and leading direction."},
{ "name": "leadingModel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the leading model, which is a combination of leading basis and leading direction."},
{ "name": "leadingModel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the leading model, which is a combination of leading basis and leading direction."},
{ "name": "leadingModel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.LocaleUtil",
  "description": ""},
{ "name": "leadingModelProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "leafFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyFormatOperation",
  "description": "The format properties to apply to the leaf elements in the range."},
{ "name": "leafFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ClearFormatOperation",
  "description": "The format properties to undefine on the leaf elements in the range."},
{ "name": "left",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "The horizontal distance in pixels from the left edge of the component to the anchor target's left edge."},
{ "name": "left",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "<p>For components, this layout constraint property is a facade on top of the similarly-named style."},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "mx.core.EdgeMetrics",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.mdl.Menu",
  "description": "Position the menu relative to the associated button."},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": ""},
{ "name": "left",
  "type": "Property",
  "class": "org.apache.royale.core.layout.EdgeData",
  "description": ""},
{ "name": "leftBearing",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "leftGridView",
  "type": "Property",
  "class": "spark.components.gridClasses.GridLayout",
  "description": "Displays the unlocked rows subset of the locked columns."},
{ "name": "leftMargin",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "leftMargin",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "leftMargin",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Slug",
  "description": ""},
{ "name": "leftPosition",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": "A boolean flag to activate \"mdl-tooltip--left\" effect selector."},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "An Array of LegendData instances that describe the items that should show up in a legend representing this series."},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "An array of Legend items."},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.PieChart",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.LegendItem",
  "description": "The LegendData instance that this LegendItem object represents."},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "legendData",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "legendDataChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Updates the Legend items when the series display name changes by dispatching a new LegendDataChanged event."},
{ "name": "legendDataChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Dispatches a new LegendDataChanged event."},
{ "name": "legendItemClass",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The class used to instantiate LegendItem objects."},
{ "name": "length",
  "type": "Property",
  "class": "mx.charts.chartClasses.RenderData",
  "description": "The number of items represented in this render data."},
{ "name": "length",
  "type": "Property",
  "class": "mx.collections.IList",
  "description": "The number of items in this collection."},
{ "name": "length",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": "IList implementation of length returns numChildren"},
{ "name": "length",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": "enables label decoration when filter"},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "The length of this BinaryData, in bytes."},
{ "name": "length",
  "type": "Property",
  "class": "mx.collections.ArrayList",
  "description": "Get the number of items in the list."},
{ "name": "length",
  "type": "Property",
  "class": "mx.collections.ICollectionView",
  "description": "The number of items in this view."},
{ "name": "length",
  "type": "Property",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "The number of items."},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "The number of items."},
{ "name": "length",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Returns length of list."},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "length",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": "Specifies the length of the axis, in screen coordinates."},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "The number of items currently in this view of the source ArrayList's data."},
{ "name": "length",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The number of item size valued elements."},
{ "name": "length",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": "The number of characters of text displayed in the TextArea."},
{ "name": "length",
  "type": "Property",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "length",
  "type": "Property",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": "The number of items."},
{ "name": "length",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "The number of characters of text displayed in the TextArea."},
{ "name": "length",
  "type": "Property",
  "class": "mx.collections.XMLListAdapter",
  "description": "The number of items in this list."},
{ "name": "length",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": "The length of the currently parsed collection."},
{ "name": "length",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": "The length of the currently parsed collection (i."},
{ "name": "letterSpacing",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "letterSpacing",
  "type": "Property",
  "class": "org.apache.royale.text.engine.SpaceJustifier",
  "description": ""},
{ "name": "level",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowOperationEvent",
  "description": "Operations may be merged into composite operations through nesting."},
{ "name": "level",
  "type": "Property",
  "class": "mx.logging.ILoggingTarget",
  "description": "Provides access to the level this target is currently set at."},
{ "name": "level",
  "type": "Property",
  "class": "mx.logging.AbstractTarget",
  "description": "Provides access to the level this target is currently set at."},
{ "name": "level",
  "type": "Property",
  "class": "mx.logging.LogEvent",
  "description": "Provides access to the level for this log event."},
{ "name": "ligatureLevel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Controls which of the ligatures that are defined in the font may be used in the text."},
{ "name": "ligatureLevel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Controls which of the ligatures that are defined in the font may be used in the text."},
{ "name": "ligatureLevel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Controls which of the ligatures that are defined in the font may be used in the text."},
{ "name": "ligatureLevel",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "ligatureLevelProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "light",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": "Activate \"light\" class selector."},
{ "name": "light",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "Activate \"md-light\" class selector."},
{ "name": "lightingColor",
  "type": "Property",
  "class": "org.apache.royale.svg.DiffuseLightingFilterElement",
  "description": ""},
{ "name": "lineBreak",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Controls word wrapping within the container (adopts default value if undefined during cascade)."},
{ "name": "lineBreak",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Controls word wrapping within the container (adopts default value if undefined during cascade)."},
{ "name": "lineBreak",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Controls word wrapping within the container (adopts default value if undefined during cascade)."},
{ "name": "lineBreak",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "lineBreakProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "lineCap",
  "type": "Property",
  "class": "org.apache.royale.graphics.IStroke",
  "description": ""},
{ "name": "lineCap",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": "The cap type on line segments."},
{ "name": "lineCountLimit",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TruncationOptions",
  "description": "The maximum number of lines to create."},
{ "name": "lineDash",
  "type": "Property",
  "class": "org.apache.royale.graphics.IStroke",
  "description": ""},
{ "name": "lineDash",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": "An array describing the pattern of line dashes."},
{ "name": "lineExtent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "lineExtent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "lineExtentTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "lineExtentTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "lineGap",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "lineHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Leading controls for the text."},
{ "name": "lineHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Leading controls for the text."},
{ "name": "lineHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Leading controls for the text."},
{ "name": "lineHeight",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "lineHeightProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "lineJoin",
  "type": "Property",
  "class": "org.apache.royale.graphics.IStroke",
  "description": ""},
{ "name": "lineJoin",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": "The join type of two segments."},
{ "name": "lineJustification",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextJustifier",
  "description": ""},
{ "name": "lineOffset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "lineOffset",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The line's offset in pixels from the appropriate container inset (as dictated by paragraph direction and container block progression), prior to alignment of lines in the paragraph."},
{ "name": "lineOffsetTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "lineOffsetTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "lineRotation",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "lineRotation",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "lineSegmentRenderer",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSeries",
  "description": "The class or class factory to use to render each segment of the series."},
{ "name": "lineSegmentType",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "The class used by this series to store all data necessary to represent a line segment."},
{ "name": "lineStroke",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Sets the stroke for the actual line segments."},
{ "name": "lineStyle",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Specifies a line style that Flash uses for subsequent calls to other Graphics methods (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the object."},
{ "name": "lineStyle",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Specifies a line style that Flash uses for subsequent calls to other Graphics methods (such as <code>lineTo()</code> or <code>drawCircle()</code>) for the object."},
{ "name": "lineStyle",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "lineThrough",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "If <code>true</code>, applies strikethrough, a line drawn through the middle of the text."},
{ "name": "lineThrough",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: If <code>true</code>, applies strikethrough, a line drawn through the middle of the text."},
{ "name": "lineThrough",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "If <code>true</code>, applies strikethrough, a line drawn through the middle of the text."},
{ "name": "lineThrough",
  "type": "Property",
  "class": "spark.components.supportClasses.ButtonBase",
  "description": ""},
{ "name": "lineThrough",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "lineThroughProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "lineTo",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Draws a line using the current line style from the current drawing position to (angle, radial); the current drawing position is then set to (angle, radial)."},
{ "name": "lineTo",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Draws a line using the current line style from the current drawing position to (x, y); the current drawing position is then set to (x, y)."},
{ "name": "lineTo",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Adds a lineTo command"},
{ "name": "lineTo",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "lines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": "Returns the array of lines."},
{ "name": "lines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ISimpleCompose",
  "description": ""},
{ "name": "lines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": ""},
{ "name": "lines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": ""},
{ "name": "link",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemRenderer",
  "description": ""},
{ "name": "linkActiveFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Defines the formatting attributes used for links in normal state."},
{ "name": "linkActiveFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Defines the formatting attributes used for links in normal state."},
{ "name": "linkActiveFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Defines the formatting attributes used for links in normal state."},
{ "name": "linkActiveFormatProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "linkElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.PointFormat",
  "description": ""},
{ "name": "linkHoverFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Defines the formatting attributes used for links in hover state, when the mouse is within the bounds (rolling over) a link."},
{ "name": "linkHoverFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Defines the formatting attributes used for links in hover state, when the mouse is within the bounds (rolling over) a link."},
{ "name": "linkHoverFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Defines the formatting attributes used for links in hover state, when the mouse is within the bounds (rolling over) a link."},
{ "name": "linkHoverFormatProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "linkNormalFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Defines the formatting attributes used for links in normal state."},
{ "name": "linkNormalFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Defines the formatting attributes used for links in normal state."},
{ "name": "linkNormalFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Defines the formatting attributes used for links in normal state."},
{ "name": "linkNormalFormatProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "linkState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ILinkElement",
  "description": ""},
{ "name": "linkState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "The current state of the link."},
{ "name": "list",
  "type": "Property",
  "class": "mx.collections.ComplexFieldChangeWatcher",
  "description": ""},
{ "name": "list",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": "the list to filter"},
{ "name": "list",
  "type": "Property",
  "class": "mx.collections.ListCollectionView",
  "description": "The IList that this collection view wraps."},
{ "name": "list",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxPopUpView",
  "description": ""},
{ "name": "list",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "The IArrayList that this collection view wraps."},
{ "name": "list",
  "type": "Property",
  "class": "spark.collections.SubListView",
  "description": "The IList to which all of IList methods are delegated."},
{ "name": "listArea",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.IDataGridLayout",
  "description": ""},
{ "name": "listArea",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IDataGridView",
  "description": ""},
{ "name": "listArea",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridView",
  "description": "The area used to hold the columns"},
{ "name": "listArea",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TreeGridView",
  "description": "The area used to hold the columns"},
{ "name": "listAutoPadding",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "This specifies an auto indent for the start edge of lists when the padding value of the list on that side is <code>auto</code>."},
{ "name": "listAutoPadding",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: This specifies an auto indent for the start edge of lists when the padding value of the list on that side is <code>auto</code>."},
{ "name": "listAutoPadding",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "This specifies an auto indent for the start edge of lists when the padding value of the list on that side is <code>auto</code>."},
{ "name": "listAutoPaddingProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "listData",
  "type": "Property",
  "class": "org.apache.royale.core.IItemRenderer",
  "description": "Additional data about the list structure that might be useful to itemRenderer implementations."},
{ "name": "listData",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "Additional data about the list structure the itemRenderer may find useful."},
{ "name": "listData",
  "type": "Property",
  "class": "mx.controls.listClasses.IDropInListItemRenderer",
  "description": "Implements the <code>listData</code> property using setter and getter methods."},
{ "name": "listData",
  "type": "Property",
  "class": "mx.controls.treeClasses.TreeItemRenderer",
  "description": "The text of the renderer is set to the <code>label</code>  property of this property."},
{ "name": "listData",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": "When a component is used as a drop-in item renderer or drop-in item editor, Flex initializes the <code>listData</code> property of the component with the appropriate data from the list control."},
{ "name": "listData",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "Additional data about the list structure the itemRenderer may find useful."},
{ "name": "listData",
  "type": "Property",
  "class": "mx.controls.NumericStepper",
  "description": "When a component is used as a drop-in item renderer or drop-in item editor, Flex initializes the <code>listData</code> property of the component with the appropriate data from the List control."},
{ "name": "listData",
  "type": "Property",
  "class": "spark.components.DataRenderer",
  "description": "Additional data about the list structure the itemRenderer may find useful."},
{ "name": "listData",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "Additional data about the list structure the itemRenderer may find useful."},
{ "name": "listData",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": "When a component is used as a drop-in item renderer or drop-in item editor, Flex initializes the <code>listData</code> property of the component with the appropriate data from the list control."},
{ "name": "listData",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "When a component is used as a drop-in item renderer or drop-in item editor, Flex initializes the <code>listData</code> property of the component with the appropriate data from the list control."},
{ "name": "listData",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "listEndIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.utils.NumberLineUserData",
  "description": ""},
{ "name": "listFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateListOperation",
  "description": "TextLayoutFormat to be applied to the new IListElement."},
{ "name": "listItemAvatar",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "Activate \"mdl-list__item-avatar\" class selector, for use in a list item"},
{ "name": "listItemIcon",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "Activate \"mdl-list__item-icon\" class selector, for use in a list item"},
{ "name": "listMarkerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Defines the formatting attributes list markers."},
{ "name": "listMarkerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": "Defines the formatting attributes list markers."},
{ "name": "listMarkerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Defines the formatting attributes list markers."},
{ "name": "listMarkerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Defines the formatting attributes list markers."},
{ "name": "listMarkerFormatProp",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "listMarkerFormatProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "listModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ListView",
  "description": ""},
{ "name": "listModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": "The model."},
{ "name": "listModel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualListView",
  "description": ""},
{ "name": "listModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ListView",
  "description": ""},
{ "name": "listModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": "The model."},
{ "name": "listModel",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": "The model."},
{ "name": "listStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "listStyleImage",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "listStylePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "<p>Legal values are ListStylePosition."},
{ "name": "listStylePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: <p>Legal values are ListStylePosition."},
{ "name": "listStylePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "<p>Legal values are ListStylePosition."},
{ "name": "listStylePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.utils.NumberLineUserData",
  "description": ""},
{ "name": "listStylePosition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "listStylePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "listStylePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.NumberLineFactory",
  "description": ""},
{ "name": "listStylePositionProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "listStyleType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "<p>Legal values are ListStyleType."},
{ "name": "listStyleType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: <p>Legal values are ListStyleType."},
{ "name": "listStyleType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "<p>Legal values are ListStyleType."},
{ "name": "listStyleType",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "listStyleType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IListElement",
  "description": "<p>Legal values are ListStyleType."},
{ "name": "listStyleTypeProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "listView",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": "The view."},
{ "name": "listView",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": "The view."},
{ "name": "listView",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": "The view."},
{ "name": "listener",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "Specifies the validation listener."},
{ "name": "listener",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "Object that is notified at each interval of the animation."},
{ "name": "listeners",
  "type": "Property",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "The binding objects that are listening to this Watcher."},
{ "name": "live_help",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "live_help",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "lng",
  "type": "Method",
  "class": "google.maps.LatLng",
  "description": ""},
{ "name": "load",
  "type": "Method",
  "class": "mx.net.FileReference",
  "description": ""},
{ "name": "load",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoader",
  "description": "Makes the URL request."},
{ "name": "load",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": "Makes the URL request."},
{ "name": "load",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFont",
  "description": ""},
{ "name": "load",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "loads the request"},
{ "name": "load",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileLoader",
  "description": "Load the file to the model's blob."},
{ "name": "loadApplication",
  "type": "Method",
  "class": "org.apache.royale.html.SubAppLoader",
  "description": "Specifies the URL to load, depending on the runtime platform."},
{ "name": "loadBeadFromValuesManager",
  "type": "Method",
  "class": "org.apache.royale.utils",
  "description": ""},
{ "name": "loadCSS",
  "type": "Method",
  "class": "org.apache.royale.utils.css",
  "description": "Utility function to dynamically load CSS in your application."},
{ "name": "loadCSS",
  "type": "Method",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": ""},
{ "name": "loadDepsHandler",
  "type": "Method",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": ""},
{ "name": "loadFont",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFontLoader",
  "description": ""},
{ "name": "loadFontBinary",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFontLoader",
  "description": ""},
{ "name": "loadFromBinary",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFont",
  "description": ""},
{ "name": "loadHandler",
  "type": "Method",
  "class": "org.apache.royale.core.ImageViewBase",
  "description": ""},
{ "name": "loadHandler",
  "type": "Method",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": ""},
{ "name": "loadJavascript",
  "type": "Method",
  "class": "org.apache.royale.utils.js",
  "description": "Utility function to dynamically load Javascript in your application."},
{ "name": "loadMap",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "loadModule",
  "type": "Method",
  "class": "org.apache.royale.html.UIModuleLoader",
  "description": "Load the module."},
{ "name": "loadModule",
  "type": "Method",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": "Load the module."},
{ "name": "loadModule",
  "type": "Method",
  "class": "org.apache.royale.jewel.ModuleLoader",
  "description": "Load the module."},
{ "name": "loadState",
  "type": "Method",
  "class": "mx.containers.ViewStack",
  "description": ""},
{ "name": "loadWSDL",
  "type": "Method",
  "class": "mx.rpc.soap.WebService",
  "description": "Instructs the WebService to download the WSDL document."},
{ "name": "loader",
  "type": "Property",
  "class": "org.apache.royale.text.engine.Fonts",
  "description": ""},
{ "name": "localIndex",
  "type": "Property",
  "class": "mx.collections.ListCollectionView",
  "description": "When the view is sorted or filtered the <code>localIndex</code> property contains an array of items in the sorted or filtered (ordered, reduced) view, in the sorted order."},
{ "name": "localIndex",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "When the view is sorted or filtered the <code>localIndex</code> property contains an array of items in the sorted or filtered (ordered, reduced) view, in the sorted order."},
{ "name": "localName",
  "type": "Property",
  "class": "QName",
  "description": ""},
{ "name": "localToData",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement2",
  "description": "Converts a coordinate on screen to a tuple of data values."},
{ "name": "localToData",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": ""},
{ "name": "localToData",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "localToData",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "localToGlobal",
  "type": "Method",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "localToGlobal",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "localToGlobal"},
{ "name": "localToGlobal",
  "type": "Method",
  "class": "org.apache.royale.utils.PointUtils",
  "description": "Converts a point from local coordinates to global coordinates"},
{ "name": "localX",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "localX",
  "type": "Method",
  "class": "org.apache.royale.events.utils.MouseUtils",
  "description": "Returns the localX value."},
{ "name": "localX",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": ""},
{ "name": "localY",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "localY",
  "type": "Method",
  "class": "org.apache.royale.events.utils.MouseUtils",
  "description": "Returns the localY value."},
{ "name": "localY",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": ""},
{ "name": "locale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The locale of the text."},
{ "name": "locale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The locale of the text."},
{ "name": "locale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The locale of the text."},
{ "name": "locale",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "locale",
  "type": "Property",
  "class": "mx.core.UITextFormat",
  "description": "The locale of the text."},
{ "name": "locale",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "locale"},
{ "name": "locale",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextJustifier",
  "description": ""},
{ "name": "locale",
  "type": "Property",
  "class": "mx.resources.IResourceBundle",
  "description": "The locale for which this bundle's resources have been localized."},
{ "name": "locale",
  "type": "Property",
  "class": "mx.resources.ResourceBundle",
  "description": ""},
{ "name": "locale",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "localeChain",
  "type": "Property",
  "class": "mx.resources.IResourceManager",
  "description": "An Array of locale Strings, such as <code>[ \"en_US\" ]</code>, which specifies one or more locales to be searched for resources."},
{ "name": "localeChain",
  "type": "Property",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "localeChain",
  "type": "Property",
  "class": "org.apache.royale.core.ILocalizedValuesImpl",
  "description": "Determines the locale(s) to use for getting the values."},
{ "name": "localeChain",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleLocalizedValuesImpl",
  "description": ""},
{ "name": "localeProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "location",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "location",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "One of the values from TextFlowLineLocation for specifying a line's location within a paragraph."},
{ "name": "location",
  "type": "Property",
  "class": "mx.events.CollectionEvent",
  "description": ""},
{ "name": "location_off",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "location_off",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "location_on",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "location_on",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "locked",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "lockedColumnCount",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "lockedColumnCount",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "The index of the first column in the control that scrolls."},
{ "name": "lockedColumnCount",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The first lockedColumnCount columns are \"locked\", i."},
{ "name": "lockedColumnsSeparator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render the vertical separator between locked and unlocked columns."},
{ "name": "lockedColumnsSeparator",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "A visual element displayed between the locked and unlocked columns."},
{ "name": "lockedColumnsSeparatorElement",
  "type": "Property",
  "class": "spark.components.gridClasses.GridLayout",
  "description": "If lockedColumnCount is greater than zero, this element is displayed in between the locked and unlocked columns."},
{ "name": "lockedRowCount",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "lockedRowCount",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The first lockedRowCount rows are \"locked\", i."},
{ "name": "lockedRowsSeparator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render the horizontal separator between locked and unlocked rows."},
{ "name": "lockedRowsSeparator",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "A visual element displayed between the locked and unlocked rows."},
{ "name": "lockedRowsSeparatorElement",
  "type": "Property",
  "class": "spark.components.gridClasses.GridLayout",
  "description": "If lockedRowCount is greater than zero, this element is displayed in between the locked and unlocked rows."},
{ "name": "log",
  "type": "Method",
  "class": "mx.logging.ILogger",
  "description": "Logs the specified data at the given level."},
{ "name": "log",
  "type": "Method",
  "class": "mx.logging.LogLogger",
  "description": ""},
{ "name": "log",
  "type": "Property",
  "class": "org.apache.royale.core.EventLoggingBead",
  "description": ""},
{ "name": "logEvent",
  "type": "Method",
  "class": "mx.logging.AbstractTarget",
  "description": "This method handles a <code>LogEvent</code> from an associated logger."},
{ "name": "logEvent",
  "type": "Method",
  "class": "mx.logging.targets.LineFormattedTarget",
  "description": "This method handles a <code>LogEvent</code> from an associated logger."},
{ "name": "logicalWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "login",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Authenticates the ChannelSet with the server using the provided credentials."},
{ "name": "loginAfterDisconnect",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "logout",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Sends a CommandMessage to the server to logout if the Channel is connected."},
{ "name": "logout",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": "Logs the user out of the destination."},
{ "name": "logout",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Logs the MessageAgent out from its remote destination."},
{ "name": "logout",
  "type": "Method",
  "class": "mx.rpc.http.HTTPService",
  "description": "Logs the user out of the destination."},
{ "name": "logout",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Logs the ChannelSet out from the server."},
{ "name": "loop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuBuiltInItems",
  "description": ""},
{ "name": "loop",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Effect",
  "description": "Determines if the effect should loop continuously or not."},
{ "name": "low",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The low value of this item converted into screen coordinates."},
{ "name": "lowField",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Specifies the field of the data provider that determines the y-axis location of the low value of the element."},
{ "name": "lowFilter",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The low value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "lowNumber",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The low value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "lowValue",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The low value of this item."},
{ "name": "lowerMargin",
  "type": "Property",
  "class": "mx.charts.chartClasses.BoundedValue",
  "description": "The margin, in pixels, required below the value in order to render properly."},
{ "name": "lowerThanMinError",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Error message when the value is less than <code>minValue</code>."},
{ "name": "macType",
  "type": "Property",
  "class": "mx.net.FileFilter",
  "description": ""},
{ "name": "mail_outline",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "mail_outline",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "mainClassName",
  "type": "Property",
  "class": "mx.managers.SystemManager",
  "description": ""},
{ "name": "maintainAspectRatio",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "majorAxis",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Defines how the <code>getBounds()</code> method maps from majorSize, minorSize to width and height."},
{ "name": "majorAxisOffset",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The offset of the first item from the origin in the majorAxis direction."},
{ "name": "makeConstantBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": ""},
{ "name": "makeLink",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Creates one or more LinkElements out of the selected positions."},
{ "name": "makeObjectsBindable",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "When <code>true</code>, the objects returned support data binding to UI controls."},
{ "name": "makeObjectsBindable",
  "type": "Property",
  "class": "mx.rpc.AbstractInvoker",
  "description": "When this value is true, anonymous objects returned are forced to bindable objects."},
{ "name": "makeObjectsBindable",
  "type": "Property",
  "class": "mx.rpc.remoting.Operation",
  "description": "When this value is true, anonymous objects returned are forced to bindable objects."},
{ "name": "makeObjectsBindable",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": "When this value is true, anonymous objects returned are forced to bindable objects."},
{ "name": "makeObjectsBindable",
  "type": "Property",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "When this value is true, anonymous objects returned are forced to bindable objects."},
{ "name": "makeObjectsBindable",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "When this value is true, anonymous objects returned are forced to bindable objects."},
{ "name": "makeTCY",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Creates a TCY run out of the selected positions."},
{ "name": "manageEnterKey",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies whether the Enter / Return key is entered as text by Text Layout Framework, to split a paragraph for example, or the client code handles it."},
{ "name": "manageEnterKey",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "manageTabKey",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies whether the TAB key is entered as text by Text Layout Framework, or Flash Player or AIR handles it and turns it into a tabbed panel event."},
{ "name": "manageTabKey",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": "@copy IConfiguration#manageTabKey"},
{ "name": "managers",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": "The managers property stores a list of data managers which modify the behavior of this service."},
{ "name": "mapCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Converts a set of values of arbitrary type to a set of numbers that can be transformed into screen coordinates."},
{ "name": "mapCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "mapCache",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "mapTypes",
  "type": "Property",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "mapit",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Adjusts the map to the given coordinate and zoom level."},
{ "name": "mappingChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.IChartElement",
  "description": "Indicates to the element that the data mapping of the associated axes has changed."},
{ "name": "mappingChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Called when the mapping of one or more associated axes changes."},
{ "name": "mappingChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "mappingChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "margin",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "margin",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "margin",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "margin",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "margin",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "marginBlockEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "marginBlockStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "marginBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "bottom margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: bottom margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "bottom margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginBottom",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "marginBottom",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "marginBottom",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "marginBottom",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "marginBottom",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "marginBottomProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "marginInlineEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "marginInlineStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "marginLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "left margin in pixels(adopts default value if undefined during cascade)."},
{ "name": "marginLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: left margin in pixels(adopts default value if undefined during cascade)."},
{ "name": "marginLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "left margin in pixels(adopts default value if undefined during cascade)."},
{ "name": "marginLeft",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "marginLeft",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "marginLeft",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "marginLeft",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "marginLeft",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "marginLeftProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "marginRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "right margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: right margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "right margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginRight",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "marginRight",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "marginRight",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "marginRight",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "marginRight",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "marginRightProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "marginTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "top margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: top margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "top margin in pixels (adopts default value if undefined during cascade)."},
{ "name": "marginTop",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "marginTop",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "marginTop",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "marginTop",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "marginTop",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "marginTopProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "margins",
  "type": "Property",
  "class": "org.apache.royale.core.layout.LayoutData",
  "description": ""},
{ "name": "markAddress",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "markAddress",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Finds the given address and places a marker on it."},
{ "name": "markCurrentLocation",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "markCurrentLocation",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Marks the current center of the map."},
{ "name": "marker",
  "type": "Property",
  "class": "mx.charts.chartClasses.LegendData",
  "description": "A visual indicator associating the legend item with the series or item being represented."},
{ "name": "marker",
  "type": "Property",
  "class": "mx.charts.LegendItem",
  "description": "The marker displayed by this legend item."},
{ "name": "markerAspectRatio",
  "type": "Property",
  "class": "mx.charts.LegendItem",
  "description": "The aspect ratio for the marker associated with this legend item."},
{ "name": "markerClicked",
  "type": "Event",
  "description": ""},
{ "name": "markerClicked",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": ""},
{ "name": "markerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "markerFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.NumberLineFactory",
  "description": ""},
{ "name": "marshal",
  "type": "Method",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Marshal a SWFBridgeRequest from a remote ApplicationDomain into the current ApplicationDomain."},
{ "name": "marshallExceptions",
  "type": "Property",
  "class": "mx.external.ExternalInterface",
  "description": "Indicates whether the external interface should attempt to pass ActionScript exceptions to the current browser and JavaScript exceptions to the player."},
{ "name": "mask",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "mask",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskClip",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskComposite",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskElement",
  "type": "Method",
  "class": "org.apache.royale.svg.MaskBead",
  "description": ""},
{ "name": "maskImage",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskMode",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskOrigin",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskPosition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskRepeat",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskSize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maskType",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "matchedIndex",
  "type": "Property",
  "class": "mx.validators.RegExpValidationResult",
  "description": "An integer that contains the starting index in the input String of the match."},
{ "name": "matchedString",
  "type": "Property",
  "class": "mx.validators.RegExpValidationResult",
  "description": "A String that contains the substring of the input String that matches the regular expression."},
{ "name": "matchedSubstrings",
  "type": "Property",
  "class": "mx.validators.RegExpValidationResult",
  "description": "An Array of Strings that contains parenthesized substring matches, if any."},
{ "name": "matches",
  "type": "Method",
  "class": "QName",
  "description": ""},
{ "name": "matchesCSSState",
  "type": "Method",
  "class": "mx.styles.IAdvancedStyleClient",
  "description": "Returns <code>true</code> if <code>cssState</code> matches <code>currentCSSState</code>."},
{ "name": "matchesCSSState",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "matchesCSSState",
  "type": "Method",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "matchesCSSType",
  "type": "Method",
  "class": "mx.styles.IAdvancedStyleClient",
  "description": "Determines whether this instance is the same as, or is a subclass of, the given type."},
{ "name": "matchesCSSType",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "matchesCSSType",
  "type": "Method",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "material",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": "add class name \"material-icons\" since in IE11 this font only works with that class name strangely."},
{ "name": "materialIcon",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.IMaterialIconProvider",
  "description": ""},
{ "name": "materialIcon",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A material icon to use with the button."},
{ "name": "materialIcon",
  "type": "Property",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": "A material icon."},
{ "name": "matrix",
  "type": "Property",
  "class": "org.apache.royale.core.ITransformModel",
  "description": "The matrix of the Transform"},
{ "name": "matrix",
  "type": "Property",
  "class": "org.apache.royale.core.TransformModel",
  "description": ""},
{ "name": "matrix",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The 2D matrix either set directly by the user, or composed by combining the transform center, scale, rotation and translation, in that order."},
{ "name": "matrix",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "matrix3D",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The 3D matrix either set directly by the user, or composed by combining the transform center, scale, rotation and translation, in that order."},
{ "name": "max",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "max",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Progress",
  "description": "A Number value reflecting the content attribute of the same name, limited to numbers greater than zero."},
{ "name": "max",
  "type": "Property",
  "class": "mx.containers.gridClasses.GridRowInfo",
  "description": "Input: Measurement for the GridRow."},
{ "name": "max",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "The maximum data value displayed by the element."},
{ "name": "maxBarWidth",
  "type": "Property",
  "class": "mx.charts.chartClasses.IBar",
  "description": "Specifies how wide to draw the items, in pixels."},
{ "name": "maxBarWidth",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Specifies the width of the bars, in pixels."},
{ "name": "maxBarWidth",
  "type": "Property",
  "class": "mx.charts.series.BarSet",
  "description": "Specifies how wide to draw the bars, in pixels."},
{ "name": "maxCellHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Maximum height of a table cell."},
{ "name": "maxCellHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Maximum height of a table cell."},
{ "name": "maxCellHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Maximum height of a table cell."},
{ "name": "maxCellHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": ""},
{ "name": "maxCellHeightProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "maxChars",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.NumericOnlyTextInputBead",
  "description": "The character used to separate the integer and fraction parts of numbers."},
{ "name": "maxChars",
  "type": "Property",
  "class": "spark.components.RichEditableText",
  "description": ""},
{ "name": "maxChars",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "maxChars",
  "type": "Property",
  "class": "mx.controls.NumericStepper",
  "description": "The maximum number of characters that can be entered in the field."},
{ "name": "maxChars",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "Maximum number of characters that users can enter in the text field."},
{ "name": "maxChars",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "maxChars",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Maximum number of characters that users can enter in the text field."},
{ "name": "maxChars",
  "type": "Property",
  "class": "spark.components.NumericStepper",
  "description": "The maximum number of characters that can be entered in the field."},
{ "name": "maxColumnWidth",
  "type": "Property",
  "class": "mx.charts.chartClasses.IColumn",
  "description": "Specifies how wide to draw the items, in pixels."},
{ "name": "maxColumnWidth",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Specifies the width of the columns, in pixels."},
{ "name": "maxColumnWidth",
  "type": "Property",
  "class": "mx.charts.series.ColumnSet",
  "description": "Specifies the width of the columns, in pixels."},
{ "name": "maxColumnWidth",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Specifies the width of the elements, in pixels."},
{ "name": "maxDisplayedLines",
  "type": "Property",
  "class": "spark.components.supportClasses.TextBase",
  "description": "An integer which determines whether, and where, the text gets truncated."},
{ "name": "maxFrequency",
  "type": "Property",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Determines the maximum number of messages per second the Consumer wants to receive."},
{ "name": "maxHeight",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the maximum height of the component, in pixels, as the component's coordinates."},
{ "name": "maxHeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The maximum recommended height of the component to be considered by the parent during layout."},
{ "name": "maxHeight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.FlexibleFirstChildHorizontalLayout",
  "description": ""},
{ "name": "maxHeight",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maxHeight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayout",
  "description": ""},
{ "name": "maxHeight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayout",
  "description": ""},
{ "name": "maxHeight",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Number that specifies the maximum height of the ConstraintRow instance, in pixels, in the ConstraintRow instance's coordinates."},
{ "name": "maxHorizontalScrollPosition",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The largest possible value for the <code>horizontalScrollPosition</code> property."},
{ "name": "maxHorizontalScrollPosition",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": "Maximum value of <code>horizontalScrollPosition</code>."},
{ "name": "maxLabelRadius",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "The maximum amount of the PieSeries's radius that can be allocated to labels."},
{ "name": "maxLabelWidth",
  "type": "Property",
  "class": "mx.charts.ColumnChart",
  "description": "Determines maximum width in pixels of label of items."},
{ "name": "maxLabelWidth",
  "type": "Property",
  "class": "mx.containers.Form",
  "description": "The maximum width, in pixels, of the labels of the FormItems containers in this Form."},
{ "name": "maxLength",
  "type": "Property",
  "class": "mx.validators.StringValidator",
  "description": "Maximum length for a valid String."},
{ "name": "maxLength",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.StringValidator",
  "description": "Maximum length for a valid String."},
{ "name": "maxPercentValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": ""},
{ "name": "maxRadius",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "The radius of the largest item renderered in this series."},
{ "name": "maxRowHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "The maximum height of each row."},
{ "name": "maxRowHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "maxTipWidth",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataTip",
  "description": "Specifies the maximum width of the bounding box, in pixels, for new DataTip controls."},
{ "name": "maxValue",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Maximum value for a valid number."},
{ "name": "maxValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyHandler",
  "description": ""},
{ "name": "maxValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": ""},
{ "name": "maxValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.NumberPropertyHandler",
  "description": ""},
{ "name": "maxValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.IntPropertyHandler",
  "description": ""},
{ "name": "maxValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PercentPropertyHandler",
  "description": ""},
{ "name": "maxVerticalScrollPosition",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The largest possible value for the <code>verticalScrollPosition</code> property."},
{ "name": "maxWidth",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the maximum width of the component, in pixels, as the component's coordinates."},
{ "name": "maxWidth",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The maximum recommended width of the component to be considered by the parent during layout."},
{ "name": "maxWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalDisplay",
  "description": ""},
{ "name": "maxWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.FlexibleFirstChildHorizontalLayout",
  "description": ""},
{ "name": "maxWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maxWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayout",
  "description": ""},
{ "name": "maxWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayout",
  "description": ""},
{ "name": "maxWidth",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The maximum width of this column in pixels."},
{ "name": "maxWidth",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "Number that specifies the maximum width of the ConstraintColumn instance, in pixels, in the ConstraintColumn instance's coordinates."},
{ "name": "maxYear",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "The last year selectable in the control."},
{ "name": "maxYear",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "The last year selectable in the control."},
{ "name": "maxZoom",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IHorizontalAxisBead",
  "description": "The explicit maximum value being represented by this axis."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.jewel.NumericStepper",
  "description": "The maximum value the control will display."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.jewel.Slider",
  "description": "The maximum value of the Slider."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.html.Slider",
  "description": "The maximum value of the Slider."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalCategoryAxisBead",
  "description": ""},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IVerticalAxisBead",
  "description": "The explicit maximum value being represented by this axis."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalCategoryAxisBead",
  "description": ""},
{ "name": "maximum",
  "type": "Property",
  "class": "mx.charts.LogAxis",
  "description": "Specifies the maximum value for an axis label."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalLinearAxisBead",
  "description": "The maximum value to be represented on this axis."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.core.IRangeModel",
  "description": "The maximum value."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModel",
  "description": "The maximum value for the range (defaults to 100)."},
{ "name": "maximum",
  "type": "Property",
  "class": "mx.controls.NumericStepper",
  "description": "Maximum value of the NumericStepper."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.jewel.Spinner",
  "description": "The maximum value of the Spinner."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.html.NumericStepper",
  "description": "The maximum value the control will display."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": "The maximum value for the range (defaults to 100)."},
{ "name": "maximum",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Specifies the maximum value for an axis label."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalLinearAxisBead",
  "description": "The maximum value to be represented on this axis."},
{ "name": "maximum",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Largest progress value for the ProgressBar."},
{ "name": "maximum",
  "type": "Property",
  "class": "mx.charts.LinearAxis",
  "description": "Specifies the maximum value for an axis label."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SliderRangeModel",
  "description": "The maximum value for the range (defaults to 100)."},
{ "name": "maximum",
  "type": "Property",
  "class": "spark.components.supportClasses.Range",
  "description": "The maximum valid <code>value</code>."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SliderRangeModel",
  "description": "The maximum value for the range (defaults to 100)."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.mdl.Slider",
  "description": "The maximum value of the Slider."},
{ "name": "maximum",
  "type": "Property",
  "class": "org.apache.royale.html.Spinner",
  "description": "The maximum value of the Spinner."},
{ "name": "maximum",
  "type": "Property",
  "class": "spark.components.NumericStepper",
  "description": "Number which represents the maximum value possible for <code>value</code>."},
{ "name": "maximumLabelPrecision",
  "type": "Property",
  "class": "mx.charts.LogAxis",
  "description": "Specifies the maximum number of decimal places for representing fractional values on the labels generated by this axis."},
{ "name": "maximumLabelPrecision",
  "type": "Property",
  "class": "mx.charts.LinearAxis",
  "description": "Specifies the maximum number of decimal places for representing fractional values on the labels generated by this axis."},
{ "name": "maximumSpacing",
  "type": "Property",
  "class": "org.apache.royale.text.engine.SpaceJustifier",
  "description": ""},
{ "name": "maxlength",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.MaxNumberCharacters",
  "description": "The Number to use as the maximun length of characters."},
{ "name": "maxrows",
  "type": "Property",
  "class": "org.apache.royale.mdl.TextArea",
  "description": "The max number of rows in the textarea."},
{ "name": "maxrows",
  "type": "Property",
  "class": "org.apache.royale.jewel.TextArea",
  "description": "The max number of rows in the textarea."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Calculates the default size, and optionally the default minimum size, of the component."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.controls.listClasses.ListBase",
  "description": ""},
{ "name": "measure",
  "type": "Method",
  "class": "mx.containers.ViewStack",
  "description": "Calculates the default sizes and minimum and maximum values of the ViewStack container."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTip",
  "description": ""},
{ "name": "measure",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Measures the target's default size based on its content, and optionally measures the target's default minimum size."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.containers.Form",
  "description": "Calculates the preferred, minimum and maximum sizes of the Form."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.containers.Grid",
  "description": "Calculates the preferred, minimum, and maximum sizes of the Grid."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.containers.Tile",
  "description": "Calculates the default minimum and maximum sizes of the Tile container."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.controls.MenuBar",
  "description": "Calculates the preferred width and height of the MenuBar based on the default widths of the MenuBar items."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.containers.FormItem",
  "description": "Calculates the preferred, minimum and maximum sizes of the FormItem."},
{ "name": "measure",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "measure",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartLabel",
  "description": ""},
{ "name": "measureComponent",
  "type": "Method",
  "class": "org.apache.royale.utils",
  "description": ""},
{ "name": "measureHTMLText",
  "type": "Method",
  "class": "mx.core.UITextFormat",
  "description": "Returns measurement information for the specified HTML text, which may contain HTML tags such as <code>&lt;font&gt;</code> and <code>&lt;b&gt;</code>, assuming that it is displayed in a single-line UITextField, and using this UITextFormat object to define the text format."},
{ "name": "measureHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "measureHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "measureLabels",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "measureLabels",
  "type": "Method",
  "class": "mx.charts.ColumnChart",
  "description": "Determines positions and dimensions of labels for all series in the chart"},
{ "name": "measureLabels",
  "type": "Method",
  "class": "mx.charts.BarChart",
  "description": "Determines positions and dimensions of labels for all series in the chart"},
{ "name": "measureText",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Measures the specified text, assuming that it is displayed in a single-line UITextField (or UIFTETextField) using a UITextFormat determined by the styles of this UIComponent."},
{ "name": "measureText",
  "type": "Method",
  "class": "mx.core.UITextFormat",
  "description": "Returns measurement information for the specified text, assuming that it is displayed in a single-line UITextField component, and using this UITextFormat object to define the text format."},
{ "name": "measureWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "measureWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": "The measured height of this object."},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default height of the component, in pixels."},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "org.apache.royale.core.IMeasurementBead",
  "description": "The measured height"},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ControlBarMeasurementBead",
  "description": "Returns the overall height of the ControlBar."},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "spark.components.Label",
  "description": ""},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "spark.components.DropDownList",
  "description": ""},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertMeasurementBead",
  "description": "Returns the overall height of the org."},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "mx.controls.VRule",
  "description": ""},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "The natural height of the graphic."},
{ "name": "measuredHeight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TitleBarMeasurementBead",
  "description": "The overall height of the org."},
{ "name": "measuredMinHeight",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "measuredMinHeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default minimum height of the component, in pixels."},
{ "name": "measuredMinWidth",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "measuredMinWidth",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default minimum width of the component, in pixels."},
{ "name": "measuredSizeIncludesScrollBars",
  "type": "Property",
  "class": "spark.components.Scroller",
  "description": "If <code>true</code>, the Scroller's measured size includes the space required for the visible scroll bars, otherwise the Scroller's measured size depends only on its viewport."},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": "The measured width of this object."},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The default width of the component, in pixels."},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "spark.components.RadioButton",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "org.apache.royale.core.IMeasurementBead",
  "description": "The measured width."},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ControlBarMeasurementBead",
  "description": "Returns the overall width of the ControlBar."},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "spark.components.Label",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "spark.components.DropDownList",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertMeasurementBead",
  "description": "Returns the overall width of the org."},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "mx.controls.VRule",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "The natural width of the graphic."},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "spark.components.CheckBox",
  "description": ""},
{ "name": "measuredWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TitleBarMeasurementBead",
  "description": "The overall width of the org."},
{ "name": "measurementBead",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "A measurement bead, if one exists."},
{ "name": "measuringElement",
  "type": "Property",
  "class": "mx.managers.SystemManager",
  "description": ""},
{ "name": "memberType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.ArrayProperty",
  "description": "The type the members of the array are required to be."},
{ "name": "menu",
  "type": "Property",
  "class": "mx.events.MenuEvent",
  "description": "The specific Menu instance associated with the event, such as the menu or submenu that was hidden or opened."},
{ "name": "menuBarItems",
  "type": "Property",
  "class": "mx.controls.MenuBar",
  "description": "An Array that contains the MenuBarItem objects that render each item in the top-level menu bar of a MenuBar control."},
{ "name": "menuButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateFieldView",
  "description": "The TextButton that triggers the display of the DateChooser pop-up."},
{ "name": "menuButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateFieldView",
  "description": "The TextButton that triggers the display of the DateChooser pop-up."},
{ "name": "menuHide",
  "type": "Event",
  "description": "Dispatched when a menu or submenu is dismissed."},
{ "name": "menuList",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.MenuModel",
  "description": "The array of active IMenu instances."},
{ "name": "menuSelectHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a menuSelect event."},
{ "name": "menuSelectHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "menuSelectHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>ContextMenuEvent."},
{ "name": "menuSelectHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "menuShow",
  "type": "Event",
  "description": "Dispatched when a menu or submenu opens."},
{ "name": "menuShow",
  "type": "Event",
  "description": "Dispatched when a pop-up submenu opens, or the user selects a menu bar item with no drop-down menu."},
{ "name": "menus",
  "type": "Property",
  "class": "mx.controls.MenuBar",
  "description": "An Array containing the Menu objects corresponding to the pop-up submenus of this MenuBar control."},
{ "name": "mergeInToArrayBuffer",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "mergeParagraphWithNext",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "mergeTextElements",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "mergeToPreviousIfPossible",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.IToastModel",
  "description": "Represents main text displayed on Snackbar/Toast"},
{ "name": "message",
  "type": "Property",
  "class": "mx.rpc.AsyncToken",
  "description": "Provides access to the associated message."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.ToastModel",
  "description": "The message of the toast"},
{ "name": "message",
  "type": "Property",
  "class": "mx.messaging.MessageResponder",
  "description": "Provides access to the sent Message."},
{ "name": "message",
  "type": "Event",
  "description": "Dispatched when a channel receives a message from its endpoint."},
{ "name": "message",
  "type": "Property",
  "class": "mx.messaging.events.MessageEvent",
  "description": "The Message associated with this event."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "The message to be displayed by the Alert."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The message to display."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The message to display."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.html.Alert",
  "description": "The message to display in the Alert body."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.mdl.Toast",
  "description": "Message to be displayed on Snackbar"},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Failure",
  "description": "Convenience method."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SnackbarModel",
  "description": "Set message to be displayed."},
{ "name": "message",
  "type": "Event",
  "description": "Dispatched when a message is received by the Consumer."},
{ "name": "message",
  "type": "Event",
  "description": "Dispatched when a message is received by the Consumer."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": "The text message to display in the Snackbar."},
{ "name": "message",
  "type": "Property",
  "class": "mx.logging.LogEvent",
  "description": "Provides access to the message that was logged."},
{ "name": "message",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.net.events.FaultEvent",
  "description": ""},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.ErrorMessage",
  "description": "Provides the error message."},
{ "name": "message",
  "type": "Property",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "The ErrorMessage for this event."},
{ "name": "message",
  "type": "Property",
  "class": "org.apache.royale.jewel.Alert",
  "description": "The message to display in the Alert body."},
{ "name": "message",
  "type": "Property",
  "class": "mx.events.ValidationResultEvent",
  "description": "A single string that contains every error message from all of the ValidationResult objects in the results Array."},
{ "name": "messageAgents",
  "type": "Property",
  "class": "mx.messaging.ChannelSet",
  "description": "Provides access to the set of MessageAgents that use this ChannelSet."},
{ "name": "messageHandler",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Redispatches message events from the currently connected Channel."},
{ "name": "messageId",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessageExt",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "mx.messaging.events.MessageEvent",
  "description": ""},
{ "name": "messageId",
  "type": "Property",
  "class": "mx.messaging.messages.IMessage",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AsyncMessageExt",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AcknowledgeMessageExt",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "mx.messaging.messages.AsyncMessageExt",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "mx.messaging.messages.AcknowledgeMessageExt",
  "description": "The unique id for the message."},
{ "name": "messageId",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessageExt",
  "description": "The unique id for the message."},
{ "name": "messageSize",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "The size of the original client message as measured during deserialization by the server endpoint."},
{ "name": "messageSize",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Size of message in Bytes (message types depends on what header this MPI is in)"},
{ "name": "metaKey",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "metaKey",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Whether the meta key was pressed at time of event."},
{ "name": "metadata",
  "type": "Property",
  "class": "org.apache.royale.reflection.DefinitionWithMetaData",
  "description": "gets a copy of the metadata collection array"},
{ "name": "method",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "HTTP method for sending the request if a method is not set explicit on the operation."},
{ "name": "method",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Indicates what method should be used for the request."},
{ "name": "method",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "HTTP method for sending the request."},
{ "name": "method",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": ""},
{ "name": "method",
  "type": "Property",
  "class": "org.apache.royale.net.URLRequest",
  "description": "Controls the HTTP form submission method."},
{ "name": "method",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "The HTTP method for the upload."},
{ "name": "method",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "HTTP method for sending the request."},
{ "name": "method",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "method",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Form",
  "description": "The form method (either \"post\" or \"get\")"},
{ "name": "methods",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The instance methods associated with a \"class\" kind TypeDefinition An array of MethodDefinition instances"},
{ "name": "middleButton",
  "type": "Property",
  "class": "spark.components.ButtonBar",
  "description": "A skin part that defines the middle button(s)."},
{ "name": "min",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "min",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The minimum value of this item converted into screen coordinates."},
{ "name": "min",
  "type": "Property",
  "class": "mx.containers.gridClasses.GridRowInfo",
  "description": "Input: Measurement for the GridRow."},
{ "name": "min",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The minimum value of this item converted into screen coordinates."},
{ "name": "min",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The minimum value of this item converted into screen coordinates."},
{ "name": "min",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "The minimum data value displayed by the element."},
{ "name": "minBlockSize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "minCellHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Minimum height of a table cell."},
{ "name": "minCellHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Minimum height of a table cell."},
{ "name": "minCellHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Minimum height of a table cell."},
{ "name": "minCellHeightProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "minField",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Specifies the field of the data provider that determines the bottom of each bar."},
{ "name": "minField",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Specifies the field of the data provider that determines the y-axis location of the bottom of a column."},
{ "name": "minField",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "Specifies the field of the dataProvider that determines the bottom boundary of the area."},
{ "name": "minFilter",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The minimum value of this item, filtered against the horizontal axis of the containing chart."},
{ "name": "minFilter",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The minimum value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "minFilter",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The minimum value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "minHeight",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the minimum height of the component, in pixels, as the component's coordinates."},
{ "name": "minHeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The minimum recommended height of the component to be considered by the parent during layout."},
{ "name": "minHeight",
  "type": "Property",
  "class": "org.apache.royale.core.BrowserResizeListener",
  "description": "Minimum height"},
{ "name": "minHeight",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "minHeight",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Number that specifies the minimum height of the ConstraintRow instance, in pixels, in the ConstraintRow instance's coordinates."},
{ "name": "minInlineSize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "minInterval",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "The minimum interval, in data units, between any two values displayed by the element."},
{ "name": "minLength",
  "type": "Property",
  "class": "mx.validators.StringValidator",
  "description": "Minimum length for a valid String."},
{ "name": "minMinorSize",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The maximum of the minimum size of items relative to the minor axis."},
{ "name": "minNumber",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The minimum value of this item, converted to a number by the horizontal axis of the containing chart."},
{ "name": "minNumber",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The minimum value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "minNumber",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The minimum value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "minPercentValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": ""},
{ "name": "minRadius",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "The radius of the smallest item renderered in this series."},
{ "name": "minRowHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "The minimum height of each row."},
{ "name": "minRowHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "minValue",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Minimum value for a valid number."},
{ "name": "minValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyHandler",
  "description": ""},
{ "name": "minValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": ""},
{ "name": "minValue",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The minimum value of this item."},
{ "name": "minValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.NumberPropertyHandler",
  "description": ""},
{ "name": "minValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.IntPropertyHandler",
  "description": ""},
{ "name": "minValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PercentPropertyHandler",
  "description": ""},
{ "name": "minValue",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The minimum value of this item."},
{ "name": "minValue",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The miniumum value of this item."},
{ "name": "minViewportInset",
  "type": "Property",
  "class": "spark.components.Scroller",
  "description": "The minimum space between the viewport and the edges of the Scroller."},
{ "name": "minWidth",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the minimum width of the component, in pixels, as the component's coordinates."},
{ "name": "minWidth",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The minimum recommended width of the component to be considered by the parent during layout."},
{ "name": "minWidth",
  "type": "Property",
  "class": "org.apache.royale.core.BrowserResizeListener",
  "description": "Minimum width"},
{ "name": "minWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "minWidth",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "The minimum width of the column, in pixels."},
{ "name": "minWidth",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The minimum width of this column in pixels."},
{ "name": "minWidth",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "Number that specifies the minimum width of the ConstraintColumn instance, in pixels, in the ConstraintColumn instance's coordinates."},
{ "name": "minYear",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "The first year selectable in the control."},
{ "name": "minYear",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "The first year selectable in the control."},
{ "name": "minZoom",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "mini",
  "type": "Property",
  "class": "org.apache.royale.mdl.Footer",
  "description": "A boolean flag to activate \"mdl-mega-footer\" or \"mdl-mini-footer\" effect selector."},
{ "name": "minifab",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A boolean flag to activate \"mdl-button--mini-fab\" effect selector."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IHorizontalAxisBead",
  "description": "The explicit minimum value being represented by this axis."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.jewel.NumericStepper",
  "description": "The minimum value the control will display."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.jewel.Slider",
  "description": "The minimum value of the Slider."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.html.Slider",
  "description": "The minimum value of the Slider."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalCategoryAxisBead",
  "description": ""},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IVerticalAxisBead",
  "description": "The explicit minimum value being represented by this axis."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalCategoryAxisBead",
  "description": ""},
{ "name": "minimum",
  "type": "Property",
  "class": "mx.charts.LogAxis",
  "description": "Specifies the minimum value for an axis label."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalLinearAxisBead",
  "description": "The minimun value to be represented on this axis."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.core.IRangeModel",
  "description": "The minimum value."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModel",
  "description": "The minimum value for the range (defaults to 0)."},
{ "name": "minimum",
  "type": "Property",
  "class": "mx.controls.NumericStepper",
  "description": "Minimum value of the NumericStepper."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.jewel.Spinner",
  "description": "The minimum value of the Spinner."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.html.NumericStepper",
  "description": "The minimum value the control will display."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.express.NumericStepper",
  "description": "The minimum value the control will display."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": "The minimum value for the range (defaults to 0)."},
{ "name": "minimum",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Specifies the minimum value for an axis label."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalLinearAxisBead",
  "description": "The minimun value to be represented on this axis."},
{ "name": "minimum",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Smallest progress value for the ProgressBar."},
{ "name": "minimum",
  "type": "Property",
  "class": "mx.charts.LinearAxis",
  "description": "Specifies the minimum value for an axis label."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SliderRangeModel",
  "description": "The minimum value for the range (defaults to 0)."},
{ "name": "minimum",
  "type": "Property",
  "class": "spark.components.supportClasses.Range",
  "description": "The minimum valid <code>value</code>."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SliderRangeModel",
  "description": "The minimum value for the range (defaults to 0)."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.mdl.Slider",
  "description": "The minimum value of the Slider."},
{ "name": "minimum",
  "type": "Property",
  "class": "org.apache.royale.html.Spinner",
  "description": "The minimum value of the Spinner."},
{ "name": "minimumElementDuration",
  "type": "Property",
  "class": "mx.charts.effects.SeriesEffect",
  "description": "Specifies the amount of time, in milliseconds, that an individual element should take to complete the effect."},
{ "name": "minimumElementDuration",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesEffectInstance",
  "description": "Specifies the amount of time, in milliseconds, that an individual element should take to complete the effect."},
{ "name": "minimumSpacing",
  "type": "Property",
  "class": "org.apache.royale.text.engine.SpaceJustifier",
  "description": ""},
{ "name": "minorInterval",
  "type": "Property",
  "class": "mx.charts.LinearAxis",
  "description": "Specifies the numeric difference between minor tick marks along the axis."},
{ "name": "minorSize",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The maximum size of items along the axis opposite the majorAxis and the defaultMinorSize."},
{ "name": "minorTickCache",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The most recent set of minor tick marks generated to represent this axis."},
{ "name": "minorTickInterval",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Specifies the number of <code>minorTickUnits</code> between minor tick marks along the axis."},
{ "name": "minorTickUnits",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "The units that the Axis considers when generating minor tick marks."},
{ "name": "minorTicks",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "An Array of minor tick marks generated to represent this axis."},
{ "name": "minorTicks",
  "type": "Property",
  "class": "mx.charts.chartClasses.AxisLabelSet",
  "description": "An array of values from 0 to 1 representing where to place minor tick marks along the axis."},
{ "name": "minorTicks",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "Contains an array that specifies where Flex draws the minor tick marks along the axis."},
{ "name": "minorTicks",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "mirror",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineMirrorRegion",
  "description": ""},
{ "name": "mirror",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "If true the X axis is scaled by -1 and the x coordinate of the origin is translated by the component's width."},
{ "name": "mirror",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "If true the X axis is scaled by -1 and the x coordinate of the origin is translated by the component's width."},
{ "name": "miterLimit",
  "type": "Property",
  "class": "org.apache.royale.graphics.IStroke",
  "description": ""},
{ "name": "miterLimit",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": "The miter limit at the join of two segments."},
{ "name": "mixBlendMode",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "mockLayoutParent",
  "type": "Property",
  "class": "org.apache.royale.utils.LayoutTweener",
  "description": ""},
{ "name": "modal",
  "type": "Property",
  "class": "org.apache.royale.jewel.PopUp",
  "description": ""},
{ "name": "mode",
  "type": "Property",
  "class": "org.apache.royale.svg.BlendFilterElement",
  "description": ""},
{ "name": "mode",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Specifies the method used to update the bar."},
{ "name": "mode",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.shaderClasses.LuminosityMaskShader",
  "description": "A convenience field that takes into account whether luminosityClip and/or luminosityInvert are on or off."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.core.IStrandWithModel",
  "description": "Each Strand has an model object."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.core.UIHTMLElementWrapper",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.core.Strand",
  "description": "An IBeadModel that serves as the data model for the component."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": "The model object."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.core.IDataGrid",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": "The data model (for the initial view)."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDividedContainerDivider",
  "description": "The model being used with the DividedContainer."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveTableRowForArrayListData",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "mx.containers.beads.ViewStackLayout",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": "The model."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IColorPickerPopUp",
  "description": "The model being used with the IColorPickerPopup."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.controllers.DropDownListController",
  "description": "Model"},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUp",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.createjs.Application",
  "description": "The data model (for the initial view)."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": "The data model (for the initial view)."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": "The model."},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUpWithPalette",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.TableView",
  "description": ""},
{ "name": "model",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "modelChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "modelChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "modelChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "modelChanged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "modelChanged",
  "type": "Event",
  "description": "Indicates that the model has changed"},
{ "name": "modifierKey",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "modifyInlineGraphic",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Modifies an existing inline graphic."},
{ "name": "modifyInlineGraphic",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "module",
  "type": "Property",
  "class": "mx.events.ModuleEvent",
  "description": "The <code>target</code>, which is an instance of an interface for a particular module."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.core.IFlexModule",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.PieChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.LineChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataTip",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.ColumnChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.CandlestickSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.HLOCSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.CandlestickChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.HLOCChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.containers.Form",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.AreaChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.LegendItem",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.BubbleChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.GridLines",
  "description": ""},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.BarChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleFactory",
  "type": "Property",
  "class": "mx.charts.PlotChart",
  "description": "A module factory is used as context for using embedded fonts and for finding the style manager that controls the styles for this component."},
{ "name": "moduleName",
  "type": "Property",
  "class": "org.apache.royale.html.UIModuleLoader",
  "description": ""},
{ "name": "moduleName",
  "type": "Property",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": ""},
{ "name": "moduleName",
  "type": "Property",
  "class": "org.apache.royale.jewel.ModuleLoader",
  "description": ""},
{ "name": "modulePath",
  "type": "Property",
  "class": "org.apache.royale.html.UIModuleLoader",
  "description": "Path or URL of module."},
{ "name": "modulePath",
  "type": "Property",
  "class": "org.apache.royale.utils.UIModuleUtils",
  "description": "Path or URL of module."},
{ "name": "modulePath",
  "type": "Property",
  "class": "org.apache.royale.jewel.ModuleLoader",
  "description": "Path or URL of module."},
{ "name": "monitorEvent",
  "type": "Method",
  "class": "mx.netmon.NetworkMonitor",
  "description": "Tell the monitor that an event occurred."},
{ "name": "monitorEventImpl",
  "type": "Property",
  "class": "mx.netmon.NetworkMonitor",
  "description": "To be assigned by mix-in."},
{ "name": "monitorFault",
  "type": "Method",
  "class": "mx.netmon.NetworkMonitor",
  "description": "Tell the monitor that a fault occurred."},
{ "name": "monitorFaultImpl",
  "type": "Property",
  "class": "mx.netmon.NetworkMonitor",
  "description": "To be assigned by mix-in."},
{ "name": "monitorInvocation",
  "type": "Method",
  "class": "mx.netmon.NetworkMonitor",
  "description": "Tell the monitor that an invocation is occuring."},
{ "name": "monitorInvocationImpl",
  "type": "Property",
  "class": "mx.netmon.NetworkMonitor",
  "description": "To be assigned by mix-in."},
{ "name": "monitorResult",
  "type": "Method",
  "class": "mx.netmon.NetworkMonitor",
  "description": "Tell the monitor that a result was returned."},
{ "name": "monitorResultImpl",
  "type": "Property",
  "class": "mx.netmon.NetworkMonitor",
  "description": "To be assigned by mix-in."},
{ "name": "monitorRpcEvent",
  "type": "Method",
  "class": "mx.rpc.AbstractInvoker",
  "description": "Monitor an rpc event that is being dispatched"},
{ "name": "monthNames",
  "type": "Property",
  "class": "org.apache.royale.core.IDateChooserModel",
  "description": "An array of strings used to name the months of the year with January being the first element of the array."},
{ "name": "monthNames",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": "An array of strings used to name the months of the year with January being the first element of the array."},
{ "name": "monthNames",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Names of the months displayed at the top of the DateChooser control."},
{ "name": "monthNames",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "An array of strings used to name the months of the year with January being the first element of the array."},
{ "name": "monthNamesLong",
  "type": "Property",
  "class": "mx.formatters.DateBase",
  "description": "Long format of month names."},
{ "name": "monthNamesShort",
  "type": "Property",
  "class": "mx.formatters.DateBase",
  "description": "Short format of month names."},
{ "name": "months",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The array of 12 month in date form used in month view"},
{ "name": "mouseChildren",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "From flash."},
{ "name": "mouseDoubleClickHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a mouseDoubleClick event."},
{ "name": "mouseDoubleClickHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "mouseDoubleClickHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>MouseEvent."},
{ "name": "mouseDoubleClickHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "mouseDown",
  "type": "Event",
  "description": "Set a different class for mouseDown events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseDown",
  "type": "Event",
  "description": "Set a different class for mouseDown events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseDown",
  "type": "Event",
  "description": "Dispatched when the mouse is pressed down over any link."},
{ "name": "mouseDown",
  "type": "Event",
  "description": "Dispatched when the mouse is pressed down over any link."},
{ "name": "mouseDown",
  "type": "Event",
  "description": "Dispatched when the mouse is pressed down over a link."},
{ "name": "mouseDownEffect",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Played when the user presses the mouse button."},
{ "name": "mouseDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ILinkElement",
  "description": ""},
{ "name": "mouseDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a mouseDown event."},
{ "name": "mouseDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "mouseDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>MouseEvent."},
{ "name": "mouseDownHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "mouseEnabled",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "From flash."},
{ "name": "mouseFocusEnabled",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "mouseMove",
  "type": "Event",
  "description": "Set a different class for mouseMove events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseMove",
  "type": "Event",
  "description": "Set a different class for mouseMove events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseMove",
  "type": "Event",
  "description": "Dispatched when the mouse passes over any link."},
{ "name": "mouseMove",
  "type": "Event",
  "description": "Dispatched when the mouse passes over any link."},
{ "name": "mouseMove",
  "type": "Event",
  "description": "Dispatched when the mouse passes over the link."},
{ "name": "mouseMoveHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a mouseMove event."},
{ "name": "mouseMoveHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "mouseMoveHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>MouseEvent."},
{ "name": "mouseMoveHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "mouseMoveSomewhere",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ISandboxSupport",
  "description": "Client call to forward a mouseMove event from outside a security sandbox."},
{ "name": "mouseMoveSomewhere",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Client call to forward a mouseMove event from outside a security sandbox."},
{ "name": "mouseMoveSomewhere",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Client call to forward a mouseMove event from outside a security sandbox."},
{ "name": "mouseOut",
  "type": "Event",
  "description": "Set a different class for mouseOut events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseOut",
  "type": "Event",
  "description": "Set a different class for mouseOut events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseOutHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a mouseOut event."},
{ "name": "mouseOutHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "mouseOutHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>MouseEvent."},
{ "name": "mouseOutHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "mouseOver",
  "type": "Event",
  "description": "Set a different class for mouseOver events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseOver",
  "type": "Event",
  "description": "Set a different class for mouseOver events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseOverHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a mouseOver event."},
{ "name": "mouseOverHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Process a mouseOver event."},
{ "name": "mouseOverHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>MouseEvent."},
{ "name": "mouseOverHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "mouseSensitivity",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies the distance, in pixels, that Flex considers a data point to be under the mouse pointer when the pointer moves around a chart."},
{ "name": "mouseToContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEventManager",
  "description": "Convert local mouse event coordinates, which are relative to the container or one of its children (the event's target is the current element) to container coordinates."},
{ "name": "mouseUp",
  "type": "Event",
  "description": "Set a different class for mouseUp events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseUp",
  "type": "Event",
  "description": "Set a different class for mouseUp events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseUp",
  "type": "Event",
  "description": "Dispatched when the mouse is released over any link."},
{ "name": "mouseUp",
  "type": "Event",
  "description": "Dispatched when the mouse is released over any link."},
{ "name": "mouseUp",
  "type": "Event",
  "description": "Dispatched when the mouse is released over a link."},
{ "name": "mouseUpEffect",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Played when the user releases the mouse button."},
{ "name": "mouseUpHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a mouseUp event."},
{ "name": "mouseUpHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "mouseUpHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>MouseEvent."},
{ "name": "mouseUpHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "mouseUpSomewhere",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ISandboxSupport",
  "description": "Client call to forward a mouseUp event from outside a security sandbox."},
{ "name": "mouseUpSomewhere",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Client call to forward a mouseUp event from outside a security sandbox."},
{ "name": "mouseUpSomewhere",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Client call to forward a mouseUp event from outside a security sandbox."},
{ "name": "mouseWheel",
  "type": "Event",
  "description": "Set a different class for mouseWheel events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseWheel",
  "type": "Event",
  "description": "Set a different class for mouseWheel events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "mouseWheelHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a mouseWheel event."},
{ "name": "mouseWheelHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "mouseWheelHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>MouseEvent."},
{ "name": "mouseWheelHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "mouseX",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "mouseX",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "mouseX"},
{ "name": "mouseY",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "mouseY",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "mouseY"},
{ "name": "move",
  "type": "Method",
  "class": "mx.core.IFlexDisplayObject",
  "description": "Moves this object to the specified x and y coordinates."},
{ "name": "move",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Moves the component to a specified position within its parent."},
{ "name": "move",
  "type": "Event",
  "description": "Dispatched when the object has moved."},
{ "name": "move",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "move",
  "type": "Method",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "moveChildren",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Move a set of FlowElements from one IFlowGroupElement to another."},
{ "name": "moveChildren",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "@copy IEditManager#moveChildren()"},
{ "name": "moveColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Moves count number of columns from the fromCol index to the toCol index."},
{ "name": "moveColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Moves the specified columns in each node."},
{ "name": "moveColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": "Removes and adds values such that the specified columns are moved."},
{ "name": "moveElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ModelEdit",
  "description": ""},
{ "name": "moveForSoftKeyboard",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Enables moving the pop-up when the soft keyboard on a mobile device is active."},
{ "name": "moveIndexFindRow",
  "type": "Method",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "This will search through a dataprovider checking the given field and will set the selectedIndex to a matching value."},
{ "name": "moveIndexFindRow",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "moveIndexFindRow",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "This will search through a dataprovider checking the given field and will set the selectedIndex to a matching value."},
{ "name": "moveIndexFirstRow",
  "type": "Method",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "Changes the selectedIndex to the first row of the dataProvider."},
{ "name": "moveIndexFirstRow",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "moveIndexFirstRow",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Changes the selectedIndex to the first row of the dataProvider."},
{ "name": "moveIndexLastRow",
  "type": "Method",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "Changes the selectedIndex to the last row of the dataProvider."},
{ "name": "moveIndexLastRow",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "moveIndexLastRow",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Changes the selectedIndex to the last row of the dataProvider."},
{ "name": "moveIndexNextRow",
  "type": "Method",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "Changes the selectedIndex to the next row of the dataProvider."},
{ "name": "moveIndexNextRow",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "moveIndexNextRow",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Changes the selectedIndex to the next row of the dataProvider."},
{ "name": "moveIndexPreviousRow",
  "type": "Method",
  "class": "spark.components.supportClasses.IDataProviderEnhance",
  "description": "Changes the selectedIndex to the previous row of the dataProvider."},
{ "name": "moveIndexPreviousRow",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "moveIndexPreviousRow",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "Changes the selectedIndex to the previous row of the dataProvider."},
{ "name": "moveNext",
  "type": "Method",
  "class": "mx.collections.IViewCursor",
  "description": "Moves the cursor to the next item within the collection."},
{ "name": "moveNext",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "movePopUp",
  "type": "Method",
  "class": "org.apache.royale.html.beads.KeepComboPopupWithinParentBounds",
  "description": ""},
{ "name": "movePrevious",
  "type": "Method",
  "class": "mx.collections.IViewCursor",
  "description": "Moves the cursor to the previous item within the collection."},
{ "name": "movePrevious",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "moveRows",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Moves count number of rows from the fromRow index to the toRow index."},
{ "name": "moveTo",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Moves the current drawing position to (angle, radial)."},
{ "name": "moveTo",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Moves the current drawing position to (x, y)."},
{ "name": "moveTo",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Adds a moveTo command"},
{ "name": "moveTo",
  "type": "Method",
  "class": "mx.display.Graphics",
  "description": ""},
{ "name": "mpiEnabled",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Should we record any performance metrics"},
{ "name": "multiColumnSortingEnabled",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "If this property is true and sorting has been enabled, then users can interactively specify multi-column sorts by control-clicking in column headers (Command+Click on OSX)."},
{ "name": "multiline",
  "type": "Property",
  "class": "org.apache.royale.jewel.Label",
  "description": "A boolean flag to activate \"multiline\" effect selector."},
{ "name": "multiline",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.MultiLine",
  "description": "A boolean flag to activate \"multiline\" effect selector."},
{ "name": "multipleSelection",
  "type": "Property",
  "class": "org.apache.royale.events.ItemClickedEvent",
  "description": "Whether or not this click is part of a multi-selection sequence."},
{ "name": "mustUnderstand",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.MessageHeader",
  "description": "Whether the receipient must understand the header"},
{ "name": "mustUseComposer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "mxmlChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "mxmlChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Appends an array of children to this object."},
{ "name": "mxmlChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SpanElement",
  "description": "Sets text based on content within span tags; always deletes existing children."},
{ "name": "mxmlChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": "Appends an array of children to this object."},
{ "name": "mxmlChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "Appends an array of children to this object."},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.jewel.Container",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.html.Group",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.html.DividedContainer",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.core.View",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.html.Container",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.jewel.View",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.createjs.Container",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "mxmlContent",
  "type": "Property",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": "The default property."},
{ "name": "mxmlContentFactory",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": "A factory object that creates the initial value for the <code>content</code> property."},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.reflection.DefinitionBase",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "mx.collections.ISortField",
  "description": "The name of the field to be sorted."},
{ "name": "name",
  "type": "Property",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.ISelectableContent",
  "description": "name is the name of the content that can be selected"},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.jewel.SectionContent",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "mx.collections.GroupingField",
  "description": "The name of the field to be sorted."},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Button",
  "description": "The button name"},
{ "name": "name",
  "type": "Property",
  "class": "mx.net.FileReference",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "mx.styles.CSSStyleDeclaration",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "mx.rpc.AbstractOperation",
  "description": "The name of this Operation."},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.collections.ISortField",
  "description": "The name of the field to be sorted."},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "The name of the property"},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.net.URLRequestHeader",
  "description": "An HTTP request header name"},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.states.SetProperty",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Textarea",
  "description": "The textarea name"},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.file.IFileModel",
  "description": "The name of the file"},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.utils.JXON",
  "description": "The tag name of the element"},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "the name of the step"},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Input",
  "description": "The input name"},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileModel",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.core.IState",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.states.State",
  "description": "The name of the state."},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.MessageHeader",
  "description": "The header name."},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.file.FileProxy",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPHeader",
  "description": "The name of the header."},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.states.SetEventHandler",
  "description": ""},
{ "name": "name",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Form",
  "description": "The form name"},
{ "name": "nameField",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "Specifies the field of the data provider that determines the name of each wedge of the PieChart control."},
{ "name": "nameParts",
  "type": "Property",
  "class": "mx.collections.IComplexSortField",
  "description": ""},
{ "name": "nameParts",
  "type": "Property",
  "class": "spark.collections.ComplexSortField",
  "description": ""},
{ "name": "nativeEvent",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "nativeEvent",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "nativeEvent",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": ""},
{ "name": "navigateYears",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The year currently displayed while navigating in year view"},
{ "name": "navigationBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": "The NavigationBar (or null if not present)."},
{ "name": "navigationBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.ViewManagerViewBase",
  "description": ""},
{ "name": "navigationBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The NavigationBar (or null if not present)."},
{ "name": "navigationBarItems",
  "type": "Property",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": "The items that make up the NavigationBar."},
{ "name": "navigationBarItems",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The array of controls that make up the NavigationBar."},
{ "name": "nearbySearch",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "nearbySearch",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Performs a search near the center of map."},
{ "name": "nearbySearch",
  "type": "Method",
  "class": "google.maps.places.PlacesService",
  "description": ""},
{ "name": "nearestValidValue",
  "type": "Method",
  "class": "spark.components.supportClasses.Range",
  "description": "Returns the sum of the minimum with an integer multiple of <code>interval</code> that's closest to <code>value</code>, unless <code>value</code> is closer to the maximum limit, in which case the maximum is returned."},
{ "name": "needsConfig",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": "Indicates if this MessageAgent needs to request configuration from the server."},
{ "name": "needsCtrlKey",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEventManager",
  "description": "Retrieve the status of the flag that controls whether the Ctrl key is needed to activate event generation."},
{ "name": "negTotalsByPrimaryAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "The summed totals of the stacked negative values."},
{ "name": "negative",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "negativeError",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Error message when the value is negative and the <code>allowNegative</code> property is <code>false</code>."},
{ "name": "nestLevel",
  "type": "Property",
  "class": "mx.managers.ILayoutManagerClient",
  "description": "The top-level SystemManager has a nestLevel of 1."},
{ "name": "nestLevel",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "nestedInTable",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "nestedInTable",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": ""},
{ "name": "netConnection",
  "type": "Property",
  "class": "mx.messaging.channels.NetConnectionChannel",
  "description": "Provides access to the associated NetConnection for this Channel."},
{ "name": "networkRTT",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "The network round trip time for a client message and the server response to it, calculated by the difference between total time and server processing time."},
{ "name": "newColumnIndex",
  "type": "Property",
  "class": "spark.events.GridCaretEvent",
  "description": ""},
{ "name": "newDate",
  "type": "Property",
  "class": "mx.events.CalendarLayoutChangeEvent",
  "description": "The selected date of the control."},
{ "name": "newDivElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateDivOperation",
  "description": "The new IDivElement."},
{ "name": "newElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.SplitElementOperation",
  "description": "Returns the new element created by doOperation."},
{ "name": "newID",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyElementIDOperation",
  "description": "The ID assigned by this operation."},
{ "name": "newId",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": "generate uid"},
{ "name": "newIndex",
  "type": "Property",
  "class": "spark.events.IndexChangeEvent",
  "description": "The zero-based index after the change."},
{ "name": "newIndex",
  "type": "Property",
  "class": "mx.events.IndexChangedEvent",
  "description": ""},
{ "name": "newInlineGraphicElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.InsertInlineGraphicOperation",
  "description": "The IInlineGraphicElement that was created by doOperation."},
{ "name": "newInstance",
  "type": "Method",
  "class": "org.apache.royale.core.IFactory",
  "description": "This method is called to generate a new instance of an item renderer or other custom class."},
{ "name": "newInstance",
  "type": "Method",
  "class": "org.apache.royale.core.ClassFactory",
  "description": ""},
{ "name": "newInstance",
  "type": "Method",
  "class": "org.apache.royale.core.IValuesImpl",
  "description": "Returns a new instance based on the value for a given object based on a property name, and optionally, the current state, and a set of property value pairs."},
{ "name": "newInstance",
  "type": "Method",
  "class": "org.apache.royale.html.beads.CascadingMenuFactory",
  "description": "Returns a new instance of CascadingMenu."},
{ "name": "newInstance",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "newInstance",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "newInstance",
  "type": "Method",
  "class": "org.apache.royale.html.beads.MenuFactory",
  "description": "Returns a new instance of the Menu class."},
{ "name": "newLinkElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyLinkOperation",
  "description": "The LinkElement that was created by doOperation."},
{ "name": "newListElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateListOperation",
  "description": "The new IListElement."},
{ "name": "newRowIndex",
  "type": "Property",
  "class": "spark.events.GridCaretEvent",
  "description": ""},
{ "name": "newSibling",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento",
  "description": ""},
{ "name": "newSortFields",
  "type": "Property",
  "class": "spark.events.GridSortEvent",
  "description": "The array of ISortFields for this sort."},
{ "name": "newStyleName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyElementStyleNameOperation",
  "description": "The style name assigned by this operation."},
{ "name": "newSubParagraphGroupElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateSubParagraphGroupOperation",
  "description": "The new SubParagraphGroupElement."},
{ "name": "newTCYElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyTCYOperation",
  "description": "The TCYElement that was created by doOperation."},
{ "name": "newValue",
  "type": "Property",
  "class": "mx.events.PropertyChangeEvent",
  "description": ""},
{ "name": "newValue",
  "type": "Property",
  "class": "org.apache.royale.events.ValueChangeEvent",
  "description": "The value of the property after it was changed."},
{ "name": "newValue",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyElementUserStyleOperation",
  "description": "The new style value."},
{ "name": "next",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": ""},
{ "name": "next",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "nextAtomPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Returns the absolute position of the next atom."},
{ "name": "nextButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": ""},
{ "name": "nextButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": "The org."},
{ "name": "nextButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": "The button that causes the next month or year to be displayed by the DateChooser."},
{ "name": "nextCharacter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange forward by one character."},
{ "name": "nextLine",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "nextLine",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "nextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange down one line"},
{ "name": "nextMonthButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateChooserView",
  "description": "The button that causes the next month to be displayed by the DateChooser."},
{ "name": "nextPage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange down one page."},
{ "name": "nextRegion",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineMirrorRegion",
  "description": ""},
{ "name": "nextStep",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "the next step to go  defaults to null if there's no next step"},
{ "name": "nextWord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange forward by one word."},
{ "name": "nextWordPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Returns the absolute position of the beginning of the next word."},
{ "name": "noBackground",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Badge",
  "description": "A boolean flag to activate \"mdl-badge--no-background\" effect selector."},
{ "name": "noButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "noButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "noLabel",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "The label for the No button in an Alert."},
{ "name": "noLabel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The label to use for the NO button."},
{ "name": "noLabel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The label to use for the NO button."},
{ "name": "no_sim",
  "type": "Property",
  "class": "MaterialIconType",
  "description": ""},
{ "name": "no_sim",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIconType",
  "description": ""},
{ "name": "nodeValue",
  "type": "Property",
  "class": "org.apache.royale.html.NodeElementBase",
  "description": ""},
{ "name": "normalize",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "normalize",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "normalizeCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "normalizeCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Sets the row and column indices of the cells in the table to match their logical position as described by the table columns and rows"},
{ "name": "normalizeColumnWidths",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "normalizeColumnWidths",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Accepts a suggested table width and calculates the column widths."},
{ "name": "normalizeContainerFormatRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "normalizeNeedsInitialParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IListItemElement",
  "description": ""},
{ "name": "normalizeRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "normalizeRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "normalizeSubParagraphRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ElementHelper",
  "description": ""},
{ "name": "nospacing",
  "type": "Property",
  "class": "org.apache.royale.mdl.Grid",
  "description": "A boolean flag to activate \"mdl-grid--no-spacing\" effect selector."},
{ "name": "notNull",
  "type": "Method",
  "class": "org.apache.royale.debugging",
  "description": "Throws an error if the object is null."},
{ "name": "notify",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "notifyDone",
  "type": "Method",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "notifyInsertOrDelete",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Updates the selection manager when text is inserted or deleted."},
{ "name": "notifyInsertOrDelete",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "notifyListeners",
  "type": "Method",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "Notify the various bindings that the value has changed so they can update their data binding expressions."},
{ "name": "numCells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableRowElement",
  "description": ""},
{ "name": "numCells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "numCells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Total number of cells"},
{ "name": "numCells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": "Returns the number of cells in this row."},
{ "name": "numCells",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColElement",
  "description": "Returns the number of cells in this column."},
{ "name": "numChildren",
  "type": "Property",
  "class": "mx.core.IChildList",
  "description": "The number of children in this child list."},
{ "name": "numChildren",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "numChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "numChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Returns the number of FlowElement children that this FlowGroupElement object has."},
{ "name": "numChildren",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Number of child components in this container."},
{ "name": "numChildren",
  "type": "Property",
  "class": "org.apache.royale.effects.ICompoundEffect",
  "description": "The number of elements in the parent."},
{ "name": "numChildren",
  "type": "Property",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "numChildren",
  "type": "Property",
  "class": "mx.managers.SystemManager",
  "description": ""},
{ "name": "numChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.MoveChildrenOperation",
  "description": "Specifies the index of the first item to move."},
{ "name": "numChildrenCreated",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "numColumns",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "numColumns",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Total number of columns in the table."},
{ "name": "numColumns",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.TileLayout",
  "description": "The number of tiles to fit horizontally into the layout."},
{ "name": "numColumns",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Returns number of columns per row."},
{ "name": "numColumns",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": "Number of columns in this row."},
{ "name": "numColumns",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The number of tiles to fit horizontally into the layout."},
{ "name": "numColumns",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalColumnLayout",
  "description": "The number of columns."},
{ "name": "numControllers",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "The number of containers assigned to this IFlowComposer instance."},
{ "name": "numControllers",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#numControllers"},
{ "name": "numDividers",
  "type": "Property",
  "class": "mx.containers.DividedBox",
  "description": "The number of dividers."},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.core.IParent",
  "description": "The number of elements in the parent."},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.core.ILayoutView",
  "description": "Returns the number of element children that can be laid out."},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.mobile.ManagerBase",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "mx.containers.TabNavigator",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "The number of elements in the parent."},
{ "name": "numElements",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.core.ContainerBaseStrandChildren",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.core.ListBaseStrandChildren",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.html.Panel",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "mx.containers.FormItem",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "The number of elements in the parent."},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.createjs.Application",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.jewel.FormItem",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.utils.MockParent",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "The number of elements in the parent."},
{ "name": "numElements",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": "The number of elements in the parent."},
{ "name": "numEnum",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "numFloats",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "numFloats",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "numFormats",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Number of formats."},
{ "name": "numItemRenderers",
  "type": "Property",
  "class": "org.apache.royale.core.IItemRendererParent",
  "description": ""},
{ "name": "numItemRenderers",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.table.TBodyContentArea",
  "description": ""},
{ "name": "numItemRenderers",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": ""},
{ "name": "numItemRenderers",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": ""},
{ "name": "numItemRenderers",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "numItemRenderers",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.ChartDataGroup",
  "description": ""},
{ "name": "numLines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": "@copy IFlowComposer#numLines"},
{ "name": "numLines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "The total number of lines composed in the flow."},
{ "name": "numLines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "numModalWindows",
  "type": "Property",
  "class": "mx.managers.IActiveWindowManager",
  "description": "The number of modal windows."},
{ "name": "numModalWindows",
  "type": "Property",
  "class": "mx.managers.ISystemManager",
  "description": ""},
{ "name": "numModalWindows",
  "type": "Property",
  "class": "mx.managers.SystemManager",
  "description": "The number of modal windows."},
{ "name": "numParcels",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "numPercent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "numPercentEnum",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "numProperties",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectUtil",
  "description": "Count the properties in an object."},
{ "name": "numRadioButtons",
  "type": "Property",
  "class": "mx.controls.RadioButtonGroup",
  "description": "The number of RadioButtons that belong to this RadioButtonGroup."},
{ "name": "numRadioButtons",
  "type": "Property",
  "class": "spark.components.RadioButtonGroup",
  "description": "The number of RadioButtons that belong to this RadioButtonGroup."},
{ "name": "numRepeaters",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The number of Repeaters in this Container."},
{ "name": "numRows",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "numRows",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Total number of rows in the table."},
{ "name": "number",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The value this wedge represents converted into screen coordinates."},
{ "name": "number",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "numberLine",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "numberLine",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "numberLinePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "numberLinePosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "numberSort",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.VirtualListVerticalLayout",
  "description": ""},
{ "name": "numberSort",
  "type": "Method",
  "class": "mx.controls.listClasses.VirtualListVerticalLayout",
  "description": ""},
{ "name": "numeric",
  "type": "Property",
  "class": "mx.collections.ISortField",
  "description": "Specifies that if the field being sorted contains numeric (<code>number/int/uint</code>) values, or string representations of numeric values, the comparator use a numeric comparison."},
{ "name": "numeric",
  "type": "Property",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "numeric",
  "type": "Property",
  "class": "mx.collections.GroupingField",
  "description": "Specifies that if the field being sorted contains numeric (Number/int/uint) values, or String representations of numeric values, the comparitor uses a numeric comparison."},
{ "name": "numeric",
  "type": "Property",
  "class": "org.apache.royale.collections.ISortField",
  "description": "Specifies that if the field being sorted contains numeric (<code>number/int/uint</code>) values, or string representations of numeric values, the comparator use a numeric comparison."},
{ "name": "numeric",
  "type": "Property",
  "class": "org.apache.royale.express.TextInput",
  "description": "Allows only numeric values to be entered."},
{ "name": "numeric",
  "type": "Property",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "numericCompare",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Compares two numeric values."},
{ "name": "numericCompare",
  "type": "Method",
  "class": "org.apache.royale.collections.CompareUtils",
  "description": "Compares two numeric values."},
{ "name": "numericStyles",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "numericStyles",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSValuesImpl",
  "description": ""},
{ "name": "object",
  "type": "Property",
  "class": "org.apache.royale.core.IStyleObject",
  "description": "The object these properties apply to."},
{ "name": "object",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": "Sets the host object's reference so that we can update the HTML element styles on this if our properties are changed in the future."},
{ "name": "object",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": "Sets the host object's reference so that we can update the HTML element styles on this if our properties are changed in the future."},
{ "name": "objectAccessFormat",
  "type": "Method",
  "class": "QName",
  "description": ""},
{ "name": "objectEncoding",
  "type": "Property",
  "class": "mx.net.NetConnection",
  "description": "objectencoding"},
{ "name": "objectFit",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "objectHasSortField",
  "type": "Method",
  "class": "mx.collections.ISortField",
  "description": "Returns true if the object has the field required by this <code>ISortField</code> instance."},
{ "name": "objectHasSortField",
  "type": "Method",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "objectHasSortField",
  "type": "Method",
  "class": "spark.collections.ComplexSortField",
  "description": ""},
{ "name": "objectHasSortField",
  "type": "Method",
  "class": "org.apache.royale.collections.ISortField",
  "description": "Returns true if the object has the field required by this <code>ISortField</code> instance."},
{ "name": "objectHasSortField",
  "type": "Method",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "objectID",
  "type": "Property",
  "class": "mx.external.ExternalInterface",
  "description": "Returns the id attribute of the Flash Player object if running as a SWF, or of the HTML element that is used for hooking up callback objects if running in HTML (default then is <code>ExternalInterface</code>)."},
{ "name": "objectPosition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "objectToString",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Enumerates an object's dynamic properties (by using a <code>for."},
{ "name": "objectsOverlap",
  "type": "Method",
  "class": "org.apache.royale.utils.DisplayUtils",
  "description": "Evaluates the bounding box of two objects to see if thier bounding boxes overlap."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.chartClasses.IBar",
  "description": "Specifies how far to offset the center of the items from the center of the available space, relative the category size."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Specifies how far to offset the center of the bars from the center of the available space, relative the category width."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.chartClasses.IColumn",
  "description": "Specifies how far to offset the center of the items from the center of the available space, relative the category size."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Specifies how far to offset the center of the columns from the center of the available space, relative to the category width."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.effects.SeriesEffect",
  "description": "Specifies the amount of time, in milliseconds, that Flex delays the effect."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesEffectInstance",
  "description": "Specifies the amount of time, in milliseconds, that Flex delays the effect."},
{ "name": "offset",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.IDropDownListModel",
  "description": ""},
{ "name": "offset",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DropDownListModel",
  "description": ""},
{ "name": "offset",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.series.ColumnSet",
  "description": "Specifies how far to offset the center of the columns from the center of the available space, relative to the category width."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Specifies how far to offset the center of the elements from the center of the available space, relative to the category width."},
{ "name": "offset",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--N-offset\" effect selector."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.series.BarSet",
  "description": "Specifies how far to offset the center of the bars from the center of the available space, relative the category width."},
{ "name": "offset",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "offset",
  "type": "Property",
  "class": "org.apache.royale.html.beads.InfiniteVScroller",
  "description": "offset specifies how many pixels before the end to dispatch scrollEnd."},
{ "name": "offset",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianCanvasValue",
  "description": ""},
{ "name": "offsetBlockEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "offsetBlockStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "offsetDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--N-offset-desktop\" effect selector."},
{ "name": "offsetInlineEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "offsetInlineStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "offsetPhone",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--N-offset-phone\" effect selector."},
{ "name": "offsetPoint",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "offsetTablet",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--N-offset-tablet\" effect selector."},
{ "name": "offsetX",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "X-coordinate relative to target."},
{ "name": "offsetY",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Y-coordinate relative to target."},
{ "name": "okButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "okButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "okLabel",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "The label for the OK button in an Alert."},
{ "name": "okLabel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The label to use for the OK button."},
{ "name": "okLabel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The label to use for the OK button."},
{ "name": "okLabel",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": ""},
{ "name": "oldColumnIndex",
  "type": "Property",
  "class": "spark.events.GridCaretEvent",
  "description": ""},
{ "name": "oldHeight",
  "type": "Property",
  "class": "mx.events.ResizeEvent",
  "description": "The previous <code>height</code> of the object, in pixels."},
{ "name": "oldIndex",
  "type": "Property",
  "class": "spark.events.IndexChangeEvent",
  "description": "The zero-based index before the change."},
{ "name": "oldIndex",
  "type": "Property",
  "class": "mx.events.IndexChangedEvent",
  "description": ""},
{ "name": "oldInteractiveObjects",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "oldInteractiveObjects",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "oldLocation",
  "type": "Property",
  "class": "mx.events.CollectionEvent",
  "description": ""},
{ "name": "oldRowIndex",
  "type": "Property",
  "class": "spark.events.GridCaretEvent",
  "description": ""},
{ "name": "oldSortFields",
  "type": "Property",
  "class": "spark.events.GridSortEvent",
  "description": "The array of ISortFields for the last sort."},
{ "name": "oldTestLineVisible",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "oldTestLineVisible",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": ""},
{ "name": "oldValue",
  "type": "Property",
  "class": "mx.events.PropertyChangeEvent",
  "description": ""},
{ "name": "oldValue",
  "type": "Property",
  "class": "org.apache.royale.events.ValueChangeEvent",
  "description": "The value of the property before it was changed."},
{ "name": "oldWidth",
  "type": "Property",
  "class": "mx.events.ResizeEvent",
  "description": "The previous <code>width</code> of the object, in pixels."},
{ "name": "oldX",
  "type": "Property",
  "class": "mx.events.MoveEvent",
  "description": "The previous <code>x</code> coordinate of the object, in pixels."},
{ "name": "oldY",
  "type": "Property",
  "class": "mx.events.MoveEvent",
  "description": "The previous <code>y</code> coordinate of the object, in pixels."},
{ "name": "onBeadsAdded",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": ""},
{ "name": "onBeadsAdded",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.SearchFilter",
  "description": ""},
{ "name": "onComplete",
  "type": "Property",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "Callback for complete event."},
{ "name": "onComplete",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "Callback for complete event."},
{ "name": "onError",
  "type": "Property",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "Callback for error event."},
{ "name": "onError",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFont",
  "description": ""},
{ "name": "onError",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "Callback for error event."},
{ "name": "onFulfilled",
  "type": "Property",
  "class": "org.apache.royale.promises.vo.Handler",
  "description": ""},
{ "name": "onInputFocus",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": ""},
{ "name": "onInputFocus",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.SearchFilter",
  "description": ""},
{ "name": "onLoad",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFont",
  "description": ""},
{ "name": "onProgress",
  "type": "Property",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "Callback for progress event."},
{ "name": "onProgress",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "Callback for progress event."},
{ "name": "onRejected",
  "type": "Property",
  "class": "org.apache.royale.promises.vo.Handler",
  "description": ""},
{ "name": "onStatus",
  "type": "Property",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "Callback for status event."},
{ "name": "onStatus",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "Callback for status event."},
{ "name": "onTweenEnd",
  "type": "Method",
  "class": "mx.effects.effectClasses.TweenEffectInstance",
  "description": "Callback method that is called when the target should be updated by the effect for the last time."},
{ "name": "onTweenEnd",
  "type": "Method",
  "class": "org.apache.royale.effects.Move",
  "description": ""},
{ "name": "onTweenEnd",
  "type": "Method",
  "class": "org.apache.royale.effects.Fade",
  "description": ""},
{ "name": "onTweenEnd",
  "type": "Method",
  "class": "org.apache.royale.effects.Wipe",
  "description": ""},
{ "name": "onTweenEnd",
  "type": "Method",
  "class": "org.apache.royale.effects.Resize",
  "description": ""},
{ "name": "onTweenUpdate",
  "type": "Method",
  "class": "mx.effects.effectClasses.TweenEffectInstance",
  "description": "Callback method that is called when the target should be updated by the effect."},
{ "name": "onTweenUpdate",
  "type": "Method",
  "class": "org.apache.royale.effects.Move",
  "description": ""},
{ "name": "onTweenUpdate",
  "type": "Method",
  "class": "org.apache.royale.effects.Fade",
  "description": ""},
{ "name": "onTweenUpdate",
  "type": "Method",
  "class": "org.apache.royale.effects.Wipe",
  "description": ""},
{ "name": "onTweenUpdate",
  "type": "Method",
  "class": "org.apache.royale.effects.Resize",
  "description": ""},
{ "name": "onUpdateComplete",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "onUpdateComplete",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "onUploadProgress",
  "type": "Property",
  "class": "org.apache.royale.net.URLBinaryUploader",
  "description": "Callback for upload progress event."},
{ "name": "onUploadProgress",
  "type": "Property",
  "class": "org.apache.royale.net.URLUploadStream",
  "description": "Callback for upload progress event."},
{ "name": "opacity",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "The opacity component of the drop shadow."},
{ "name": "opacity",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "opacity",
  "type": "Property",
  "class": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": "The opacity value."},
{ "name": "opacity",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SolidBackgroundBead",
  "description": "The opacity (alpha)."},
{ "name": "open",
  "type": "Method",
  "class": "org.apache.royale.core.BrowserWindow",
  "description": ""},
{ "name": "open",
  "type": "Method",
  "class": "mx.controls.PopUpButton",
  "description": "Opens the UIComponent object specified by the <code>popUp</code> property."},
{ "name": "open",
  "type": "Event",
  "description": "Dispatched when the user clicks the anchor button to display the drop-down list."},
{ "name": "open",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The open value of this item converted into screen coordinates."},
{ "name": "open",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridListData",
  "description": "Contains <code>true</code> if the item is open and it has children."},
{ "name": "open",
  "type": "Method",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Opens the container as a pop-up, and switches the skin state from <code>closed</code> to <code>normal</code>."},
{ "name": "open",
  "type": "Event",
  "description": "Dispatched by the container when it's opened and ready for user interaction."},
{ "name": "open",
  "type": "Property",
  "class": "org.apache.royale.mdl.Dialog",
  "description": "Indicates whether the dialog is open."},
{ "name": "open",
  "type": "Method",
  "class": "org.apache.royale.jewel.Drawer",
  "description": ""},
{ "name": "open",
  "type": "Event",
  "description": "Dispatched when the user clicks the drop-down button to display the drop-down list."},
{ "name": "open",
  "type": "Property",
  "class": "org.apache.royale.jewel.PopUp",
  "description": "true, open the popup."},
{ "name": "openDrawer",
  "type": "Event",
  "description": "Dispatched when the drawer open"},
{ "name": "openField",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Specifies the field of the data provider that determines the y-axis location of the opening value of the element."},
{ "name": "openFilter",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The open value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "openInputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.IPermanentStorageProvider",
  "description": "Opens an input stream into a file in the data storage directory."},
{ "name": "openInputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.WebStorageProvider",
  "description": "Opens an input stream into a file in the data storage directory."},
{ "name": "openInputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AndroidExternalStorageProvider",
  "description": "Opens an input stream into a file in the data storage directory."},
{ "name": "openInputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.IPermanentStorage",
  "description": "Opens an input stream into a file in the data storage directory."},
{ "name": "openInputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.PermanentStorage",
  "description": "Opens an input stream into a file in the data storage directory."},
{ "name": "openInputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AirStorageProvider",
  "description": "Opens a file for input streaming."},
{ "name": "openItems",
  "type": "Property",
  "class": "mx.controls.Tree",
  "description": "The items that have been opened or set opened."},
{ "name": "openNode",
  "type": "Method",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "Open a node"},
{ "name": "openNode",
  "type": "Method",
  "class": "org.apache.royale.collections.ITreeData",
  "description": ""},
{ "name": "openNode",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "openNode",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Opens a node to display its children."},
{ "name": "openNode",
  "type": "Method",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": "Opens the given node."},
{ "name": "openNode",
  "type": "Method",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": ""},
{ "name": "openNode",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": ""},
{ "name": "openNode",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "openNodes",
  "type": "Property",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "An Array of Objects containing the data provider element for all the open branch nodes of the data."},
{ "name": "openNodes",
  "type": "Property",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": ""},
{ "name": "openNodes",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "openNumber",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The open value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "openOutputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.IPermanentStorageProvider",
  "description": "Opens an output stream into a file in the data storage directory."},
{ "name": "openOutputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.WebStorageProvider",
  "description": "Opens an output stream into a file in the data storage directory."},
{ "name": "openOutputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AndroidExternalStorageProvider",
  "description": "Opens an output stream into a file in the data storage directory."},
{ "name": "openOutputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.IPermanentStorage",
  "description": "Opens an output stream into a file in the data storage directory."},
{ "name": "openOutputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.PermanentStorage",
  "description": "Opens an output stream into a file in the data storage directory."},
{ "name": "openOutputDataStream",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AirStorageProvider",
  "description": "Opens a file for output streaming."},
{ "name": "openPopUp",
  "type": "Event",
  "description": "The openPopUp event is dispatched when the we want to open the popup"},
{ "name": "openValue",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The open value of this item."},
{ "name": "opening",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "Used for an <code>ITEM_OPENING</code> type events only."},
{ "name": "operation",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "Provides access to the operation/command for the CommandMessage."},
{ "name": "operation",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowOperationEvent",
  "description": "The operation that is about to begin or has just ended."},
{ "name": "operation",
  "type": "Property",
  "class": "spark.events.TextOperationEvent",
  "description": "The FlowOperation object representing the editing operation being performed on the text by the user."},
{ "name": "operation",
  "type": "Property",
  "class": "mx.messaging.messages.CommandMessage",
  "description": "Provides access to the operation/command for the CommandMessage."},
{ "name": "operation",
  "type": "Property",
  "class": "mx.messaging.messages.RemotingMessage",
  "description": "Provides access to the name of the remote method/operation that should be called."},
{ "name": "operation",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.RedoOperation",
  "description": "The operation to redo."},
{ "name": "operation",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.UndoOperation",
  "description": "The operation to undo."},
{ "name": "operation",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.RemotingMessage",
  "description": "Provides access to the name of the remote method/operation that should be called."},
{ "name": "operation",
  "type": "Property",
  "class": "mx.collections.SummaryField",
  "description": "The function that should be performed on the children."},
{ "name": "operationList",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "This serves as the default property for this instance so that we can define a set of operations as direct children of the HTTPMultiService tag in MXML."},
{ "name": "operationManager",
  "type": "Property",
  "class": "mx.rpc.AbstractInvoker",
  "description": "This property is set usually by framework code which wants to modify the behavior of a service invocation without modifying the way in which the service is called externally."},
{ "name": "operations",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": "The Operations array is usually only set by the MXML compiler if you create a service using an MXML tag."},
{ "name": "operations",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CompositeOperation",
  "description": "An array containing the operations grouped by this composite operation."},
{ "name": "operator",
  "type": "Property",
  "class": "org.apache.royale.svg.CompositeFilterElement",
  "description": ""},
{ "name": "optimumSpacing",
  "type": "Property",
  "class": "org.apache.royale.text.engine.SpaceJustifier",
  "description": ""},
{ "name": "optional",
  "type": "Property",
  "class": "org.apache.royale.reflection.ParameterDefinition",
  "description": "Whether this parameter is optional (has a default value) or not"},
{ "name": "options",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.InsertInlineGraphicOperation",
  "description": ""},
{ "name": "options",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ModifyInlineGraphicOperation",
  "description": "options are not supported"},
{ "name": "order",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "order",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--order-N\" effect selector."},
{ "name": "order",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "order",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "orderDesktop",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--order-N-desktop\" effect selector."},
{ "name": "orderPhone",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--order-N-phone\" effect selector."},
{ "name": "orderTablet",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--order-N-tablet\" effect selector."},
{ "name": "orientation",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "orientation",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Specifies whether elements are arranged row by row or column by column."},
{ "name": "orientation",
  "type": "Property",
  "class": "org.apache.royale.core.BrowserOrientation",
  "description": ""},
{ "name": "orientation",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "origin",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The origin, relative to the PieSeries's coordinate system, of this wedge."},
{ "name": "origin",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarTransform",
  "description": "The origin of the polar transform."},
{ "name": "originalEvent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEvent",
  "description": "The original mouse event generated by the mouse activity."},
{ "name": "originalItemRenderer",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "originalSelectionState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowTextOperation",
  "description": "The selection state at the start of the operation."},
{ "name": "originatingMessageSentTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Only populated in the case of a pushed message, timestamp in milliseconds since epoch of when the client that caused a push message sent its message."},
{ "name": "originatingMessageSize",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Only populated in the case of a pushed message, size in Bytes of the message that originally caused this pushed message."},
{ "name": "orphans",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "os",
  "type": "Property",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": ""},
{ "name": "otherAxes",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "An Array of axes."},
{ "name": "otherAxes",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "outerRadius",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The distance of the outer edge of this wedge from its origin, measured in pixels."},
{ "name": "outerRadius",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "The percentage of the total space available to the PieSeries to use when rendering the contents of the series."},
{ "name": "outerTargetWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "outerTargetWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "outerTargetWidthTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "outerTargetWidthTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "outline",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "outlineColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "outlineOffset",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "outlineStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "outlineWidth",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "over",
  "type": "Event",
  "description": "The over event is dispatched while the drag is happening over the drop target space."},
{ "name": "over",
  "type": "Event",
  "description": "The over event is dispatched while the drag is happening over the drop target space."},
{ "name": "overflow",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "overflowPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Policy used for deciding whether the last line of a container fits in the container, or whether it overflows."},
{ "name": "overflowPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "overflowWrap",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "overflowX",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "overflowY",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "overheadTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Amount of time in milliseconds that this message was being processed on the server in order to calculate and populate MPI metrics"},
{ "name": "overlap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Badge",
  "description": "A boolean flag to activate \"overlap\" effect selector."},
{ "name": "overlap",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Badge",
  "description": "A boolean flag to activate \"mdl-badge--overlap\" effect selector."},
{ "name": "overlayMapTypes",
  "type": "Property",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "overrides",
  "type": "Property",
  "class": "org.apache.royale.states.State",
  "description": "The array of overrides."},
{ "name": "overwriteMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "Indicates whether overwrite mode is on or off."},
{ "name": "overwriteText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Overwrites the selected text."},
{ "name": "overwriteText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "owner",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "owner",
  "type": "Property",
  "class": "mx.core.IVisualElement",
  "description": "The owner of this IVisualElement object."},
{ "name": "owner",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "owner",
  "type": "Property",
  "class": "org.apache.royale.core.ContainerBaseStrandChildren",
  "description": ""},
{ "name": "owner",
  "type": "Property",
  "class": "mx.controls.listClasses.BaseListData",
  "description": "A reference to the list object that owns this item."},
{ "name": "owner",
  "type": "Property",
  "class": "org.apache.royale.core.ListBaseStrandChildren",
  "description": ""},
{ "name": "owner",
  "type": "Property",
  "class": "org.apache.royale.reflection.MemberDefinitionBase",
  "description": ""},
{ "name": "owner",
  "type": "Property",
  "class": "mx.controls.treeClasses.TreeListData",
  "description": "The data for this owner in the Tree control."},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyHandler",
  "description": ""},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.NumberPropertyHandler",
  "description": ""},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.SpacingLimitPropertyHandler",
  "description": ""},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.CounterPropHandler",
  "description": ""},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.FormatPropertyHandler",
  "description": "Attempts to handle Object as key value pairs - strings fail"},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.IntPropertyHandler",
  "description": ""},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.CounterContentHandler",
  "description": ""},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PercentPropertyHandler",
  "description": ""},
{ "name": "owningHandlerCheck",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.BooleanPropertyHandler",
  "description": ""},
{ "name": "owns",
  "type": "Method",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "owns",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Returns <code>true</code> if the chain of <code>owner</code> properties points from <code>child</code> to this UIComponent."},
{ "name": "packageName",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The package name for this TypeDefinition"},
{ "name": "pad",
  "type": "Method",
  "class": "org.apache.royale.utils.StringPadder",
  "description": "Pads a string with an arbitrary string."},
{ "name": "pad",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "padding",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Specifies padding that Flex adds to the calculated minimum and maximum values for the axis when rendering the values on the screen."},
{ "name": "padding",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The minimum number of pixels between the container's edges and the edges of the layout element."},
{ "name": "padding",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "padding",
  "type": "Property",
  "class": "mx.charts.CategoryAxis",
  "description": "Specifies the padding added to either side of the axis when rendering data on the screen."},
{ "name": "padding",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The minimum number of pixels between the container's edges and the edges of the layout element."},
{ "name": "padding",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "padding",
  "type": "Property",
  "class": "org.apache.royale.core.layout.LayoutData",
  "description": ""},
{ "name": "padding",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "padding",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "padding",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "padding",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "The minimum number of pixels between the container's edges and the edges of the layout element."},
{ "name": "padding",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "padding",
  "type": "Property",
  "class": "mx.charts.chartClasses.DataDescription",
  "description": "The amount of padding, in data units, that the element requires beyond its min/max values to display its full values correctly ."},
{ "name": "paddingBlockEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "paddingBlockStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Number of pixels between the container's bottom border and the bottom of its content area."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Bottom inset in pixels."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Bottom inset in pixels."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IContainerFormattedElement",
  "description": "Bottom inset in pixels."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Bottom inset in pixels."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "Number of pixels between the container's bottom edge and the bottom edge of the last layout element."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The minimum number of pixels between the container's bottom edge and the bottom of all the container's layout elements."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayoutWithPaddingAndGap",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "mx.containers.beads.models.PanelModel",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Number of pixels between the container's bottom edge and the bottom edge of the last layout element."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The top padding value."},
{ "name": "paddingBottom",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "paddingBottomProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "paddingInlineEnd",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "paddingInlineStart",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Number of pixels between the container's left border and the left of its content area."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Left inset in pixels."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Left inset in pixels."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IContainerFormattedElement",
  "description": "Left inset in pixels."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Left inset in pixels."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The minimum number of pixels between the container's left edge and the left edge of the layout element."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "Number of pixels between the container's left edge and the left edge of the first layout element."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayoutWithPaddingAndGap",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "mx.containers.beads.models.PanelModel",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "spark.components.HGroup",
  "description": ""},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "The minimum number of pixels between the container's left edge and the left edge of the layout element."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The left padding value."},
{ "name": "paddingLeft",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "paddingLeftProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Number of pixels between the container's right border and the right of its content area."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Right inset in pixels."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Right inset in pixels."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IContainerFormattedElement",
  "description": "Right inset in pixels."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Right inset in pixels."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The minimum number of pixels between the container's right edge and the right edge of the layout element."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "Number of pixels between the container's right edge and the right edge of the last layout element."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayoutWithPaddingAndGap",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "mx.containers.beads.models.PanelModel",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "spark.components.HGroup",
  "description": ""},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "The minimum number of pixels between the container's right edge and the right edge of the layout element."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The right padding value."},
{ "name": "paddingRight",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "paddingRightProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Number of pixels between the container's top border and the top of its content area."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Top inset in pixels."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Top inset in pixels."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IContainerFormattedElement",
  "description": "Top inset in pixels."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Top inset in pixels."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "Number of pixels between the container's top edge and the top edge of the first layout element."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The minimum number of pixels between the container's top edge and the top of all the container's layout elements."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalLayoutWithPaddingAndGap",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "mx.containers.beads.models.PanelModel",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Number of pixels between the container's top edge and the top edge of the first layout element."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The top padding value."},
{ "name": "paddingTop",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "paddingTopProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "page",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "the page associated with this data"},
{ "name": "pageBreakAfter",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "pageBreakBefore",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "pageBreakInside",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "pairAdjustments",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DividedContainerModel",
  "description": "An array of integers indicating the size change for a pair of children in the DividedContainer."},
{ "name": "pairIndex",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDividedContainerDivider",
  "description": "The index of the pairs this divider is managing."},
{ "name": "pairIndex",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DividedContainerDivider",
  "description": "The index of this divider instance, indicating which pair of children it is managing."},
{ "name": "panBy",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "panTo",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "panToBounds",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "panoramio",
  "type": "Method",
  "class": "google.maps.panoramio",
  "description": ""},
{ "name": "panoramio",
  "type": "Class",
  "description": ""},
{ "name": "paragraph",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "paragraph",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The paragraph (ParagraphElement) in which the line resides."},
{ "name": "paragraphDirection",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.utils.NumberLineUserData",
  "description": ""},
{ "name": "paragraphEndIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "A Number that specifies, in pixels, the amount to indent the paragraph's end edge."},
{ "name": "paragraphEndIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the paragraph's end edge."},
{ "name": "paragraphEndIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "A Number that specifies, in pixels, the amount to indent the paragraph's end edge."},
{ "name": "paragraphEndIndentProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "paragraphFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyFormatOperation",
  "description": "The format properties to apply to the paragraphs in the range."},
{ "name": "paragraphFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "The paragraph format."},
{ "name": "paragraphFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "paragraphFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ClearFormatOperation",
  "description": "The format properties to undefine on the paragraphs in the range."},
{ "name": "paragraphFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The format attributes of the paragraph containing the range."},
{ "name": "paragraphSeparator",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.IPlainTextExporter",
  "description": "Specifies the character sequence used (in a text flow's plain-text equivalent) to separate paragraphs."},
{ "name": "paragraphSeparator",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.PlainTextExporter",
  "description": "@copy IPlainTextExporter#paragraphSeparator"},
{ "name": "paragraphSpaceAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "A Number that specifies the amount of space, in pixels, to leave after the paragraph."},
{ "name": "paragraphSpaceAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: A Number that specifies the amount of space, in pixels, to leave after the paragraph."},
{ "name": "paragraphSpaceAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "A Number that specifies the amount of space, in pixels, to leave after the paragraph."},
{ "name": "paragraphSpaceAfterProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "paragraphSpaceBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "A Number that specifies the amount of space, in pixels, to leave before the paragraph."},
{ "name": "paragraphSpaceBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: A Number that specifies the amount of space, in pixels, to leave before the paragraph."},
{ "name": "paragraphSpaceBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "A Number that specifies the amount of space, in pixels, to leave before the paragraph."},
{ "name": "paragraphSpaceBeforeProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "paragraphStartIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "A Number that specifies, in pixels, the amount to indent the paragraph's start edge."},
{ "name": "paragraphStartIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the paragraph's start edge."},
{ "name": "paragraphStartIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "A Number that specifies, in pixels, the amount to indent the paragraph's start edge."},
{ "name": "paragraphStartIndentProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "parameters",
  "type": "Property",
  "class": "mx.core.Application",
  "description": "The parameters property returns an Object containing name-value pairs representing the parameters provided to this Application."},
{ "name": "parameters",
  "type": "Property",
  "class": "org.apache.royale.reflection.MethodDefinition",
  "description": "The collection of parameters defined for this method each parameter is represented by a ParameterDefinition instance"},
{ "name": "parameters",
  "type": "Property",
  "class": "mx.messaging.config.LoaderConfig",
  "description": "If the LoaderConfig has been initialized, this should represent the top-level MovieClip's parameters."},
{ "name": "parcelHasChanged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "This is called when the parcel has changed"},
{ "name": "parcelIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": ""},
{ "name": "parcelIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "parcelIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "parcelList",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IComposer",
  "description": ""},
{ "name": "parcelList",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "List of areas we're composing into, matches the container's bounding box"},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.core.IChild",
  "description": "The parent."},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.core.UIHTMLElementWrapper",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "mx.core.IVisualElement",
  "description": "The parent container or component for this component."},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the parent of this FlowElement object."},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateSubParagraphGroupOperation",
  "description": "Specifies the element this operation modifies."},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateDivOperation",
  "description": "Specifies the parent element for the new IDivElement"},
{ "name": "parent",
  "type": "Property",
  "class": "mx.styles.StyleManagerImpl",
  "description": "The style manager that is the parent of this StyleManager."},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CreateListOperation",
  "description": "Specifies the element this operation adds a new IListElement to."},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "parent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "parentApplication",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A reference to the Application object that contains this UIComponent instance."},
{ "name": "parentChanged",
  "type": "Method",
  "class": "spark.core.IGraphicElement",
  "description": "Called by <code>IGraphicElementContainer</code> when an IGraphicElement is added to or removed from the host component."},
{ "name": "parentChanged",
  "type": "Method",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "This is an abstract method that subclasses implement."},
{ "name": "parentComponent",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A reference to the parent component object for this UIComponent."},
{ "name": "parentDocument",
  "type": "Property",
  "class": "org.apache.royale.core.ParentDocumentBead",
  "description": ""},
{ "name": "parentDrawsFocus",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "If true, calls to this control's <code>drawFocus()</code> method are forwarded to its parent's <code>drawFocus()</code> method."},
{ "name": "parentDrawsFocus",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "parentElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "parentElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": "The parent element is the element that the TextFlow is nested inside (such as a TableCellElement)."},
{ "name": "parentMenu",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": "The parent menu in a hierarchical chain of menus, where the current menu is a submenu of the parent."},
{ "name": "parentMenuBar",
  "type": "Property",
  "class": "org.apache.royale.core.IMenu",
  "description": ""},
{ "name": "parentMenuBar",
  "type": "Property",
  "class": "org.apache.royale.html.Menu",
  "description": ""},
{ "name": "parentRelativeEnd",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "parentRelativeEnd",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the relative end of this FlowElement object in the parent."},
{ "name": "parentRelativeStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "parentRelativeStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the relative start of this FlowElement object in the parent."},
{ "name": "parentTable",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
  "description": ""},
{ "name": "parentTable",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": ""},
{ "name": "parse",
  "type": "Method",
  "class": "org.apache.royale.utils.JXON",
  "description": "Use `parse()` to convert an XML string into a JXON object."},
{ "name": "parse",
  "type": "Method",
  "class": "org.apache.royale.reflection.beads.JSONReviver",
  "description": "parse JSON but convert to ValueObjects"},
{ "name": "parseBody",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": ""},
{ "name": "parseConstraintValue",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutElementHelper",
  "description": "can be a Number, or a string in the format \"col1:10\"."},
{ "name": "parseDateString",
  "type": "Method",
  "class": "mx.formatters.DateFormatter",
  "description": "Converts a date that is formatted as a String into a Date object."},
{ "name": "parseDivElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse the <div ."},
{ "name": "parseFunction",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "Specify a <code>parseFunction</code> to customize how the values rendered by your chart are converted into numeric values."},
{ "name": "parseFunction",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "Specifies a method that customizes the value of the data points."},
{ "name": "parseHtmlElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": ""},
{ "name": "parseInlineGraphic",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse a leaf element, the <img ."},
{ "name": "parseItems",
  "type": "Method",
  "class": "org.apache.royale.collections.parsers.IInputParser",
  "description": "Take the input string (could be serialized data set, XML, or JSON) and return an array of serialized data items."},
{ "name": "parseItems",
  "type": "Method",
  "class": "org.apache.royale.collections.parsers.JSONInputParser",
  "description": ""},
{ "name": "parseLink",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse a LinkElement Block."},
{ "name": "parseLinkActiveFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": ""},
{ "name": "parseLinkHoverFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": ""},
{ "name": "parseLinkNormalFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": ""},
{ "name": "parseListMarkerFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": ""},
{ "name": "parseNumberString",
  "type": "Method",
  "class": "mx.formatters.NumberBase",
  "description": "Extracts a number from a formatted String."},
{ "name": "parseObject",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": ""},
{ "name": "parseSPGE",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse an SPGE element"},
{ "name": "parseStyles",
  "type": "Method",
  "class": "org.apache.royale.core.IValuesImpl",
  "description": "Converts an HTML-like style format into an object."},
{ "name": "parseStyles",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": ""},
{ "name": "parseStyles",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "parseTCY",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse a TCY Block."},
{ "name": "parseTable",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse the <table ."},
{ "name": "parseTableCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse the <td ."},
{ "name": "parseTableRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Parse the <tr ."},
{ "name": "partAdded",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "partRemoved",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "paste",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuClipboardItems",
  "description": ""},
{ "name": "pasteTextScrap",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Pastes the TextScrap into the selected area."},
{ "name": "pasteTextScrap",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "path",
  "type": "Property",
  "class": "org.apache.royale.svg.ClipBead",
  "description": ""},
{ "name": "pathCommands",
  "type": "Property",
  "class": "org.apache.royale.svg.Path",
  "description": ""},
{ "name": "pattern",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.Restrict",
  "description": "The string to use as numeric pattern."},
{ "name": "pattern",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.RestrictTextField",
  "description": "The string to use as numeric pattern."},
{ "name": "pause",
  "type": "Method",
  "class": "org.apache.royale.effects.IEffect",
  "description": "Pauses the effect until you call the <code>resume()</code> method."},
{ "name": "pause",
  "type": "Method",
  "class": "org.apache.royale.effects.Effect",
  "description": "Pauses the effect until you call the <code>resume()</code> method."},
{ "name": "pause",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Pauses the effect until you call the <code>resume()</code> method."},
{ "name": "pause",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "peekRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Returns the next operation to be redone."},
{ "name": "peekRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "peekTextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "peekUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Returns the next operation to be undone."},
{ "name": "peekUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "pendingTasks",
  "type": "Property",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": ""},
{ "name": "perInstanceStyles",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "perWedgeExplodeRadius",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "An Array of numbers from 0 to 1, specifying how far each wedge of the pie series should be exploded from the center of the chart as a percentage of the total radius."},
{ "name": "percent",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "percentColumnWidth",
  "type": "Property",
  "class": "org.apache.royale.express.supportClasses.DataGridColumn",
  "description": "Sets the size of the column as a percentage of the remaining space once the fixed columns have been accounted for."},
{ "name": "percentComplete",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Percentage of process that is completed."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "The requested percentage height of this component in its container."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "The requested percentage height this component should have in the parent container."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "The requested percentage height this component should have in the parent container."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": "The requested percentage height this component should have in the parent container."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the height of a component as a percentage of its parent's size."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "Specifies the height of a component as a percentage of its parent's size."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Specifies the height of a component as a percentage of its parent's size."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": "Specifies the height of a component as a percentage of its parent's size."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": "Specifies the height of a component as a percentage of its parent's size."},
{ "name": "percentHeight",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "percentHeight",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "percentHeight",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Number that specifies the height of a component as a percentage of its parent's size."},
{ "name": "percentValue",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The percentage this value represents of the total pie."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "The requested percentage width of this component in its container."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "The requested percentage width this component should have in the parent container."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "The requested percentage width this component should have in the parent container."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": "The requested percentage width this component should have in the parent container."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "Number that specifies the width of a component as a percentage of its parent's size."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "Specifies the width of a component as a percentage of its parent's size."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Specifies the width of a component as a percentage of its parent's size."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": "Specifies the width of a component as a percentage of its parent's size."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": "Specifies the width of a component as a percentage of its parent's size."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "percentWidth",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "percentWidth",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The width of this column as a percentage of DataGrid width."},
{ "name": "percentWidth",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "Number that specifies the width of a component as a percentage of its parent container's size."},
{ "name": "perform",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.SplitMemento",
  "description": ""},
{ "name": "perform",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.MoveElementMemento",
  "description": ""},
{ "name": "perform",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.AddElementMemento",
  "description": ""},
{ "name": "perform",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento",
  "description": ""},
{ "name": "perform",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.JoinMemento",
  "description": ""},
{ "name": "perform",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.RemoveElementsMemento",
  "description": ""},
{ "name": "performInternal",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.SplitMemento",
  "description": ""},
{ "name": "performInternal",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento",
  "description": ""},
{ "name": "performInternal",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.JoinMemento",
  "description": ""},
{ "name": "performLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "Executes the layout associated with this container."},
{ "name": "performLayout",
  "type": "Method",
  "class": "org.apache.royale.core.LayoutBase",
  "description": "Performs the layout in three parts: before, layout, after."},
{ "name": "performLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AccordionItemRendererView",
  "description": ""},
{ "name": "performRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IOperation",
  "description": "Reperforms the operation."},
{ "name": "performUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IOperation",
  "description": "Reverses the operation."},
{ "name": "perspective",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "perspectiveOrigin",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "phoneDenominator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The Y Number for \"phone-col-X-Y\" effect selector."},
{ "name": "phoneDenominator",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "The Y Number for \"phone-col-X-Y\" effect selector."},
{ "name": "phoneNumerator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The X Number for \"phone-col-X-Y\" effect selector."},
{ "name": "phoneNumerator",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "The X Number for \"phone-col-X-Y\" effect selector."},
{ "name": "phoneVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.ResponsiveVisibility",
  "description": "Makes the component to be visible or hidden in phone size Uses \"visible-phone\" and \"hidden-phone\" effect selectors."},
{ "name": "phoneVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "Makes the cell to be visible or hidden in phone size Uses \"visible-phone\" and \"hidden-phone\" effect selectors."},
{ "name": "phoneVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "Makes the cell to be visible or hidden in phone size Uses \"visible-phone\" and \"hidden-phone\" effect selectors."},
{ "name": "piggybackingEnabled",
  "type": "Property",
  "class": "mx.messaging.channels.AMFChannel",
  "description": "Indicates whether this channel will piggyback poll requests along with regular outbound messages when an outstanding poll is not in progress."},
{ "name": "pinBetween",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutElementHelper",
  "description": "<code>min</code> or <code>max</code>."},
{ "name": "pitch",
  "type": "Property",
  "class": "google.maps.StreetViewPov",
  "description": ""},
{ "name": "pixelHeight",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianTransform",
  "description": "The height of the data area that the CartesianTransform represents, in pixels."},
{ "name": "pixelWidth",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianTransform",
  "description": "The width of the data area that the CartesianTransform represents, in pixels."},
{ "name": "placeholderGraphic",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "placeholderGraphic",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "@private"},
{ "name": "placement",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IAxisBead",
  "description": "The placement of the axis with respect to the chart area."},
{ "name": "placement",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": "The placement of the axis with respect to the chart area."},
{ "name": "placement",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "The side of the chart the axisRenderer will appear on."},
{ "name": "placement",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "places",
  "type": "Method",
  "class": "google.maps.places",
  "description": ""},
{ "name": "places",
  "type": "Class",
  "description": ""},
{ "name": "platformModifierKey",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Whether the default platform modifier key was pressed at time of event."},
{ "name": "play",
  "type": "Method",
  "class": "mx.effects.IEffectInstance",
  "description": "Plays the effect instance on the target."},
{ "name": "play",
  "type": "Method",
  "class": "mx.effects.EffectInstance",
  "description": ""},
{ "name": "play",
  "type": "Method",
  "class": "org.apache.royale.effects.IEffect",
  "description": "Stops the tween, ending it without dispatching an event or calling the Tween's endFunction or <code>onTweenEnd()</code>."},
{ "name": "play",
  "type": "Method",
  "class": "org.apache.royale.effects.Effect",
  "description": "Stops the tween, ending it without dispatching an event or calling the Tween's endFunction or <code>onTweenEnd()</code>."},
{ "name": "play",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Stops the tween, ending it without dispatching an event or calling the Tween's endFunction or <code>onTweenEnd()</code>."},
{ "name": "play",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuBuiltInItems",
  "description": ""},
{ "name": "play",
  "type": "Method",
  "class": "org.apache.royale.utils.LayoutTweener",
  "description": ""},
{ "name": "play",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "play",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Effect",
  "description": "Plays the effect on the target object"},
{ "name": "play",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": "Causes the target object to move between its starting and ending positions."},
{ "name": "play",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Sequence",
  "description": "Causes the effects in the tween list to be played, one after the other."},
{ "name": "playerEnablesSpicyFeatures",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.GlobalSettings",
  "description": ""},
{ "name": "pleaseStop",
  "type": "Method",
  "class": "org.apache.royale.test.runners.ITestRunner",
  "description": "Requests that the runner stops running the tests."},
{ "name": "pleaseStop",
  "type": "Method",
  "class": "org.apache.royale.test.runners.MetadataRunner",
  "description": ""},
{ "name": "pleaseStop",
  "type": "Method",
  "class": "org.apache.royale.test.runners.ParentRunner",
  "description": ""},
{ "name": "pleaseStop",
  "type": "Method",
  "class": "org.apache.royale.test.RoyaleUnitCore",
  "description": "Requests that the runner stops running the tests."},
{ "name": "pointAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The alpha for drawing the cursor."},
{ "name": "pointBlendMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The blend mode for drawing the cursor."},
{ "name": "pointBlinkAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The alpha of the cursor blinks while blinking."},
{ "name": "pointBlinkColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The color of the cursor while blinking."},
{ "name": "pointBlinkRate",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The rate at which the cursor blinks, in milliseconds."},
{ "name": "pointColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The color for drawing the cursor."},
{ "name": "pointFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "The format that will be applied to inserted text."},
{ "name": "pointFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionState",
  "description": "The format attributes applied to inserted text."},
{ "name": "pointStroke",
  "type": "Property",
  "class": "mx.charts.styles.HaloDefaults",
  "description": ""},
{ "name": "pointerEvents",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "points",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.ILineSegmentItemRenderer",
  "description": "The points that define the vertices of the line segment."},
{ "name": "points",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": "The points of the vertices."},
{ "name": "points",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": "The points of the vertices."},
{ "name": "polar",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "poll",
  "type": "Method",
  "class": "mx.messaging.channels.PollingChannel",
  "description": "Initiates a poll operation if there are consumers subscribed to this channel, and polling is enabled for this channel."},
{ "name": "polling",
  "type": "Property",
  "class": "mx.messaging.channels.AMFChannel",
  "description": "Reports whether the channel is actively polling."},
{ "name": "pollingEnabled",
  "type": "Property",
  "class": "mx.messaging.channels.AMFChannel",
  "description": "Indicates whether this channel is enabled to poll."},
{ "name": "pollingInterval",
  "type": "Property",
  "class": "mx.messaging.channels.AMFChannel",
  "description": "Provides access to the polling interval for this Channel."},
{ "name": "poly",
  "type": "Property",
  "class": "google.maps.geometry",
  "description": ""},
{ "name": "poly",
  "type": "Method",
  "class": "google.maps.geometry.poly",
  "description": ""},
{ "name": "poly",
  "type": "Class",
  "description": ""},
{ "name": "pop",
  "type": "Method",
  "class": "org.apache.royale.mobile.StackedViewManager",
  "description": "Pops the top-most view from the navigation stack."},
{ "name": "pop",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "popInsideListItemMargin",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "popInsideListItemMargins",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "popLeftMargin",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "popParcel",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "popRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Removes the next operation to be redone from the redo stack, and returns it."},
{ "name": "popRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "popRightMargin",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "popUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Removes the next operation to be undone from the undo stack, and returns it."},
{ "name": "popUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "popUp",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IViewWithPopUp",
  "description": "The component housing the popup."},
{ "name": "popUp",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateFieldView",
  "description": "The pop-up component that holds the selection list."},
{ "name": "popUp",
  "type": "Property",
  "class": "mx.controls.PopUpButton",
  "description": "Specifies the UIComponent object, or object defined by a subclass of UIComponent, to pop up."},
{ "name": "popUp",
  "type": "Property",
  "class": "spark.components.PopUpAnchor",
  "description": "The IFlexDisplayObject to add to the PopUpManager when the PopUpAnchor is opened."},
{ "name": "popUp",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ComboBoxView",
  "description": "The pop-up list component of the ComboBox."},
{ "name": "popUp",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IDropDownListView",
  "description": ""},
{ "name": "popUp",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateFieldView",
  "description": "The pop-up component that holds the selection list."},
{ "name": "popUp",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorPickerView",
  "description": "The pop-up component of the ComboBox."},
{ "name": "popUp",
  "type": "Property",
  "class": "spark.components.beads.DropDownListView",
  "description": "The dropdown/popup that displays the set of choices."},
{ "name": "popUp",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.PopUpView",
  "description": "The pop-up component that will hold the real content"},
{ "name": "popUpHost",
  "type": "Property",
  "class": "org.apache.royale.core.IPopUpHostParent",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "org.apache.royale.core.ViewBase",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "org.apache.royale.core.ContainerBaseStrandChildren",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "mx.core.Application",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "mx.managers.SystemManager",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "spark.components.Application",
  "description": ""},
{ "name": "popUpHost",
  "type": "Property",
  "class": "org.apache.royale.jewel.ApplicationResponsiveView",
  "description": ""},
{ "name": "popUpMenu",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": "Sets the dataProvider of an existing Menu control and places the Menu control in the specified parent container."},
{ "name": "popUpParent",
  "type": "Property",
  "class": "org.apache.royale.core.IPopUpHost",
  "description": ""},
{ "name": "popUpParent",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": "ViewBase can host popups but they will be in the layout, if any"},
{ "name": "popUpParent",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": "Application can host popups but they will be in the layout, if any"},
{ "name": "popUpParent",
  "type": "Property",
  "class": "org.apache.royale.core.ViewBase",
  "description": "ViewBase can host popups but they will be in the layout, if any"},
{ "name": "popUpParent",
  "type": "Property",
  "class": "mx.core.Application",
  "description": "Application can host popups but in the strandChildren"},
{ "name": "popUpParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": "Application can host popups but they will be in the layout, if any"},
{ "name": "popUpParent",
  "type": "Property",
  "class": "spark.components.Application",
  "description": "Application can host popups but in the strandChildren"},
{ "name": "popUpParent",
  "type": "Property",
  "class": "org.apache.royale.jewel.ApplicationResponsiveView",
  "description": "ViewBase can host popups but they will be in the layout, if any"},
{ "name": "popUpPosition",
  "type": "Property",
  "class": "spark.components.PopUpAnchor",
  "description": "Position of the <code>popUp</code> control when it is opened, relative to the PopUpAnchor component."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IViewWithPopUp",
  "description": "Determines whether or not the pop-up is visible."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateFieldView",
  "description": "This property is true if the pop-up selection list is currently visible."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.IComboBoxView",
  "description": "Determines whether or not the pop-up with the selection list is visible or not."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ComboBoxView",
  "description": "Returns whether or not the pop-up is visible."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IDropDownListView",
  "description": ""},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateFieldView",
  "description": "This property is true if the pop-up selection list is currently visible."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxView",
  "description": "Returns whether or not the pop-up is visible."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorPickerView",
  "description": "Returns whether or not the pop-up is visible."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "spark.components.beads.DropDownListView",
  "description": "A flag that indicates whether the dropdown/popup is visible."},
{ "name": "popUpVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.PopUpView",
  "description": "This property is true if the pop-up selection list is currently visible."},
{ "name": "popUpWidthMatchesAnchorWidth",
  "type": "Property",
  "class": "spark.components.PopUpAnchor",
  "description": "If <code>true</code>, the width of the <code>popUp</code> control is set to the value of the PopUpAnchor's width."},
{ "name": "popView",
  "type": "Method",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "Removes the most recently added view."},
{ "name": "popup",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.IComboBoxView",
  "description": "The component housing the selection list."},
{ "name": "popup",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxView",
  "description": "The pop-up list component of the ComboBox."},
{ "name": "popupButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IComboBoxView",
  "description": "The sub-component used for the button to activate the pop-up."},
{ "name": "popupButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ComboBoxView",
  "description": "The Button component of the ComboBox."},
{ "name": "popupButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorPickerView",
  "description": "The Button component of the ComboBox."},
{ "name": "popupTween",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": ""},
{ "name": "posTotalsByPrimaryAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "The summed totals of the stacked positive values."},
{ "name": "position",
  "type": "Property",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "position",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITabStopFormat",
  "description": "The position of the tab stop, in pixels, relative to the start edge of the column."},
{ "name": "position",
  "type": "Property",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Moves, or returns the current position, in bytes, of the pointer into the BinaryData object."},
{ "name": "position",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.Mark",
  "description": ""},
{ "name": "position",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "position",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Progress",
  "description": "Returns a Number value returning the result of dividing the current value (value) by the maximum value (max)."},
{ "name": "position",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TabStop",
  "description": ""},
{ "name": "position",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "The position of the tab stop, in pixels, relative to the start edge of the column."},
{ "name": "position",
  "type": "Property",
  "class": "mx.charts.AxisLabel",
  "description": "The position, specified as a value between 0 and 1, of the label along the axis."},
{ "name": "position",
  "type": "Property",
  "class": "mx.events.ScrollEvent",
  "description": "The new scroll position."},
{ "name": "positionAllDataTips",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Defines the locations of DataTip objects on the chart when the <code>showAllDataTips</code> property is set to <code>true</code>."},
{ "name": "positionDataTips",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Defines the locations of DataTip objects on the chart."},
{ "name": "positionInsideBoundingClientRect",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.util",
  "description": "Determines the position of the popUp related to a point to avoid the component get partialy out of sight."},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.core.IChild",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.core.IUIBase",
  "description": "Set positioner of IUIBase."},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "The HTMLElement used to position the component."},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.core.UIHTMLElementWrapper",
  "description": "The HTMLElement used to position the component."},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.Slider",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.TabBar",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.mdl.TextArea",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.checkbox.CheckBoxIcon",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.RadioButtonIcon",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.Bar",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.CheckBoxIcon",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.mdl.TextField",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.drawer.DrawerBase",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemRenderer",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.mdl.Slider",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.radiobutton.RadioButtonIcon",
  "description": ""},
{ "name": "positioner",
  "type": "Property",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": ""},
{ "name": "postLayoutTransformOffsets",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "offsets to the transform convenience properties that are applied when a component is rendered."},
{ "name": "postSendHandler",
  "type": "Method",
  "class": "org.apache.royale.net.beads.CORSCredentialsBead",
  "description": "Clean up event listeners."},
{ "name": "preCompose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IContainerFormattedElement",
  "description": ""},
{ "name": "preCompose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Returns true if composition is necessary, false otherwise"},
{ "name": "preCompose",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FactoryComposer",
  "description": "Returns true if composition is necessary, false otherwise"},
{ "name": "preHandle",
  "type": "Method",
  "class": "mx.rpc.remoting.Operation",
  "description": ""},
{ "name": "preHandle",
  "type": "Method",
  "class": "mx.rpc.http.AbstractOperation",
  "description": ""},
{ "name": "preProcessILGs",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "preSendHandler",
  "type": "Method",
  "class": "org.apache.royale.net.beads.CORSCredentialsBead",
  "description": "Modify the HTTP request to pass credentials."},
{ "name": "precedence",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ISubParagraphGroupElementBase",
  "description": ""},
{ "name": "precedence",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElementBase",
  "description": "Precedence is used to determine which SPGE element will be the container element when two or more SPGEs of the same textLength are inside one another."},
{ "name": "precedence",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TCYElement",
  "description": "@private"},
{ "name": "precedence",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "@private"},
{ "name": "precedence",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SubParagraphGroupElement",
  "description": "@private Lowest level of precedence."},
{ "name": "precision",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "The maximum number of digits allowed to follow the decimal point."},
{ "name": "precision",
  "type": "Property",
  "class": "mx.formatters.NumberFormatter",
  "description": "Number of decimal places to include in the output String."},
{ "name": "precision",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Number of decimal places to include in the output String."},
{ "name": "precisionError",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Error message when the value has a precision that exceeds the value defined by the precision property."},
{ "name": "preferDropLabels",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Determines how the axis handles overlapping labels."},
{ "name": "preferDropLabels",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "preferDropLabels",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "preferred",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "preferred",
  "type": "Property",
  "class": "mx.containers.gridClasses.GridRowInfo",
  "description": "Input: Measurement for the GridRow."},
{ "name": "prefix",
  "type": "Property",
  "class": "QName",
  "description": ""},
{ "name": "prefix",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "prefix",
  "type": "Property",
  "class": "Namespace",
  "description": ""},
{ "name": "preindex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Badge",
  "description": "A boolean flag to activate \"preindex\" effect selector."},
{ "name": "preinitialize",
  "type": "Event",
  "description": "Dispatched at startup before the instances get created."},
{ "name": "preinitialize",
  "type": "Event",
  "description": "Dispatched at startup before the instances get created."},
{ "name": "preinitialize",
  "type": "Event",
  "description": "Dispatched at startup before the instances get created."},
{ "name": "preinitialize",
  "type": "Event",
  "description": "Dispatched at startup before the instances get created."},
{ "name": "prepare",
  "type": "Method",
  "class": "spark.components.gridClasses.IGridItemEditor",
  "description": "Called after the editor has been created and sized but before the editor is visible."},
{ "name": "prepare",
  "type": "Method",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "Called from the item renderer parent's <code>updateDisplayList()</code> method after all of the renderer's properties have been set."},
{ "name": "prepare",
  "type": "Method",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": ""},
{ "name": "prepareCreatedBinding",
  "type": "Method",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": ""},
{ "name": "prepareGridVisualElement",
  "type": "Method",
  "class": "spark.components.gridClasses.IGridVisualElement",
  "description": "This method is called before a visual element of the Grid is rendered to give the element a chance to configure itself."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "org.apache.royale.core.IStrandWithPresentationModel",
  "description": "Returns the bead that holds the properties for the presentationModel."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "org.apache.royale.html.DataContainer",
  "description": "The presentation model for the list."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.List",
  "description": "The presentation model for the list."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "The DataGrid's presentation model"},
{ "name": "presentationModel",
  "type": "Property",
  "class": "spark.components.DataGroup",
  "description": "The presentation model for the list."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": "The presentation model for the list."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "org.apache.royale.core.IListWithPresentationModel",
  "description": "Returns the component within the list (maybe even the list shell itself) which will be the parent of each itemRenderer."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.DataContainer",
  "description": "The presentation model for the list."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "org.apache.royale.jewel.ComboBox",
  "description": "The presentation model for the list."},
{ "name": "presentationModel",
  "type": "Property",
  "class": "mx.controls.DataGrid",
  "description": "The DataGrid's presentation model"},
{ "name": "presentationModel",
  "type": "Property",
  "class": "org.apache.royale.html.DataGrid",
  "description": "The DataGrid's presentation model"},
{ "name": "preserveBodyElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.IHTMLImporter",
  "description": "This property tells the importer to create an element for the <code>BODY</code> tag in HTML markup."},
{ "name": "preserveBodyElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": "@copy IHTMLExporter#preserveBodyElement"},
{ "name": "preserveHTMLElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.IHTMLImporter",
  "description": "This property tells the importer to create an element for the <code>HTML</code> tag in HTML markup."},
{ "name": "preserveHTMLElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TextFieldHtmlImporter",
  "description": "@copy IHTMLExporter#preserveHTMLElement"},
{ "name": "preserveSelection",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "preserveSelection",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If <code>true</code>, and <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "preserveSelection",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>true</code>, the selection is preserved when the data provider refreshes its collection."},
{ "name": "preserveSelectionOnSetText",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@public It's <code>_preserveSelectionOnSetText</code> to decide whether or not TLF preserve selection state during setText()."},
{ "name": "prettyPrint",
  "type": "Method",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Returns a summary of all information available in MPI."},
{ "name": "prev",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": ""},
{ "name": "prevMonthButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateChooserView",
  "description": "The button that causes the previous month to be displayed by the DateChooser."},
{ "name": "preventDefault",
  "type": "Method",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": "Whether the default action has been prevented."},
{ "name": "preventDefault",
  "type": "Method",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "Whether the default action has been prevented."},
{ "name": "preventDefault",
  "type": "Method",
  "class": "org.apache.royale.events.FocusEvent",
  "description": "Whether the default action has been prevented."},
{ "name": "preventDefault",
  "type": "Method",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Whether the default action has been prevented."},
{ "name": "preventDefault",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.Clipboard",
  "description": ""},
{ "name": "previousAtomPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Returns the absolute position of the previous atom."},
{ "name": "previousButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": ""},
{ "name": "previousButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": "The org."},
{ "name": "previousButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": "The button that causes the previous month or year to be displayed by the DateChooser."},
{ "name": "previousCharacter",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange backward by one character."},
{ "name": "previousLine",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "previousLine",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "previousLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange up one line."},
{ "name": "previousPage",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange up one page."},
{ "name": "previousRegion",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineMirrorRegion",
  "description": ""},
{ "name": "previousStep",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "the previous step to go  defaults to null if there's no previous step"},
{ "name": "previousValue",
  "type": "Property",
  "class": "org.apache.royale.states.SetProperty",
  "description": ""},
{ "name": "previousWord",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange backward by one word."},
{ "name": "previousWordPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Returns absolute position of the beginning of the previous word."},
{ "name": "primary",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A boolean flag to activate \"mdl-button--primary\" effect selector."},
{ "name": "print",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuBuiltInItems",
  "description": ""},
{ "name": "printJob",
  "type": "Property",
  "class": "mx.printing.FlexPrintJob",
  "description": "The printJob property;"},
{ "name": "priority",
  "type": "Property",
  "class": "mx.messaging.AbstractProducer",
  "description": "The default message priority for the messages sent by the Producer."},
{ "name": "privateData",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowValueHolder",
  "description": ""},
{ "name": "processAutoSizeImageLoaded",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "processBackgroundColors",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.NumberLineFactory",
  "description": ""},
{ "name": "processFloatsAtLineEnd",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "processFloatsAtLineStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "processInlinesAtLineEnd",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "processModelChanged",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "processNewDataProvider",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartElement",
  "description": "Called when a new dataProvider is assigned to the element."},
{ "name": "processResult",
  "type": "Method",
  "class": "mx.rpc.remoting.Operation",
  "description": ""},
{ "name": "processedDescriptors",
  "type": "Property",
  "class": "mx.managers.ILayoutManagerClient",
  "description": ""},
{ "name": "processedDescriptors",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "progress",
  "type": "Event",
  "description": "Dispatched when content is loading."},
{ "name": "progress",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "Convenience function for progress event to allow chaining."},
{ "name": "progress",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "Convenience function for progress event to allow chaining."},
{ "name": "progress",
  "type": "Event",
  "description": "Dispatched as content loads in event or polled mode."},
{ "name": "progress",
  "type": "Event",
  "description": "Dispatched at regular intervals as the module loads."},
{ "name": "progressHandler",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoader",
  "description": ""},
{ "name": "progressHandler",
  "type": "Method",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": ""},
{ "name": "progressHandler",
  "type": "Method",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "projectBounds",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Returns the axis aligned bounding box <code>bounds</code> transformed with <code>matrix</code> and then projected with <code>projection</code>."},
{ "name": "prompt",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.TextPrompt",
  "description": "The string to use as the placeholder prompt."},
{ "name": "prompt",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DropDownListView",
  "description": "The prompt"},
{ "name": "prompt",
  "type": "Property",
  "class": "spark.components.DropDownList",
  "description": "The prompt for the DropDownList control."},
{ "name": "prompt",
  "type": "Property",
  "class": "org.apache.royale.express.TextInput",
  "description": "Displays a message to the user when the field is empty."},
{ "name": "prompt",
  "type": "Property",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": "The prompt for the DropDownList control."},
{ "name": "prompt",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.TextPromptBead",
  "description": "The string to use as the placeholder prompt."},
{ "name": "prompt",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TextPrompt",
  "description": "The string to use as the placeholder prompt."},
{ "name": "properties",
  "type": "Property",
  "class": "org.apache.royale.core.ClassFactory",
  "description": "Initial properties assigned to each instance."},
{ "name": "properties",
  "type": "Property",
  "class": "mx.rpc.AbstractOperation",
  "description": "This is a hook primarily for framework developers to register additional user specified properties for your operation."},
{ "name": "properties",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "A hashmap of properties to assign to new instances."},
{ "name": "property",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "A String specifying the name of the property of the <code>source</code> object that contains the value to validate."},
{ "name": "property",
  "type": "Property",
  "class": "mx.events.PropertyChangeEvent",
  "description": ""},
{ "name": "propertyAffectsSort",
  "type": "Method",
  "class": "mx.collections.ISort",
  "description": "Return whether the specified property is used to control the sort."},
{ "name": "propertyAffectsSort",
  "type": "Method",
  "class": "org.apache.royale.collections.ISort",
  "description": "Return whether the specified property is used to control the sort."},
{ "name": "propertyAffectsSort",
  "type": "Method",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "propertyAffectsSort",
  "type": "Method",
  "class": "mx.collections.Sort",
  "description": ""},
{ "name": "propertyChange",
  "type": "Event",
  "description": "Dispatched when a property of the channel set changes."},
{ "name": "propertyChange",
  "type": "Event",
  "description": "Dispatched when a property of the RoyaleClient singleton changes."},
{ "name": "propertyChange",
  "type": "Event",
  "description": "Dispatched when a property of the channel changes."},
{ "name": "propertyChange",
  "type": "Event",
  "description": "Dispatched when the <code>connected</code> property of the MessageAgent changes."},
{ "name": "propertyChange",
  "type": "Event",
  "description": "Dispatched when a property of the ChannelSet changes."},
{ "name": "propertyList",
  "type": "Property",
  "class": "mx.messaging.config.ConfigMap",
  "description": "Contains a list of all of the property names for the proxied object."},
{ "name": "propertyName",
  "type": "Property",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "propertyName",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": "The property in the sourceID that is the ArrayList."},
{ "name": "propertyName",
  "type": "Property",
  "class": "org.apache.royale.events.ValueChangeEvent",
  "description": "The name of the property."},
{ "name": "propertyName",
  "type": "Property",
  "class": "org.apache.royale.binding.PropertyWatcher",
  "description": "The name of the property we are watching."},
{ "name": "propertyNames",
  "type": "Method",
  "class": "org.apache.royale.utils.Proxy",
  "description": ""},
{ "name": "propertyNames",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "propertyNames",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "protocol",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Provides access to the protocol that the channel uses."},
{ "name": "protocol",
  "type": "Property",
  "class": "mx.messaging.channels.AMFChannel",
  "description": "Returns the protocol for this channel (http)."},
{ "name": "protocol",
  "type": "Property",
  "class": "mx.messaging.channels.DirectHTTPChannel",
  "description": "Indicates the protocol used by this channel."},
{ "name": "protocol",
  "type": "Property",
  "class": "mx.messaging.channels.SecureAMFChannel",
  "description": "Returns the protocol for this channel (https)."},
{ "name": "push",
  "type": "Method",
  "class": "org.apache.royale.mobile.StackedViewManager",
  "description": "Pushes the next view onto the navigation stack."},
{ "name": "push",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Inserts the specified node at the end of the list."},
{ "name": "push",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.MementoList",
  "description": ""},
{ "name": "push",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "pushInsideListItemMargin",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "pushInsideListItemMargins",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "pushLeftMargin",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "pushOneWayTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Only populated in the case of a pushed message, this is the network time between the server pushing the message and the client receiving it."},
{ "name": "pushRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Adds a redoable operation to the redo stack."},
{ "name": "pushRedo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "pushRightMargin",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "pushTableCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ColumnState",
  "description": ""},
{ "name": "pushUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Adds an undoable operation to the undo stack."},
{ "name": "pushUndo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "pushView",
  "type": "Method",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "Pushes a view onto the top/end of the stack of views."},
{ "name": "pushedFlag",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "True if this is info for a message that was pushed from server to client"},
{ "name": "pushedMessageFlag",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Returns true if message was pushed to the client and is not a response to a message that originated on the client."},
{ "name": "quadIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quadInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quadOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quadraticCurveTo",
  "type": "Method",
  "class": "org.apache.royale.graphics.PathBuilder",
  "description": "Adds a quadraticCurveTo command"},
{ "name": "qualifiedName",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The qualified name for this TypeDefinition"},
{ "name": "qualifiedName",
  "type": "Property",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": ""},
{ "name": "qualifiedTypeSelectors",
  "type": "Property",
  "class": "mx.styles.StyleManagerImpl",
  "description": ""},
{ "name": "quality",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuBuiltInItems",
  "description": ""},
{ "name": "quartIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quartInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quartOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quickCloneTextLayoutFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "quickInitializeForSplit",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowLeafElement",
  "description": ""},
{ "name": "quintIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quintInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quintOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "quotes",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "race",
  "type": "Method",
  "class": "Promise",
  "description": ""},
{ "name": "radarSearch",
  "type": "Method",
  "class": "google.maps.places.PlacesService",
  "description": ""},
{ "name": "radialAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": "The axis object used to map data values to a radial distance between the center and the outer edge of the chart."},
{ "name": "radialAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "radii",
  "type": "Property",
  "class": "org.apache.royale.charts.core.PolarChart",
  "description": "The radii are the 'axes' for polar or circular charts."},
{ "name": "radioCounter",
  "type": "Property",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": "Provides unique name"},
{ "name": "radioCounter",
  "type": "Property",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": "Provides unique name"},
{ "name": "radius",
  "type": "Property",
  "class": "mx.charts.series.renderData.LineSeriesRenderData",
  "description": "The radius of the individual items in the line series."},
{ "name": "radius",
  "type": "Property",
  "class": "org.apache.royale.createjs.graphics.Circle",
  "description": "The radius of the circle."},
{ "name": "radius",
  "type": "Property",
  "class": "org.apache.royale.graphics.ICircle",
  "description": "The size of the circle's radius."},
{ "name": "radius",
  "type": "Property",
  "class": "mx.charts.series.renderData.AreaSeriesRenderData",
  "description": "The radius of the items of the AreaSeries."},
{ "name": "radius",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.IWedgeItemRenderer",
  "description": "The radius of the pie."},
{ "name": "radius",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The radius of the pie."},
{ "name": "radius",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarTransform",
  "description": "The radius used by the transform to convert data units to polar coordinates."},
{ "name": "radius",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Specifies the radius, in pixels, of the chart elements for the data points."},
{ "name": "radius",
  "type": "Property",
  "class": "mx.charts.series.renderData.PlotSeriesRenderData",
  "description": "The radius of the individual PlotSeriesItem objects."},
{ "name": "radius",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The radius of the pie."},
{ "name": "radius",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The radius of this item, in pixels."},
{ "name": "radius",
  "type": "Property",
  "class": "org.apache.royale.svg.Circle",
  "description": ""},
{ "name": "radiusAxis",
  "type": "Property",
  "class": "mx.charts.BubbleChart",
  "description": "The axis the bubble radius is mapped against Bubble charts treat the size of the individual bubbles as a third dimension of data which is transformed in a similar manner to how x and y position is transformed."},
{ "name": "radiusAxis",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "The axis the bubble radius is mapped against."},
{ "name": "radiusField",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "Specifies the field of the data provider that determines the radius of each symbol, relative to the other data points in the chart."},
{ "name": "radiusX",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The default corner radius to use for the x axis on all corners."},
{ "name": "radiusY",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The default corner radius to use for the y axis on all corners."},
{ "name": "raised",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A boolean flag to activate \"mdl-button--raised\" effect selector."},
{ "name": "range",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "range",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.EnumPropertyHandler",
  "description": "Returns object whose properties are the legal enum values"},
{ "name": "rangeAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The alpha for drawing the highlight of a range selection."},
{ "name": "rangeBlendMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The blending mode for drawing the highlight of a range selection."},
{ "name": "rangeCheck",
  "type": "Method",
  "class": "org.apache.royale.utils.array",
  "description": "Checks that an index falls within the allowable range of an array."},
{ "name": "rangeColor",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionFormat",
  "description": "The color for drawing the highlight of a range selection."},
{ "name": "ratio",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientEntry",
  "description": "Where in the graphical element, as a percentage from 0."},
{ "name": "ratios",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": ""},
{ "name": "rawChildren",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "A container typically contains child components, which can be enumerated using the <code>Container."},
{ "name": "rawChildren",
  "type": "Property",
  "class": "mx.managers.ISystemManager",
  "description": ""},
{ "name": "rawChildren",
  "type": "Property",
  "class": "mx.managers.SystemManager",
  "description": ""},
{ "name": "rawData",
  "type": "Property",
  "class": "org.apache.royale.reflection.DefinitionBase",
  "description": ""},
{ "name": "rawData",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": ""},
{ "name": "rawData",
  "type": "Property",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": "The array of raw data needing conversion."},
{ "name": "rawText",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "rawText",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextElement",
  "description": ""},
{ "name": "rawText",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "rawTextLength",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "rawTextLength",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "reAuthorize",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "This function should be overriden by sublasses to implement reauthentication due to server session time-out behavior specific to them."},
{ "name": "readBinaryData",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readBinaryData",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Reads the number of data bytes, specified by the length parameter, from the BinaryData."},
{ "name": "readBoolean",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readBoolean",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Reads a Boolean value (as a single byte) at the current position."},
{ "name": "readByte",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readByte",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Read a signed byte of binary data at the current position"},
{ "name": "readByteAt",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Read a byte of binary data at the specified index."},
{ "name": "readBytes",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "readDouble",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readDouble",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Reads an IEEE 754 double-precision (64-bit) floating-point number from the BinaryData."},
{ "name": "readExternal",
  "type": "Method",
  "class": "org.apache.royale.utils.net.IExternalizable",
  "description": ""},
{ "name": "readFloat",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readFloat",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Reads an IEEE 754 single-precision (32-bit) floating-point number from the BinaryData."},
{ "name": "readInt",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readInt",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Read a signed int (32bit) of binary data at the current position"},
{ "name": "readObject",
  "type": "Method",
  "class": "org.apache.royale.utils.net.IDataInput",
  "description": ""},
{ "name": "readObject",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.amf.AMFBinaryData",
  "description": ""},
{ "name": "readShort",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readShort",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Read a short int of binary data at the current position"},
{ "name": "readText",
  "type": "Method",
  "class": "org.apache.royale.storage.file.IDataInput",
  "description": ""},
{ "name": "readText",
  "type": "Method",
  "class": "org.apache.royale.storage.file.DataInputStream",
  "description": "Reads a chunk of text."},
{ "name": "readTextFromDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.IPermanentStorageProvider",
  "description": "A convenience function to read an entire file as a single string of text."},
{ "name": "readTextFromDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.WebStorageProvider",
  "description": "A convenience function to read an entire file as a single string of text."},
{ "name": "readTextFromDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AndroidExternalStorageProvider",
  "description": "A convenience function to read an entire file as a single string of text."},
{ "name": "readTextFromDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.IPermanentStorage",
  "description": "A convenience function to read an entire file as a single string of text."},
{ "name": "readTextFromDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.PermanentStorage",
  "description": "A convenience function to read an entire file as a single string of text."},
{ "name": "readTextFromDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AirStorageProvider",
  "description": "A convenience function to read an entire file as a single string of text."},
{ "name": "readUTF",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readUTF",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Reads a UTF-8 string from the BinaryData."},
{ "name": "readUTFBytes",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readUTFBytes",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Reads a sequence of UTF-8 bytes specified by the length parameter from the BinaryData and returns a string."},
{ "name": "readUnsignedByte",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readUnsignedByte",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Read an unsigned byte of binary data at the current position"},
{ "name": "readUnsignedInt",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readUnsignedInt",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Read an unsigned int (32bit) of binary data at the current position"},
{ "name": "readUnsignedShort",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "readUnsignedShort",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Read an unsigned short (16bit) of binary data at the current position"},
{ "name": "ready",
  "type": "Event",
  "description": "Dispatched when the application has started"},
{ "name": "ready",
  "type": "Event",
  "description": "Dispatched when content loading is complete."},
{ "name": "ready",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.IAsyncStartupRunListener",
  "description": "Indicates if the listener is ready or not."},
{ "name": "ready",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": ""},
{ "name": "ready",
  "type": "Event",
  "description": ""},
{ "name": "ready",
  "type": "Event",
  "description": "Dispatched when the module is finished loading."},
{ "name": "realtime",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Returns true if the channel supports realtime behavior via server push or client poll."},
{ "name": "realtime",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": "Returns true if the channel supports realtime behavior via server push or client poll."},
{ "name": "realtime",
  "type": "Property",
  "class": "mx.messaging.channels.DirectHTTPChannel",
  "description": "Returns true if the channel supports realtime behavior via server push or client poll."},
{ "name": "reason",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "The reason the <code>itemEditEnd</code> event was dispatched."},
{ "name": "receive",
  "type": "Method",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Requests any messages that are queued for this Consumer on the server."},
{ "name": "receiveTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Sets reveive time of this message."},
{ "name": "reconnectAttempts",
  "type": "Property",
  "class": "mx.messaging.AbstractProducer",
  "description": "The number of reconnect attempts that the Producer makes in the event that the destination is unavailable or the connection to the destination closes."},
{ "name": "reconnectInterval",
  "type": "Property",
  "class": "mx.messaging.AbstractProducer",
  "description": "The number of milliseconds between reconnect attempts."},
{ "name": "reconnecting",
  "type": "Property",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "Indicates whether the Channel that generated this event is reconnecting."},
{ "name": "reconnecting",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Indicates whether this channel is in the process of reconnecting to an alternate endpoint."},
{ "name": "recordHeaders",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Only used when going through the proxy, should the proxy send back the request and response headers it used."},
{ "name": "recordMessageSizes",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Channel property determines the level of performance information injection - whether we inject message sizes or not."},
{ "name": "recordMessageSizes",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Flag is true when record-message-sizes is enabled for the communication channel"},
{ "name": "recordMessageTimes",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Channel property determines the level of performance information injection - whether we inject timestamps or not."},
{ "name": "recordMessageTimes",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Flag is true when record-message-times is enabled for the communication channel"},
{ "name": "recreateTextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "recreateTextLine",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "recreateTextLine",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "rectUnion",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "<code>Rectangle(left, top, right - left, bottom - top)</code>."},
{ "name": "red",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "The red component of the drop shadow."},
{ "name": "red",
  "type": "Property",
  "class": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": "The red value."},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Reperforms the previous undone operation."},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Removes the next IOperation object from the redo stack and calls the performRedo() function of that object."},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "Re-executes the operation."},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.FlowTextOperation",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.InsertInlineGraphicOperation",
  "description": "Re-executes the operation after it has been undone."},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.InsertTextOperation",
  "description": "Re-executes the operation after it has been undone."},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IMemento",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.SplitMemento",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.DeleteTextMemento",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.InsertTableElementOperation",
  "description": "Re-executes the operation after it has been undone."},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.MoveElementMemento",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.MementoList",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.ClearFormatOperation",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.AddElementMemento",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.JoinMemento",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "redo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.RemoveElementsMemento",
  "description": ""},
{ "name": "redraw",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.SliderView",
  "description": ""},
{ "name": "reduceLabels",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Invoked when an AxisRenderer is unable to cleanly render the labels without overlap, and would like the Axis object to reduce the set of labels."},
{ "name": "reduceLabels",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "reduceLabels",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "reduceLabels",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": "Invoked when an AxisRenderer is unable to cleanly render the labels without overlap, and would like the Axis object to reduce the set of labels."},
{ "name": "refresh",
  "type": "Method",
  "class": "mx.collections.ICollectionView",
  "description": "Applies the sort and filter to the view."},
{ "name": "refresh",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "refresh",
  "type": "Method",
  "class": "mx.collections.IGroupingCollection",
  "description": "Applies the grouping to the view."},
{ "name": "refresh",
  "type": "Method",
  "class": "mx.collections.GroupingCollection",
  "description": ""},
{ "name": "refresh",
  "type": "Method",
  "class": "mx.collections.IGroupingCollection2",
  "description": "Applies the grouping to the collection."},
{ "name": "refresh",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayListView",
  "description": "Applies the sort and filter to the view."},
{ "name": "refresh",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "Forces an update of this ArrayListView contents from the source ArrayList, by applying the current filter function and Sort."},
{ "name": "refresh",
  "type": "Method",
  "class": "mx.collections.GroupingCollection2",
  "description": ""},
{ "name": "refresh",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "refreshContent",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataGridView",
  "description": ""},
{ "name": "refreshContent",
  "type": "Method",
  "class": "org.apache.royale.html.beads.TreeGridView",
  "description": ""},
{ "name": "refreshSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Redisplays the selection shapes."},
{ "name": "refreshSelection",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "registerCallback",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.Clipboard",
  "description": ""},
{ "name": "registerClassAlias",
  "type": "Method",
  "class": "org.apache.royale.reflection",
  "description": "Sets up an alias mapping for serialization/deserialization purposes This can be auto-generated by the Royale compiler when using class level metadata e."},
{ "name": "registerColorName",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Adds a color name to the list of aliases for colors."},
{ "name": "registerCursor",
  "type": "Method",
  "class": "org.apache.royale.textLayout.dummy.Mouse",
  "description": ""},
{ "name": "registerDataTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Each DataTransform that makes use of an axis registers itself with that axis."},
{ "name": "registerDataTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": ""},
{ "name": "registerDialog",
  "type": "Method",
  "class": "dialogPolyfill",
  "description": ""},
{ "name": "registerFilterForResultFormat",
  "type": "Method",
  "class": "mx.rpc.http.SerializationFilter",
  "description": "This static function is used to register a new SerializationFilter for a particular resultFormat value."},
{ "name": "registerFont",
  "type": "Method",
  "class": "org.apache.royale.text.engine.IFontLoader",
  "description": ""},
{ "name": "registerInheritingStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Adds to the list of styles that can inherit values from their parents."},
{ "name": "registerLoader",
  "type": "Method",
  "class": "org.apache.royale.text.engine.Fonts",
  "description": ""},
{ "name": "registerPanoProvider",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "registerParentDisplayListInvalidatingStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Adds to the list of styles which may affect the appearance or layout of the component's parent container."},
{ "name": "registerParentSizeInvalidatingStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Adds to the list of styles which may affect the measured size of the component's parent container."},
{ "name": "registerSizeInvalidatingStyle",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Adds to the list of styles which may affect the measured size of the component."},
{ "name": "registerSubscription",
  "type": "Method",
  "class": "mx.messaging.ConsumerMessageDispatcher",
  "description": "Registers a Consumer subscription."},
{ "name": "registerToUseBusyCursor",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "reject",
  "type": "Method",
  "class": "Promise",
  "description": ""},
{ "name": "rejected",
  "type": "Property",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "Indicates whether the Channel that generated this event was rejected."},
{ "name": "rel",
  "type": "Property",
  "class": "org.apache.royale.html.elements.A",
  "description": "The rel attribute specifies the relationship between the current document and the linked document."},
{ "name": "relatedObject",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "relatedObject",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "relatedObject",
  "type": "Property",
  "class": "org.apache.royale.events.DragEvent",
  "description": ""},
{ "name": "relatedObject",
  "type": "Property",
  "class": "mx.events.ItemClickEvent",
  "description": "The child object that generated the event; for example, the button that a user clicked in a ButtonBar control."},
{ "name": "relatedObject",
  "type": "Property",
  "class": "mx.events.IndexChangedEvent",
  "description": ""},
{ "name": "relatedTarget",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "For mouseover and mouseout, the previous object."},
{ "name": "relativeEnd",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowElementOperation",
  "description": "An offset from the start of the <code>targetElement</code>."},
{ "name": "relativeEnd",
  "type": "Property",
  "class": "org.apache.royale.text.ime.CompositionAttributeRange",
  "description": "The relative end of the composition clause, relative to the beginning of the inline edit session."},
{ "name": "relativeStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowElementOperation",
  "description": "An offset from the beginning of the <code>targetElement</code>."},
{ "name": "relativeStart",
  "type": "Property",
  "class": "org.apache.royale.text.ime.CompositionAttributeRange",
  "description": "The relative start from the beginning of the inline edit session i."},
{ "name": "relativeTo",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesZoomInstance",
  "description": "Controls the bounding box that Flex uses to calculate the focal point of the zooms."},
{ "name": "relativeTo",
  "type": "Property",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "relativeTo",
  "type": "Property",
  "class": "mx.charts.effects.SeriesZoom",
  "description": "Controls the bounding box that Flex uses to calculate the focal point of the zooms."},
{ "name": "releaseAnyReferences",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IComposer",
  "description": ""},
{ "name": "releaseAnyReferences",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": ""},
{ "name": "releaseContentElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "releaseLineCreationData",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Release line creation data during this compose"},
{ "name": "releaseLineCreationData",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "releaseLineCreationData",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "releaseLineCreationData",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Requests that the process of composing text release line creation data after composing each paragraph."},
{ "name": "releaseLineCreationData",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "releaseLineCreationData",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "releaseLines",
  "type": "Method",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "releaseLines",
  "type": "Method",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "releaseParcelList",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "releaseTextBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "remoteObject",
  "type": "Property",
  "class": "mx.rpc.remoting.Operation",
  "description": ""},
{ "name": "remove",
  "type": "Method",
  "class": "mx.collections.IViewCursor",
  "description": "Removes the current item and returns it."},
{ "name": "remove",
  "type": "Property",
  "class": "mx.charts.chartClasses.InstanceCache",
  "description": "Determines if unneeded instances should be removed from their parent."},
{ "name": "remove",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Searches through all nodes for the given row index and removes it from the list if found."},
{ "name": "remove",
  "type": "Method",
  "class": "org.apache.royale.core.CSSClassList",
  "description": "Removes a className to the list of classes"},
{ "name": "remove",
  "type": "Method",
  "class": "org.apache.royale.utils.ClassSelectorList",
  "description": "Removes a class selector from the list."},
{ "name": "remove",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Remove index by shifting all of the sizes one position to the left, begining with index+1."},
{ "name": "remove",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "removeAll",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Removes all items from the list."},
{ "name": "removeAll",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Remove all items from the list."},
{ "name": "removeAll",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Remove all items from the list."},
{ "name": "removeAll",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "removeAll",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Removes all of the items from the array."},
{ "name": "removeAll",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Removes all of the items from the array."},
{ "name": "removeAll",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "Remove the current selection."},
{ "name": "removeAll",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Removes all nodes."},
{ "name": "removeAll",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "removeAll",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "Remove all items from the list."},
{ "name": "removeAll",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "removeAll",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Remove all items from the list."},
{ "name": "removeAllChildren",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Removes all data children (DisplayObject instances) of the canvas."},
{ "name": "removeAllChildren",
  "type": "Method",
  "class": "mx.core.Container",
  "description": "Removes all children from the child list of this container."},
{ "name": "removeAllChildren",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Removes all children from the child list of this container."},
{ "name": "removeAllChildren",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Removes all data children (DisplayObject instances) of the canvas."},
{ "name": "removeAllControllers",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Removes all controllers from this IFlowComposer instance."},
{ "name": "removeAllControllers",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#removeAllControllers()"},
{ "name": "removeAllCursors",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "removeAllElements",
  "type": "Method",
  "class": "org.apache.royale.core.IContentView",
  "description": ""},
{ "name": "removeAllElements",
  "type": "Method",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "Removes all of the drawn elements of the container."},
{ "name": "removeAllElements",
  "type": "Method",
  "class": "org.apache.royale.charts.core.IAxisGroup",
  "description": ""},
{ "name": "removeAllElements",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "removeAllElements",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartAxisGroup",
  "description": "Removes all of the items in the group."},
{ "name": "removeAllElements",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "removeAllErrorTips",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.FormValidator",
  "description": "Utility function to remove all error tips below an upper level which defaults to the host of this FormValidator bead."},
{ "name": "removeAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.core.IItemRendererParent",
  "description": ""},
{ "name": "removeAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": ""},
{ "name": "removeAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "removeAllListeners",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Removes all listeners."},
{ "name": "removeAllListeners",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "removeAllRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeAllRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes all the rows."},
{ "name": "removeAllRowsWithContent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeAllRowsWithContent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes all the rows and the cells."},
{ "name": "removeAt",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "removeBackgroundShape",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Removes a <code>flash."},
{ "name": "removeBackgroundShape",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "removeBead",
  "type": "Method",
  "class": "org.apache.royale.core.IStrand",
  "description": "Remove a bead from the strand."},
{ "name": "removeBead",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "removeBead",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "removeBead",
  "type": "Method",
  "class": "org.apache.royale.core.Strand",
  "description": ""},
{ "name": "removeBead",
  "type": "Method",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": ""},
{ "name": "removeBead",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "removeBead",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "removeBead",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "removeBlockElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "removeBusyCursor",
  "type": "Method",
  "class": "mx.managers.CursorManager",
  "description": "Removes the busy cursor from the cursor list."},
{ "name": "removeBusyCursor",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "removeCall",
  "type": "Method",
  "class": "mx.rpc.ActiveCalls",
  "description": ""},
{ "name": "removeCell",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is either <code>GridSelectionMode."},
{ "name": "removeChannel",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Removes a Channel from the ChannelSet."},
{ "name": "removeChild",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Removes the specified child DisplayObject from this child list."},
{ "name": "removeChild",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "removeChild",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Removes the specified child FlowElement object from the group."},
{ "name": "removeChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "removeChild",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Removes a child DisplayObject from the child list of this Container."},
{ "name": "removeChild",
  "type": "Method",
  "class": "org.apache.royale.effects.ICompoundEffect",
  "description": "Remove an effect from the parent."},
{ "name": "removeChild",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "removeChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "removeChild",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes a table cell element from the table."},
{ "name": "removeChild",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Removes the child node from the parent node."},
{ "name": "removeChild",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Removes the child DisplayObject at the specified index from this child list."},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Removes the child FlowElement object at the specified index position."},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Removes a child DisplayObject from the child list of this Container at the specified index."},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "mx.controls.treeClasses.ITreeDataDescriptor",
  "description": "Removes a child node to a node at the specified index."},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "Removes the child node from a node at the specified index."},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Removes the child node from a node at the specified index."},
{ "name": "removeChildAt",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": "Removes the child node from a node at the specified index."},
{ "name": "removeClashing",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Sets properties in this TextLayoutFormat object to <code>undefined</code> if they do not match those in the <code>incoming</code> ITextLayoutFormat instance."},
{ "name": "removeClashing",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Sets properties in this TabStopFormat object to <code>undefined</code> if they do not match those in the <code>incoming</code> ITabStopFormat instance."},
{ "name": "removeClass",
  "type": "Method",
  "class": "org.apache.royale.utils.IClassSelectorListSupport",
  "description": "Removes a class selector from the list."},
{ "name": "removeClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.DataContainerBase",
  "description": "Removes a class selector from the list."},
{ "name": "removeClass",
  "type": "Method",
  "class": "org.apache.royale.core.StyledUIBase",
  "description": "Removes a class selector from the list."},
{ "name": "removeClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.Container",
  "description": "Removes a class selector from the list."},
{ "name": "removeClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.Group",
  "description": "Removes a class selector from the list."},
{ "name": "removeClass",
  "type": "Method",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": "Removes a class selector from the list."},
{ "name": "removeColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes the column"},
{ "name": "removeColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes the column at the index specified"},
{ "name": "removeColumnWithContent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeColumnWithContent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes the column and the cells it contains."},
{ "name": "removeColumnWithContentAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeColumnWithContentAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes the column at the index specified and the cells it contains."},
{ "name": "removeColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Removes count number of columns starting from startColumn."},
{ "name": "removeColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Inserts count number of columns into each node and increases numColumns by count."},
{ "name": "removeColumns",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": "Shifts values such that count columns are removed from the startColumn."},
{ "name": "removeController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Removes a controller from this IFlowComposer instance."},
{ "name": "removeController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#removeController()"},
{ "name": "removeControllerAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Removes the controller at the specified index from this IFlowComposer instance."},
{ "name": "removeControllerAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#removeControllerAt()"},
{ "name": "removeCursor",
  "type": "Method",
  "class": "mx.managers.CursorManager",
  "description": "Removes a cursor from the cursor list."},
{ "name": "removeCursor",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.core.IParent",
  "description": "Remove a component from the parent."},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "Remove a component from the parent."},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "Remove a component from the parent."},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.createjs.Application",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.utils.MockParent",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.mdl.Table",
  "description": ""},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "Remove a component from the parent."},
{ "name": "removeElement",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "removeElements",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ModelEdit",
  "description": ""},
{ "name": "removeElements",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "removeEmptyParentChain",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "if parent is a singleton element, deletes it, then repeats deletion of singletons up the parent chain."},
{ "name": "removeEmptyTerminator",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "removeEmptyTerminator",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "removeErrorTip",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators",
  "description": "Destroy the created errorTip for a validator instance import this utility function to support this functionality in externally defined subclasses."},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.events.IEventDispatcher",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "removeEventListener",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": ""},
{ "name": "removeFocusManager",
  "type": "Method",
  "class": "mx.managers.IActiveWindowManager",
  "description": "Unregisters a top-level window containing a FocusManager."},
{ "name": "removeFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Remove the format."},
{ "name": "removeFormatAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextConverter",
  "description": "Remove the format at the index location."},
{ "name": "removeInlineGraphicElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Removes a <code>flash."},
{ "name": "removeInlineGraphicElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "removeItem",
  "type": "Method",
  "class": "org.apache.royale.storage.LocalStorage",
  "description": "Removed the value and, possibly, the key from local storage."},
{ "name": "removeItem",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Removes the specified item from this list, should it exist."},
{ "name": "removeItem",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Removes the specified item from this list, should it exist."},
{ "name": "removeItem",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "removeItem",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Removed an item from the array and returns it."},
{ "name": "removeItem",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Removed an item from the array and returns it."},
{ "name": "removeItem",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "removeItem",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "Removes the specified item from this list, should it exist."},
{ "name": "removeItem",
  "type": "Method",
  "class": "org.apache.royale.storage.IWebStorage",
  "description": "Removes the key=value pair from storage."},
{ "name": "removeItem",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.LocalStorageProvider",
  "description": "Removed the value and, possibly, the key from local storage."},
{ "name": "removeItem",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "removeItem",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Removes the specified item from this list, should it exist."},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Removes the item at the specified index and returns it."},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Remove the item at the specified index and return it."},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Removes an item from a specific location within the array and returns it."},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Removes an item from a specific location within the array and returns it."},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "removeItemAt",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Remove the item at the specified index and return it."},
{ "name": "removeItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.core.IItemRendererParent",
  "description": ""},
{ "name": "removeItemRenderer",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "removeKnockOut",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "removeLineFromCache",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IBackgroundManager",
  "description": ""},
{ "name": "removeLineFromCache",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.BackgroundManager",
  "description": ""},
{ "name": "removeLink",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Removes all LinkElements under the selected positions."},
{ "name": "removeListener",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunNotifier",
  "description": "Removes a listener."},
{ "name": "removeListener",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.RunNotifier",
  "description": ""},
{ "name": "removeListener",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "removeListener",
  "type": "Method",
  "class": "org.apache.royale.test.RoyaleUnitCore",
  "description": "Removes a run listener."},
{ "name": "removeListenerHandler",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Disconnects all of the listeners for the <code>valid</code> and <code>invalid</code> events dispatched from the validator."},
{ "name": "removeLoadIndicator",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DisableLoaderBead",
  "description": ""},
{ "name": "removeLogger",
  "type": "Method",
  "class": "mx.logging.ILoggingTarget",
  "description": "Stops this target from receiving events from the specified logger."},
{ "name": "removeLogger",
  "type": "Method",
  "class": "mx.logging.AbstractTarget",
  "description": "Stops this target from receiving events from the specified logger."},
{ "name": "removeMatching",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Sets properties in this TextLayoutFormat object to <code>undefined</code> if they match those in the <code>incoming</code> ITextLayoutFormat instance."},
{ "name": "removeMatching",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Sets properties in this TabStopFormat object to <code>undefined</code> if they match those in the <code>incoming</code> ITabStopFormat instance."},
{ "name": "removeMenu",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.MenuModel",
  "description": "Removes a specific menu from the menuList."},
{ "name": "removeNode",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Removes specified node from the list."},
{ "name": "removeParaTerminator",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ISpanElement",
  "description": ""},
{ "name": "removePopUp",
  "type": "Method",
  "class": "mx.managers.PopUpManager",
  "description": "Removes a popup window popped up by the <code>createPopUp()</code> or <code>addPopUp()</code> method."},
{ "name": "removePopUp",
  "type": "Method",
  "class": "org.apache.royale.utils.UIUtils",
  "description": "Removes the given component from the IPopUpHost."},
{ "name": "removePopUpWhenClickOutside",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DateFieldMouseController",
  "description": ""},
{ "name": "removePopUpWhenClickOutside",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "removeResourceBundle",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Removes the specified ResourceBundle from the ResourceManager so that its resources can no longer be accessed by ResourceManager methods such as <code>getString()</code>."},
{ "name": "removeResourceBundle",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "removeResourceBundlesForLocale",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Removes all ResourceBundles for the specified locale from the ResourceManager so that their resources can no longer be accessed by ResourceManager methods such as <code>getString()</code>."},
{ "name": "removeResourceBundlesForLocale",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "removeRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes the row"},
{ "name": "removeRow",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is either <code>GridSelectionMode."},
{ "name": "removeRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes the row at the index specified."},
{ "name": "removeRowWithContent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeRowWithContent",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes the row and the cells it contains."},
{ "name": "removeRowWithContentAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "removeRowWithContentAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Removes the row at the index specified and the cells it contains."},
{ "name": "removeRows",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Removes count number of rows starting from startRow."},
{ "name": "removeSelectedCell",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "removeSelectedCell",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "removeSelectedIndex",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "removeSelectedIndex",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "removeSelectionContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Removes the <code>flash."},
{ "name": "removeSelectionContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "removeTCY",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextFlowEdit",
  "description": "Removes the TCY block at the selected positions."},
{ "name": "removeTableBlock",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Removes a <code>TableBlockContainer</code> object from its parent."},
{ "name": "removeTarget",
  "type": "Method",
  "class": "mx.logging.Log",
  "description": "Stops the specified target from receiving notification of log events."},
{ "name": "removeTextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Removes a <code>org."},
{ "name": "removeTextLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "removeWizardListeners",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "remove listeners to wizard events when remove this page from the wizard"},
{ "name": "removeWord",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": "Removes word from a String and return the new result string"},
{ "name": "removed",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "removed",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Called when an element is removed."},
{ "name": "removed",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Remove all cells"},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "Stores the information necessary to render this series."},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": ""},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "renderData",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "renderDataType",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderDataType",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderDataType",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderDataType",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderDataType",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderDataType",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderDataType",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderDataType",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "The subtype of ChartRenderData used by this series to store all data necessary to render."},
{ "name": "renderedBase",
  "type": "Property",
  "class": "mx.charts.series.renderData.AreaSeriesRenderData",
  "description": "The vertical position of the base of the area series, in pixels."},
{ "name": "renderedBase",
  "type": "Property",
  "class": "mx.charts.series.renderData.ColumnSeriesRenderData",
  "description": "The vertical position of the base of the columns, in pixels."},
{ "name": "renderedBase",
  "type": "Property",
  "class": "mx.charts.series.renderData.BarSeriesRenderData",
  "description": "The horizontal position of the base of the bars, in pixels."},
{ "name": "renderedHalfWidth",
  "type": "Property",
  "class": "mx.charts.series.renderData.ColumnSeriesRenderData",
  "description": "Half the width of a column, in pixels."},
{ "name": "renderedHalfWidth",
  "type": "Property",
  "class": "mx.charts.series.renderData.HLOCSeriesRenderData",
  "description": "Half the width of an item, in pixels."},
{ "name": "renderedHalfWidth",
  "type": "Property",
  "class": "mx.charts.series.renderData.BarSeriesRenderData",
  "description": "Half the width of a bar, in pixels."},
{ "name": "renderedXOffset",
  "type": "Property",
  "class": "mx.charts.series.renderData.ColumnSeriesRenderData",
  "description": "The offset of each column from its x value, in pixels."},
{ "name": "renderedXOffset",
  "type": "Property",
  "class": "mx.charts.series.renderData.HLOCSeriesRenderData",
  "description": "The offset of each item from its x value, in pixels."},
{ "name": "renderedYOffset",
  "type": "Property",
  "class": "mx.charts.series.renderData.BarSeriesRenderData",
  "description": "The offset of each bar from its y value, in pixels."},
{ "name": "rendererIsEditable",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Determines whether any of the item renderer's controls are editable."},
{ "name": "rendererIsEditor",
  "type": "Property",
  "class": "mx.controls.dataGridClasses.DataGridColumn",
  "description": "A flag that indicates that the item renderer is also an item editor."},
{ "name": "renderingMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The rendering mode used for this text."},
{ "name": "renderingMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The rendering mode used for this text."},
{ "name": "renderingMode",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The rendering mode used for this text."},
{ "name": "renderingModeProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "repeat",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": "Returns a string consisting of a specified string concatenated with itself a specified number of times."},
{ "name": "repeat",
  "type": "Method",
  "class": "mx.utils.StringUtil",
  "description": "Returns a string consisting of a specified string concatenated with itself a specified number of times."},
{ "name": "repeatCount",
  "type": "Property",
  "class": "org.apache.royale.utils.Timer",
  "description": ""},
{ "name": "repeaterListener",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": "Rebroadcast an event from a sub component from the component."},
{ "name": "replaceBead",
  "type": "Method",
  "class": "org.apache.royale.utils",
  "description": ""},
{ "name": "replaceChildren",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "replaceChildren",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Replaces child elements in the group with the specified new elements."},
{ "name": "replaceCount",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.mementos.DeleteTextMemento",
  "description": ""},
{ "name": "replaceElements",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "replacePort",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Returns a new String with the port replaced with the specified port."},
{ "name": "replaceProtocol",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Replaces the protocol of the specified URI with the given protocol."},
{ "name": "replaceText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ISpanElement",
  "description": ""},
{ "name": "replaceText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.SpanElement",
  "description": "Updates the text in text span based on the specified start and end positions."},
{ "name": "replaceText",
  "type": "Method",
  "class": "org.apache.royale.text.engine.TextElement",
  "description": ""},
{ "name": "replaceTokens",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Returns a new String with the port and server tokens replaced with the port and server from the currently running application."},
{ "name": "repositionHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "request",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Object of name-value pairs used as parameters to the URL."},
{ "name": "request",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Object of name-value pairs used as parameters to the URL."},
{ "name": "requestFrame",
  "type": "Method",
  "class": "org.apache.royale.utils.AnimationUtil",
  "description": "The callback is called with a high-rez timestamp as per the HTML spec"},
{ "name": "requestHeaders",
  "type": "Property",
  "class": "org.apache.royale.net.URLRequest",
  "description": "Set the URL request headers."},
{ "name": "requestNavigateNextStep",
  "type": "Event",
  "description": "Dispatched When the wizard reach to this page"},
{ "name": "requestNavigatePreviousStep",
  "type": "Event",
  "description": "Dispatched When the wizard reach to this page"},
{ "name": "requestNavigateToStep",
  "type": "Event",
  "description": "Dispatched When the wizard reach to this page"},
{ "name": "requestStatus",
  "type": "Property",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "The status of the request."},
{ "name": "requestStatus",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "Indicates the status of the request."},
{ "name": "requestTimedOut",
  "type": "Method",
  "class": "mx.messaging.MessageResponder",
  "description": "Subclasses must override this method to handle a request timeout and invoke the proper callbacks on the associated MessageAgent."},
{ "name": "requestTimeout",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Provides access to the default request timeout in seconds for the channel."},
{ "name": "requestTimeout",
  "type": "Property",
  "class": "mx.rpc.AbstractService",
  "description": "Provides access to the request timeout in seconds for sent messages."},
{ "name": "requestTimeout",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Provides access to the request timeout in seconds for sent messages."},
{ "name": "requestTimeout",
  "type": "Property",
  "class": "mx.messaging.MessageAgent",
  "description": "Provides access to the request timeout in seconds for sent messages."},
{ "name": "requestTimeout",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Provides access to the request timeout in seconds for sent messages."},
{ "name": "requestedColumnCount",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "requestedColumnCount",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The measured size of this layout is wide enough to display the first <code>requestedColumnCount</code> layout elements."},
{ "name": "requestedColumnCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "requestedColumnCount",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The measured width of this grid is large enough to display the first <code>requestedColumnCount</code> columns."},
{ "name": "requestedColumnCount",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Number of columns to be displayed."},
{ "name": "requestedColumnCount",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "requestedMaxColumnCount",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The measured width of this layout is large enough to display at most <code>requestedMaxColumnCount</code> layout elements."},
{ "name": "requestedMaxRowCount",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "requestedMaxRowCount",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The measured height of this layout is large enough to display at most <code>requestedMaxRowCount</code> layout elements."},
{ "name": "requestedMaxRowCount",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The measured height of the grid is large enough to display no more than <code>requestedMaxRowCount</code> rows."},
{ "name": "requestedMinColumnCount",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "requestedMinColumnCount",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The measured width of this layout is large enough to display at least <code>requestedMinColumnCount</code> layout elements."},
{ "name": "requestedMinColumnCount",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The measured width of this grid is large enough to display at least <code>requestedMinColumnCount</code> columns."},
{ "name": "requestedMinRowCount",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "requestedMinRowCount",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The measured height of this layout is large enough to display at least <code>requestedMinRowCount</code> layout elements."},
{ "name": "requestedMinRowCount",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The measured height of this grid is large enough to display at least <code>requestedMinRowCount</code> rows."},
{ "name": "requestedRowCount",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "requestedRowCount",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The measured size of this layout is tall enough to display the first <code>requestedRowCount</code> layout elements."},
{ "name": "requestedRowCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "requestedRowCount",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The measured height of this grid is large enough to display the first <code>requestedRowCount</code> rows."},
{ "name": "requestedRowCount",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Number of rows to be displayed."},
{ "name": "requestedRowCount",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "requireSelection",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "requireSelection",
  "type": "Property",
  "class": "spark.components.supportClasses.ListBase",
  "description": "If <code>true</code>, a data item must always be selected in the control."},
{ "name": "requireSelection",
  "type": "Property",
  "class": "spark.components.supportClasses.ButtonBarBase",
  "description": "If <code>true</code>, a data item must always be selected in the control."},
{ "name": "requireSelection",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If <code>true</code>, a data item must always be selected in the control as long as there is at least one item in <code>dataProvider</code> and one column in <code>columns</code>."},
{ "name": "requireSelection",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.dropdownlist.RequireSelection",
  "description": "If <code>true</code>, a data item must always be selected in the control."},
{ "name": "requireSelection",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>true</code> and the <code>selectionMode</code> property is not <code>GridSelectionMode."},
{ "name": "required",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "If <code>true</code>, specifies that a missing or empty value causes a validation error."},
{ "name": "required",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.FormItemModel",
  "description": "If <code>true</code>, shows the <code>required</code> label."},
{ "name": "required",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "specifies that at least required quantity causes a validation error."},
{ "name": "required",
  "type": "Property",
  "class": "mx.containers.FormItem",
  "description": "If <code>true</code>, display an indicator that the FormItem children require user input."},
{ "name": "required",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Input",
  "description": "Whether the input is required"},
{ "name": "required",
  "type": "Property",
  "class": "org.apache.royale.jewel.FormItem",
  "description": "If <code>true</code>, puts the FormItem skin into the <code>required</code> state."},
{ "name": "required",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "If <code>true</code>, puts the FormItem skin into the <code>required</code> state."},
{ "name": "requiredChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "requiredDescribedFields",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "The fields of the DescribeData structure that this axis is interested in."},
{ "name": "requiredDescribedFields",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "The fields of the DescribeData structure that this axis is interested in."},
{ "name": "requiredFieldError",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "Error message when a value is missing and the <code>required</code> property is <code>true</code>."},
{ "name": "requiredFieldError",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "The string to use as the errorTip."},
{ "name": "requiredFieldError",
  "type": "Property",
  "class": "mx.validators.DateValidator",
  "description": "Error message when a value is missing and the <code>required</code> property is <code>true</code>."},
{ "name": "requiredLabel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "reserveExplodeRadius",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "A number from 0 to 1, specifying how much of the total radius of the pie series should be reserved to explode wedges at runtime."},
{ "name": "reset",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.IFormatImporter",
  "description": ""},
{ "name": "reset",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TLFormatImporter",
  "description": ""},
{ "name": "reset",
  "type": "Method",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Resets this ChangeWatcher instance to use a new host object."},
{ "name": "reset",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "reset",
  "type": "Method",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": "Resets the list so that only the top root node is open."},
{ "name": "reset",
  "type": "Method",
  "class": "org.apache.royale.utils.Timer",
  "description": ""},
{ "name": "resetLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "resetLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": ""},
{ "name": "resetLineHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ISimpleCompose",
  "description": ""},
{ "name": "resetLineHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": "Callback to the client to reset a line when its being rebroken"},
{ "name": "resizable",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "Set to <code>true</code> if the user is allowed to resize the width of the column."},
{ "name": "resizable",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Indicates whether the user is allowed to resize the width of the column."},
{ "name": "resizableColumns",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "resizableColumns",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "A flag that indicates whether the user can change the size of the columns."},
{ "name": "resizableColumns",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "Indicates whether the user can change the size of the columns."},
{ "name": "resizableView",
  "type": "Property",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "The view that can be resized."},
{ "name": "resizableView",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.NumericStepperView",
  "description": ""},
{ "name": "resizableView",
  "type": "Property",
  "class": "org.apache.royale.html.beads.NumericStepperView",
  "description": ""},
{ "name": "resize",
  "type": "Event",
  "description": "Dispatched when the component is resized."},
{ "name": "resize",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "resize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "resizeFactor",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ShrinkableDisableLoaderBead",
  "description": "The size of the load indicator relative to the strand."},
{ "name": "resizeForSoftKeyboard",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Enables resizing the pop-up when the soft keyboard on a mobile device is active."},
{ "name": "resizeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "Invoked in response to the strand being resized."},
{ "name": "resizeToContent",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": "If <code>true</code>, the ViewStack container automatically resizes to the size of its current child."},
{ "name": "resizeToContent",
  "type": "Property",
  "class": "mx.containers.DividedBox",
  "description": "If <code>true</code>, the DividedBox automatically resizes to the size of its children."},
{ "name": "resolve",
  "type": "Method",
  "class": "Promise",
  "description": ""},
{ "name": "resolveExplicitFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IExplicitFormatResolver",
  "description": "Given a FlowElement or ContainerController object, return any explicit format settings for it."},
{ "name": "resolveFontLookupFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.GlobalSettings",
  "description": "Specifies the callback used for changing the FontLookup based on swfcontext."},
{ "name": "resolveFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFormatResolver",
  "description": "Given a FlowElement or ContainerController object, return any format settings for it."},
{ "name": "resolveUncertain",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "no export (allow dead code elimination if never used):"},
{ "name": "resolveUserFormat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFormatResolver",
  "description": "Given a FlowElement or ContainerController object and the name of a format property, return the format value or <code>undefined</code> if the value is not found."},
{ "name": "resourceManager",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A reference to the object which manages all of the application's localized resources."},
{ "name": "resourceManager",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "The Validator's resource manager to get translations from bundles"},
{ "name": "resourceManager",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": ""},
{ "name": "resourceStringFunction",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.GlobalSettings",
  "description": "Function that takes two parameters, a resource id and an optional array of parameters to substitute into the string."},
{ "name": "responders",
  "type": "Property",
  "class": "mx.rpc.AsyncToken",
  "description": "An array of IResponder handlers that will be called when the asynchronous request completes."},
{ "name": "response",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": "The BinaryData reponse received from the request."},
{ "name": "responseData",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileUploaderWithResponseData",
  "description": "The responseData from the file upload"},
{ "name": "responseHeaders",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "The HTTP headers that were received from the server if any."},
{ "name": "responseHeaders",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "responseMessageSize",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "The size of the response message sent to the client by the server as measured during serialization at the server endpoint."},
{ "name": "responseURI",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.MessageBody",
  "description": "The response URI."},
{ "name": "responseURL",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "The value of the responseURL header, if any."},
{ "name": "responseURL",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "restoreDefaults",
  "type": "Method",
  "class": "org.apache.royale.textLayout.conversion.TextLayoutImporter",
  "description": "Set the default configuration back to its original value"},
{ "name": "restrict",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "restrict",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": "Removes \"unallowed\" characters from a string."},
{ "name": "restrict",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": "Set of characters that a user can or cannot enter into the text field."},
{ "name": "restrict",
  "type": "Method",
  "class": "mx.utils.StringUtil",
  "description": "Removes \"unallowed\" characters from a string."},
{ "name": "restrict",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "Indicates the set of characters that a user can enter into the control."},
{ "name": "restrict",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "restrict",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Indicates the set of characters that a user can enter into the control."},
{ "name": "resubscribeAttempts",
  "type": "Property",
  "class": "mx.messaging.AbstractConsumer",
  "description": "The number of resubscribe attempts that the Consumer makes in the event that the destination is unavailable or the connection to the destination fails."},
{ "name": "resubscribeInterval",
  "type": "Property",
  "class": "mx.messaging.AbstractConsumer",
  "description": "The number of milliseconds between resubscribe attempts."},
{ "name": "result",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.IFormatImporter",
  "description": ""},
{ "name": "result",
  "type": "Property",
  "class": "mx.rpc.AsyncToken",
  "description": "The result that was returned by the associated RPC call."},
{ "name": "result",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.TLFormatImporter",
  "description": ""},
{ "name": "result",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": "Reference to the filter element result."},
{ "name": "result",
  "type": "Event",
  "description": ""},
{ "name": "result",
  "type": "Method",
  "class": "mx.messaging.MessageResponder",
  "description": "Called by the channel that created this MessageResponder when a response returns from the destination."},
{ "name": "result",
  "type": "Event",
  "description": "The result event is dispatched when a service call successfully returns and isn't handled by the Operation itself."},
{ "name": "result",
  "type": "Event",
  "description": "Dispatched when an HTTPMultiService call returns successfully."},
{ "name": "result",
  "type": "Property",
  "class": "org.apache.royale.svg.IChainableFilter",
  "description": "This method sets the result of this filter to be used in a subsequent chain element."},
{ "name": "result",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": ""},
{ "name": "result",
  "type": "Property",
  "class": "mx.rpc.events.ResultEvent",
  "description": "Result that the RPC call returns."},
{ "name": "result",
  "type": "Event",
  "description": "Dispatched when an Operation invocation successfully returns."},
{ "name": "result",
  "type": "Property",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "result",
  "type": "Method",
  "class": "mx.rpc.IResponder",
  "description": "This method is called by a service when the return value has been received."},
{ "name": "result",
  "type": "Method",
  "class": "mx.rpc.CallResponder",
  "description": "This method is called by the AsyncToken when it wants to deliver a <code>ResultEvent</code> to the CallResponder."},
{ "name": "result",
  "type": "Event",
  "description": "Dispatched when an Operation invocation successfully returns."},
{ "name": "result",
  "type": "Event",
  "description": ""},
{ "name": "result",
  "type": "Event",
  "description": "Dispatched when an HTTPService call returns successfully."},
{ "name": "result",
  "type": "Method",
  "class": "mx.rpc.Responder",
  "description": "This method is called by a remote service when the return value has been received."},
{ "name": "result",
  "type": "Event",
  "description": "The result event is dispatched when a login or logout call successfully returns."},
{ "name": "result",
  "type": "Event",
  "description": ""},
{ "name": "resultElementType",
  "type": "Property",
  "class": "mx.rpc.AbstractInvoker",
  "description": "Like resultType, used to define the ActionScript class used by a given operation though this property only applies to operations which return a multi-valued result (e."},
{ "name": "resultFormat",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "Value that indicates how you want to deserialize the result returned by the HTTP call."},
{ "name": "resultFormat",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Value that indicates how you want to deserialize the result returned by the HTTP call."},
{ "name": "resultFormat",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": ""},
{ "name": "resultFormat",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Value that indicates how you want to deserialize the result returned by the HTTP call."},
{ "name": "resultHandler",
  "type": "Method",
  "class": "org.apache.royale.net.RemoteObject",
  "description": ""},
{ "name": "resultHandler",
  "type": "Method",
  "class": "org.apache.royale.net.CompressedRemoteObject",
  "description": ""},
{ "name": "resultHandler",
  "type": "Method",
  "class": "mx.messaging.MessageResponder",
  "description": "Subclasses must override this method to perform custom processing of the result and invoke the proper callbacks on the associated MessageAgent."},
{ "name": "resultHandler",
  "type": "Method",
  "class": "mx.rpc.remoting.Operation",
  "description": ""},
{ "name": "resultHandler",
  "type": "Method",
  "class": "org.apache.royale.net.SimpleRemoteObject",
  "description": ""},
{ "name": "resultType",
  "type": "Property",
  "class": "mx.rpc.AbstractInvoker",
  "description": "Specifies an optional return type for the operation."},
{ "name": "results",
  "type": "Property",
  "class": "org.apache.royale.svg.MergeFilterElement",
  "description": ""},
{ "name": "results",
  "type": "Property",
  "class": "mx.events.ValidationResultEvent",
  "description": "An array of ValidationResult objects, one per validated field."},
{ "name": "resume",
  "type": "Method",
  "class": "org.apache.royale.effects.IEffect",
  "description": "Resumes the effect after it has been paused by a call to the <code>pause()</code> method."},
{ "name": "resume",
  "type": "Method",
  "class": "org.apache.royale.effects.Effect",
  "description": "Resumes the effect after it has been paused by a call to the <code>pause()</code> method."},
{ "name": "resume",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Resumes the effect after it has been paused by a call to the <code>pause()</code> method."},
{ "name": "resume",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "retrieveMetaDataByName",
  "type": "Method",
  "class": "org.apache.royale.reflection.DefinitionWithMetaData",
  "description": "A convenience method for retrieving metadatas It can occur more than once, so an array is returned"},
{ "name": "returnSummary",
  "type": "Method",
  "class": "mx.collections.ISummaryCalculator",
  "description": "Flex calls this method to end the computation of the summary value."},
{ "name": "returnSummary",
  "type": "Method",
  "class": "mx.collections.DefaultSummaryCalculator",
  "description": ""},
{ "name": "returnSummaryOfSummary",
  "type": "Method",
  "class": "mx.collections.ISummaryCalculator",
  "description": "Flex calls this method to end the summary calculation."},
{ "name": "returnSummaryOfSummary",
  "type": "Method",
  "class": "mx.collections.DefaultSummaryCalculator",
  "description": ""},
{ "name": "returnType",
  "type": "Property",
  "class": "org.apache.royale.reflection.MethodDefinition",
  "description": "The return type for this method note: a return type may be \"*\" or \"void\""},
{ "name": "reusableLineCache",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextLineRecycler",
  "description": ""},
{ "name": "reverse",
  "type": "Method",
  "class": "mx.collections.ISortField",
  "description": "Reverse the criteria for this sort field."},
{ "name": "reverse",
  "type": "Method",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "reverse",
  "type": "Method",
  "class": "org.apache.royale.effects.IEffect",
  "description": "Plays the effect in reverse, starting from the current position of the effect."},
{ "name": "reverse",
  "type": "Method",
  "class": "org.apache.royale.effects.Effect",
  "description": "Plays the effect in reverse, starting from the current position of the effect."},
{ "name": "reverse",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Plays the effect in reverse, starting from the current position of the effect."},
{ "name": "reverse",
  "type": "Method",
  "class": "org.apache.royale.collections.ISortField",
  "description": "Reverse the criteria for this sort field."},
{ "name": "reverse",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "reverse",
  "type": "Method",
  "class": "mx.collections.ISort",
  "description": "Goes through the <code>fields</code> array and calls <code>reverse()</code> on each of the <code>ISortField</code> objects in the array."},
{ "name": "reverse",
  "type": "Method",
  "class": "org.apache.royale.collections.ISort",
  "description": "Goes through the <code>fields</code> array and calls <code>reverse()</code> on each of the <code>ISortField</code> objects in the array."},
{ "name": "reverse",
  "type": "Method",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "reverse",
  "type": "Method",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "reverse",
  "type": "Method",
  "class": "mx.collections.Sort",
  "description": ""},
{ "name": "revert",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "revokeObjectURL",
  "type": "Method",
  "class": "org.apache.royale.utils.URLUtils",
  "description": ""},
{ "name": "rewind",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuBuiltInItems",
  "description": ""},
{ "name": "rgbMultiply",
  "type": "Method",
  "class": "org.apache.royale.utils.ColorUtil",
  "description": "Performs an RGB multiplication of two RGB colors."},
{ "name": "rgbToHsv",
  "type": "Method",
  "class": "org.apache.royale.utils",
  "description": "Converts RGB values to HSV values."},
{ "name": "right",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "The horizontal distance in pixels from the right edge of the component to the anchor target's right edge."},
{ "name": "right",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "<p>For components, this layout constraint property is a facade on top of the similarly-named style."},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "mx.core.EdgeMetrics",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": ""},
{ "name": "right",
  "type": "Property",
  "class": "org.apache.royale.core.layout.EdgeData",
  "description": ""},
{ "name": "rightBearing",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "rightMargin",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "rightMargin",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "rightMargin",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Slug",
  "description": ""},
{ "name": "rightPosition",
  "type": "Property",
  "class": "org.apache.royale.jewel.IconButton",
  "description": "icon's position regarding the text content Can be false (\"left\") or true (\"right\")."},
{ "name": "rightPosition",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": "A boolean flag to activate \"mdl-tooltip--right\" effect selector."},
{ "name": "rightPosition",
  "type": "Property",
  "class": "org.apache.royale.jewel.IconTextInput",
  "description": "icon's position regarding the text content Can be false (\"left\") or true (\"right\")."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.MenuItemRenderer",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.Button",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.Menu",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.Tabs",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.Switch",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "ripple",
  "type": "Property",
  "class": "org.apache.royale.mdl.TabBar",
  "description": "A boolean flag to activate \"mdl-js-ripple-effect\" effect selector."},
{ "name": "rol",
  "type": "Method",
  "class": "org.apache.royale.utils.IntUtil",
  "description": "Rotates x left n bits"},
{ "name": "rollOut",
  "type": "Event",
  "description": "Set a different class for rollOut events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "rollOut",
  "type": "Event",
  "description": "Set a different class for rollOut events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "rollOut",
  "type": "Event",
  "description": "Dispatched when the mouse goes out of any link."},
{ "name": "rollOut",
  "type": "Event",
  "description": "Dispatched when the mouse goes out of any link."},
{ "name": "rollOut",
  "type": "Event",
  "description": "Dispatched when the mouse goes out of the link."},
{ "name": "rollOutEffect",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Played when the user rolls the mouse so it is no longer over the component."},
{ "name": "rollOver",
  "type": "Event",
  "description": "Set a different class for rollOver events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "rollOver",
  "type": "Event",
  "description": "Set a different class for rollOver events so that there aren't dependencies on the flash classes on the JS side."},
{ "name": "rollOver",
  "type": "Event",
  "description": "Dispatched when the mouse first enters any link."},
{ "name": "rollOver",
  "type": "Event",
  "description": "Dispatched when the mouse first enters any link."},
{ "name": "rollOver",
  "type": "Event",
  "description": "Dispatched when the mouse first enters the link."},
{ "name": "rollOverEffect",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Played when the user rolls the mouse over the component."},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.html.List",
  "description": "The index of the item currently below the pointer."},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.List",
  "description": "The index of the item currently below the pointer."},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.core.IRollOverModel",
  "description": "The index of the item that is currently under the mouse."},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": ""},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": ""},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionICollectionViewModel",
  "description": ""},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": ""},
{ "name": "rollOverIndex",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionIListModel",
  "description": ""},
{ "name": "rollOverSeries",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartDataModel",
  "description": ""},
{ "name": "rollOverSeries",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.models.ChartArrayListSelectionModel",
  "description": ""},
{ "name": "rollOverSeries",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.models.ChartArraySelectionModel",
  "description": ""},
{ "name": "rolloutHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "rolloutHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": ""},
{ "name": "rolloutHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "rolloutHandler",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": ""},
{ "name": "rolloverHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "rolloverHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": ""},
{ "name": "rolloverHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "rolloverHandler",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": ""},
{ "name": "rootCause",
  "type": "Property",
  "class": "mx.rpc.Fault",
  "description": "The cause of the fault."},
{ "name": "rootCause",
  "type": "Property",
  "class": "mx.messaging.messages.ErrorMessage",
  "description": "Should a root cause exist for the error, this property contains those details."},
{ "name": "rootCause",
  "type": "Property",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Provides access to the underlying reason for the failure if the channel did not raise the failure itself."},
{ "name": "rootCause",
  "type": "Property",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "Provides access to the root cause of the failure, if one exists."},
{ "name": "rootElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "rootElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "The root element associated with this IFlowComposer instance."},
{ "name": "rootElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#rootElement"},
{ "name": "rootElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the root element that appears in the container."},
{ "name": "rootURL",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "The URL that the HTTPService object should use when computing relative URLs."},
{ "name": "rootURL",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": "The rootURL is used to compute the URL for an HTTP service operation when the a relative URL is specified for the operation."},
{ "name": "rootURL",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "The URL that the HTTPService object should use when computing relative URLs."},
{ "name": "ror",
  "type": "Method",
  "class": "org.apache.royale.utils.IntUtil",
  "description": "Rotates x right n bits"},
{ "name": "rotate",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Rotates the Matrix by the specified value."},
{ "name": "rotation",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": "By default, the LinearGradientStroke defines a transition from left to right across the control."},
{ "name": "rotation",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "rotation",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "rotation",
  "type": "Property",
  "class": "mx.graphics.LinearGradient",
  "description": ""},
{ "name": "rotation",
  "type": "Property",
  "class": "mx.graphics.LinearGradientStroke",
  "description": ""},
{ "name": "rotationPropertyDefinition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": ""},
{ "name": "rotationX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the rotationX, in degrees, added to the transform"},
{ "name": "rotationX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The rotationX, in degrees, of the transform."},
{ "name": "rotationY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the rotationY, in degrees, added to the transform"},
{ "name": "rotationY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The rotationY, in degrees, of the transform."},
{ "name": "rotationZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the rotationZ, in degrees, added to the transform"},
{ "name": "rotationZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The rotationZ, in degrees, of the transform."},
{ "name": "round",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "round a number to the nearest twip."},
{ "name": "roundTo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "Convert Pixels to Twips (rounded)."},
{ "name": "rounding",
  "type": "Property",
  "class": "mx.formatters.NumberFormatter",
  "description": "Specifies how to round the number."},
{ "name": "rounding",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "How to round the number."},
{ "name": "row",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellCoordinates",
  "description": "The row the cell belongs to"},
{ "name": "row",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemRenderer",
  "description": ""},
{ "name": "rowAlign",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Specifies how to justify the fully visible rows to the container height."},
{ "name": "rowAlign",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "rowBackground",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render the background of each row."},
{ "name": "rowBackground",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "A visual element that's displays the background for each row."},
{ "name": "rowCount",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "Number of rows to be displayed."},
{ "name": "rowCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "The number of rows in the Grid."},
{ "name": "rowCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "rowCount",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The current number of visible elements."},
{ "name": "rowCount",
  "type": "Property",
  "class": "spark.components.gridClasses.CellRegion",
  "description": "The number of rows in the cell region."},
{ "name": "rowCount",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "The row count."},
{ "name": "rowCount",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "rowGap",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "The gap between rows."},
{ "name": "rowGap",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "rowGap",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "description": "Amount of spacing between the rows."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "org.apache.royale.html.List",
  "description": "The default height of each cell in every column"},
{ "name": "rowHeight",
  "type": "Property",
  "class": "org.apache.royale.jewel.List",
  "description": "The default height of each cell in every column"},
{ "name": "rowHeight",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "rowHeight",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The height of the rows in pixels."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "org.apache.royale.core.IListPresentationModel",
  "description": "The height of every row in the list."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ListPresentationModel",
  "description": "The height of each row."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "If <code>variableRowHeight</code> is <code>false</code>, then this property specifies the actual height of each child, in pixels."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ListPresentationModel",
  "description": "The height of each row."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.TileLayout",
  "description": "The height of each row, in pixels."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "org.apache.royale.html.DataGrid",
  "description": "The default height of each cell in every column"},
{ "name": "rowHeight",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>variableRowHeight</code> is <code>false</code>, then this property specifies the actual height of each row, in pixels."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "The row height, in pixels."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The height of each row, in pixels."},
{ "name": "rowHeight",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "rowIndex",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataItemRenderer",
  "description": "The index of the row the itemRenderer represents."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableRowElement",
  "description": ""},
{ "name": "rowIndex",
  "type": "Property",
  "class": "mx.controls.listClasses.BaseListData",
  "description": "The index of the row of the DataGrid, List, or Tree control relative to the currently visible rows of the control, where the first row is at an index of 1."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.CellPosition",
  "description": "The 0-based row index of the cell."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": ""},
{ "name": "rowIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "rowIndex",
  "type": "Property",
  "class": "spark.events.GridItemEditorEvent",
  "description": "The index of the row that is being edited."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.CellRegion",
  "description": "The 0-based row index of the origin of the cell region."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": ""},
{ "name": "rowIndex",
  "type": "Property",
  "class": "mx.events.ListEvent",
  "description": "In the zero-based index of the row that contains the item renderer where the event occured, or for editing events, the index of the item in the data provider that is being edited."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "rowIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "rowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemEditor",
  "description": "The zero-based index of the row of the cell being edited."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "The zero-based index of the row of the cell being rendered."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "<p>The Grid's <code>updateDisplayList()</code> method sets this property before calling <code>prepare()</code></p>."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "mx.events.AdvancedDataGridEvent",
  "description": "The zero-based index of the item in the data provider."},
{ "name": "rowIndex",
  "type": "Property",
  "class": "spark.events.GridEvent",
  "description": ""},
{ "name": "rowSeparator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render the horizontal separator between header rows."},
{ "name": "rowSeparator",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "A visual element that's displayed in between each row."},
{ "name": "rowSpan",
  "type": "Property",
  "class": "mx.containers.GridItem",
  "description": "Number of rows of the Grid container spanned by the cell."},
{ "name": "rowSpan",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "rowSpan",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "rows",
  "type": "Property",
  "class": "org.apache.royale.mdl.TextArea",
  "description": "The number of rows in the textarea."},
{ "name": "rows",
  "type": "Property",
  "class": "org.apache.royale.jewel.TextArea",
  "description": "The number of rows in the textarea."},
{ "name": "rows",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Textarea",
  "description": "Number of visible lines"},
{ "name": "royaleClientWaitHandler",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Handles a change to the guard condition for managing initial Channel connect for the application."},
{ "name": "royale_wrapper",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "royale_wrapper",
  "type": "Property",
  "class": "org.apache.royale.core.WrappedHTMLElement",
  "description": "A pointer back to the instance that wrapped this element."},
{ "name": "royalegraphics",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "rubyAlign",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "rubyMerge",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "rubyPosition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "rules",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "rules specifies which rules will appear between cells within a table."},
{ "name": "rules",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: rules specifies which rules will appear between cells within a table."},
{ "name": "rules",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "rules specifies which rules will appear between cells within a table."},
{ "name": "rulesProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "run",
  "type": "Method",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": ""},
{ "name": "run",
  "type": "Method",
  "class": "org.apache.royale.test.runners.ITestRunner",
  "description": "Runs the tests."},
{ "name": "run",
  "type": "Method",
  "class": "org.apache.royale.test.runners.MetadataRunner",
  "description": ""},
{ "name": "run",
  "type": "Method",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": ""},
{ "name": "run",
  "type": "Method",
  "class": "org.apache.royale.utils.async.SequentialAsyncTask",
  "description": ""},
{ "name": "runCount",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Result",
  "description": "The number of tests that were run, whether they passed or failed."},
{ "name": "runLayout",
  "type": "Method",
  "class": "spark.components.DataRenderer",
  "description": ""},
{ "name": "runTime",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Result",
  "description": "The total run time of the test run, in milliseconds."},
{ "name": "running",
  "type": "Method",
  "class": "org.apache.royale.utils.Timer",
  "description": ""},
{ "name": "rx",
  "type": "Property",
  "class": "org.apache.royale.graphics.IEllipse",
  "description": "The horizontal radius of the ellipse."},
{ "name": "rx",
  "type": "Property",
  "class": "org.apache.royale.svg.Ellipse",
  "description": "The horizontal radius of the ellipse."},
{ "name": "rx",
  "type": "Property",
  "class": "org.apache.royale.graphics.IRect",
  "description": "The x corner radius."},
{ "name": "rx",
  "type": "Property",
  "class": "org.apache.royale.svg.Rect",
  "description": "The x axis radius for rounded corners"},
{ "name": "ry",
  "type": "Property",
  "class": "org.apache.royale.graphics.IEllipse",
  "description": "The vertical radius of the ellipse."},
{ "name": "ry",
  "type": "Property",
  "class": "org.apache.royale.svg.Ellipse",
  "description": "The vertical radius of the ellipse."},
{ "name": "ry",
  "type": "Property",
  "class": "org.apache.royale.graphics.IRect",
  "description": "The y corner radius."},
{ "name": "ry",
  "type": "Property",
  "class": "org.apache.royale.svg.Rect",
  "description": "The y axis radius for rounded corners"},
{ "name": "s",
  "type": "Property",
  "class": "org.apache.royale.utils.HSV",
  "description": ""},
{ "name": "save",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuBuiltInItems",
  "description": ""},
{ "name": "save",
  "type": "Method",
  "class": "mx.net.FileReference",
  "description": ""},
{ "name": "save",
  "type": "Method",
  "class": "spark.components.gridClasses.IGridItemEditor",
  "description": "Saves the value in the editor to the data provider of the item renderer's owner."},
{ "name": "saveCurrentState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ModelEdit",
  "description": ""},
{ "name": "saveState",
  "type": "Method",
  "class": "mx.containers.ViewStack",
  "description": ""},
{ "name": "scale",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Scales the Matrix by the specified amount."},
{ "name": "scale",
  "type": "Property",
  "class": "org.apache.royale.core.TransformScaleModel",
  "description": ""},
{ "name": "scaleContent",
  "type": "Property",
  "class": "mx.controls.Image",
  "description": "A flag that indicates whether to scale the content to fit the size of the control or resize the control to the content's size."},
{ "name": "scaleX",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "scaleX",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "scaleX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the multiplier applied to the scaleX of the transform."},
{ "name": "scaleX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The scaleX of the transform."},
{ "name": "scaleX",
  "type": "Property",
  "class": "org.apache.royale.svg.LinearGradient",
  "description": "The horizontal scale of the gradient transform, which defines the width of the (unrotated) gradient"},
{ "name": "scaleY",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "scaleY",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "scaleY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the multiplier applied to the scaleY of the transform."},
{ "name": "scaleY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The scaleY of the transform."},
{ "name": "scaleZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the multiplier applied to the scaleZ of the transform."},
{ "name": "scaleZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The scaleZ of the transform."},
{ "name": "scrapChildren",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.mementos.DeleteTextMemento",
  "description": ""},
{ "name": "scrapToCut",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CutOperation",
  "description": "scrapToCut the original removed text"},
{ "name": "screen",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Returns an object that contains the size and position of the base drawing surface for this object."},
{ "name": "screen",
  "type": "Property",
  "class": "mx.core.IToolTip",
  "description": "A Rectangle that specifies the size and position of the base drawing surface for this tooltip."},
{ "name": "screen",
  "type": "Property",
  "class": "mx.managers.SystemManager",
  "description": ""},
{ "name": "screenX",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "X-coordinate relative to the monitor."},
{ "name": "screenX",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "X-coordinate relative to the monitor."},
{ "name": "screenY",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": "Y-coordinate relative to the monitor."},
{ "name": "screenY",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Y-coordinate relative to the monitor."},
{ "name": "scroll",
  "type": "Event",
  "description": "Dispatched when the content is scrolled."},
{ "name": "scroll",
  "type": "Event",
  "description": "Dispatched when the user manually scrolls the container."},
{ "name": "scroll",
  "type": "Event",
  "description": "Dispatched by a ITextFlow object after text is scrolled within a controller container."},
{ "name": "scroll",
  "type": "Event",
  "description": "Dispatched by a TextFlow object after text is scrolled within a controller container."},
{ "name": "scroll",
  "type": "Event",
  "description": "Dispatched when the user scrolls the ComboBox control's drop-down list."},
{ "name": "scrollAreaChanged",
  "type": "Property",
  "class": "mx.core.ScrollControlBase",
  "description": "A flag that the scrolling area changed due to the appearance or disappearance of scrollbars."},
{ "name": "scrollChildren",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Positions the container's content area relative to the viewable area based on the horizontalScrollPosition and verticalScrollPosition properties."},
{ "name": "scrollDragDelay",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies a timed delay between one scroll and the next to prevent scrolling from going too fast."},
{ "name": "scrollDragDelay",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "scrollDragPixels",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the default number of pixels to scroll when the user initiates auto scrolling by dragging the selection."},
{ "name": "scrollDragPixels",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "scrollEnd",
  "type": "Event",
  "description": "The scrollEnd event is dispatched scrolled to the bottom."},
{ "name": "scrollMouseWheelMultiplier",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the default number of pixels to scroll for Mouse wheel events."},
{ "name": "scrollMouseWheelMultiplier",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "scrollPagePercentage",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the default percentage of the text flow to scroll for page scrolls."},
{ "name": "scrollPagePercentage",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "scrollPolicyPropertyDefinition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ScrollPolicy",
  "description": "Shared definition of the scrollPolicy property."},
{ "name": "scrollPosition",
  "type": "Property",
  "class": "mx.controls.VScrollBar",
  "description": "Number that represents the current scroll position."},
{ "name": "scrollPositionChanged",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Called when the <code>verticalScrollPosition</code> or <code>horizontalScrollPosition</code> properties change."},
{ "name": "scrollSnapCoordinate",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "scrollSnapDestination",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "scrollSnapType",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "scrollToIndex",
  "type": "Method",
  "class": "mx.controls.listClasses.ListBase",
  "description": ""},
{ "name": "scrollToRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "scrollToRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": ""},
{ "name": "scrollToRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Scrolls so that the text range is visible in the container."},
{ "name": "scrollToRange",
  "type": "Method",
  "class": "spark.components.TextArea",
  "description": ""},
{ "name": "scrollable",
  "type": "Property",
  "class": "org.apache.royale.mdl.Header",
  "description": "A boolean flag to activate \"mdl-layout__header--scroll\" effect selector."},
{ "name": "scrollbarWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.GetScrollbarWidth",
  "description": ""},
{ "name": "scroller",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "A reference to the Scroller control in the skin class that adds scroll bars to the DataGrid control."},
{ "name": "scroller",
  "type": "Property",
  "class": "spark.components.TextArea",
  "description": "The optional Scroller in the skin, used to scroll the RichEditableText."},
{ "name": "scrubDelay",
  "type": "Property",
  "class": "mx.managers.ToolTipManager",
  "description": "The amount of time, in milliseconds, that a user can take when moving the mouse between controls before Flex again waits for the duration of <code>showDelay</code> to display a ToolTip."},
{ "name": "scrubDelay",
  "type": "Property",
  "class": "mx.managers.IToolTipManager2",
  "description": ""},
{ "name": "searchResult",
  "type": "Event",
  "description": ""},
{ "name": "searchResults",
  "type": "Property",
  "class": "org.apache.royale.maps.google.models.MapModel",
  "description": "Results from the last search."},
{ "name": "searchResults",
  "type": "Property",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "secure",
  "type": "Property",
  "class": "org.apache.royale.express.TextInput",
  "description": "Displays input as * to obsure the content."},
{ "name": "securityError",
  "type": "Event",
  "description": "Dispatched when a security error occurs."},
{ "name": "seek",
  "type": "Method",
  "class": "mx.collections.IViewCursor",
  "description": "Moves the cursor to a location at an offset from the specified bookmark."},
{ "name": "seek",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Advances the tween effect to the specified position."},
{ "name": "seek",
  "type": "Method",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "segments",
  "type": "Property",
  "class": "mx.charts.series.renderData.LineSeriesRenderData",
  "description": "An Array of LineSeriesSegment instances representing each discontiguous segment of the line series."},
{ "name": "selectAll",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectAll",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Selects the entire flow."},
{ "name": "selectAll",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuClipboardItems",
  "description": ""},
{ "name": "selectAll",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectAll",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "selectAll",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectCell",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select a table cell."},
{ "name": "selectCellAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select table cells at the specified index."},
{ "name": "selectCellRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": ""},
{ "name": "selectCellRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select a range of table cells."},
{ "name": "selectCellRegion",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectCellRegion",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectCellTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select a table cell text flow"},
{ "name": "selectCells",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select table cells at the specified index"},
{ "name": "selectColumn",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select a table column."},
{ "name": "selectColumnAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select a table column at the specified index"},
{ "name": "selectColumns",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Selects the table columns provided"},
{ "name": "selectContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardContent",
  "description": ""},
{ "name": "selectContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.ApplicationMainContent",
  "description": ""},
{ "name": "selectContent",
  "type": "Method",
  "class": "org.apache.royale.jewel.TabBarContent",
  "description": ""},
{ "name": "selectFirstPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Selects the first position in the entire flow."},
{ "name": "selectFirstPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "selectIndices",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectIndices",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectLastPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Selects the last position in the entire flow."},
{ "name": "selectLastPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "selectRange",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "Sets the range of selected text in the component."},
{ "name": "selectRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Selects a range of text."},
{ "name": "selectRange",
  "type": "Method",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "selectRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Sets the range of selected text in a component implementing ITextSupport."},
{ "name": "selectRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "selectRange",
  "type": "Method",
  "class": "mx.core.ITextInput",
  "description": "Selects the text in the range specified by the parameters."},
{ "name": "selectRange",
  "type": "Method",
  "class": "mx.controls.TextInput",
  "description": "Selects the text in the range specified by the parameters."},
{ "name": "selectRow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select the specified table row."},
{ "name": "selectRowAt",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select a table row at the specified index"},
{ "name": "selectRows",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Selects the table rows provided"},
{ "name": "selectTable",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Select all cells in a table."},
{ "name": "selectTableCursorDrawCommands",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "selectTableCursorPoints",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "selectable",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "Specifies whether a series is selectable or not."},
{ "name": "selectable",
  "type": "Property",
  "class": "org.apache.royale.core.IRuntimeSelectableItemRenderer",
  "description": "<code>true</code> if the item renderer is can be selected false otherwise."},
{ "name": "selectable",
  "type": "Property",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": "<code>true</code> if the item renderer is can be selected false otherwise."},
{ "name": "selectable",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": "<code>true</code> if the item renderer is can be selected false otherwise."},
{ "name": "selectable",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "<code>true</code> if the item renderer is can be selected false otherwise."},
{ "name": "selectable",
  "type": "Property",
  "class": "mx.controls.Label",
  "description": "Specifies whether the text can be selected."},
{ "name": "selectable",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "<code>true</code> if the item renderer is can be selected false otherwise."},
{ "name": "selectable",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "A flag indicating whether the text in the TextInput can be selected."},
{ "name": "selectable",
  "type": "Property",
  "class": "spark.components.supportClasses.ItemRenderer",
  "description": ""},
{ "name": "selectable",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.ListItemRenderer",
  "description": "<code>true</code> if the item renderer is can be selected false otherwise."},
{ "name": "selectable",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "selectable",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "selectable",
  "type": "Property",
  "class": "org.apache.royale.mdl.Table",
  "description": "A boolean flag to activate \"mdl-data-table--selectable\" effect selector."},
{ "name": "selectable",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": "<code>true</code> if the item renderer is can be selected false otherwise."},
{ "name": "selectableRange",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Range of dates between which dates are selectable."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.core.ISelectableItemRenderer",
  "description": "<code>true</code> if the item renderer is rendering an item that is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "Whether or not the itemRenderer is in a selected state."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.core.ISelectable",
  "description": "<code>true</code> if the item is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.CSSCheckBox",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": "@export"},
{ "name": "selected",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "mx.controls.RadioButton",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.RadioButton",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "Whether or not the itemRenderer is in a selected state."},
{ "name": "selected",
  "type": "Property",
  "class": "spark.components.supportClasses.ToggleButtonBase",
  "description": "Contains <code>true</code> if the button is in the down state, and <code>false</code> if it is in the up state."},
{ "name": "selected",
  "type": "Property",
  "class": "spark.components.RadioButton",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "mx.managers.IFocusManagerGroup",
  "description": "A flag that indicates whether this control is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.core.IToggleButtonModel",
  "description": "<code>true</code> if the button is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ToggleButtonModel",
  "description": "Whether or not the org."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.mobile.ToggleSwitch",
  "description": "<code>true</code> if the switch is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": "@export"},
{ "name": "selected",
  "type": "Property",
  "class": "mx.controls.CheckBox",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.CheckBox",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.ToggleTextButton",
  "description": "<code>true</code> if the Button is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "Whether or not the itemRenderer is in a selected state."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.text.ime.CompositionAttributeRange",
  "description": "The selected flag, meaning this composition clause is active and being lengthened or shortened or edited with the IME, and the neighboring clauses are not."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.mdl.IconToggle",
  "description": "<code>true</code> if the Button is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "spark.components.supportClasses.ItemRenderer",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": "<code>true</code> if the check mark is displayed."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.createjs.CheckBox",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.mdl.Switch",
  "description": "<code>true</code> if the Switch is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.jewel.ToggleButton",
  "description": "<code>true</code> if the Button is selected."},
{ "name": "selected",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "Contains <code>true</code> if the item renderer's cell is part of the current selection."},
{ "name": "selected",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "<p>The Grid's <code>updateDisplayList()</code> method sets this property before calling <code>preprare()</code></p>."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": "<code>true</code> if the check mark is displayed."},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "spark.components.CheckBox",
  "description": ""},
{ "name": "selected",
  "type": "Property",
  "class": "org.apache.royale.icons.ToggleFontIcon",
  "description": "<code>true</code> if the Button is selected."},
{ "name": "selectedCell",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectedCell",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectedCells",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectedCells",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "Contains an Array of cell locations as row and column indices."},
{ "name": "selectedCells",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectedChartItem",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies the selected ChartItem in the chart."},
{ "name": "selectedChartItems",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies an array of all the selected ChartItem objects in the chart."},
{ "name": "selectedChartItems",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "An Array of the selected ChartItem objects in the chart."},
{ "name": "selectedChild",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": "A reference to the currently visible child container."},
{ "name": "selectedColor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": ""},
{ "name": "selectedColor",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "selectedColor",
  "type": "Property",
  "class": "mx.controls.ColorPicker",
  "description": "The value of the currently selected color in the SwatchPanel object."},
{ "name": "selectedColorDisplay",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorPickerView",
  "description": ""},
{ "name": "selectedContent",
  "type": "Property",
  "class": "org.apache.royale.jewel.WizardContent",
  "description": "shows a concrete content and hides the rest"},
{ "name": "selectedContent",
  "type": "Property",
  "class": "org.apache.royale.jewel.ApplicationMainContent",
  "description": "shows a concrete content and hides the rest"},
{ "name": "selectedContent",
  "type": "Property",
  "class": "org.apache.royale.jewel.TabBarContent",
  "description": "shows a concrete content and hides the rest"},
{ "name": "selectedContentProperty",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": "the property in the object in the TabBar dataProvider that will be used to select the content"},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.jewel.DateField",
  "description": "The currently selected date (or null if no date has been selected)."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.html.DateField",
  "description": "The currently selected date (or null if no date has been selected)."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDateChooser",
  "description": "The selectedDate"},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.core.IDateChooserModel",
  "description": "The currently selected date or null if no date has been selected."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": "The currently selected date or null if no date has been selected."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.html.DateChooser",
  "description": "The currently selected date (or null if no date has been selected)."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.html5.DateField",
  "description": "The date currently displayed by the DateField."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Date selected in the DateChooser control."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.jewel.DateChooser",
  "description": "The currently selected date (or null if no date has been selected)."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.mobile.DatePicker",
  "description": "The date selected or set."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The currently selected date or null if no date has been selected."},
{ "name": "selectedDate",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "Date as selected in the DateChooser control."},
{ "name": "selectedDateChanged",
  "type": "Event",
  "description": ""},
{ "name": "selectedField",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "selectedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "selectedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": "Called when an item in the MenuBar is selected; it produces an IMenu below the item selected."},
{ "name": "selectedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuSelectionMouseController",
  "description": "Listen for selections made on the component and translate them into change events."},
{ "name": "selectedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": ""},
{ "name": "selectedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "selectedHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "selectedHandler",
  "type": "Method",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.Table",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.List",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "Index of the selected item in the data provider of the series."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.List",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.core.ISelectionModel",
  "description": "The index of the selected item in the dataProvider."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The index in the data provider of the selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.core.ISelectableList",
  "description": "The index of the selected IList item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": "The zero-based index of the currently visible child container."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.mobile.TabbedViewManager",
  "description": "The index (starting at zero) of the currently visible view."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.IDataGridColumnList",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionICollectionViewModel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.core.IComboBoxModel",
  "description": "The index of the selected item in the dataProvider."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.ComboBox",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "spark.components.supportClasses.ListBase",
  "description": "The 0-based index of the selected item, or -1 if no item is selected."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.controls.ToggleButtonBar",
  "description": "The index in the data provider of the selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionIListModel",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.ComboBox",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.mdl.Tabs",
  "description": "selected index"},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.controls.MenuBar",
  "description": "The index in the MenuBar control of the currently open Menu or the last opened Menu if none are currently open."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.DropDownList",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": "The index in the data provider of the selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "spark.components.RadioButtonGroup",
  "description": "The index of the selected RadioButton component in the group."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.combobox.ComboBoxPopUp",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.DataGrid",
  "description": "The currently selected row."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The index into the views array of the currently active view."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": ""},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.mdl.TabBar",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndex",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionContainerBead",
  "description": "The index of the currently selected item."},
{ "name": "selectedIndexChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AccordionCollapseBead",
  "description": ""},
{ "name": "selectedIndexChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.effects.beads.EasyAccordionCollapseBead",
  "description": ""},
{ "name": "selectedIndices",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "An Array of indexes of the selected items in the data provider of the series."},
{ "name": "selectedIndices",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectedIndices",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "An array of indices in the data provider of the selected items."},
{ "name": "selectedIndices",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.jewel.Table",
  "description": "The item currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.html.List",
  "description": "The item currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "The chart item that is selected in the series."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.jewel.List",
  "description": "The item currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.core.ISelectionModel",
  "description": "The data item selected in the dataProvider."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "The selected item in the data provider."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.core.IMenu",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.jewel.DropDownList",
  "description": "The item currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionICollectionViewModel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.core.IComboBoxModel",
  "description": "The data item selected in the dataProvider."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.html.ComboBox",
  "description": "The item that is currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "spark.components.supportClasses.ListBase",
  "description": "The item that is currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionIListModel",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.jewel.ComboBox",
  "description": "The item currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.html.DropDownList",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "spark.components.ComboBox",
  "description": "The item that is currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": "The item in the data provider at the selectedIndex."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.combobox.ComboBoxPopUp",
  "description": "The item currently selected."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": ""},
{ "name": "selectedItem",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectedItem",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionContainerBead",
  "description": "The item currently selected."},
{ "name": "selectedItemProperty",
  "type": "Property",
  "class": "org.apache.royale.jewel.Table",
  "description": "The item property currently selected."},
{ "name": "selectedItemProperty",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableModel",
  "description": ""},
{ "name": "selectedItems",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "An Array of chart items that are selected in the series."},
{ "name": "selectedItems",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectedItems",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "An array of references to the selected items in the data provider."},
{ "name": "selectedItems",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectedLabel",
  "type": "Property",
  "class": "mx.controls.ComboBox",
  "description": "The String displayed in the TextInput portion of the ComboBox."},
{ "name": "selectedMarker",
  "type": "Property",
  "class": "org.apache.royale.maps.google.models.MapModel",
  "description": "The last marker selected, if any."},
{ "name": "selectedMarker",
  "type": "Property",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "selectedRanges",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Selected date ranges."},
{ "name": "selectedSeries",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartDataModel",
  "description": ""},
{ "name": "selectedSeries",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.models.ChartArrayListSelectionModel",
  "description": ""},
{ "name": "selectedSeries",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.models.ChartArraySelectionModel",
  "description": ""},
{ "name": "selectedString",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": "An alternative to selectedItem for strongly typing the the selectedItem if the Array is an Array of Strings."},
{ "name": "selectedString",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": "An alternative to selectedItem for strongly typing the the selectedItem if the Array is an Array of Strings."},
{ "name": "selectedString",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionICollectionViewModel",
  "description": "An alternative to selectedItem for strongly typing the the selectedItem if the Array is an Array of Strings."},
{ "name": "selectedString",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": "An alternative to selectedItem for strongly typing the the selectedItem if the dataProvider is an ArrayList of Strings."},
{ "name": "selectedString",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": "An alternative to selectedItem for strongly typing the the selectedItem if the Array is an Array of Strings."},
{ "name": "selectedString",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": "An alternative to selectedItem for strongly typing the the selectedItem if the Array is an Array of Strings."},
{ "name": "selectedString",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": "The selected string."},
{ "name": "selectedString",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionIListModel",
  "description": "An alternative to selectedItem for strongly typing the the selectedItem if the Array is an Array of Strings."},
{ "name": "selectedText",
  "type": "Property",
  "class": "org.apache.royale.jewel.ToggleButton",
  "description": "The selectedText of the icon"},
{ "name": "selectedText",
  "type": "Property",
  "class": "org.apache.royale.icons.ToggleFontIcon",
  "description": "The selectedText of the icon"},
{ "name": "selectedValue",
  "type": "Property",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": ""},
{ "name": "selectedValue",
  "type": "Property",
  "class": "org.apache.royale.html.RadioButton",
  "description": ""},
{ "name": "selectedValue",
  "type": "Property",
  "class": "mx.controls.RadioButtonGroup",
  "description": "The value of the <code>value</code> property of the selected RadioButton control in the group, if this has been set to be something other than <code>null</code> (the default value)."},
{ "name": "selectedValue",
  "type": "Property",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "selectedValue",
  "type": "Property",
  "class": "org.apache.royale.core.IValueToggleButtonModel",
  "description": "A value associated with the instance of the ToggleButton that is currently selected."},
{ "name": "selectedValue",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ValueToggleButtonModel",
  "description": "The value that is currently selected."},
{ "name": "selectedValue",
  "type": "Property",
  "class": "spark.components.RadioButtonGroup",
  "description": "The <code>value</code> property of the selected RadioButton component in the group, if it has been set, otherwise, the <code>label</code> property of the selected RadioButton."},
{ "name": "selectedValue",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.IDropDownListModel",
  "description": "Gets selectedValue from Select in DropDownList"},
{ "name": "selectedValue",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.DropDownListModel",
  "description": ""},
{ "name": "selectedValue",
  "type": "Property",
  "class": "org.apache.royale.mdl.DropDownList",
  "description": ""},
{ "name": "selectedView",
  "type": "Property",
  "class": "org.apache.royale.mobile.IViewManager",
  "description": "The view that is currently active in the view manager."},
{ "name": "selectedView",
  "type": "Property",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": "The currently visible view."},
{ "name": "selectedView",
  "type": "Property",
  "class": "org.apache.royale.mobile.StackedViewManager",
  "description": "The top-most (current) view."},
{ "name": "selection",
  "type": "Property",
  "class": "mx.controls.RadioButtonGroup",
  "description": "Contains a reference to the currently selected RadioButton control in the group."},
{ "name": "selection",
  "type": "Property",
  "class": "spark.components.RadioButtonGroup",
  "description": "Contains a reference to the currently selected RadioButton component in the group."},
{ "name": "selectionActiveIndex",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "The zero-based character index value of the last character in the current selection."},
{ "name": "selectionActivePosition",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": "A character position, relative to the beginning of the <code>text</code> String, specifying the end of the selection that moves when the selection is extended with the arrow keys."},
{ "name": "selectionActivePosition",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "The zero-based index of the position <i>after</i> the last character in the current selection (equivalent to the one-based index of the last character)."},
{ "name": "selectionActivePosition",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "selectionAnchorIndex",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "The zero-based character index value of the first character in the current selection."},
{ "name": "selectionAnchorPosition",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "The zero-based character index value of the first character in the current selection."},
{ "name": "selectionAnchorPosition",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "selectionBeginIndex",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": "The zero-based character index value of the first character in the current selection."},
{ "name": "selectionChange",
  "type": "Event",
  "description": "Dispatched when the selection has changed."},
{ "name": "selectionChange",
  "type": "Event",
  "description": "Dispatched whenever the selection is changed."},
{ "name": "selectionChange",
  "type": "Property",
  "class": "spark.events.GridSelectionEvent",
  "description": "The upcoming or just-completed selection changes triggered by some user gesture."},
{ "name": "selectionChange",
  "type": "Event",
  "description": "Dispatched whenever the selection is changed."},
{ "name": "selectionChangedChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": ""},
{ "name": "selectionChanging",
  "type": "Event",
  "description": "Dispatched when the selection is going to change."},
{ "name": "selectionContainsCell",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectionContainsCell",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectionContainsCellRegion",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectionContainsCellRegion",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectionContainsIndex",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectionContainsIndex",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectionContainsIndices",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectionContainsIndices",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectionEndIndex",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": "The zero-based index of the position <i>after</i> the last character in the current selection (equivalent to the one-based index of the last character)."},
{ "name": "selectionFormatState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "@private - returns the selectionFormatState."},
{ "name": "selectionIndicator",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "The IVisualElement class used to render selected rows or cells."},
{ "name": "selectionIndicator",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectionLength",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectionLength",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "The length of the selection."},
{ "name": "selectionLength",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "selectionManagerOperationState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionState",
  "description": "@private"},
{ "name": "selectionMode",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "selectionMode",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "The selection mode of the control."},
{ "name": "selectionMode",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies whether or not ChartItem objects can be selected."},
{ "name": "selectionMode",
  "type": "Property",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "The selection mode of the control."},
{ "name": "selectionMode",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The selection mode of the control."},
{ "name": "selectionRequired",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionContainerBead",
  "description": ""},
{ "name": "selectionState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.SelectionEvent",
  "description": "An object of type SelectionState that represents the selected range associated with this SelectionEvent."},
{ "name": "selectionType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Indicates the type of selection."},
{ "name": "selectionType",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Indicates the type of selection."},
{ "name": "selectionWillIntersectScrollRect",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "selector",
  "type": "Property",
  "class": "mx.messaging.Consumer",
  "description": "The selector for the Consumer."},
{ "name": "selectors",
  "type": "Property",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Returns an array of strings of all CSS selectors registered with the StyleManager."},
{ "name": "send",
  "type": "Method",
  "class": "org.apache.royale.net.RemoteObject",
  "description": ""},
{ "name": "send",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Sends the specified message to its target destination."},
{ "name": "send",
  "type": "Method",
  "class": "mx.messaging.channels.PollingChannel",
  "description": "Sends the specified message to its target destination."},
{ "name": "send",
  "type": "Method",
  "class": "mx.rpc.AbstractOperation",
  "description": "Executes the method."},
{ "name": "send",
  "type": "Method",
  "class": "mx.rpc.remoting.Operation",
  "description": "inheritDoc"},
{ "name": "send",
  "type": "Method",
  "class": "mx.rpc.http.Operation",
  "description": "Executes the http operation."},
{ "name": "send",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.SimpleOperation",
  "description": ""},
{ "name": "send",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "send is a protected function in js so a subclass can attach an upload listener without rewriting the whole load() function"},
{ "name": "send",
  "type": "Method",
  "class": "mx.messaging.AbstractProducer",
  "description": "Sends the specified message to its destination."},
{ "name": "send",
  "type": "Method",
  "class": "org.apache.royale.net.URLUploadStream",
  "description": ""},
{ "name": "send",
  "type": "Method",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "Starts the upload to the server."},
{ "name": "send",
  "type": "Method",
  "class": "mx.printing.FlexPrintJob",
  "description": "Sends the added objects to the printer to start printing."},
{ "name": "send",
  "type": "Method",
  "class": "mx.rpc.http.HTTPService",
  "description": "Executes an HTTPService request."},
{ "name": "send",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Sends a message from a MessageAgent over the currently connected Channel."},
{ "name": "send",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.Operation",
  "description": "performs the sendind."},
{ "name": "send",
  "type": "Method",
  "class": "org.apache.royale.net.HTTPService",
  "description": "Sends the headers and contentData to the server."},
{ "name": "send",
  "type": "Method",
  "class": "org.apache.royale.net.SimpleRemoteObject",
  "description": ""},
{ "name": "sendBody",
  "type": "Method",
  "class": "mx.rpc.http.AbstractOperation",
  "description": ""},
{ "name": "sendTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Millisecond timestamp of when this message was sent (origin depends on on what header this MPI is in)"},
{ "name": "separationError",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "Error message when the thousands separator is in the wrong location."},
{ "name": "separatorThickness",
  "type": "Property",
  "class": "org.apache.royale.core.IListPresentationModel",
  "description": "The distance each row should be separated from the row above."},
{ "name": "separatorThickness",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ListPresentationModel",
  "description": "The distance between rows."},
{ "name": "separatorThickness",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ListPresentationModel",
  "description": "The distance between rows."},
{ "name": "sequenceLabel",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "The number of the form item in the form."},
{ "name": "sequenceLabelDisplay",
  "type": "Property",
  "class": "spark.components.FormItem",
  "description": "A reference to the visual element that displays the FormItem's sequenceLabel."},
{ "name": "serializationFilter",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": ""},
{ "name": "serializationFilter",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "A SerializationFilter can control how the arguments are formatted to form the content of the HTTP request."},
{ "name": "serializationFilter",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Provides an adapter which controls the process of converting the HTTP response body into ActionScript objects and/or turning the parameters or body into the contentType, URL, and and post body of the HTTP request."},
{ "name": "serializeBody",
  "type": "Method",
  "class": "mx.rpc.http.SerializationFilter",
  "description": "This method is called for all invocations of the HTTP service."},
{ "name": "serializeParameters",
  "type": "Method",
  "class": "mx.rpc.http.SerializationFilter",
  "description": "This method is called from the \"send\" method of the HTTP service invocation to convert the parameters into a request body."},
{ "name": "serializeURL",
  "type": "Method",
  "class": "mx.rpc.http.SerializationFilter",
  "description": "This method is used if you need to take data from the request body object and encode it into the URL string."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The series to which this itemRenderer instance belongs."},
{ "name": "series",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "An array of Series objects that define the chart data."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGBoxItemRenderer",
  "description": "The series to which this itemRenderer instance belongs."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The series to which this itemRenderer instance belongs."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChart",
  "description": "The collection of series for the chart."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.core.ChartBase",
  "description": "The collection of series for the chart."},
{ "name": "series",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "An array of sub-series managed by this stacking set."},
{ "name": "series",
  "type": "Property",
  "class": "mx.charts.series.ColumnSet",
  "description": "An array of sub-series managed by this stacking set."},
{ "name": "series",
  "type": "Property",
  "class": "mx.charts.series.BarSet",
  "description": "An array of sub-series managed by this stacking set."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": "The series to which this itemRenderer instance belongs."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The series to which this itemRenderer instance belongs."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": "The series to which this itemRenderer instance belongs."},
{ "name": "series",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": "The series to which this itemRenderer instance belongs."},
{ "name": "seriesFilters",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "An array of filters that are applied to all series in the chart."},
{ "name": "seriesRenderData",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": ""},
{ "name": "seriesRenderData",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "seriesRenderers",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.ChartItemRendererFactory",
  "description": "The array of renderers created for each series."},
{ "name": "serverAdapterExternalTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Time spent in a module invoked from the adapter associated with the destination for this message but external to it, before either the response to the message was ready or the message had been prepared to be pushed to the receiving client."},
{ "name": "serverAdapterTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Time spent in the adapter associated with the destination for this message before either the response to the message was ready or the message had been prepared to be pushed to the receiving client."},
{ "name": "serverNonAdapterTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Server processing time spent outside of the adapter associated with the destination of this message."},
{ "name": "serverPollDelay",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Time that the message waited on the server after it was ready to be pushed to the client but had not yet been polled for."},
{ "name": "serverPostAdapterExternalTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Millisecond timestamp of when processing came back to the adapter associated with the destination of this message from a call to an external component (for example a JMS server)"},
{ "name": "serverPostAdapterTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Millisecond timestamp of when server processing returned from the adapater associated with the destination of this message"},
{ "name": "serverPreAdapterExternalTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Millisecond timestamp of when the adapter associated with the destination of this message made a call to an external component (for example a JMS server)"},
{ "name": "serverPreAdapterTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Millisecond timestamp of when the server called into the adapter associated with the destination of this message"},
{ "name": "serverPrePushTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Time between server receiving the client message and the server beginning to push messages out to other clients as a result of the original message."},
{ "name": "serverPrePushTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceInfo",
  "description": "Millisecond timestamp of when the server became ready to push this message out to clients"},
{ "name": "serverProcessingTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Time between server receiving the client message and either the time the server responded to the received message or had the pushed message ready to be sent to the receiving client."},
{ "name": "serverSendTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Timestamp in milliseconds since epoch of when the server sent a response message back to the client."},
{ "name": "service",
  "type": "Property",
  "class": "mx.rpc.AbstractOperation",
  "description": "Provides convenient access to the service on which the Operation is being invoked."},
{ "name": "set",
  "type": "Property",
  "class": "org.apache.royale.utils.ObjectMap",
  "description": ""},
{ "name": "set",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "setAbsolutePosition",
  "type": "Method",
  "class": "org.apache.royale.html.beads.AbsolutePositioningViewBeadBase",
  "description": "Sets the position of the child and, on the HTML platform, sets the child's position style value to \"absolute\"."},
{ "name": "setAbsoluteStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "setActualHeight",
  "type": "Method",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": "Sizes the ConstraintRow  processing."},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.core.IFlexDisplayObject",
  "description": "Sets the actual size of this object."},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Sizes the object."},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.skins.ProgrammaticSkin",
  "description": "Sets the height and width of this object."},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.containers.ViewStack",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "spark.components.supportClasses.ListBase",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.core.Application",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.containers.FormItem",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.containers.FormHeading",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.charts.LegendItem",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.charts.GridLines",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "setActualSize",
  "type": "Method",
  "class": "spark.primitives.Rect",
  "description": ""},
{ "name": "setActualWidth",
  "type": "Method",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "Sizes the constraint column."},
{ "name": "setAnimation",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setAt",
  "type": "Method",
  "class": "google.maps.MVCArray",
  "description": ""},
{ "name": "setAuthenticated",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "setAxis",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Assigns an Axis instance to a particular dimension of the chart."},
{ "name": "setAxis",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "Assigns an axis instance to a particular dimension of the transform."},
{ "name": "setBaseline",
  "type": "Method",
  "class": "org.apache.royale.utils.LayoutTweener",
  "description": ""},
{ "name": "setBlendMode",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.ITLFFactory",
  "description": ""},
{ "name": "setBlendMode",
  "type": "Method",
  "class": "org.apache.royale.textLayout.factory.StandardTLFFactory",
  "description": ""},
{ "name": "setBorderColor",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": ""},
{ "name": "setBorderWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": ""},
{ "name": "setBufferSize",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "setBusyCursor",
  "type": "Method",
  "class": "mx.managers.CursorManager",
  "description": "Displays the busy cursor."},
{ "name": "setBusyCursor",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "setButtonEnabled",
  "type": "Method",
  "class": "spark.components.supportClasses.ButtonBarBase",
  "description": "Allows changing the <code>enabled</code> property of a the child ButtonBarbutton's."},
{ "name": "setButtonsEnabled",
  "type": "Method",
  "class": "spark.components.supportClasses.ButtonBarBase",
  "description": "Allows changing the <code>enabled</code> property of several child ButtonBarbutton's."},
{ "name": "setCapsLock",
  "type": "Method",
  "class": "mx.core.Keyboard",
  "description": ""},
{ "name": "setCell",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is either <code>GridSelectionMode."},
{ "name": "setCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Sets the height of the specified cell."},
{ "name": "setCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "setCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridRowNode",
  "description": "Updates the height at the specified column."},
{ "name": "setCellRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": ""},
{ "name": "setCellRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "setCellRegion",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "setCenter",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "setCenter",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "setCenter",
  "type": "Method",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "Sets the center of the map."},
{ "name": "setChildIndex",
  "type": "Method",
  "class": "mx.core.IChildList",
  "description": "Changes the index of a particular child in this child list."},
{ "name": "setChildIndex",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Sets the index of a particular child."},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.DataContainerBase",
  "description": ""},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.core.StyledUIBase",
  "description": ""},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.jewel.Container",
  "description": ""},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.jewel.Group",
  "description": ""},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": ""},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.mdl.supportClasses.TextFieldBase",
  "description": "override UIBase to affect positioner instead of element"},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.mdl.NavigationLayout",
  "description": ""},
{ "name": "setClassName",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "setClickable",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setColor",
  "type": "Method",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "setColor",
  "type": "Method",
  "class": "mx.core.UITextField",
  "description": "Sets the font color of the text."},
{ "name": "setColumnWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Sets the width of a given column."},
{ "name": "setColumnWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "setColumnWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "setColumnWidth",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Set the width of the specified column."},
{ "name": "setCompositionSize",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "setCompositionSize",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Sets the width and height allowed for text in the container."},
{ "name": "setCompositionString",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IME",
  "description": ""},
{ "name": "setContainerStyleChange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": "obj is created by cacheContainerStyleInformation"},
{ "name": "setContentBounds",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "setContentSize",
  "type": "Method",
  "class": "spark.components.supportClasses.GroupBase",
  "description": "Sets the <code>contentWidth</code> and <code>contentHeight</code> properties."},
{ "name": "setContents",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextClipboard",
  "description": "Puts a TextScrap onto the system clipboard."},
{ "name": "setController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "setController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": ""},
{ "name": "setCredentials",
  "type": "Method",
  "class": "mx.messaging.Channel",
  "description": "Sets the credentials to the specified value."},
{ "name": "setCredentials",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": "Sets the credentials for the destination accessed by the service when using Data Services on the server side."},
{ "name": "setCredentials",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Sets the credentials that the MessageAgent uses to authenticate to destinations."},
{ "name": "setCredentials",
  "type": "Method",
  "class": "mx.messaging.channels.DirectHTTPChannel",
  "description": ""},
{ "name": "setCredentials",
  "type": "Method",
  "class": "mx.rpc.http.HTTPService",
  "description": "Sets the credentials for the destination accessed by the service."},
{ "name": "setCredentials",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Stores the credentials and passes them through to every connected channel."},
{ "name": "setCursor",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setCursor",
  "type": "Method",
  "class": "mx.managers.CursorManager",
  "description": "Creates a new cursor and sets an optional priority for the cursor."},
{ "name": "setCursor",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "setData",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForHierarchicalData",
  "description": "Sets the itemRenderer's data with additional tree-related data."},
{ "name": "setData",
  "type": "Method",
  "class": "mx.controls.advancedDataGridClasses.DataItemRendererFactoryForICollectionViewAdvancedDataGridData",
  "description": "Sets the itemRenderer's data with additional tree-related data."},
{ "name": "setData",
  "type": "Method",
  "class": "mx.controls.treeClasses.DataItemRendererFactoryForICollectionViewHierarchicalData",
  "description": "Sets the itemRenderer's data with additional tree-related data."},
{ "name": "setData",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.Clipboard",
  "description": ""},
{ "name": "setDisplayStyleForLayout",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": "The display style is used for both visible and layout so is managed as a special case."},
{ "name": "setDisplayStyleForLayout",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "The display style is used for both visible and layout so is managed as a special case."},
{ "name": "setDisplayStyleForLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "The display style is used for both visible and layout so is managed as a special case."},
{ "name": "setDisplayStyleForLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "The display style is used for both visible and layout so is managed as a special case."},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.core.IDocument",
  "description": "This method is called to notify an instance of what MXML document it belongs to, if any, and what its assigned id is in that document, if any."},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.effects.Move",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.states.AddItems",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.effects.Fade",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.effects.Wipe",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayoutForOverflow",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.effects.Resize",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.states.SetProperty",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayout",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.ScrollingFlexibleChild",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "mx.rpc.remoting.mxml.RemoteObject",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Sequence",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayout",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.binding.ChainBinding",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayoutForOverflow",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.states.SetEventHandler",
  "description": ""},
{ "name": "setDocument",
  "type": "Method",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": ""},
{ "name": "setDraggable",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setDraggable",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "setEditable",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "setEffectiveFloat",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "setElementIndex",
  "type": "Method",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "setElementIndex",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "setElements",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "setEmpty",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "setEnabled",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Sets the value of the field or attribute in the data provider that identifies whether the node is enabled."},
{ "name": "setFinalStatus",
  "type": "Method",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": ""},
{ "name": "setFlat",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setFocus",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Sets the focus to this component."},
{ "name": "setFocus",
  "type": "Method",
  "class": "mx.managers.IFocusManagerComponent",
  "description": "Called by the FocusManager when the component receives focus."},
{ "name": "setFocus",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "setFocus",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Gives the focus to the first container in the selection."},
{ "name": "setFocus",
  "type": "Method",
  "class": "mx.managers.IFocusManager",
  "description": ""},
{ "name": "setFocus",
  "type": "Method",
  "class": "mx.managers.FocusManager",
  "description": ""},
{ "name": "setFocus",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Sets the focus to the container that contains the location specified by the <code>absolutePosition</code> parameter."},
{ "name": "setFocus",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Sets the focus to the container that contains the location specified by the <code>absolutePosition</code> parameter."},
{ "name": "setFocus",
  "type": "Method",
  "class": "mx.controls.beads.DateFieldView",
  "description": ""},
{ "name": "setFocus",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "setFocus",
  "type": "Method",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "setFocus",
  "type": "Method",
  "class": "mx.controls.DateField",
  "description": ""},
{ "name": "setGeneration",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "setHandler",
  "type": "Method",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Sets the handler function."},
{ "name": "setHeading",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "setHeight",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "Sets the height of the component without setting explicitHeight."},
{ "name": "setHeight",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "setHeight",
  "type": "Method",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": ""},
{ "name": "setHeight",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "setHeight",
  "type": "Method",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "setHeight",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "setHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyHandler",
  "description": ""},
{ "name": "setHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "Helper function when setting the property"},
{ "name": "setHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.TabStopsProperty",
  "description": "Helper function when setting the property"},
{ "name": "setHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.SpacingLimitPropertyHandler",
  "description": "parse the input string and create a valid input value"},
{ "name": "setHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.CounterPropHandler",
  "description": ""},
{ "name": "setHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.FormatPropertyHandler",
  "description": ""},
{ "name": "setHelper",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.CounterContentHandler",
  "description": "parse the input string and create a valid input value"},
{ "name": "setHostClassList",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": ""},
{ "name": "setIcon",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setIconPosition",
  "type": "Method",
  "class": "org.apache.royale.jewel.IconButton",
  "description": ""},
{ "name": "setInnerHTML",
  "type": "Method",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "setInnerHTML",
  "type": "Method",
  "class": "spark.components.supportClasses.ButtonBase",
  "description": ""},
{ "name": "setInnerHTML",
  "type": "Method",
  "class": "org.apache.royale.html.ImageAndTextButton",
  "description": ""},
{ "name": "setItem",
  "type": "Method",
  "class": "org.apache.royale.storage.LocalStorage",
  "description": "Stores a value with a key."},
{ "name": "setItem",
  "type": "Method",
  "class": "org.apache.royale.storage.IWebStorage",
  "description": "Stores a value with a key."},
{ "name": "setItem",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.LocalStorageProvider",
  "description": "Stores a value with a key."},
{ "name": "setItemAt",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Places the item at the specified index."},
{ "name": "setItemAt",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Place the item at the specified index."},
{ "name": "setItemAt",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "setItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ICollectionView",
  "description": ""},
{ "name": "setItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Replaces the item at the given index with a new item and returns the old item."},
{ "name": "setItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Replaces the item at the given index with a new item and returns the old item."},
{ "name": "setItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.TreeData",
  "description": ""},
{ "name": "setItemAt",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "Replaces the item at the given index with a new item and returns the old item, or adds an item to end of the source list if the index is the same as this ArrayListView's current length, returning null"},
{ "name": "setItemAt",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "setItemAt",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Place the item at the specified index."},
{ "name": "setLayoutBoundsPosition",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Sets the coordinates that the element uses to draw on screen."},
{ "name": "setLayoutBoundsPosition",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "setLayoutBoundsPosition",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "setLayoutBoundsSize",
  "type": "Method",
  "class": "mx.core.ILayoutElement",
  "description": "Sets the layout size of the element."},
{ "name": "setLayoutBoundsSize",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "setLayoutBoundsSize",
  "type": "Method",
  "class": "mx.core.LayoutElementUIComponentUtils",
  "description": ""},
{ "name": "setLineStyle",
  "type": "Method",
  "class": "org.apache.royale.graphics.IStroke",
  "description": ""},
{ "name": "setLineStyle",
  "type": "Method",
  "class": "mx.charts.chartClasses.GraphicsUtilities",
  "description": "Applies the values in a Stroke to the provded Graphics object."},
{ "name": "setLineStyle",
  "type": "Method",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": ""},
{ "name": "setMXMLDescriptor",
  "type": "Method",
  "class": "org.apache.royale.core.IMXMLDocument",
  "description": "Set the descriptor for this MXML component"},
{ "name": "setMajorSize",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "Set the size of the item at index."},
{ "name": "setMap",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setMap",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "setMapTypeId",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "setMenuItemToggled",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": "Toggles the menu item."},
{ "name": "setMouseCursor",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "Set the Mouse cursor."},
{ "name": "setMxmlChildren",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupHelper",
  "description": ""},
{ "name": "setOptions",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setOptions",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "setOptions",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "setPano",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "setParagraphStyleChange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": "Replace the existing paragraph attributes with the incoming attributes."},
{ "name": "setParentAndRelativeStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "setParentAndRelativeStartOnly",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "setParentRelativeStart",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "setPath",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "setPaths",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "setPlainText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.TextScrap",
  "description": "Marks the TextScrap's content as being either plain or formatted"},
{ "name": "setPosition",
  "type": "Method",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "setPosition",
  "type": "Method",
  "class": "org.apache.royale.core.IViewport",
  "description": "Sets the upper left position of the viewport"},
{ "name": "setPosition",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": ""},
{ "name": "setPosition",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setPosition",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "setPosition",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.OverflowViewport",
  "description": ""},
{ "name": "setPov",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "setPrivateData",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowValueHolder",
  "description": ""},
{ "name": "setProgress",
  "type": "Method",
  "class": "mx.controls.ProgressBar",
  "description": "Sets the state of the bar to reflect the amount of progress made when using manual mode."},
{ "name": "setProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.Proxy",
  "description": ""},
{ "name": "setProperty",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": ""},
{ "name": "setProperty",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "setProperty",
  "type": "Method",
  "class": "org.apache.royale.collections.converters.JSONItemConverter",
  "description": "Set a property on an object."},
{ "name": "setRemoteCredentials",
  "type": "Method",
  "class": "mx.rpc.AbstractService",
  "description": "The username and password to be used to authenticate a user when accessing a remote, third-party endpoint such as a web service through a proxy or a remote object through a custom adapter when using Data Services on the server side."},
{ "name": "setRemoteCredentials",
  "type": "Method",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "If a remote object is managed by an external service, such a ColdFusion Component (CFC), a username and password can be set for the authentication mechanism of that remote service."},
{ "name": "setRemoteCredentials",
  "type": "Method",
  "class": "mx.messaging.MessageAgent",
  "description": "Sets the remote credentials that will be passed through to the remote destination for authenticating to secondary systems."},
{ "name": "setRemoteCredentials",
  "type": "Method",
  "class": "mx.rpc.http.HTTPService",
  "description": "The username and password to authenticate a user when accessing the HTTP URL."},
{ "name": "setResult",
  "type": "Method",
  "class": "mx.rpc.AbstractInvoker",
  "description": "This hook is exposed to update the lastResult property."},
{ "name": "setResult",
  "type": "Method",
  "class": "mx.rpc.events.ResultEvent",
  "description": ""},
{ "name": "setRootElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "setRootElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": ""},
{ "name": "setRootElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "@copy IFlowComposer#setRootElement()"},
{ "name": "setRow",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is either <code>GridSelectionMode."},
{ "name": "setRowCount",
  "type": "Method",
  "class": "mx.controls.listClasses.ListBase",
  "description": "Sets the <code>rowCount</code> property without causing invalidation or setting the <code>explicitRowCount</code> property, which permanently locks in the number of rows."},
{ "name": "setRowHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Sets the height of a given row."},
{ "name": "setRowHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "setRowHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "setRowHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Set the height of the specified row."},
{ "name": "setRows",
  "type": "Method",
  "class": "spark.components.gridClasses.GridSelection",
  "description": "If the <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "setScrollProperties",
  "type": "Method",
  "class": "mx.controls.VScrollBar",
  "description": "Sets the range and viewport size of the ScrollBar control."},
{ "name": "setScrollStyle",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": "Subclasses override this method to change scrolling behavior"},
{ "name": "setScrollStyle",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.ScrollingViewport",
  "description": ""},
{ "name": "setScrollStyle",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.VScrollViewport",
  "description": ""},
{ "name": "setScrollStyle",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.HScrollViewport",
  "description": ""},
{ "name": "setSelectedCell",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "setSelectedCell",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "setSelectedIndex",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "setSelectedIndex",
  "type": "Method",
  "class": "spark.components.Grid",
  "description": "If <code>selectionMode</code> is <code>GridSelectionMode."},
{ "name": "setSelection",
  "type": "Method",
  "class": "mx.controls.TextInput",
  "description": "Selects the text in the range specified by the parameters."},
{ "name": "setSelectionState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Sets the SelectionState object of the current selection."},
{ "name": "setSelectionState",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "setService",
  "type": "Method",
  "class": "mx.rpc.remoting.Operation",
  "description": ""},
{ "name": "setService",
  "type": "Method",
  "class": "mx.rpc.http.Operation",
  "description": ""},
{ "name": "setShadow",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setShape",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setSize",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarTransform",
  "description": "Sets the width and height that the PolarTransform uses when calculating origin and radius."},
{ "name": "setStreetView",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "setStyle",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Sets a style property on this component instance."},
{ "name": "setStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "setStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Sets the style specified by the <code>styleProp</code> parameter to the value specified by the <code>newValue</code> parameter."},
{ "name": "setStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Sets the style specified by the <code>styleProp</code> parameter to the value specified by the <code>newValue</code> parameter."},
{ "name": "setStyle",
  "type": "Method",
  "class": "mx.styles.CSSStyleDeclaration",
  "description": "Sets a style property on this CSSStyleDeclaration."},
{ "name": "setStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Sets the value of the style specified by the <code>styleProp</code> parameter to the value specified by the <code>newValue</code> parameter."},
{ "name": "setStyle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.formats.TabStopFormat",
  "description": "Set the value of the style specified by the <code>styleProp</code> parameter which specifies the style name to <code>value</code>."},
{ "name": "setStyleDeclaration",
  "type": "Method",
  "class": "mx.styles.IStyleManager",
  "description": "Sets the CSSStyleDeclaration object that stores the rules for the specified CSS selector."},
{ "name": "setStyleDeclaration",
  "type": "Method",
  "class": "mx.styles.StyleManagerImpl",
  "description": "Sets the CSSStyleDeclaration object that stores the rules for the specified CSS selector."},
{ "name": "setStylesInternal",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "setText",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Sets the <code>text</code> property to the specified String."},
{ "name": "setTextFlow",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Sets a ITextFlow into this TextContainerManager replacing any existing ITextFlow and discarding the current text."},
{ "name": "setTextFormat",
  "type": "Method",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "setTextLength",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "setTextLength",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "setTextLengthOnly",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "setTextStyleChange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "setTilt",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "setTitle",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setTitle",
  "type": "Method",
  "class": "mx.managers.IBrowserManager",
  "description": ""},
{ "name": "setTo",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "setTo",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "setToggled",
  "type": "Method",
  "class": "mx.controls.treeClasses.DefaultDataDescriptor",
  "description": "Sets the value of the field or attribute in the data provider that identifies whether the node is toggled."},
{ "name": "setToken",
  "type": "Method",
  "class": "mx.rpc.events.AbstractEvent",
  "description": ""},
{ "name": "setTypicalCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Sets the preferred bounds height of the grid's typicalItem for the specified column."},
{ "name": "setTypicalCellHeight",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "setTypicalCellWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "Sets the preferred bounds width of the grid's typicalItem for the specified column."},
{ "name": "setTypicalCellWidth",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "setURL",
  "type": "Method",
  "class": "org.apache.royale.html.beads.models.WebBrowserModel",
  "description": "Sets the URL value without dispatching an event."},
{ "name": "setUpEffects",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controllers.WizardController",
  "description": ""},
{ "name": "setValue",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Sets a new value at the end of the property chain <code>path</code>."},
{ "name": "setValue",
  "type": "Property",
  "class": "org.apache.royale.reflection.VariableDefinition",
  "description": "provides a function that supports setting the value described by this definition For static member definitions it requires only the value argument For instance member definitions it requires the instance to be passed as a first argument, followed by the value"},
{ "name": "setValue",
  "type": "Method",
  "class": "spark.components.supportClasses.Range",
  "description": "Sets the backing store for the <code>value</code> property and dispatches a <code>valueCommit</code> event if the property changes."},
{ "name": "setValue",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": "A method that stores a value to be shared with other objects."},
{ "name": "setValue",
  "type": "Property",
  "class": "org.apache.royale.reflection.AccessorDefinition",
  "description": ""},
{ "name": "setValue",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "A method that stores a value to be shared with other objects."},
{ "name": "setValues",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "setVisible",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Same as visible setter but does not dispatch events"},
{ "name": "setVisible",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setVisible",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "setVisible",
  "type": "Method",
  "class": "google.maps.Polygon",
  "description": ""},
{ "name": "setWidth",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "Sets the width of the component without setting explicitWidth."},
{ "name": "setWidth",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "setWidth",
  "type": "Method",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": ""},
{ "name": "setWidth",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "setWidth",
  "type": "Method",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "setWidth",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "setWidthAndHeight",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "Sets the width and height of the component without setting explicitWidth or explicitHeight."},
{ "name": "setWidthAndHeight",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "setWidthAndHeight",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "setWidthAndHeight",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "setX",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "Sets the X value of the component without setting the 'left' style"},
{ "name": "setX",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "setX",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "setX",
  "type": "Method",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "setX",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "setXYAndHeight",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "setY",
  "type": "Method",
  "class": "org.apache.royale.core.ILayoutChild",
  "description": "Sets the Y value of the component without setting the 'top' style"},
{ "name": "setY",
  "type": "Method",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "setY",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "setY",
  "type": "Method",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "setY",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "setZIndex",
  "type": "Method",
  "class": "google.maps.Marker",
  "description": ""},
{ "name": "setZoom",
  "type": "Method",
  "class": "google.maps.Map",
  "description": ""},
{ "name": "setZoom",
  "type": "Method",
  "class": "google.maps.StreetViewPanorama",
  "description": ""},
{ "name": "setZoom",
  "type": "Method",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "setupCallbacks",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": ""},
{ "name": "setupCallbacks",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryUploader",
  "description": ""},
{ "name": "setupContentAreaLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": ""},
{ "name": "setupContentAreaLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "setupContentAreaLayout",
  "type": "Method",
  "class": "mx.containers.beads.PanelView",
  "description": ""},
{ "name": "setupContentAreaLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "setupContentAreaLayout",
  "type": "Method",
  "class": "spark.components.beads.PanelView",
  "description": ""},
{ "name": "setupConverter",
  "type": "Method",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "setupConverter",
  "type": "Method",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "setupLayout",
  "type": "Method",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": ""},
{ "name": "setupLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "setupLayout",
  "type": "Method",
  "class": "mx.containers.beads.PanelView",
  "description": ""},
{ "name": "setupLayout",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "setupLayout",
  "type": "Method",
  "class": "spark.components.beads.PanelView",
  "description": ""},
{ "name": "setupLoader",
  "type": "Method",
  "class": "org.apache.royale.core.IImageView",
  "description": ""},
{ "name": "setupLoader",
  "type": "Method",
  "class": "org.apache.royale.core.ImageViewBase",
  "description": ""},
{ "name": "setupStyle",
  "type": "Method",
  "class": "org.apache.royale.html.beads.SolidBackgroundBead",
  "description": ""},
{ "name": "setupWatchers",
  "type": "Method",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": ""},
{ "name": "shadow",
  "type": "Property",
  "class": "org.apache.royale.mdl.Card",
  "description": "A boolean flag to activate \"mdl-shadow--Xdp\" effect selector."},
{ "name": "shadow",
  "type": "Property",
  "class": "org.apache.royale.mdl.Table",
  "description": "A boolean flag to activate \"mdl-shadow--Xdp\" effect selector."},
{ "name": "shallowCopy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "shallowCopy",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Makes a copy of this FlowElement object, copying the content between two specified character positions."},
{ "name": "shallowCopy",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectUtil",
  "description": "Copy an object"},
{ "name": "shapeImageThreshold",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "shapeMargin",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "shapeOutside",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "shapesInvalid",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "shapesInvalid",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "sharedBooleanHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "sharedInheritEnumHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "sharedListMarkerFormatHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "sharedStringHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "sharedTextLayoutFormatHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "sharedUintHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "sharedUndefinedHandler",
  "type": "Property",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "sharpness",
  "type": "Property",
  "class": "mx.core.UITextFormat",
  "description": "Defines the sharpness setting for the UITextField class."},
{ "name": "shiftEnterLevel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Determines how shift-enter is treated."},
{ "name": "shiftEnterLevel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "shiftKey",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "shiftKey",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "shiftKey",
  "type": "Property",
  "class": "mx.events.SandboxMouseEvent",
  "description": "Indicates whether the <code>Shift</code> key was pressed."},
{ "name": "shiftKey",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "shiftKey",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Was shiftKey key depressed."},
{ "name": "shouldBeConnected",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Indicates whether this channel should be connected to its endpoint."},
{ "name": "show",
  "type": "Event",
  "description": "Dispatched when the component has finished its construction and has all initialization properties set."},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.core.IMenu",
  "description": ""},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.html.Menu",
  "description": "Displays the menu at the given location which is an offset from the origin of the component supplied."},
{ "name": "show",
  "type": "Event",
  "description": "Dispatched when the component becomes visible."},
{ "name": "show",
  "type": "Method",
  "class": "mx.controls.Menu",
  "description": "Shows the Menu control."},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.html.beads.plugin.IModalDisplay",
  "description": ""},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.html.beads.plugin.ModalDisplay",
  "description": "Shows the host in a popup host"},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.html.Alert",
  "description": "This static method is a convenience function to quickly create and display an Alert."},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.html.Alert",
  "description": "Shows the Alert anchored to the given parent object which is usally a root component such as a UIView."},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.mdl.Toast",
  "description": "Show the snackbar"},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.mdl.Snackbar",
  "description": "Show the snackbar"},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.html.SimpleAlert",
  "description": "A convenience function to compose and display the alert."},
{ "name": "show",
  "type": "Event",
  "description": "Dispatched when the component becomes visible."},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": "This static method is a convenience function to quickly create and display an Snackbar."},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.jewel.Snackbar",
  "description": "Shows the Snackbar anchored to a root component such as body"},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.mdl.Dialog",
  "description": "Displays the dialog element."},
{ "name": "show",
  "type": "Method",
  "class": "mx.controls.Alert",
  "description": "Static method that pops up the Alert control."},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.jewel.Alert",
  "description": "This static method is a convenience function to quickly create and display an Alert."},
{ "name": "show",
  "type": "Method",
  "class": "org.apache.royale.jewel.Alert",
  "description": "Shows the Alert non modal anchored to the given parent object which is usally a root component such as a UIView or body if null"},
{ "name": "showAlert",
  "type": "Method",
  "class": "org.apache.royale.html.SimpleAlert",
  "description": "This function causes the SimpleAlert to appear."},
{ "name": "showAllDataTips",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies whether Flex shows all DataTip controls for the chart."},
{ "name": "showBusyCursor",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "If <code>true</code>, a busy cursor is displayed while a service is executing."},
{ "name": "showBusyCursor",
  "type": "Property",
  "class": "mx.rpc.remoting.Operation",
  "description": "Whether this operation should show the busy cursor while it is executing."},
{ "name": "showBusyCursor",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "If <code>true</code>, a busy cursor is displayed while a service is executing."},
{ "name": "showBusyCursor",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": ""},
{ "name": "showBusyCursor",
  "type": "Property",
  "class": "mx.rpc.mxml.IMXMLSupport",
  "description": "Indicates whether the RPC operation or HTTPService should show the busy cursor while it is executing."},
{ "name": "showBusyCursor",
  "type": "Property",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "If <code>true</code>, a busy cursor is displayed while a service is executing."},
{ "name": "showBusyCursor",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "If <code>true</code>, a busy cursor is displayed while a service is executing."},
{ "name": "showCaret",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "Determines if the caret is visible."},
{ "name": "showCloseButton",
  "type": "Property",
  "class": "org.apache.royale.core.ITitleBarModel",
  "description": "<code>true</code> if a close button should also be in the title bar."},
{ "name": "showCloseButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.PanelModel",
  "description": "Indicates whether or not there is a Close button for the org."},
{ "name": "showCloseButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.TitleBar",
  "description": "Whether or not to show a org."},
{ "name": "showCloseButton",
  "type": "Property",
  "class": "org.apache.royale.html.Panel",
  "description": "Whether or not to show a Close button in the org."},
{ "name": "showCloseButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TitleBarModel",
  "description": "Whether or not to show a close button."},
{ "name": "showCloseButton",
  "type": "Property",
  "class": "mx.containers.TitleWindow",
  "description": ""},
{ "name": "showCloseButton",
  "type": "Property",
  "class": "org.apache.royale.html.TitleBar",
  "description": "Whether or not to show a org."},
{ "name": "showCloseButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TitleBarModel",
  "description": "Whether or not to show a close button."},
{ "name": "showCursor",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "showDataTips",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "showDataTips",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "A flag that indicates whether dataTips are displayed for text in the rows."},
{ "name": "showDataTips",
  "type": "Property",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Specifies whether Flex shows DataTip controls for the chart."},
{ "name": "showDataTips",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "Set to <code>true</code> to show data tips in the column."},
{ "name": "showDataTips",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>true</code> then a dataTip is displayed for all visible cells."},
{ "name": "showDataTips",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Indicates whether the datatips are shown in the column."},
{ "name": "showDelay",
  "type": "Property",
  "class": "mx.managers.ToolTipManager",
  "description": "The amount of time, in milliseconds, that Flex waits before displaying the ToolTip box once a user moves the mouse over a component that has a ToolTip."},
{ "name": "showDelay",
  "type": "Property",
  "class": "mx.managers.IToolTipManager2",
  "description": ""},
{ "name": "showDropFeedback",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Displays a drop indicator under the mouse pointer to indicate that a drag-and-drop operation is allowed."},
{ "name": "showDropIndicator",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Sizes, positions and parents the drop indicator based on the specified drop location."},
{ "name": "showEffect",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Played when the component becomes visible."},
{ "name": "showEffect",
  "type": "Property",
  "class": "mx.managers.ToolTipManager",
  "description": "The effect that plays when a ToolTip is shown, or <code>null</code> if the ToolTip should appear with no effect."},
{ "name": "showEffect",
  "type": "Property",
  "class": "mx.managers.IToolTipManager2",
  "description": ""},
{ "name": "showFeedback",
  "type": "Method",
  "class": "mx.managers.DragManager",
  "description": "Sets the feedback indicator for the drag and drop operation."},
{ "name": "showLabelVertically",
  "type": "Property",
  "class": "mx.charts.ColumnChart",
  "description": "Determines whether or not the data labels can be shown vertically."},
{ "name": "showMenu",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": ""},
{ "name": "showMenu",
  "type": "Method",
  "class": "mx.controls.beads.controllers.MenuBarMouseController",
  "description": "track menus for testing"},
{ "name": "showModal",
  "type": "Method",
  "class": "org.apache.royale.mdl.Dialog",
  "description": "Displays the dialog element and makes it the top-most modal dialog."},
{ "name": "showModal",
  "type": "Method",
  "class": "org.apache.royale.jewel.Alert",
  "description": "Shows the Alert modal anchored to the given parent object which is usally a root component such as a UIView or body if null"},
{ "name": "showMouseCursor",
  "type": "Property",
  "class": "mx.managers.SystemManagerGlobals",
  "description": ""},
{ "name": "showNextButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "show/hide wizard navigator next button in the wizard for this page"},
{ "name": "showNextButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": "show/hide wizard navigator next button in the wizard"},
{ "name": "showNextButtonChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "showPage",
  "type": "Method",
  "class": "org.apache.royale.jewel.Wizard",
  "description": "Update currentStep by name finding the appropiate step"},
{ "name": "showPreviousButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "show/hide wizard navigator previous button in the wizard for this page"},
{ "name": "showPreviousButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": "show/hide wizard navigator previous button in the wizard"},
{ "name": "showPreviousButtonChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "showRoot",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": "A Boolean flag that specifies whether to display the data provider's root node."},
{ "name": "showRoot",
  "type": "Property",
  "class": "mx.controls.Tree",
  "description": "Sets the visibility of the root item."},
{ "name": "showRoot",
  "type": "Property",
  "class": "mx.controls.beads.models.MenuBarModel",
  "description": "showRoot"},
{ "name": "showRoot",
  "type": "Property",
  "class": "mx.controls.MenuBar",
  "description": "A Boolean flag that specifies whether to display the data provider's root node."},
{ "name": "showRoot",
  "type": "Property",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "A Boolean flag that specifies whether to display the data provider's root node."},
{ "name": "showRoot",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "showTextField",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "showTextField",
  "type": "Property",
  "class": "mx.controls.ColorPicker",
  "description": "Specifies whether to show the text box that displays the color label or hexadecimal color value."},
{ "name": "showToday",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "If <code>true</code>, specifies that today is highlighted in the DateChooser control."},
{ "name": "showToday",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "If <code>true</code>, specifies that today is highlighted in the DateChooser control."},
{ "name": "showView",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.StackedViewManagerView",
  "description": ""},
{ "name": "showViewByIndex",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.TabbedViewManagerView",
  "description": ""},
{ "name": "showViewByIndex",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.StackedViewManagerView",
  "description": ""},
{ "name": "showsCaret",
  "type": "Property",
  "class": "spark.components.gridClasses.IGridItemRenderer",
  "description": "Contains <code>true</code> if the item renderer's cell is indicated by the caret."},
{ "name": "showsCaret",
  "type": "Property",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "<p>The Grid's <code>updateDisplayList()</code> method sets this property before calling <code>preprare()</code></p>."},
{ "name": "shrink",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalFlexLayout",
  "description": "Sets the amount an item may shrink in proportion to other items."},
{ "name": "shrink",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlexLayout",
  "description": "Sets the amount an item may shrink in proportion to other items."},
{ "name": "sineIn",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "sineInOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "sineOut",
  "type": "Method",
  "class": "org.apache.royale.createjs.tween.Ease",
  "description": ""},
{ "name": "singleColor",
  "type": "Property",
  "class": "org.apache.royale.mdl.Spinner",
  "description": "Make Spinner in a single color"},
{ "name": "size",
  "type": "Property",
  "class": "mx.net.FileReference",
  "description": ""},
{ "name": "size",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "size",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "size",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": "Activate \"size-XX\" size class selector."},
{ "name": "size",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "size",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": "Although the icons in the font can be scaled to any size, in accordance with material design icons guidelines, As recommended by Google be use css like this ."},
{ "name": "size",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.SizeControl",
  "description": "A size selector."},
{ "name": "size",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileModel",
  "description": ""},
{ "name": "sizeChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.core.ImageViewBase",
  "description": ""},
{ "name": "sizeChangedHandler",
  "type": "Method",
  "class": "org.apache.royale.svg.beads.ImageView",
  "description": ""},
{ "name": "sizeViewsToFitContentArea",
  "type": "Method",
  "class": "org.apache.royale.mobile.beads.ViewManagerViewBase",
  "description": ""},
{ "name": "sizes",
  "type": "Property",
  "class": "spark.layouts.supportClasses.Block",
  "description": ""},
{ "name": "sizesSum",
  "type": "Property",
  "class": "spark.layouts.supportClasses.Block",
  "description": ""},
{ "name": "skin",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableComponent",
  "description": "The instance of the skin class for this component instance."},
{ "name": "skinClass",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableComponent",
  "description": "Specifies whether the UIComponent object receives <code>doubleClick</code> events."},
{ "name": "skipStyles",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": ""},
{ "name": "sliderTrack",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SliderView",
  "description": "a visual indicator that show a part of the track as no \"filled\""},
{ "name": "sliderTrackFill",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SliderView",
  "description": "A visual indicator that shows a part of the track \"filled\""},
{ "name": "sliderView",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.SliderMouseController",
  "description": "the view attached to the slider"},
{ "name": "snackbar",
  "type": "Property",
  "class": "org.apache.royale.mdl.Toast",
  "description": ""},
{ "name": "snackbarData",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.IToastModel",
  "description": "Configuration object for MDL MaterialSnackbar."},
{ "name": "snackbarData",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.ToastModel",
  "description": ""},
{ "name": "snackbarData",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SnackbarModel",
  "description": ""},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.jewel.NumericStepper",
  "description": "The modulus for the value."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.jewel.Slider",
  "description": "The modulus of the Slider value."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.html.Slider",
  "description": "The modulus of the Slider value."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.core.IRangeModel",
  "description": "The interval that the value is rounded to when the user is drag selecting the value or entering an arbitrary value."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModel",
  "description": "The modulus value for the range."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.jewel.Spinner",
  "description": "The modulus for the value."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.html.NumericStepper",
  "description": "The modulus for the value."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": "The modulus value for the range."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SliderRangeModel",
  "description": "The modulus value for the range."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "spark.components.supportClasses.Range",
  "description": "The snapInterval property controls the valid values of the <code>value</code> property."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SliderRangeModel",
  "description": "The modulus value for the range."},
{ "name": "snapInterval",
  "type": "Property",
  "class": "org.apache.royale.html.Spinner",
  "description": "The modulus for the value."},
{ "name": "socketTimeOutTimer",
  "type": "Property",
  "class": "org.apache.royale.test.listeners.CIListener",
  "description": ""},
{ "name": "softKeyboardActivatingHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes an softKeyboardActivating event"},
{ "name": "softKeyboardActivatingHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Processes the <code>SOFT_KEYBOARD_ACTIVATING</code> event when the client manages events."},
{ "name": "softKeyboardActivatingHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>SoftKeyboardEvent."},
{ "name": "softKeyboardActivatingHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "softKeyboardEffectCachedHeight",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "The original pop-up height to restore to when the soft keyboard is deactivated."},
{ "name": "softKeyboardEffectExplicitHeightFlag",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Flag when explicitHeight is set when the soft keyboard effect is active."},
{ "name": "softKeyboardEffectExplicitWidthFlag",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Flag when explicitWidth is set when the soft keyboard effect is active."},
{ "name": "softKeyboardEffectMarginBottom",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": ""},
{ "name": "softKeyboardEffectMarginTop",
  "type": "Property",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": ""},
{ "name": "somethingelse",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": ""},
{ "name": "somethingelse",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": ""},
{ "name": "somethingelse",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": ""},
{ "name": "sort",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": ""},
{ "name": "sort",
  "type": "Method",
  "class": "mx.collections.ISort",
  "description": "Apply the current sort to the specified array (not a copy)."},
{ "name": "sort",
  "type": "Property",
  "class": "mx.collections.ICollectionView",
  "description": "The ISort that will be applied to the ICollectionView."},
{ "name": "sort",
  "type": "Property",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "sort",
  "type": "Method",
  "class": "org.apache.royale.collections.ISort",
  "description": "Apply the current sort to the specified array (not a copy)."},
{ "name": "sort",
  "type": "Method",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "sort",
  "type": "Method",
  "class": "mx.collections.Sort",
  "description": ""},
{ "name": "sort",
  "type": "Property",
  "class": "org.apache.royale.collections.IArrayListView",
  "description": "The ISort that will be applied to the ICollectionView."},
{ "name": "sort",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "sort",
  "type": "Method",
  "class": "org.apache.royale.collections.CompareUtils",
  "description": "Sort an <code>IArrayListView</code> collection"},
{ "name": "sort",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": "Not Supported in Tree."},
{ "name": "sort",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "sortByColumns",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Sort the DataGrid by one or more columns, and refresh the display."},
{ "name": "sortChange",
  "type": "Event",
  "description": "Dispatched after the sort has been applied to the data provider's collection."},
{ "name": "sortChanging",
  "type": "Event",
  "description": "Dispatched before the sort has been applied to the data provider's collection."},
{ "name": "sortCompareFunction",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "A callback function that gets called when sorting the data in the column."},
{ "name": "sortCompareFunction",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The function that compares two elements during a sort of on the data elements of this column."},
{ "name": "sortCompareType",
  "type": "Property",
  "class": "mx.collections.ISortField",
  "description": "Specifies what compare type will be used for the sortField."},
{ "name": "sortCompareType",
  "type": "Property",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "sortCompareType",
  "type": "Property",
  "class": "org.apache.royale.collections.ISortField",
  "description": "Specifies what compare type will be used for the sortField."},
{ "name": "sortCompareType",
  "type": "Property",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "sortCompareType",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The sortCompareType defines the valid constant values for the <code>sortCompareType</code> property of the <code>SortField</code> and <code>GridColumn</code>."},
{ "name": "sortDescending",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "If <code>true</code>, this column is sorted in descending order."},
{ "name": "sortExpertMode",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "By default, the <code>sortExpertMode</code> property is set to <code>false</code>, which means you click in the header area of a column to sort the rows of the AdvancedDataGrid control by that column."},
{ "name": "sortField",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "Returns a SortField that can be used to sort a collection by this column's <code>dataField</code>."},
{ "name": "sortOn",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": ""},
{ "name": "sortOnXField",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Requests the columns be sorted from left to right before rendering."},
{ "name": "sortOnXField",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Requests the line datapoints be sorted from left to right before rendering."},
{ "name": "sortOnXField",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "Requests the line datapoints be sorted from left to right before rendering."},
{ "name": "sortable",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "Set to <code>true</code> to indicate that the user can click on the header of this column to sort the data provider."},
{ "name": "sortable",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "If <code>true</code>, and if the grid's data provider is an ICollectionView, and if the associated grid's <code>sortableColumns</code> property is <code>true</code>, then this column supports interactive sorting."},
{ "name": "sortableColumns",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": "Specifies whether the user can interactively sort columns."},
{ "name": "sortableColumns",
  "type": "Property",
  "class": "mx.controls.AdvancedDataGrid",
  "description": "A flag that indicates whether the user can sort the data provider items by clicking on a column header cell."},
{ "name": "source",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "Specifies the object containing the property to validate."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactImageChip",
  "description": "Source for displayed image"},
{ "name": "source",
  "type": "Property",
  "class": "spark.primitives.BitmapImage",
  "description": "The source used for the bitmap fill."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": "The source object that dispatches an event when the property changes"},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.svg.IChainableFilter",
  "description": "This method sets the source of this filter which can be a result from a previous chain element."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": ""},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.InsertInlineGraphicOperation",
  "description": ""},
{ "name": "source",
  "type": "Property",
  "class": "mx.events.PropertyChangeEvent",
  "description": ""},
{ "name": "source",
  "type": "Property",
  "class": "spark.components.Image",
  "description": ""},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.HierarchicalData",
  "description": "The source collection."},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.ArrayList",
  "description": "The source array for this ArrayList."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": "The string or array of strings that describe the chain of properties to access to get to the source property's value."},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.ArrayCollection",
  "description": "The source of data in the ArrayCollection."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "The array of raw data needing conversion."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "The array of raw data needing conversion."},
{ "name": "source",
  "type": "Property",
  "class": "mx.messaging.messages.RemotingMessage",
  "description": "This property is provided for backwards compatibility."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "source",
  "type": "Property",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "Lets you specify a source value on the client; not supported for destinations that use the JavaAdapter."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": "The source object who's property has the value we want."},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.XMLListCollection",
  "description": "The underlying XMLList for this collection."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.MoveChildrenOperation",
  "description": "Specifies the parent of the item(s) to move."},
{ "name": "source",
  "type": "Property",
  "class": "mx.charts.LegendItem",
  "description": "Contains a reference to the data series that the LegendItem was generated from if you bind the <code>dataProvider</code> property of the parent Legend control to a chart control."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.events.ValueChangeEvent",
  "description": "The object that owns the property."},
{ "name": "source",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Refers to the control that the ProgressBar is measuring the progress of."},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.IHierarchicalCollectionView",
  "description": "The source data of the IHierarchicalCollectionView."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.GroupingCollection",
  "description": "The source collection containing the flat data to be grouped."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.binding.ChainBinding",
  "description": "The source chain of property names"},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.collections.HierarchicalData",
  "description": "The source collection."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ModifyInlineGraphicOperation",
  "description": ""},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": "The array of raw data needing conversion."},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.GroupingCollection2",
  "description": "The source collection containing the flat data to be grouped."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": "The source object that dispatches an event when the property changes"},
{ "name": "source",
  "type": "Property",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.binding.PropertyWatcher",
  "description": "The object who's property we are watching."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.RemotingMessage",
  "description": "This property is provided for backwards compatibility."},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.XMLListAdapter",
  "description": "The source XMLList for this XMLListAdapter."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.net.SimpleRemoteObject",
  "description": "source is a deprecated property."},
{ "name": "source",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "Sets the source for the graphic."},
{ "name": "source",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionView",
  "description": ""},
{ "name": "sourceID",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": "The ID of the object holding the ArrayList, usually a model."},
{ "name": "sourceID",
  "type": "Property",
  "class": "org.apache.royale.core.IBinding",
  "description": "If not null, the id of the mxml tag who's property is being watched for changes."},
{ "name": "sourceID",
  "type": "Property",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": ""},
{ "name": "sourceID",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": ""},
{ "name": "sourceIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.MoveChildrenOperation",
  "description": "Specifies the number of children to move."},
{ "name": "sourcePropertyName",
  "type": "Property",
  "class": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": "If not null, the name of a property on the mxml document that is being watched for changes."},
{ "name": "sourcePropertyName",
  "type": "Property",
  "class": "org.apache.royale.core.IBinding",
  "description": "If not null, the name of a property on the mxml document that is being watched for changes."},
{ "name": "sourcePropertyName",
  "type": "Property",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": ""},
{ "name": "sourcePropertyName",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": ""},
{ "name": "sourceState",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@private"},
{ "name": "spaceAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "spaceAfter",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The amount of space to leave after the line."},
{ "name": "spaceBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "spaceBefore",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The amount of space to leave before the line."},
{ "name": "spacingLimitProp",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "span",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": ""},
{ "name": "span",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Colgroup",
  "description": "The column span"},
{ "name": "span",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Col",
  "description": "The column span"},
{ "name": "spanFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "The character format."},
{ "name": "spanFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.utils.NumberLineUserData",
  "description": ""},
{ "name": "spanTextReplacementRegex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.BaseTextLayoutExporter",
  "description": "Gets the regex that specifies characters in span text to be replaced with XML elements."},
{ "name": "speakAs",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "specialKey",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "specifiedWidth",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "specifiedWidth",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "spherical",
  "type": "Method",
  "class": "google.maps.geometry.spherical",
  "description": ""},
{ "name": "spherical",
  "type": "Class",
  "description": ""},
{ "name": "spherical",
  "type": "Property",
  "class": "google.maps.geometry",
  "description": ""},
{ "name": "spinner",
  "type": "Property",
  "class": "org.apache.royale.html.beads.NumericStepperView",
  "description": ""},
{ "name": "splitAndTrim",
  "type": "Method",
  "class": "org.apache.royale.utils.StringTrimmer",
  "description": "Removes all whitespace characters from the beginning and end of each element in an Array, where the Array is stored as a String."},
{ "name": "splitAndTrim",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": "Removes all whitespace characters from the beginning and end of each element in an Array, where the Array is stored as a String."},
{ "name": "splitAtIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowGroupElement",
  "description": ""},
{ "name": "splitAtIndex",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowGroupElement",
  "description": "Splits this object at the position specified by the <code>childIndex</code> parameter."},
{ "name": "splitAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "splitAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Splits this FlowElement object at the position specified by the <code>relativePosition</code> parameter, which is a relative position in the text for this element."},
{ "name": "splitAtPosition",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "splitElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Splits the target element at the location specified, creating a new element after the current one."},
{ "name": "splitElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ParaEdit",
  "description": ""},
{ "name": "splitElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.ModelEdit",
  "description": ""},
{ "name": "splitElement",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "@copy IEditManager#splitElement()"},
{ "name": "splitParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Splits the paragraph at the current position, creating a new paragraph after the current one."},
{ "name": "splitParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "splitTextElement",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "spread",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "The spread component of the drop shadow."},
{ "name": "spread",
  "type": "Property",
  "class": "org.apache.royale.svg.SpreadFilterElement",
  "description": "The spread value, can be between 0 and 255."},
{ "name": "src",
  "type": "Property",
  "class": "org.apache.royale.core.ImageBase",
  "description": "The location of the bitmap, usually a URL."},
{ "name": "src",
  "type": "Property",
  "class": "org.apache.royale.html.ImageButton",
  "description": "Sets the image for the button."},
{ "name": "src",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "src",
  "type": "Property",
  "class": "org.apache.royale.jewel.ImageButton",
  "description": "Sets the image for the button."},
{ "name": "src",
  "type": "Property",
  "class": "org.apache.royale.core.supportClasses.StyledImageBase",
  "description": "The location of the bitmap, usually a URL."},
{ "name": "src",
  "type": "Property",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "src",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Img",
  "description": "The img src"},
{ "name": "stack",
  "type": "Method",
  "class": "mx.charts.chartClasses.IStackable",
  "description": "Stacks the series."},
{ "name": "stack",
  "type": "Method",
  "class": "mx.charts.series.BarSeries",
  "description": "Stacks the series."},
{ "name": "stack",
  "type": "Method",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "stack",
  "type": "Method",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Updates the series data, and uses the values of the series data it is stacking on top of so it can stack correctly."},
{ "name": "stack",
  "type": "Method",
  "class": "mx.charts.series.BarSet",
  "description": "Updates the series data, and uses the values of the series data it is stacking on top of so it can stack correctly."},
{ "name": "stack",
  "type": "Method",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "stackAll",
  "type": "Method",
  "class": "mx.charts.chartClasses.IStackable2",
  "description": "Stacks the series."},
{ "name": "stackAll",
  "type": "Method",
  "class": "mx.charts.series.BarSeries",
  "description": "Stacks the series."},
{ "name": "stackAll",
  "type": "Method",
  "class": "mx.charts.series.ColumnSeries",
  "description": ""},
{ "name": "stackAll",
  "type": "Method",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "stackTotals",
  "type": "Property",
  "class": "mx.charts.chartClasses.IStackable",
  "description": "The stack totals for the series."},
{ "name": "stackTotals",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "The stack totals for the series."},
{ "name": "stackTotals",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "The stack totals for the series."},
{ "name": "stackTotals",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "The stack totals for the series."},
{ "name": "stackTrace",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Failure",
  "description": "Convenience method."},
{ "name": "stackedMaximum",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "The maximum sum represented by this stacked series."},
{ "name": "stackedMinimum",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "The minimum sum represented by this stacked series."},
{ "name": "stacker",
  "type": "Property",
  "class": "mx.charts.chartClasses.IStackable",
  "description": "The StackedSeries associated with this series."},
{ "name": "stacker",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "The StackedSeries associated with this BarSeries."},
{ "name": "stacker",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "The StackedSeries associated with this BarSeries."},
{ "name": "stacker",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "The StackedSeries associated with this AreaSeries."},
{ "name": "stage",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "stageX",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "stageY",
  "type": "Property",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "start",
  "type": "Method",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "start",
  "type": "Method",
  "class": "org.apache.royale.core.IEffectTimer",
  "description": "Start getting update events."},
{ "name": "start",
  "type": "Method",
  "class": "org.apache.royale.utils.EffectTimer",
  "description": ""},
{ "name": "start",
  "type": "Method",
  "class": "mx.core.Application",
  "description": ""},
{ "name": "start",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesSegment",
  "description": "The index into the items array of the first item in this segment."},
{ "name": "start",
  "type": "Method",
  "class": "mx.managers.SystemManager",
  "description": "The JavaScript entry point."},
{ "name": "start",
  "type": "Method",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "start",
  "type": "Method",
  "class": "mx.printing.FlexPrintJob",
  "description": "Initializes the PrintJob object."},
{ "name": "start",
  "type": "Event",
  "description": "The start event is dispatched when a DragStart event happens."},
{ "name": "start",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": "The cumulative distance to the start of the item at index, including the gaps between items and the majorAxisOffset."},
{ "name": "start",
  "type": "Method",
  "class": "org.apache.royale.utils.Timer",
  "description": ""},
{ "name": "start",
  "type": "Method",
  "class": "org.apache.royale.core.SimpleApplication",
  "description": "The entry point."},
{ "name": "startAngle",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The start angle, in radians, of this wedge."},
{ "name": "startAngle",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.IWedgeItemRenderer",
  "description": "The angle (radians) at which the wedge begins."},
{ "name": "startAngle",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The starting angle (radians) of the wedge."},
{ "name": "startAngle",
  "type": "Property",
  "class": "mx.charts.series.PieSeries",
  "description": "Specifies the starting angle for the first slice of the PieChart control."},
{ "name": "startAngle",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The starting angle (radians) of the wedge."},
{ "name": "startController",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IComposer",
  "description": ""},
{ "name": "startController",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Starting controller for skipping ahead"},
{ "name": "startIndex",
  "type": "Property",
  "class": "spark.collections.SubListView",
  "description": "The index of the first list item included by this SubListView."},
{ "name": "startItemEditorSession",
  "type": "Method",
  "class": "spark.components.DataGrid",
  "description": "Starts an editor session on a selected cell in the grid."},
{ "name": "startItemEditorSession",
  "type": "Method",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "Start editing a cell for a specified row and column index."},
{ "name": "startLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": "Called when we are about to compose a line."},
{ "name": "startOfDocument",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange at the beginning of the document."},
{ "name": "startOfLine",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange at the beginning of the line."},
{ "name": "startOfParagraph",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.NavigationUtil",
  "description": "Sets the TextRange at the beginning of the paragraph."},
{ "name": "startTrackUpdates",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "If the item is an IEventDispatcher, watch it for updates."},
{ "name": "startTrackUpdates",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "This is called by addItemAt and when the source is initially assigned."},
{ "name": "startValue",
  "type": "Property",
  "class": "org.apache.royale.effects.Tween",
  "description": "Initial value of the animation."},
{ "name": "startWatchingForComplexFieldChanges",
  "type": "Method",
  "class": "mx.collections.ComplexFieldChangeWatcher",
  "description": ""},
{ "name": "startingThrottle",
  "type": "Event",
  "description": "Dispatched when the event first fires"},
{ "name": "startupTimer",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": ""},
{ "name": "startupTimer",
  "type": "Property",
  "class": "mx.core.Application",
  "description": ""},
{ "name": "startupTimer",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": ""},
{ "name": "state",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "History state object, only set for PopState events where it's a copy of the state object provided to pushState or replaceState."},
{ "name": "stateChangeComplete",
  "type": "Event",
  "description": "Indicates that the state change has completed."},
{ "name": "stateChangeComplete",
  "type": "Event",
  "description": "Indicates that the state change has completed."},
{ "name": "stateChangeComplete",
  "type": "Event",
  "description": "Indicates that the state change has completed."},
{ "name": "stateChangeComplete",
  "type": "Event",
  "description": "Indicates that the state change has completed."},
{ "name": "stateGroups",
  "type": "Property",
  "class": "org.apache.royale.states.State",
  "description": "Comma-delimited list of state groups of the state."},
{ "name": "states",
  "type": "Property",
  "class": "org.apache.royale.core.IStatesObject",
  "description": "The array of view states."},
{ "name": "states",
  "type": "Property",
  "class": "org.apache.royale.core.GroupBase",
  "description": "The array of view states."},
{ "name": "states",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The view states that are defined for this component."},
{ "name": "states",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": "The array of view states."},
{ "name": "states",
  "type": "Property",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": "The array of view states."},
{ "name": "states",
  "type": "Property",
  "class": "org.apache.royale.createjs.Container",
  "description": "The array of view states."},
{ "name": "staticAccessors",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The static accessors associated with a \"class\" kind TypeDefinition An array of AccessorDefinition instances"},
{ "name": "staticComposer",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.utils.FactoryHelper",
  "description": ""},
{ "name": "staticMethods",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The static methods associated with a \"class\" kind TypeDefinition An array of MethodDefinition instances"},
{ "name": "staticRoot",
  "type": "Property",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": ""},
{ "name": "staticVariables",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The static variables associated with a \"class\" kind TypeDefinition An array of VariableDefinition instances"},
{ "name": "status",
  "type": "Method",
  "class": "mx.messaging.MessageResponder",
  "description": "Called by the channel that created this MessageResponder when a fault response returns from the destination."},
{ "name": "status",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": "Text in the status area of the title bar."},
{ "name": "status",
  "type": "Property",
  "class": "org.apache.royale.utils.async.AsyncTask",
  "description": "One of: initialized, pending, complete, failed or mixed (for compound tasks)"},
{ "name": "status",
  "type": "Method",
  "class": "org.apache.royale.net.URLLoaderBase",
  "description": "Convenience function for status event to allow chaining."},
{ "name": "status",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.StatusChangeEvent",
  "description": "The FlowElement's new status."},
{ "name": "status",
  "type": "Property",
  "class": "mx.events.HTTPStatusEvent",
  "description": ""},
{ "name": "status",
  "type": "Method",
  "class": "org.apache.royale.net.URLStream",
  "description": "Convenience function for status event to allow chaining."},
{ "name": "status",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "status",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "The http status code from the server, if any."},
{ "name": "status",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "status",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "The current status of the image."},
{ "name": "statusCode",
  "type": "Property",
  "class": "mx.rpc.events.ResultEvent",
  "description": "If the source message was sent via HTTP, this property provides access to the HTTP response status code (if available), otherwise the value is 0."},
{ "name": "statusCode",
  "type": "Property",
  "class": "mx.rpc.events.FaultEvent",
  "description": "If the source message was sent via HTTP, this property provides access to the HTTP response status code (if available), otherwise the value is 0."},
{ "name": "statusHandler",
  "type": "Method",
  "class": "mx.messaging.MessageResponder",
  "description": "Subclasses must override this method to perform custom processing of the status and invoke the proper callbacks on the associated MessageAgent."},
{ "name": "statusText",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": "Status text contains more information about the HTTP request made."},
{ "name": "stdDeviation",
  "type": "Property",
  "class": "org.apache.royale.svg.BlurFilterElement",
  "description": "The Gaussian blur standard deviation"},
{ "name": "stdDeviation",
  "type": "Property",
  "class": "org.apache.royale.svg.DropShadowFilter",
  "description": "The Gaussian blur standard deviation for the drop shadow"},
{ "name": "step",
  "type": "Property",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "the step data of this page"},
{ "name": "stepLabel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "the label for this step"},
{ "name": "stepName",
  "type": "Property",
  "class": "org.apache.royale.jewel.events.WizardEvent",
  "description": ""},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.jewel.NumericStepper",
  "description": "The amount to increase or descrease the value."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.jewel.Slider",
  "description": "The amount to move the thumb when the track is selected."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.html.Slider",
  "description": "The amount to move the thumb when the track is selected."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.core.IRangeModel",
  "description": "The change in value by which the increment and decrement buttons and arrow keys will affect the curent value."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModel",
  "description": "The amount to adjust the value either up or down toward the edge of the range."},
{ "name": "stepSize",
  "type": "Property",
  "class": "mx.controls.NumericStepper",
  "description": "Non-zero unit of change between values."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.jewel.Spinner",
  "description": "The amount to increase or descrease the value."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.html.NumericStepper",
  "description": "The amount to increase or descrease the value."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": "The amount to adjust the value either up or down toward the edge of the range."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SliderRangeModel",
  "description": "The amount to adjust the value either up or down toward the edge of the range."},
{ "name": "stepSize",
  "type": "Property",
  "class": "spark.components.supportClasses.Range",
  "description": "The amount that the <code>value</code> property changes when the <code>changeValueByStep()</code> method is called."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SliderRangeModel",
  "description": "The amount to adjust the value either up or down toward the edge of the range."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.mdl.Slider",
  "description": "The amount to move the thumb when the track is selected."},
{ "name": "stepSize",
  "type": "Property",
  "class": "org.apache.royale.html.Spinner",
  "description": "The amount to increase or descrease the value."},
{ "name": "stepSize",
  "type": "Property",
  "class": "spark.components.NumericStepper",
  "description": "The amount that the <code>value</code> property changes when the <code>changeValueByStep()</code> method is called."},
{ "name": "stop",
  "type": "Method",
  "class": "org.apache.royale.effects.IEffect",
  "description": "Stops the tween, ending it without dispatching an event or calling the Tween's endFunction or <code>onTweenEnd()</code>."},
{ "name": "stop",
  "type": "Method",
  "class": "org.apache.royale.effects.Effect",
  "description": "Stops the tween, ending it without dispatching an event or calling the Tween's endFunction or <code>onTweenEnd()</code>."},
{ "name": "stop",
  "type": "Method",
  "class": "org.apache.royale.effects.Tween",
  "description": "Stops the tween, ending it without dispatching an event or calling the Tween's endFunction or <code>onTweenEnd()</code>."},
{ "name": "stop",
  "type": "Method",
  "class": "org.apache.royale.core.IEffectTimer",
  "description": "Stop getting update events."},
{ "name": "stop",
  "type": "Method",
  "class": "org.apache.royale.utils.EffectTimer",
  "description": ""},
{ "name": "stop",
  "type": "Method",
  "class": "org.apache.royale.effects.CompoundEffect",
  "description": ""},
{ "name": "stop",
  "type": "Method",
  "class": "org.apache.royale.utils.Timer",
  "description": ""},
{ "name": "stopHitTests",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEventManager",
  "description": "Stop hit testing altogether."},
{ "name": "stopImmediatePropagation",
  "type": "Method",
  "class": "org.apache.royale.events.Event",
  "description": "Google Closure doesn't seem to support stopImmediatePropagation, but actually the ElementWrapper fireListener override sends a BrowserEvent in most/all cases where folks need stopImmediatePropagation so we put this in here for compile time since it will exist in the BrowserEvent that does get sent around."},
{ "name": "stopImmediatePropagation",
  "type": "Method",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "stopImmediatePropagation",
  "type": "Method",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "stopImmediatePropagation",
  "type": "Method",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "stopImmediatePropagation",
  "type": "Method",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": ""},
{ "name": "stopPropagation",
  "type": "Method",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "stopPropagation",
  "type": "Method",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "stopPropagation",
  "type": "Method",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "stopPropagation",
  "type": "Method",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": ""},
{ "name": "stopTrackUpdates",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "If the item is an IEventDispatcher, stop watching it for updates."},
{ "name": "stopTrackUpdates",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "This is called by removeItemAt, removeAll, and before a new source is assigned."},
{ "name": "stopWatchingForComplexFieldChanges",
  "type": "Method",
  "class": "mx.collections.ComplexFieldChangeWatcher",
  "description": ""},
{ "name": "storageAvailable",
  "type": "Method",
  "class": "org.apache.royale.storage.LocalStorage",
  "description": "Returns true if the platform provides local storage."},
{ "name": "storageAvailable",
  "type": "Method",
  "class": "org.apache.royale.storage.IWebStorage",
  "description": "Returns true if the platform provides local storage."},
{ "name": "storageAvailable",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.LocalStorageProvider",
  "description": "Returns true if the platform provides local storage."},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.IBead",
  "description": "The host component for this bead."},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.NumericOnlyTextInputBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.TransformBeadBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.StyleInheritanceBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.StyleInheritanceWithObserverBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisableLoaderBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.cordova.Weinre",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.BeadViewBase",
  "description": "Get the strand for this bead  Override this for whatever else you need to do when being hooked to the Strand"},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.GroupView",
  "description": "Strand setter."},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.FormatBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.routing.HashChangeNotifierBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.LayoutBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.TextPrompt",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboBoxTextPrompt",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ContainerContentArea",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.DataItemRendererFactoryForSeriesArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDragImageBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.LayoutChangeNotifier",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": "An MXMLBeadView doesn't create its children until it is added to the strand."},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.utils.ViewSourceContextMenuOption",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalCategoryAxisBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.HDividedContainerMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.PasswordInputBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.NumericStepperView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactImageChip",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.ToastModel",
  "description": "Set strand for model"},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForHierarchicalData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.maps.google.models.MapModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ContainerView",
  "description": "Strand setter."},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AccordionCollapseBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.utils.MixinManager",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisabledAlphaBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.DataGridLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.NumericStepperView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ListItemPrimaryContent",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.UpgradeElement",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.MenuView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ColorModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDropIndicatorBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.PanelModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalCategoryAxisBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.SpinnerMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.containers.beads.BoxLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.ChartItemRendererFactory",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ListPresentationModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileUploader",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.ChartBaseLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalSliderLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ButtonBarReorderBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.GridCellBehaviour",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.TransformModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.net.RemoteObject",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.CloseButtonView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.Restrict",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.list.HorizontalListScroll",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TableNumericEnable",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisableBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.svg.Filter",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.controllers.ToggleSwitchMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.SliderMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.effects.beads.ParallelReverseBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualDataContainerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.BrowserResizeListener",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SliderView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.Viewport",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.containers.beads.CanvasLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.ImageViewBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.ResponsiveVisibility",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionICollectionViewModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.controls.beads.ToolTipBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.MenuModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.CascadingMenuModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SimpleAlertView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileBrowser",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ApplicationParametersBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ListItemSecondaryContent",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.NoLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.net.beads.CORSCredentialsBead",
  "description": "Listen for a pre and post send event to modify if user credentials are passed."},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.dropdownlist.DropDownListTextPrompt",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Badge",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.MdlColor",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalLinearAxisBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ColorSpectrumModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ListDrawingLayerBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalDisplay",
  "description": "Get the strand for this bead  Override this for whatever else you need to do when being hooked to the Strand"},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.Viewport",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleStatesImpl",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.DateFieldMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.routing.URLParameterBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.routing.EscapedFragmentBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.DataItemRendererFactoryForSeriesData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridColumnChangePropagator",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TextModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ControlBarMeasurementBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ImageModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.views.SliderView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TextItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ListItemSecondaryAction",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.svg.MaskBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ToggleButtonModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveTableRowForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.svg.DisableClipBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.PopUpMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.views.TabsView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DragDropListView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.VSliderMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.FormValidator",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayoutForOverflow",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.CollectionChangeUpdateForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.MdlTextColor",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForColumnData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridColumnForceChangePropagator",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.drawer.ResponsiveDrawer",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridDragDropBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateFieldView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.CenterElement",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IEEventAdapterBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DropMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.controls.beads.NumericStepperView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.EllipsisOverflow",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.ParentDocumentBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.ViewManagerViewBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.TabbedViewManagerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.binding.DataBindingBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.binding.ApplicationDataBinding",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.MaxNumberCharacters",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VirtualListVerticalLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.BinaryImageLoader",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.StatesWithTransitionsImpl",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllByNullItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DividedContainerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.effects.beads.SequencePlayBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ListPresentationModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ContactChip",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VerticalAlignChildren",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.svg.ClipBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.application.CleanValidationErrors",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.AlertController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.ItemRendererMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.containers.beads.ViewStackLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.DateChooserMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.ScrollingFlexibleChild",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataFieldProviderBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.MenuSelectionMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.collections.ArrayList",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.RangeStepperView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.controls.beads.models.SingleSelectionIListModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.textLayout.beads.DispatchTLFKeyboardEventBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TitleBarModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.dropdownlist.RequireSelection",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Badge",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ColorSpectrumMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.NonEmptyTextField",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridLinesBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SpinnerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.LayoutOnShow",
  "description": "*"},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.NoViewport",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveListItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.InnerHTML",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.DispatchChangeOnStartup",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SnackbarModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "spark.layouts.supportClasses.SparkLayoutBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.binding.ConstantBinding",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ItemRendererMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileLoaderAndUploader",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ButtonAutoRepeatController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.UpgradeChildren",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SolidBackgroundBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.BrowserScroller",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.DataItemRendererFactoryForICollectionViewAdvancedDataGridData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.VDividedContainerMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.RemoveAllItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ImageModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.EasyDataProviderChangeNotifier",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridDrawingLayerBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataGridPresentationModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.controls.listClasses.VirtualListVerticalLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.PasswordInput",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ApplicationParametersCaseInsensitiveBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.ChartView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AbsolutePositioningViewBeadBase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ComboBoxView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TreeGridView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.WebBrowserView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.datefield.DateFieldTextPrompt",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ListItemSubTitle",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.MXMLDragInitiator",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.KeepComboPopupWithinParentBounds",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.DataTipBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.plugin.ModalOverlay",
  "description": "Get the strand for this bead  Override this for whatever else you need to do when being hooked to the Strand"},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.CSSFontFaceBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalLinearAxisBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ListView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.effects.beads.ParallelPlayBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.DataGridPercentageLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.SizeControl",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxPopUpView",
  "description": "Get the strand for this bead"},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VerticalSliderLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateFieldView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboLowerCase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SolidBackgroundWithChangeListenerBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.views.DropDownListView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ThrottleBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.CascadingMenuSelectionMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.VDividedContainerGripper",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.controls.treeClasses.DataItemRendererFactoryForICollectionViewHierarchicalData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SnackbarView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.containers.beads.PanelView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.EventLoggingBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Disabled",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ListItemSecondaryInfo",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IncrementButtonView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DropDownListView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.WebBrowserModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.binding.ChainBinding",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ColorPickerPopUp",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveAllItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.datefield.DateFieldMaskedTextInput",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.CollectionChangeUpdateForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.RangeStepperMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SliderRangeModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ExpandableSearch",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DataProviderModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.express.beads.layouts.DataGridLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DisableChildrenBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TextItemRendererFactoryForStringVectorData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ClippingViewport",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.CascadingMenuFactory",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.LowerCase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ViewportModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DecrementButtonView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayoutForOverflow",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.AccordionItemRendererMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "spark.components.beads.SkinnableContainerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ImageButtonView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.DatePickerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridWithDrawingLayerLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateChooserView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.InfiniteVScroller",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.StringValidator",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SliderRangeModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridSingleSelectionMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HDividedContainerLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.SnackbarController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridColumnReorderView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.reflection.beads.JSONReviver",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.DeletableChip",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DispatchKeyboardEventBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.OverflowViewport",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.binding.SimpleBinding",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Disabled",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.CallLaterBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.controllers.SliderMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboUpperCase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.DataFieldProviderBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertMeasurementBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDragSourceBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SnackbarModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.PopUpModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.DeletableLinkChip",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.VDividedContainerLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.ListItemTextBody",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionDropTargetBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileLoader",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TabsItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.TreeSingleSelectionMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AccessibilityAltBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.graphics.beads.BlendBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.HideColorSpectrumThumbWhenEmpty",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.CrossBrowserFireListenerOverrideBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.PasswordInputRemovableBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ButtonBarView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.BrowserOrientation",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.HDividedContainerGripper",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.AlertController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorPickerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormHeadingView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DateFieldMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.collections.LazyCollection",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.UpperCase",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleLocalizedValuesImpl",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "spark.components.beads.PanelView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.GetScrollbarWidth",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.DeviceSizeBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridColumnView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.RemovableBasicLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SpinnerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "spark.components.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.NonNullTextModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.reflection.beads.ClassAliasBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.DateAndTimeFormatter",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorSpectrumView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.TextPromptBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TextModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DropDownListController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.SpinnerMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.TableView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.HSliderMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SensitiveSingleSelectionDropTargetBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.TreeGridLayout",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.RestrictTextField",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.MenuFactory",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DateChooserMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TitleBarModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.PanelWithControlBarView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SliderView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DataProviderModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TextPrompt",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.net.SimpleRemoteObject",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DynamicRemoveItemRendererForArrayListData",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SingleSelectionContainerBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.ItemRendererClassFactory",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.list.DataGroup",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "mx.containers.beads.TabNavigatorView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.datefield.SpanishDateComponentConfig",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.WizardController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridButtonBarViewForMovableColumns",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.StackedViewManagerView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.MultiLine",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.core.StyleChangeNotifier",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.NavigationActionNotifier",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.ToggleSwitchView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DispatchInputFinishedBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.UnselectableElementBead",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "spark.components.beads.DropDownListView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.PopUpView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.TextAlign",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.DividedContainerModel",
  "description": ""},
{ "name": "strand",
  "type": "Property",
  "class": "org.apache.royale.html.beads.TitleBarMeasurementBead",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "org.apache.royale.core.IContentViewHost",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "org.apache.royale.core.IContainer",
  "description": "Returns a object to access the immediate children of the strand."},
{ "name": "strandChildren",
  "type": "Property",
  "class": "org.apache.royale.core.GroupBase",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "org.apache.royale.core.ContainerBase",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "org.apache.royale.html.DividedContainer",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "mx.controls.MenuBar",
  "description": ""},
{ "name": "strandChildren",
  "type": "Property",
  "class": "org.apache.royale.createjs.Container",
  "description": ""},
{ "name": "stream",
  "type": "Property",
  "class": "org.apache.royale.storage.events.FileEvent",
  "description": "Contains the IDataOutput or IDataInput stream to use for streaming."},
{ "name": "stream",
  "type": "Property",
  "class": "org.apache.royale.storage.events.FileErrorEvent",
  "description": "Contains the IDataOutput or IDataInput stream on which the error occurred."},
{ "name": "stream",
  "type": "Property",
  "class": "org.apache.royale.net.URLBinaryLoader",
  "description": ""},
{ "name": "strech",
  "type": "Property",
  "class": "org.apache.royale.mdl.GridCell",
  "description": "A boolean flag to activate \"mdl-cell--stretch\" effect selector."},
{ "name": "strength",
  "type": "Property",
  "class": "mx.effects.Glow",
  "description": "The strength of the imprint or spread."},
{ "name": "strength",
  "type": "Property",
  "class": "org.apache.royale.svg.BevelFilter",
  "description": ""},
{ "name": "stretchX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The stretchY is the horizontal component of the stretch scale factor which is applied before any other transformation property."},
{ "name": "stretchX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "The stretchY is the horizontal component of the stretch scale factor which is applied before any other transformation property."},
{ "name": "stretchY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The stretchY is the vertical component of the stretch scale factor which is applied before any other transformation property."},
{ "name": "stretchY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "The stretchY is the vertical component of the stretch scale factor which is applied before any other transformation property."},
{ "name": "strikethroughOffset",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "strikethroughThickness",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "string",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "string()"},
{ "name": "string",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "stringCompare",
  "type": "Method",
  "class": "mx.collections.SortField",
  "description": "Pull the strings from the objects and call the implementation."},
{ "name": "stringCompare",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": "Pull the strings from the objects and call the implementation."},
{ "name": "stringCompare",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Compares two String values."},
{ "name": "stringCompare",
  "type": "Method",
  "class": "org.apache.royale.collections.SortField",
  "description": "Pull the strings from the objects and call the implementation."},
{ "name": "stringCompare",
  "type": "Method",
  "class": "org.apache.royale.collections.CompareUtils",
  "description": "Compares two String values."},
{ "name": "stringToDate",
  "type": "Method",
  "class": "mx.controls.DateField",
  "description": "Parses a String object that contains a date, and returns a Date object corresponding to the String."},
{ "name": "stringToObject",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Returns an object from a String."},
{ "name": "stringifyCollections",
  "type": "Method",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "utility method to create friendly output of collections, primarily for debugging purposes - used via toString(includeDetail=true)"},
{ "name": "strings",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": "The vector of strings."},
{ "name": "stripDiscretionaryHyphens",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.IPlainTextExporter",
  "description": "This property indicates whether discretionary hyphens in the text should be stripped during the export process."},
{ "name": "stripDiscretionaryHyphens",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.PlainTextExporter",
  "description": "@copy IPlainTextExporter#stripDiscretionaryHyphens"},
{ "name": "stripNaNs",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Removes any item from the provided cache whose <code>field</code> property is <code>NaN</code>."},
{ "name": "stripNaNs",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Removes any item from the provided cache whose <code>field</code> property is <code>NaN</code>."},
{ "name": "stripNaNs",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Removes any item from the provided cache whose <code>field</code> property is <code>NaN</code>."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.CreateJSBase",
  "description": "The color, weight, and alpha value of a stroke or outline."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.graphics.IGraphicShape",
  "description": "The stroke of the graphic."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.ILineSegmentItemRenderer",
  "description": "The characteristics of the line."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": "A solid color fill."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.IWedgeItemRenderer",
  "description": "The color of the outline of the wedge."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The outline of the box."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DataGridLinesBead",
  "description": "Describes the line style used to separate the rows and columns."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": "The outline of the box."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The outline of the box."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": ""},
{ "name": "stroke",
  "type": "Property",
  "class": "spark.primitives.Line",
  "description": "The stroke used by this element."},
{ "name": "stroke",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": "The stroke used by this element."},
{ "name": "stroke",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The stroke used by this element."},
{ "name": "stroke",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": ""},
{ "name": "strokeAlpha",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "strokeColor",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "strokeWeight",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "strokeWidth",
  "type": "Property",
  "class": "mx.controls.VRule",
  "description": ""},
{ "name": "style",
  "type": "Property",
  "class": "org.apache.royale.core.IStyleableObject",
  "description": "Get the object containing styles for this object."},
{ "name": "style",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "The object that contains \"styles\" and other associated name-value pairs."},
{ "name": "style",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": "The style object has no meaning for CreateJS, but is provided for compatiability and, perhaps in the future, as a way to apply \"styles\" to CreateJS objects."},
{ "name": "style",
  "type": "Property",
  "class": "org.apache.royale.core.styles.BorderStyles",
  "description": ""},
{ "name": "style",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "style",
  "type": "Property",
  "class": "org.apache.royale.text.engine.IFont",
  "description": ""},
{ "name": "styleChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": "Handles a single style value being updated, and applies this to the host object"},
{ "name": "styleChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": "Handles a single style value being updated, and applies this to the host object"},
{ "name": "styleChanged",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Detects changes to style properties."},
{ "name": "styleChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "styleChanged",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "styleChanged",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "styleFunction",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": ""},
{ "name": "styleFunction",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "A callback function that is called when rendering each cell."},
{ "name": "styleList",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "styleList",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "styleList",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "styleList",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "styleList",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "styleManager",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Returns the StyleManager instance used by this component."},
{ "name": "styleName",
  "type": "Property",
  "class": "org.apache.royale.html.beads.StyleInheritanceBead",
  "description": "The name of the style that is to be inherited."},
{ "name": "styleName",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": ""},
{ "name": "styleName",
  "type": "Property",
  "class": "mx.styles.ISimpleStyleClient",
  "description": "The source of this object's style values."},
{ "name": "styleName",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "The class style used by this component."},
{ "name": "styleName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Assigns an identifying class to the element, making it possible to set a style for the element by referencing the <code>styleName</code>."},
{ "name": "styleName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Assigns an identifying class to the element, making it possible to set a style for the element by referencing the <code>styleName</code>."},
{ "name": "styleName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Assigns an identifying class to the element, making it possible to set a style for the element by referencing the <code>styleName</code>."},
{ "name": "styleName",
  "type": "Property",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "styleName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyElementUserStyleOperation",
  "description": "The name of the style changed."},
{ "name": "styleName",
  "type": "Property",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "styleName",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "styleNameProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "styleParent",
  "type": "Property",
  "class": "mx.styles.IAdvancedStyleClient",
  "description": "The parent of this <code>IAdvancedStyleClient</code>."},
{ "name": "styleParent",
  "type": "Property",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "styleParent",
  "type": "Property",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "styles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "styles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the styles on this FlowElement."},
{ "name": "styles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Returns the styles on this TextLayoutFormat."},
{ "name": "styles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the styles on this ContainerController."},
{ "name": "stylesInitialized",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Flex calls the <code>stylesInitialized()</code> method when the styles for a component are first initialized."},
{ "name": "stylesInitialized",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Calls the <code>legendDataChanged()</code> method."},
{ "name": "stylesInitialized",
  "type": "Method",
  "class": "mx.styles.IAdvancedStyleClient",
  "description": "Flex calls the <code>stylesInitialized()</code> method when the styles for a component are first initialized."},
{ "name": "stylesInitialized",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": ""},
{ "name": "stylesInitialized",
  "type": "Method",
  "class": "spark.collections.Sort",
  "description": ""},
{ "name": "stylesRoot",
  "type": "Property",
  "class": "mx.styles.StyleManagerImpl",
  "description": ""},
{ "name": "subField",
  "type": "Property",
  "class": "mx.validators.ValidationResult",
  "description": "The name of the subfield that the result is associated with."},
{ "name": "subFields",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "An Array of Strings containing the names for the properties contained in the <code>value</code> Object passed to the <code>validate()</code> method."},
{ "name": "subManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The ISelectionManager object used to for cell selections nested within the TextFlow managed by this ISelectionManager."},
{ "name": "subManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "The ISelectionManager object used to for cell selections nested within the ITextFlow managed by this ISelectionManager."},
{ "name": "subMenus",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": "For autotesting, get the current set of submenus"},
{ "name": "subindex",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Badge",
  "description": "A boolean flag to activate \"subindex\" effect selector."},
{ "name": "submenuField",
  "type": "Property",
  "class": "org.apache.royale.core.IMenu",
  "description": ""},
{ "name": "submenuField",
  "type": "Property",
  "class": "org.apache.royale.html.Menu",
  "description": "The submenuField is not used by Menu (see CascadingMenu)."},
{ "name": "submenuField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.CascadingMenuModel",
  "description": "The field in the data object that identifies sub-menus."},
{ "name": "submenuField",
  "type": "Property",
  "class": "org.apache.royale.core.IMenuBarModel",
  "description": "The text displayed in the ComboBox."},
{ "name": "submenuField",
  "type": "Property",
  "class": "mx.controls.beads.models.MenuBarModel",
  "description": "The field in the data object that identifies sub-menus."},
{ "name": "submenuField",
  "type": "Property",
  "class": "org.apache.royale.html.MenuBar",
  "description": "The field in the data that holds the sub-menus."},
{ "name": "submenuField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.MenuBarModel",
  "description": "The field in the data object that identifies sub-menus."},
{ "name": "submenuField",
  "type": "Property",
  "class": "org.apache.royale.html.CascadingMenu",
  "description": "The name of the field to use in the data that indicates a sub-menu."},
{ "name": "subscribe",
  "type": "Method",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Subscribes to the remote destination."},
{ "name": "subscribed",
  "type": "Property",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Indicates whether the Consumer is currently subscribed."},
{ "name": "subscriptOffset",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "subscriptScale",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "substitute",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": "Substitutes \"{n}\" tokens within the specified string with the respective arguments passed in."},
{ "name": "substitute",
  "type": "Method",
  "class": "mx.utils.StringUtil",
  "description": "Substitutes \"{n}\" tokens within the specified string with the respective arguments passed in."},
{ "name": "substitute",
  "type": "Method",
  "class": "mx.utils.RPCStringUtil",
  "description": "Substitutes \"{n}\" tokens within the specified string with the respective arguments passed in."},
{ "name": "subtopic",
  "type": "Property",
  "class": "mx.messaging.Producer",
  "description": "Provides access to the subtopic for the remote destination that the MessageAgent uses."},
{ "name": "subtopic",
  "type": "Property",
  "class": "mx.messaging.Consumer",
  "description": "Provides access to the subtopic for the remote destination that the MessageAgent uses."},
{ "name": "subtract",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "successful",
  "type": "Property",
  "class": "org.apache.royale.test.runners.notification.Result",
  "description": "Indicates if the test run was successful or not."},
{ "name": "suffix",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "suffix",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.IListMarkerFormat",
  "description": "@copy ListMarkerFormat#suffix"},
{ "name": "suffix",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": "Controls the application of the suffix in the generated text in the ListItemElement."},
{ "name": "suffixProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "description": ""},
{ "name": "summaries",
  "type": "Property",
  "class": "mx.collections.GroupingField",
  "description": "Array of SummaryRow instances that define the group-level summaries."},
{ "name": "summaries",
  "type": "Property",
  "class": "mx.collections.GroupingCollection",
  "description": "Array of SummaryRow instances that define any root-level data summaries."},
{ "name": "summaries",
  "type": "Property",
  "class": "mx.collections.GroupingCollection2",
  "description": "Array of SummaryRow instances that define any root-level data summaries."},
{ "name": "summaryCalculationBegin",
  "type": "Method",
  "class": "mx.collections.ISummaryCalculator",
  "description": "Flex calls this method to start the computation of a summary value."},
{ "name": "summaryCalculationBegin",
  "type": "Method",
  "class": "mx.collections.DefaultSummaryCalculator",
  "description": ""},
{ "name": "summaryFunction",
  "type": "Property",
  "class": "mx.collections.SummaryField",
  "description": "Specifies a callback function to compute a custom data summary."},
{ "name": "summaryObjectFunction",
  "type": "Property",
  "class": "mx.collections.SummaryRow",
  "description": "Specifies a callback function that defines the summary object, which is an instance of the SummaryObject class."},
{ "name": "summaryOfSummaryCalculationBegin",
  "type": "Method",
  "class": "mx.collections.ISummaryCalculator",
  "description": "Flex calls this method to start calculation of summary out of summary values."},
{ "name": "summaryOfSummaryCalculationBegin",
  "type": "Method",
  "class": "mx.collections.DefaultSummaryCalculator",
  "description": ""},
{ "name": "summaryOperation",
  "type": "Property",
  "class": "mx.collections.SummaryField2",
  "description": "The summary performed on the children."},
{ "name": "summaryPlacement",
  "type": "Property",
  "class": "mx.collections.SummaryRow",
  "description": "Specifies where the summary row appears in the AdvancedDataGrid control."},
{ "name": "superManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The ISelectionManager object used to manage the parent TextFlow of this ISelectionManager (i."},
{ "name": "superManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "The ISelectionManager object used to manage the parent ITextFlow of this ISelectionManager (i."},
{ "name": "superscriptOffset",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "superscriptScale",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "supposedToLoseFocus",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": ""},
{ "name": "surfaceScale",
  "type": "Property",
  "class": "org.apache.royale.svg.DiffuseLightingFilterElement",
  "description": ""},
{ "name": "swapChildren",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "swapElements",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "swapElementsAt",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "swapLines",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ISimpleCompose",
  "description": ""},
{ "name": "swfContext",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": "The ISWFContext instance used to make FTE calls as needed."},
{ "name": "swfContext",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IComposer",
  "description": ""},
{ "name": "swfContext",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.BaseCompose",
  "description": ""},
{ "name": "swfContext",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "The ISWFContext instance to be used for calls that must be made in a specific SWF context  <p>Implementations of IFlowComposer should allow this property to be set so that users of the interface can create lines in a different SWF context than the one containing the implementation."},
{ "name": "swfContext",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Optional ISWFContext instance used to make FTE calls as needed in the proper swf context."},
{ "name": "swfContext",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "The ISWFContext instance used to make FTE calls as needed."},
{ "name": "swfContext",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "swfVersion",
  "type": "Property",
  "class": "mx.messaging.config.LoaderConfig",
  "description": "If the LoaderConfig has been initialized, this should represent the top-level MovieClip's swfVersion."},
{ "name": "synthType",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "Intended primarily for compiler-generated use only Low level class factory for synthetic types (native AS3 top-level classes that are final and do not have corresponding classes in javascript)."},
{ "name": "synthVector",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "Intended primarily for compiler-generated use only Adds Vector support via synthType Acts like a class Factory for Vector subclasses as synthTypes, which provides correct type-checking behaviour Uses cached lookups and 'plugin' style addition of synthTypes for each distinct requested Vector subclass type  no export (allow dead code elimination if never used):"},
{ "name": "systemEndian",
  "type": "Property",
  "class": "org.apache.royale.utils.Endian",
  "description": "Indicates the default endianness on the system."},
{ "name": "systemManager",
  "type": "Property",
  "class": "mx.core.IUIComponent",
  "description": "A reference to the SystemManager object for this component."},
{ "name": "systemManager",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Returns the SystemManager object used by this component."},
{ "name": "systemManager",
  "type": "Property",
  "class": "mx.managers.IFocusManagerContainer",
  "description": ""},
{ "name": "systemManager",
  "type": "Property",
  "class": "mx.core.Application",
  "description": ""},
{ "name": "systemManager",
  "type": "Property",
  "class": "spark.components.Application",
  "description": ""},
{ "name": "t",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboLowerCase",
  "description": ""},
{ "name": "t",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.LowerCase",
  "description": ""},
{ "name": "t",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboUpperCase",
  "description": ""},
{ "name": "t",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.UpperCase",
  "description": ""},
{ "name": "tabBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.TabbedViewManager",
  "description": "The TabBar (or null if not present)."},
{ "name": "tabBar",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.views.TabsView",
  "description": "The org."},
{ "name": "tabBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.TabbedViewManagerView",
  "description": ""},
{ "name": "tabBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The TabBar (or null if not present)."},
{ "name": "tabBar",
  "type": "Property",
  "class": "mx.containers.beads.TabNavigatorView",
  "description": "The org."},
{ "name": "tabChildren",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A convenience accessor for the <code>silent</code> property in this UIComponent's <code>accessibilityProperties</code> object."},
{ "name": "tabEnabled",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "tabFocusEnabled",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A flag that indicates whether this object can receive focus via the TAB key  <p>This is similar to the <code>tabEnabled</code> property used by the Flash Player."},
{ "name": "tabFocusEnabled",
  "type": "Property",
  "class": "mx.managers.IFocusManagerComponent",
  "description": "A flag that indicates whether pressing the Tab key eventually moves focus to this component."},
{ "name": "tabIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.ITabModel",
  "description": "The property on data which represents \"id\" of TabBarPanel  TabBarPanel requires unique id"},
{ "name": "tabIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.TabArrayModel",
  "description": ""},
{ "name": "tabIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.ITabItemRenderer",
  "description": "Provides name of the property which stores \"id\" for Tab"},
{ "name": "tabIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TabItemRendererBase",
  "description": ""},
{ "name": "tabIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TabBarButtonItemRendererBase",
  "description": "tabIdField."},
{ "name": "tabIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.TabArrayListModel",
  "description": ""},
{ "name": "tabIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.Tabs",
  "description": ""},
{ "name": "tabIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.TabBar",
  "description": ""},
{ "name": "tabIndex",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "tabIndex",
  "type": "Property",
  "class": "mx.managers.IFocusManagerComponent",
  "description": "If <code>tabFocusEnabled</code>, the order in which the component receives focus."},
{ "name": "tabIndex",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "tabSize",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "tabStops",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the tab stops associated with the paragraph."},
{ "name": "tabStops",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the tab stops associated with the paragraph."},
{ "name": "tabStops",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the tab stops associated with the paragraph."},
{ "name": "tabStops",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "tabStops",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "tabStopsProp",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "tabStopsProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "tabbar",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": ""},
{ "name": "table",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableFormattedElement",
  "description": ""},
{ "name": "table",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableFormattedElement",
  "description": "Returns a reference to the table."},
{ "name": "table",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellCoordinates",
  "description": ""},
{ "name": "table",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": "The DateChooserTable of days or years to display"},
{ "name": "table",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.CellRange",
  "description": "The TableElement of the selection."},
{ "name": "table",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "tableBlocks",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "tableBlocks",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns a vector of the table blocks."},
{ "name": "tableColumnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Width of table column specifies a default width for each column spanned by the current COL element."},
{ "name": "tableColumnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Width of table column specifies a default width for each column spanned by the current COL element."},
{ "name": "tableColumnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Width of table column specifies a default width for each column spanned by the current COL element."},
{ "name": "tableColumnWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableColSetter",
  "description": ""},
{ "name": "tableColumnWidthProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "tableLayout",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "tableWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Width of table element specifies the desired width of the entire table and is intended for visual user agents."},
{ "name": "tableWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Width of table element specifies the desired width of the entire table and is intended for visual user agents."},
{ "name": "tableWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Width of table element specifies the desired width of the entire table and is intended for visual user agents."},
{ "name": "tableWidthProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "tabletDenominator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The Y Number for \"tablet-col-X-Y\" effect selector."},
{ "name": "tabletDenominator",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "The Y Number for \"tablet-col-X-Y\" effect selector."},
{ "name": "tabletNumerator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The X Number for \"tablet-col-X-Y\" effect selector."},
{ "name": "tabletNumerator",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "The X Number for \"tablet-col-X-Y\" effect selector."},
{ "name": "tabletVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.ResponsiveVisibility",
  "description": "Makes the component to be visible or hidden in phone size Uses \"visible-tablet\" and \"hidden-tablet\" effect selectors."},
{ "name": "tabletVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "Makes the cell to be visible or hidden in phone size Uses \"visible-tablet\" and \"hidden-tablet\" effect selectors."},
{ "name": "tabletVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "Makes the cell to be visible or hidden in phone size Uses \"visible-tablet\" and \"hidden-tablet\" effect selectors."},
{ "name": "tabsIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.DynamicTabsAddItemRendererForArrayListData",
  "description": ""},
{ "name": "tabsIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TabsDataItemRendererFactoryForArrayListData",
  "description": ""},
{ "name": "tabsIdField",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.TabsItemRendererFactoryForArrayData",
  "description": ""},
{ "name": "tail",
  "type": "Property",
  "class": "spark.components.gridClasses.GridRowList",
  "description": "Node representing tail of the list."},
{ "name": "target",
  "type": "Property",
  "class": "mx.effects.IEffectInstance",
  "description": "The UIComponent object to which this effect is applied."},
{ "name": "target",
  "type": "Property",
  "class": "mx.effects.EffectInstance",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ILinkElement",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "mx.containers.beads.BoxLayout",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.effects.Move",
  "description": "The target as the String id of a widget in an MXML Document."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "The GroupBase container whose elements are measured, sized and positioned by this layout."},
{ "name": "target",
  "type": "Property",
  "class": "mx.containers.beads.CanvasLayout",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.storage.providers.IPermanentStorageProvider",
  "description": "The target dispatcher for events."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.effects.Fade",
  "description": "The target as the String id of a widget in an MXML Document."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.effects.Wipe",
  "description": "The target as the String id of a widget in an MXML Document."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.html.elements.A",
  "description": "the target attribute."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Effect",
  "description": "The name of the object upon which the effect is being made."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.effects.Resize",
  "description": "The target as the String id of a widget in an MXML Document."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.states.SetProperty",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.storage.providers.WebStorageProvider",
  "description": "The target dispatcher for events as files are read and written."},
{ "name": "target",
  "type": "Property",
  "class": "mx.containers.beads.ViewStackLayout",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.storage.providers.AndroidExternalStorageProvider",
  "description": "The target dispatcher for events as files are read and written."},
{ "name": "target",
  "type": "Property",
  "class": "spark.layouts.supportClasses.SparkLayoutBead",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyLinkOperation",
  "description": "The target of the link."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.effects.PlatformWiper",
  "description": "The object that will be clipped."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.states.SetEventHandler",
  "description": ""},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.storage.providers.AirStorageProvider",
  "description": "The target dispatcher for events as files are read and written."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "The element that actually triggered the event."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.LinkElement",
  "description": "The Target value associated with the LinkElement."},
{ "name": "target",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Form",
  "description": "The form target Acceptable values are _self _blank _parent _top or an iframe name"},
{ "name": "target",
  "type": "Property",
  "class": "spark.layouts.FormLayout",
  "description": "The GroupBase container whose elements are measured, sized and positioned by this layout."},
{ "name": "targetBeforeBubbling",
  "type": "Property",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "targetBeforeBubbling",
  "type": "Property",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "targetElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowElementOperation",
  "description": "Specifies the element this operation modifies."},
{ "name": "targetElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.SplitElementOperation",
  "description": "Specifies the element this operation modifies."},
{ "name": "targetSeries",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesEffectInstance",
  "description": "The series targeted by this instance."},
{ "name": "targetURI",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.MessageBody",
  "description": "The target URI."},
{ "name": "targetWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "targetWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private Amount of space used to break the line <p>The target width is the amount of space allowed for the line, including the space required for indents."},
{ "name": "targetWidthTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "targetWidthTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "tasks",
  "type": "Property",
  "class": "org.apache.royale.utils.async.CompoundAsyncTask",
  "description": ""},
{ "name": "tcm",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TCMTextFlowTextLineFactory",
  "description": ""},
{ "name": "tcyElement",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.PointFormat",
  "description": ""},
{ "name": "tcyOn",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyTCYOperation",
  "description": "Indicates whether the operation applies or removes TCY formatting."},
{ "name": "terminatorSpan",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "terminatorSpan",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ParagraphElement",
  "description": ""},
{ "name": "testFailure",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunListener",
  "description": "Called when an individual test has failed."},
{ "name": "testFinished",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunListener",
  "description": "Called when an individual test has finished, regardless of whether it has passed or failed."},
{ "name": "testIgnored",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunListener",
  "description": "Called when an individual test was ignored."},
{ "name": "testLineVisible",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "testLineVisible",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "testRunFinished",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunListener",
  "description": "Called when a test run has finished."},
{ "name": "testRunStarted",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunListener",
  "description": "Called when a test run has started."},
{ "name": "testStarted",
  "type": "Method",
  "class": "org.apache.royale.test.runners.notification.IRunListener",
  "description": "Called when an individual test has started."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemRenderer",
  "description": "The text of the item renderer"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.ITextItemRenderer",
  "description": "The text to be displayed in the item renderer."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": "The text of the navigation link"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.text.events.IMEEvent",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.TextButton",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.TextInput",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.MenuItemRenderer",
  "description": "The text of the menu item"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.ListItemRenderer",
  "description": "The text of the renderer"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.TextNodeContainerBase",
  "description": "The text of the element"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.TextArea",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.TextNode",
  "description": "The text of the heading"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.CSSCheckBox",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.Label",
  "description": "The text to display in the label."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowLeafElement",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.TableCell",
  "description": "The text of the td"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowLeafElement",
  "description": "The text associated with the FlowLeafElement: <p><ul> <li>The value for SpanElement subclass will be one character less than <code>textLength</code> if this is the last span in a ParagraphELement."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.RadioButton",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.Button",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.IconButton",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ISpanElement",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.SpanElement",
  "description": "Receives the String of text that this SpanElement object holds."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.InsertTextOperation",
  "description": "The text inserted by this operation."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": "The text of the tooltip"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ITextItemRenderer",
  "description": "The text to be displayed in the item renderer."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.StringItemRenderer",
  "description": "The text currently displayed by the itemRenderer instance."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.core.IComboBoxModel",
  "description": "The text displayed in the ComboBox."},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.beads.models.ComboBoxModel",
  "description": "The string to display in the org."},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.Label",
  "description": "The text to display in the label."},
{ "name": "text",
  "type": "Property",
  "class": "spark.components.RichEditableText",
  "description": "The text String displayed by this component."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ButtonBarButtonItemRenderer",
  "description": "The string version of the data associated with the instance of the itemRenderer."},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridItemRenderer",
  "description": "The text currently displayed by the itemRenderer instance."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.Badge",
  "description": "The current value of the Badge that appers inside the circle."},
{ "name": "text",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": "The text displayed by this text component."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.core.ITextModel",
  "description": "The text displayed in the control."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TextModel",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.core.IToggleButtonModel",
  "description": "The text displayed in the control."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ToggleButtonModel",
  "description": "The text string for the org."},
{ "name": "text",
  "type": "Property",
  "class": "spark.components.supportClasses.TextBase",
  "description": "The text to display in the label."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": "The title string for the org."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "The text to convert into ITextLine objects."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.createjs.Label",
  "description": "The string to display."},
{ "name": "text",
  "type": "Property",
  "class": "spark.components.RichText",
  "description": "This will create a TextFlow with a single paragraph with a single span with exactly the text specified."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextElement",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "mx.events.ErrorEvent",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.Label",
  "description": "The text to display in the label."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ComboBoxModel",
  "description": "The string to display in the org."},
{ "name": "text",
  "type": "Property",
  "class": "spark.core.IDisplayText",
  "description": "The text displayed by this text component."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.graphics.IText",
  "description": "The text to draw."},
{ "name": "text",
  "type": "Property",
  "class": "mx.core.IToolTip",
  "description": "The text that appears in the tooltip."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.CheckBox",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.beads.InnerHTML",
  "description": "The text of the heading"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.ChipBase",
  "description": "The text of the chip"},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.listClasses.ListItemRenderer",
  "description": "The text currently displayed by the itemRenderer instance."},
{ "name": "text",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Calls the <code>text()</code> method of each XML object in the XMLList and returns an XMLList containing the results."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.MenuBarItemRenderer",
  "description": "The label of the itemRenderer, if any."},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": "Contents of the text field."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.express.MXMLViewer",
  "description": "The text to display in the label."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.CascadingMenuItemRenderer",
  "description": "The label of the itemRenderer, if any."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.svg.Text",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.materialIcons.MaterialIcon",
  "description": "The text of the icon"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIcon",
  "description": "The text of the icon"},
{ "name": "text",
  "type": "Property",
  "class": "mx.core.ITextInput",
  "description": "Plain text that appears in the control."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.NavigationLinkItemRenderer",
  "description": "The text of the navigation link"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.bar.BarTitle",
  "description": "The text of the element"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": "The text label for the CheckBox."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.ListItemRenderer",
  "description": "The text of the renderer"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.ImageAndTextButton",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "mx.events.TextEvent",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemRenderer",
  "description": "The text of the item renderer"},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.Alert",
  "description": "The message to display in the Alert body."},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.TextInput",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": "The text to display in the label."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.MenuItemRenderer",
  "description": "The label of the itemRenderer, if any."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.createjs.CheckBox",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.mdl.Switch",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "mx.charts.AxisLabel",
  "description": "The text label that is actually rendered along the axis."},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Plain text that appears in the control."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.TreeXMLItemRenderer",
  "description": "The text currently displayed by the itemRenderer instance."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.createjs.TextButton",
  "description": "The button's label"},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ComboBoxModel",
  "description": "The string to display in the org."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.NonNullTextModel",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TextModel",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.StringItemRenderer",
  "description": "The text currently displayed by the itemRenderer instance."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.text.events.TextEvent",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "spark.components.TextInput",
  "description": "The text displayed by this text component."},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": "The text label for the CheckBox."},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": ""},
{ "name": "text",
  "type": "Property",
  "class": "org.apache.royale.icons.ToggleFontIcon",
  "description": "The text of the icon"},
{ "name": "text",
  "type": "Property",
  "class": "mx.controls.menuClasses.MenuBarItemRenderer",
  "description": "The text currently displayed by the itemRenderer instance."},
{ "name": "textAlign",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "textAlign",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Alignment of lines in the paragraph relative to the container."},
{ "name": "textAlign",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Alignment of lines in the paragraph relative to the container."},
{ "name": "textAlign",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Alignment of lines in the paragraph relative to the container."},
{ "name": "textAlign",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textAlign",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "Indicates whether the column sort is in ascending order, <code>false</code>, or descending order, <code>true</code>."},
{ "name": "textAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.itemRenderers.ListItemRenderer",
  "description": ""},
{ "name": "textAlignLast",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Alignment of the last (or only) line in the paragraph relative to the container in justified text."},
{ "name": "textAlignLast",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Alignment of the last (or only) line in the paragraph relative to the container in justified text."},
{ "name": "textAlignLast",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Alignment of the last (or only) line in the paragraph relative to the container in justified text."},
{ "name": "textAlignLast",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "textAlignLast",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textAlignLastProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "textAlignProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "textAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Alpha (transparency) value for the text."},
{ "name": "textAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Alpha (transparency) value for the text."},
{ "name": "textAlpha",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Alpha (transparency) value for the text."},
{ "name": "textAlphaProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "textBlock",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "textBlock",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "textBlock",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "textBlockBeginIndex",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "textBlockBeginIndex",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "textBlockBeginIndex",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "textBlockStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "textBlockStart",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": ""},
{ "name": "textButton",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ButtonBarButtonItemRenderer",
  "description": ""},
{ "name": "textChange",
  "type": "Event",
  "description": "Dispatched when the text label is changed."},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.TextInput",
  "description": "dispatch change event in response to a textChange event"},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.html.TextArea",
  "description": "dispatch change event in response to a textChange event"},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": "dispatch change event in response to a textChange event"},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": ""},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "mx.controls.TextInput",
  "description": "dispatch change event in response to a textChange event"},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.views.FormHeadingView",
  "description": ""},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "mx.controls.TextArea",
  "description": "dispatch change event in response to a textChange event"},
{ "name": "textChangeHandler",
  "type": "Method",
  "class": "spark.components.TextInput",
  "description": "dispatch change event in response to a textChange event"},
{ "name": "textColor",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.CreateJSBase",
  "description": "The color and alpha for text."},
{ "name": "textColor",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.IMdlTextColor",
  "description": "Color name provided by color palette Text color  https://material."},
{ "name": "textColor",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.MdlTextColor",
  "description": ""},
{ "name": "textColorWeight",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.IMdlTextColor",
  "description": "Color weight provided by color palette Text color weight  https://material."},
{ "name": "textColorWeight",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.MdlTextColor",
  "description": ""},
{ "name": "textCombineUpright",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textContainerManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TMContainerController",
  "description": ""},
{ "name": "textDecoration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Decoration on text."},
{ "name": "textDecoration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Decoration on text."},
{ "name": "textDecoration",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Decoration on text."},
{ "name": "textDecoration",
  "type": "Property",
  "class": "mx.core.ScrollControlBase",
  "description": ""},
{ "name": "textDecoration",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "textDecoration",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "textDecoration",
  "type": "Property",
  "class": "spark.components.supportClasses.ButtonBase",
  "description": ""},
{ "name": "textDecoration",
  "type": "Property",
  "class": "spark.components.SkinnableContainer",
  "description": ""},
{ "name": "textDecoration",
  "type": "Property",
  "class": "spark.components.supportClasses.SkinnableTextBase",
  "description": ""},
{ "name": "textDecoration",
  "type": "Property",
  "class": "spark.components.Label",
  "description": ""},
{ "name": "textDecoration",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textDecorationColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textDecorationLine",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textDecorationProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "textDecorationStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textEmphasis",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textEmphasisColor",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textEmphasisPosition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textEmphasisStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textFactory",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextEngine",
  "description": ""},
{ "name": "textFactory",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "textFactory",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.ITLFFactory",
  "description": ""},
{ "name": "textFactory",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "textFactory",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StandardTLFFactory",
  "description": ""},
{ "name": "textFill",
  "type": "Property",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "textFill",
  "type": "Property",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "The color of the text."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.TextScrap",
  "description": "Gets the TextFlow that is currently in the TextScrap."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": "The TextFlow object to which this flow composer is attached."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The TextFlow object managed by this selection manager."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "The ITextFlow object to which this operation is applied."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ISimpleCompose",
  "description": ""},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": ""},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.DamageEvent",
  "description": "TextFlow owning the damage"},
{ "name": "textFlow",
  "type": "Property",
  "class": "spark.components.RichText",
  "description": "The TextFlow representing the rich text displayed by this component."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the TextFlow object whose content appears in the container."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextRange",
  "description": "Returns the TextFlow associated with the selection."},
{ "name": "textFlow",
  "type": "Property",
  "class": "spark.components.TextArea",
  "description": "The TextFlow representing the rich text displayed by this component."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": "The ITextFlow object managed by this selection manager."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ElementRange",
  "description": "The TextFlow object that contains the range."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.CompositeOperation",
  "description": ""},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.CompositionCompleteEvent",
  "description": "ITextFlow on which composition has been completed."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "The ITextFlow object managed by this selection manager."},
{ "name": "textFlow",
  "type": "Property",
  "class": "org.apache.royale.textLayout.events.UpdateCompleteEvent",
  "description": "TextFlow which has been updated."},
{ "name": "textFlowFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "The text flow format."},
{ "name": "textFlowFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.INumberLineFactory",
  "description": ""},
{ "name": "textFlowInitialFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "Specifies the initial format TextLayoutFormat configuration for a text flow (TextFlow object)."},
{ "name": "textFlowInitialFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "textHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "textHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The height of the text line, which is equal to <code>ascent</code> plus <code>descent</code>."},
{ "name": "textHeight",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "textHeight",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "textHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": ""},
{ "name": "textHeight",
  "type": "Property",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "textHeight",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "textHeightTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "textHeightTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "textIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "A Number that specifies, in pixels, the amount to indent the first line of the paragraph."},
{ "name": "textIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: A Number that specifies, in pixels, the amount to indent the first line of the paragraph."},
{ "name": "textIndent",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "A Number that specifies, in pixels, the amount to indent the first line of the paragraph."},
{ "name": "textIndent",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textIndentProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "textInput",
  "type": "Property",
  "class": "org.apache.royale.html.beads.DateFieldView",
  "description": "The TextInput that displays the date selected."},
{ "name": "textInput",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": "The internal TextInput subcomponent that displays the current selection."},
{ "name": "textInput",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateFieldView",
  "description": "The TextInput that displays the date selected."},
{ "name": "textInput",
  "type": "Event",
  "description": "Dispatched when the user types, deletes, or pastes text into the control."},
{ "name": "textInputField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IComboBoxView",
  "description": "The sub-component used for the input area of the ComboBox."},
{ "name": "textInputField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ComboBoxView",
  "description": "The TextInput component of the ComboBox."},
{ "name": "textInputField",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorPickerView",
  "description": "The TextInput component of the ComboBox."},
{ "name": "textInputHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IInteractionEventHandler",
  "description": "Processes a TextEvent."},
{ "name": "textInputHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "@copy org."},
{ "name": "textInputHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Processes the <code>TextEvent."},
{ "name": "textInputHandler",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "textInputStyleFilters",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": "The set of styles to pass from the ComboBase to the text input."},
{ "name": "textJustifier",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "textJustifier",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "textJustify",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies options for justifying text."},
{ "name": "textJustify",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies options for justifying text."},
{ "name": "textJustify",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies options for justifying text."},
{ "name": "textJustifyProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "textLabel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "textLabelAlign",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": ""},
{ "name": "textLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "textLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Returns the total length of text owned by this FlowElement object and its children."},
{ "name": "textLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "textLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableLeafElement",
  "description": ""},
{ "name": "textLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "textLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The number of characters to the next line, including trailing spaces."},
{ "name": "textLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Returns the total number of characters in the container."},
{ "name": "textLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Gets the total atom length of this flow element in the text flow."},
{ "name": "textLine",
  "type": "Property",
  "class": "org.apache.royale.text.engine.TextLineMirrorRegion",
  "description": ""},
{ "name": "textLineCreationResult",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "textLineCreationResult",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "textLineExists",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "textLineExists",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "Indicates whether the <code>org."},
{ "name": "textLineRecyclerEnabled",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextLineRecycler",
  "description": "Controls if the TLF recycler enabled."},
{ "name": "textLines",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.TextFieldBase",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.html.TextNodeContainerBase",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.html.Label",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.mdl.TableCell",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.jewel.IconButton",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "mx.controls.Label",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.icons.FontIconBase",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.jewel.Label",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.MaterialIconBase",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.mdl.supportClasses.ChipBase",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.mdl.TableColumn",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.bar.BarTitle",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": ""},
{ "name": "textNode",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": "The parent container or component for this component."},
{ "name": "textNode",
  "type": "Property",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": ""},
{ "name": "textOrientation",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textOverflow",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textRendering",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textRotation",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Determines the number of degrees to rotate this text."},
{ "name": "textRotation",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Determines the number of degrees to rotate this text."},
{ "name": "textRotation",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Determines the number of degrees to rotate this text."},
{ "name": "textRotation",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "textRotation",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "textRotationProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "textScrap",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.PasteOperation",
  "description": "textScrap the text being pasted"},
{ "name": "textSearch",
  "type": "Method",
  "class": "google.maps.places.PlacesService",
  "description": ""},
{ "name": "textShadow",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textStroke",
  "type": "Property",
  "class": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "textStroke",
  "type": "Property",
  "class": "org.apache.royale.svg.CompoundGraphic",
  "description": "The stroke color of the text."},
{ "name": "textTransform",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textUnderlinePosition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "textWidth",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "textWidth",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "textWidth",
  "type": "Property",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "textWidth",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "textinput",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.combobox.IComboBoxView",
  "description": "The sub-component used for the input area of the ComboBox."},
{ "name": "textinput",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.ComboBoxView",
  "description": "The TextInput component of the ComboBox."},
{ "name": "tfoot",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.TableView",
  "description": ""},
{ "name": "thead",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.TableView",
  "description": ""},
{ "name": "theme",
  "type": "Property",
  "class": "org.apache.royale.ace.ACEEditor",
  "description": ""},
{ "name": "then",
  "type": "Method",
  "class": "org.apache.royale.promises.interfaces.IThenable",
  "description": ""},
{ "name": "then",
  "type": "Method",
  "class": "Promise",
  "description": ""},
{ "name": "thickness",
  "type": "Property",
  "class": "mx.core.UITextFormat",
  "description": "Defines the thickness setting for the UITextField class."},
{ "name": "thickness",
  "type": "Property",
  "class": "mx.charts.renderers.CrossItemRenderer",
  "description": "The thickness of the cross rendered, in pixels."},
{ "name": "thousandsSeparator",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.NumberFormatter",
  "description": "Character to use to separate thousands groups."},
{ "name": "thousandsSeparator",
  "type": "Property",
  "class": "mx.validators.NumberValidator",
  "description": "The character used to separate thousands in the whole part of the number."},
{ "name": "thousandsSeparatorFrom",
  "type": "Property",
  "class": "mx.formatters.NumberFormatter",
  "description": "Character to use as the thousands separator in the input String."},
{ "name": "thousandsSeparatorFrom",
  "type": "Property",
  "class": "mx.formatters.NumberBase",
  "description": "Character to use as the thousands separator in the input String."},
{ "name": "thousandsSeparatorFrom",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Character to use as the thousands separator in the input String."},
{ "name": "thousandsSeparatorTo",
  "type": "Property",
  "class": "mx.formatters.NumberFormatter",
  "description": "Character to use as the thousands separator in the output String."},
{ "name": "thousandsSeparatorTo",
  "type": "Property",
  "class": "mx.formatters.NumberBase",
  "description": "Character to use as the thousands separator in the output String."},
{ "name": "thousandsSeparatorTo",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "Character to use as the thousands separator in the output string."},
{ "name": "threeLine",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.ListItemRenderer",
  "description": "Activate \"mdl-list__item--three-line\" class selector, for use in list item."},
{ "name": "threshold",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": "The movement in x and or y that means a drag should start"},
{ "name": "throwError",
  "type": "Method",
  "class": "org.apache.royale.debugging",
  "description": "assert throws an error if the condition is not met."},
{ "name": "throwOnError",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextImporter",
  "description": "The <code>throwOnError</code> property controls how the importer handles errors."},
{ "name": "throwOnError",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextExporter",
  "description": "The throwOnError property controls how the exporter handles errors."},
{ "name": "throwOnError",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ConverterBase",
  "description": "@copy ITextImporter#throwOnError()"},
{ "name": "thumb",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.slider.ISliderView",
  "description": "The component used for the thumb button of the org."},
{ "name": "thumb",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SliderView",
  "description": "The thumb component."},
{ "name": "thumb",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IScrollBarView",
  "description": "The thumb in a ScrollBar"},
{ "name": "thumb",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ISliderView",
  "description": "The component used for the thumb button of the org."},
{ "name": "thumb",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.views.SliderView",
  "description": "The thumb component."},
{ "name": "thumb",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorSpectrumView",
  "description": "The thumb component."},
{ "name": "thumb",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SliderView",
  "description": "The thumb component."},
{ "name": "thumbIndex",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "The zero-based index of the thumb whose position has changed."},
{ "name": "tickFill",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": "The stroke used to draw each tick label."},
{ "name": "tickStroke",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IAxisBead",
  "description": "The stroked used for the tick marks"},
{ "name": "tickStroke",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": "The stroke used to draw each tick mark."},
{ "name": "ticks",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": "An Array of tick marks for this axis."},
{ "name": "ticks",
  "type": "Property",
  "class": "mx.charts.chartClasses.AxisLabelSet",
  "description": "An array of values from 0 to 1 representing where to place tick marks along the axis."},
{ "name": "ticks",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxisRenderer",
  "description": "Contains an array that specifies where Flex draws the tick marks along the axis."},
{ "name": "ticks",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "ticksBetweenLabels",
  "type": "Property",
  "class": "mx.charts.CategoryAxis",
  "description": "Specifies the location of major tick marks on the axis, relative to the category labels."},
{ "name": "tileHeight",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Height of each tile cell, in pixels."},
{ "name": "tileHeight",
  "type": "Property",
  "class": "mx.containers.Tile",
  "description": "Height of each tile cell, in pixels."},
{ "name": "tileWidth",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Width of each tile cell, in pixels."},
{ "name": "tileWidth",
  "type": "Property",
  "class": "mx.containers.Tile",
  "description": "Width of each tile cell, in pixels."},
{ "name": "timeOfDay",
  "type": "Property",
  "class": "mx.formatters.DateBase",
  "description": "Time of day names."},
{ "name": "timeToLive",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "The time to live value of a message indicates how long the message should be considered valid and deliverable."},
{ "name": "timeToLive",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "The time to live value of a message indicates how long the message should be considered valid and deliverable."},
{ "name": "timeToLive",
  "type": "Property",
  "class": "mx.messaging.messages.IMessage",
  "description": "The time to live value of a message indicates how long the message should be considered valid and deliverable."},
{ "name": "timeToLive",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "The time to live value of a message indicates how long the message should be considered valid and deliverable."},
{ "name": "timeout",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.IToastModel",
  "description": "Describe in milliseconds how long Snackbar/Toast will not disappear"},
{ "name": "timeout",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.ToastModel",
  "description": ""},
{ "name": "timeout",
  "type": "Property",
  "class": "org.apache.royale.mdl.Toast",
  "description": "Timout in milliseconds for hiding Snackbar"},
{ "name": "timeout",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "A timeout value for server response."},
{ "name": "timeout",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "timer",
  "type": "Property",
  "class": "mx.collections.GroupingCollection2",
  "description": "The timer which is associated with an asynchronous refresh operation."},
{ "name": "timerRunning",
  "type": "Property",
  "class": "mx.messaging.channels.PollingChannel",
  "description": ""},
{ "name": "timestamp",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "Provides access to the time stamp for the message."},
{ "name": "timestamp",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Provides access to the time stamp for the message."},
{ "name": "timestamp",
  "type": "Property",
  "class": "mx.messaging.messages.IMessage",
  "description": "Provides access to the time stamp for the message."},
{ "name": "timestamp",
  "type": "Property",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": "Provides access to the time stamp for the message."},
{ "name": "timestamp",
  "type": "Property",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Contains the timestamp of the most recent message this Consumer has received."},
{ "name": "timestamp",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "A date object for when the event was fired."},
{ "name": "timezoneHourMinuteSeperator",
  "type": "Property",
  "class": "mx.formatters.DateBase",
  "description": "Timezone hour/minute seperator."},
{ "name": "timezoneName",
  "type": "Property",
  "class": "mx.formatters.DateBase",
  "description": "Timezone name."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.jewel.Wizard",
  "description": "The string to display in the org."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.mobile.TitleView",
  "description": ""},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.core.ITitleBarModel",
  "description": "The title of the TitleBar."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.PanelModel",
  "description": "The title string for the org."},
{ "name": "title",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "The text for the title displayed along the axis."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": "A title that can be used in the NavigationBar."},
{ "name": "title",
  "type": "Property",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": ""},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.jewel.TitleBar",
  "description": "The title string to display."},
{ "name": "title",
  "type": "Property",
  "class": "mx.containers.Panel",
  "description": "Title or caption displayed in the title bar."},
{ "name": "title",
  "type": "Property",
  "class": "spark.components.Panel",
  "description": "Title or caption displayed in the title bar."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "The title of the Alert."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The title for the Alert."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The title for the Alert."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.html.Alert",
  "description": "The tile of the Alert."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.html.Panel",
  "description": "The string to display in the org."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.TitleBarModel",
  "description": "The string title for the org."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The title of the view."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.routing.HashChangeNotifierBeadWithTitle",
  "description": ""},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.html.TitleBar",
  "description": "The title string to display."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.TitleBarModel",
  "description": "The string title for the org."},
{ "name": "title",
  "type": "Property",
  "class": "org.apache.royale.jewel.Alert",
  "description": "The title of the Alert."},
{ "name": "titleBar",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "titleBar",
  "type": "Property",
  "class": "org.apache.royale.html.beads.PanelView",
  "description": "The org."},
{ "name": "titleBar",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "titleBar",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "titleBarClickHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.AccordionItemRendererMouseController",
  "description": ""},
{ "name": "titleLabel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": "The org."},
{ "name": "titleRenderer",
  "type": "Property",
  "class": "mx.charts.AxisRenderer",
  "description": "A reference to the factory used to render the axis title."},
{ "name": "titleRollHandler",
  "type": "Method",
  "class": "org.apache.royale.html.beads.controllers.AccordionItemRendererMouseController",
  "description": ""},
{ "name": "tlRadius",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": "The corner radius of the top left corner of the rounded rectangle that is casting the shadow."},
{ "name": "tlfFactory",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "tlfFactory",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TextFlow",
  "description": ""},
{ "name": "tlfProp",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "to",
  "type": "Method",
  "class": "org.apache.royale.textLayout.utils.Twips",
  "description": "Convert Pixels to Twips (truncated)."},
{ "name": "toArray",
  "type": "Method",
  "class": "mx.collections.IList",
  "description": "Returns an Array that is populated in the same order as the IList implementation."},
{ "name": "toArray",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Return an Array that is populated in the same order as the IList implementation."},
{ "name": "toArray",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": ""},
{ "name": "toArray",
  "type": "Method",
  "class": "org.apache.royale.collections.IArrayList",
  "description": "Returns a copy of the source array."},
{ "name": "toArray",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayList",
  "description": "Returns a copy of the source array."},
{ "name": "toArray",
  "type": "Method",
  "class": "mx.utils.ArrayUtil",
  "description": "Ensures that an Object can be used as an Array."},
{ "name": "toArray",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "toArray",
  "type": "Method",
  "class": "spark.collections.SubListView",
  "description": ""},
{ "name": "toArray",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Return an Array that is populated in the same order as the IList implementation."},
{ "name": "toArray",
  "type": "Method",
  "class": "org.apache.royale.utils.ObjectUtil",
  "description": "Convert the object to an array."},
{ "name": "toBinary",
  "type": "Method",
  "class": "mx.utils.RPCUIDUtil",
  "description": "Converts a UID formatted String to a ByteArray."},
{ "name": "toBinary",
  "type": "Method",
  "class": "mx.utils.UIDUtil",
  "description": "Converts a UID formatted String to a ByteArray."},
{ "name": "toBinary",
  "type": "Method",
  "class": "org.apache.royale.utils.UIDUtil",
  "description": "Converts a UID formatted String to a BinaryData."},
{ "name": "toByteArray",
  "type": "Method",
  "class": "org.apache.royale.net.utils.RPCUIDUtil",
  "description": "Converts a UID formatted String to a ByteArray."},
{ "name": "toByteArray",
  "type": "Method",
  "class": "mx.utils.Base64JSWrapper",
  "description": ""},
{ "name": "toColor",
  "type": "Method",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "Converts a value describing a color to a uint"},
{ "name": "toColorWithAlpha",
  "type": "Method",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "Converts a value describing a color and alpha in a uint"},
{ "name": "toHex",
  "type": "Method",
  "class": "org.apache.royale.utils.IntUtil",
  "description": "Outputs the hex value of a int, allowing the developer to specify the endinaness in the process."},
{ "name": "toNumber",
  "type": "Method",
  "class": "org.apache.royale.utils.CSSUtils",
  "description": "Converts a String to number."},
{ "name": "toSpan",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "toState",
  "type": "Property",
  "class": "org.apache.royale.states.Transition",
  "description": "The state or states to which the view is going."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.events.EventDispatcher",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "Used primarily for debugging purposes, this provides a string representation of this TypeDefinition"},
{ "name": "toString",
  "type": "Method",
  "class": "QName",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.logging.errors.InvalidCategoryError",
  "description": "Returns the messge as a String."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.events.ChannelEvent",
  "description": "Returns a string representation of the ChannelEvent."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "This method will return a string representation of the message."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Returns a string representation of the message."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.mobile.TitleView",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.graphics.IPathCommand",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.utils.Base64Encoder",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.events.MessageEvent",
  "description": "Returns a string representation of the MessageEvent."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.rpc.events.ResultEvent",
  "description": "Returns a string representation of the ResultEvent."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.errors.MessagingError",
  "description": "Returns the string \"[MessagingError]\" by default, and includes the message property if defined."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Returns a string representation of the Matrix."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Pretty-prints the specified Object into a String."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.rpc.events.FaultEvent",
  "description": "Returns a string representation of the FaultEvent."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.rpc.Fault",
  "description": "Returns the string representation of a Fault object."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.messages.IMessage",
  "description": "This method will return a string representation of the message."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.messages.AbstractMessage",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.errors.ArgumentError",
  "description": "Returns the string \"[ArgumentError]\" by default, and includes the message property if defined."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.reflection.MetaDataDefinition",
  "description": "Used primarily for debugging purposes, this provides a string representation of this MetaDataDefinition"},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "create a string representation of the binary data"},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.graphics.QuadraticCurve",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.collections.ArrayList",
  "description": "Pretty prints the contents of this ArrayList to a string and returns it."},
{ "name": "toString",
  "type": "Method",
  "class": "google.maps.LatLng",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.collections.ListCollectionView",
  "description": "Prints the contents of this view to a string and returns it."},
{ "name": "toString",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.rpc.remoting.RemoteObject",
  "description": "Represents an instance of RemoteObject as a String, describing important properties such as the destination id and the set of channels assigned."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.resources.Locale",
  "description": "Returns the locale String that was used to construct this Locale instance."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Returns a string representation of the XMLList by calling the <code>toString()</code> method for each XML object in the XMLList."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.rpc.events.InvokeEvent",
  "description": "Returns a string representation of the InvokeEvent."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.utils.JXON",
  "description": "Returns a simplified string of the contents of the xml."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.reflection.MethodDefinition",
  "description": "A string representation of this method definition"},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.reflection.ParameterDefinition",
  "description": "A string representation of this parameter definition"},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.reflection.VariableDefinition",
  "description": "A string representation of this variable definition"},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.reflection.CompilationData",
  "description": "A string representation of this CompilationData definition"},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.logging.errors.InvalidFilterError",
  "description": "Returns the messge as a String."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.events.MessageAckEvent",
  "description": "Returns a string representation of the MessageAckEvent."},
{ "name": "toString",
  "type": "Method",
  "class": "Namespace",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LinearLayoutVector",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.reflection.AccessorDefinition",
  "description": "A string representation of this accessor definition"},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.ChannelSet",
  "description": "Returns a String containing the ids of the Channels in the ChannelSet."},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.channels.URLVariables",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.graphics.CubicCurve",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.events.ChannelFaultEvent",
  "description": "Returns a string representation of the ChannelFaultEvent."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.graphics.LineTo",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Pretty prints the contents of this XMLListAdapter to a string and returns it."},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.graphics.MoveTo",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.promises.enums.PromiseState",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "org.apache.royale.reflection.MetaDataArgDefinition",
  "description": ""},
{ "name": "toString",
  "type": "Method",
  "class": "mx.messaging.events.MessageFaultEvent",
  "description": "Returns a string representation of the MessageFaultEvent."},
{ "name": "toUrlValue",
  "type": "Method",
  "class": "google.maps.LatLng",
  "description": ""},
{ "name": "toUrlValue",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "toXMLString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyHandler",
  "description": ""},
{ "name": "toXMLString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.Property",
  "description": "Convert the value of this property to a string appropriate for XML export"},
{ "name": "toXMLString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.UintPropertyHandler",
  "description": ""},
{ "name": "toXMLString",
  "type": "Method",
  "class": "mx.collections.XMLListCollection",
  "description": "Returns a string representation of the XMLList by calling the <code>toXMLString()</code> method for each XML object in the XMLList."},
{ "name": "toXMLString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.SpacingLimitPropertyHandler",
  "description": ""},
{ "name": "toXMLString",
  "type": "Method",
  "class": "org.apache.royale.utils.JXON",
  "description": "Returns the object structure as a string including tags and attributes."},
{ "name": "toXMLString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.CounterPropHandler",
  "description": ""},
{ "name": "toXMLString",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.CounterContentHandler",
  "description": ""},
{ "name": "toggle",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": "Controls whether a Button is in a toggle state or not."},
{ "name": "toggle",
  "type": "Property",
  "class": "mx.controls.RadioButton",
  "description": ""},
{ "name": "toggle",
  "type": "Method",
  "class": "org.apache.royale.mdl.Menu",
  "description": ""},
{ "name": "toggle",
  "type": "Method",
  "class": "org.apache.royale.utils.ClassSelectorList",
  "description": "Add or remove a class selector to/from the list."},
{ "name": "toggleClass",
  "type": "Method",
  "class": "org.apache.royale.utils.IClassSelectorListSupport",
  "description": "Add or remove a class selector to/from the list."},
{ "name": "toggleClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.DataContainerBase",
  "description": "Add or remove a class selector to/from the list."},
{ "name": "toggleClass",
  "type": "Method",
  "class": "org.apache.royale.core.StyledUIBase",
  "description": "Add or remove a class selector to/from the list."},
{ "name": "toggleClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.Container",
  "description": "Add or remove a class selector to/from the list."},
{ "name": "toggleClass",
  "type": "Method",
  "class": "org.apache.royale.jewel.Group",
  "description": "Add or remove a class selector to/from the list."},
{ "name": "toggleClass",
  "type": "Method",
  "class": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": "Add or remove a class selector to/from the list."},
{ "name": "toggleListListeners",
  "type": "Method",
  "class": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "toggleOnClick",
  "type": "Property",
  "class": "mx.controls.ToggleButtonBar",
  "description": "Specifies whether the currently selected button can be deselected by the user."},
{ "name": "token",
  "type": "Property",
  "class": "org.apache.royale.maps.google.models.MapModel",
  "description": ""},
{ "name": "token",
  "type": "Property",
  "class": "mx.rpc.events.AbstractEvent",
  "description": "The token that represents the call to the method."},
{ "name": "token",
  "type": "Property",
  "class": "mx.rpc.CallResponder",
  "description": "Each CallResponder dispatches result and fault events received from a single token."},
{ "name": "token",
  "type": "Property",
  "class": "org.apache.royale.maps.google.GoogleMap",
  "description": ""},
{ "name": "tooLongError",
  "type": "Property",
  "class": "mx.validators.StringValidator",
  "description": "Error message when the String is longer than the <code>maxLength</code> property."},
{ "name": "tooShortError",
  "type": "Property",
  "class": "mx.validators.StringValidator",
  "description": "Error message when the string is shorter than the <code>minLength</code> property."},
{ "name": "toolBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.StackedViewManager",
  "description": "The ToolBar (or null if not present)."},
{ "name": "toolBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The ToolBar (or null if not present)."},
{ "name": "toolBar",
  "type": "Property",
  "class": "org.apache.royale.mobile.beads.StackedViewManagerView",
  "description": ""},
{ "name": "toolBarItems",
  "type": "Property",
  "class": "org.apache.royale.mobile.StackedViewManager",
  "description": "The contents of the ToolBar."},
{ "name": "toolBarItems",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The array of controls that make up the ToolBar."},
{ "name": "toolTip",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Text to display in the ToolTip."},
{ "name": "toolTip",
  "type": "Property",
  "class": "mx.controls.Button",
  "description": ""},
{ "name": "toolTip",
  "type": "Property",
  "class": "org.apache.royale.express.ImageButton",
  "description": "Displays a hint when the mouse hovers over the button"},
{ "name": "toolTip",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": "The string to use as the toolTip."},
{ "name": "toolTip",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": "The string to use as the toolTip."},
{ "name": "toolTip",
  "type": "Property",
  "class": "org.apache.royale.express.TextButton",
  "description": "Displays a hint when the mouse hovers over the button"},
{ "name": "toolTip",
  "type": "Property",
  "class": "mx.events.ToolTipEvent",
  "description": "The ToolTip object to which this event applies."},
{ "name": "toolTip",
  "type": "Property",
  "class": "mx.managers.IToolTipManagerClient",
  "description": "The text of this component's tooltip."},
{ "name": "toolTip",
  "type": "Property",
  "class": "org.apache.royale.express.ImageAndTextButton",
  "description": "Displays a hint when the mouse hovers over the button"},
{ "name": "toolTipClass",
  "type": "Property",
  "class": "mx.managers.ToolTipManager",
  "description": "The class to use for creating ToolTips."},
{ "name": "toolTipClass",
  "type": "Property",
  "class": "mx.managers.IToolTipManager2",
  "description": ""},
{ "name": "toolTipShowHandler",
  "type": "Method",
  "class": "spark.components.gridClasses.GridItemRenderer",
  "description": "Shows the tooltip for one of the grid's item renderers."},
{ "name": "top",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "The vertical distance in pixels from the top edge of the component to the anchor target's top edge."},
{ "name": "top",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "<p>For components, this layout constraint property is a facade on top of the similarly-named style."},
{ "name": "top",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "mx.core.EdgeMetrics",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "org.apache.royale.text.engine.GlyphMetrics",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": ""},
{ "name": "top",
  "type": "Property",
  "class": "org.apache.royale.core.layout.EdgeData",
  "description": ""},
{ "name": "topGridView",
  "type": "Property",
  "class": "spark.components.gridClasses.GridLayout",
  "description": "Displays the unlocked columns subset of the locked rows."},
{ "name": "topLeft",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "topLeftGridView",
  "type": "Property",
  "class": "spark.components.gridClasses.GridLayout",
  "description": "This GridView is only created when both lockedRowCount and lockedColumnCount are greater than zero."},
{ "name": "topLeftRadiusX",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The x radius of the top left corner of the rectangle."},
{ "name": "topLevelApplication",
  "type": "Property",
  "class": "mx.core.FlexGlobals",
  "description": "The first application run in an ApplicationDomain is the top-level application."},
{ "name": "topLevelApplication",
  "type": "Property",
  "class": "org.apache.royale.mdl.Application",
  "description": "static reference to this application used mainly for dialog (Dialog class)"},
{ "name": "topLevelSystemManagers",
  "type": "Property",
  "class": "mx.managers.SystemManagerGlobals",
  "description": ""},
{ "name": "topMostEventDispatcher",
  "type": "Property",
  "class": "org.apache.royale.core.IUIBase",
  "description": "The top most event dispatcher."},
{ "name": "topMostEventDispatcher",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "topMostEventDispatcher",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "topMostEventDispatcher",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "topMostEventDispatcher",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "topMostEventDispatcher",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "topMostEventDispatcher",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "topPosition",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.Tooltip",
  "description": "A boolean flag to activate \"mdl-tooltip--top\" effect selector."},
{ "name": "topRightRadiusX",
  "type": "Property",
  "class": "spark.primitives.Rect",
  "description": "The x radius of the top right corner of the rectangle."},
{ "name": "total",
  "type": "Property",
  "class": "org.apache.royale.events.ProgressEvent",
  "description": "The total value."},
{ "name": "totalAscent",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "totalAscent",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "totalDepth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ParcelList",
  "description": ""},
{ "name": "totalDescent",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "totalDescent",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "totalHeight",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "totalHeight",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "totalHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableRowElement",
  "description": ""},
{ "name": "totalHeight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "totalPushTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Only populated in the case of a pushed message, this is the time between the push causing client sending its message and the push receving client receiving it."},
{ "name": "totalTime",
  "type": "Property",
  "class": "mx.messaging.messages.MessagePerformanceUtils",
  "description": "Time between this client sending a message and receiving a response for it from the server"},
{ "name": "totalValue",
  "type": "Property",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "touchAction",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "trRadius",
  "type": "Property",
  "class": "spark.primitives.RectangularDropShadow",
  "description": "The corner radius of the top right corner of the rounded rectangle that is casting the shadow."},
{ "name": "trace",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": ""},
{ "name": "track",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.slider.ISliderView",
  "description": "The component used for the track area of the org."},
{ "name": "track",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.SliderView",
  "description": "The track component."},
{ "name": "track",
  "type": "Property",
  "class": "org.apache.royale.html.beads.IScrollBarView",
  "description": "The track in a ScrollBar"},
{ "name": "track",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ISliderView",
  "description": "The component used for the track area of the org."},
{ "name": "track",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.views.SliderView",
  "description": "The track component."},
{ "name": "track",
  "type": "Property",
  "class": "org.apache.royale.html.beads.HideColorSpectrumThumbWhenEmpty",
  "description": "The track component."},
{ "name": "track",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ColorSpectrumView",
  "description": "The track component."},
{ "name": "track",
  "type": "Property",
  "class": "org.apache.royale.html.beads.SliderView",
  "description": "The track component."},
{ "name": "tracking",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "tracking",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Sets the tracking and is synonymous with the <code>trackingRight</code> property."},
{ "name": "trackingLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character."},
{ "name": "trackingLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character."},
{ "name": "trackingLeft",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the left of each character."},
{ "name": "trackingLeft",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "trackingLeftProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "trackingRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character."},
{ "name": "trackingRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character."},
{ "name": "trackingRight",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Number in pixels (or percent of <code>fontSize</code>, like 120%) indicating the amount of tracking (manual kerning) to be applied to the right of each character."},
{ "name": "trackingRight",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "trackingRightProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "transform",
  "type": "Method",
  "class": "org.apache.royale.core.TransformBeadBase",
  "description": ""},
{ "name": "transform",
  "type": "Method",
  "class": "org.apache.royale.html5.TransformBead",
  "description": ""},
{ "name": "transform",
  "type": "Method",
  "class": "org.apache.royale.core.IBeadTransform",
  "description": "Transform the ITransformHost."},
{ "name": "transform",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transform",
  "type": "Method",
  "class": "org.apache.royale.svg.TransformBead",
  "description": ""},
{ "name": "transformAround",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "A utility method to update the rotation and scale of the transform while keeping a particular point, specified in the component's own coordinate space, fixed in the parent's coordinate space."},
{ "name": "transformBounds",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "rectangle to be transformed."},
{ "name": "transformBox",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transformCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Maps a set of values from data space to screen space."},
{ "name": "transformCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "transformCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTransform",
  "description": "Maps a set of numeric values representing data to screen coordinates."},
{ "name": "transformCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianTransform",
  "description": "Maps a set of numeric values representing data to screen coordinates."},
{ "name": "transformCache",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "transformCache",
  "type": "Method",
  "class": "mx.charts.DateTimeAxis",
  "description": ""},
{ "name": "transformCache",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarTransform",
  "description": ""},
{ "name": "transformChange",
  "type": "Event",
  "description": "Dispatched when the transformation from data space to screen space has changed, typically either because the axes that make up the transformation have changed in some way, or the data transform itself has size."},
{ "name": "transformElement",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "transformElement",
  "type": "Property",
  "class": "org.apache.royale.svg.TransformableCompoundGraphic",
  "description": ""},
{ "name": "transformElement",
  "type": "Property",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "transformElement",
  "type": "Property",
  "class": "org.apache.royale.core.ITransformHost",
  "description": "Each ITransformHost has an element that is actually added to the platform's display list DOM."},
{ "name": "transformElement",
  "type": "Property",
  "class": "org.apache.royale.svg.Rect",
  "description": ""},
{ "name": "transformElement",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "transformModel",
  "type": "Property",
  "class": "org.apache.royale.core.TransformBeadBase",
  "description": ""},
{ "name": "transformModels",
  "type": "Property",
  "class": "org.apache.royale.core.TransformCompoundModel",
  "description": ""},
{ "name": "transformOrigin",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transformPoint",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Uses the Matrix to transform the point including the translation values."},
{ "name": "transformPoint",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "Returns a static Point object with the result."},
{ "name": "transformPointToParent",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "A utility method to transform a point specified in the local coordinates of this object to its location in the object's parent's coordinates."},
{ "name": "transformSize",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "transformed bounds top left to the untransformed bounds top left in the coordinate space defined by <code>matrix</code>."},
{ "name": "transformStyle",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transformX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The x value of the transform center."},
{ "name": "transformX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The x value of the point around which any rotation and scale is performed in both the layout and computed matrix."},
{ "name": "transformX",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": ""},
{ "name": "transformY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The y value of the tansform center."},
{ "name": "transformY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The y value of the point around which any rotation and scale is performed in both the layout and computed matrix."},
{ "name": "transformY",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": ""},
{ "name": "transformZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The z value of the tansform center."},
{ "name": "transformZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The z value of the point around which any rotation and scale is performed in both the layout and computed matrix."},
{ "name": "transformZ",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": ""},
{ "name": "transition",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transitionDelay",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transitionDuration",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transitionEventAvailable",
  "type": "Method",
  "class": "org.apache.royale.utils.css",
  "description": "Detect the supported transition event property name for the current browser so just one event is fired."},
{ "name": "transitionProperty",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transitionRenderData",
  "type": "Property",
  "class": "mx.charts.chartClasses.Series",
  "description": "A render data structure passed in by a running transtion."},
{ "name": "transitionTimingFunction",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "transitions",
  "type": "Property",
  "class": "org.apache.royale.core.IStatesObject",
  "description": "The array of view state transitions."},
{ "name": "transitions",
  "type": "Property",
  "class": "org.apache.royale.core.GroupBase",
  "description": "The array of transitions."},
{ "name": "transitions",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "An Array of Transition objects, where each Transition object defines a set of effects to play when a view state change occurs."},
{ "name": "transitions",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.View",
  "description": "The array of transitions."},
{ "name": "transitions",
  "type": "Property",
  "class": "org.apache.royale.html.MXMLBeadView",
  "description": "The array of transitions."},
{ "name": "transitions",
  "type": "Property",
  "class": "org.apache.royale.createjs.Container",
  "description": "The array of transitions."},
{ "name": "translate",
  "type": "Method",
  "class": "org.apache.royale.geom.Matrix",
  "description": "Moves the Matrix by the specified amount Returns the matrix so the methods can be chained."},
{ "name": "translateBy",
  "type": "Method",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "Applies the delta to the transform's translation component."},
{ "name": "transparent",
  "type": "Property",
  "class": "org.apache.royale.mdl.Header",
  "description": "A boolean flag to activate \"mdl-transparent--Xdp\" effect selector."},
{ "name": "trigger",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "Specifies the component generating the event that triggers the validator."},
{ "name": "trigger",
  "type": "Method",
  "class": "google.maps.event",
  "description": ""},
{ "name": "trigger",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Specifies the component generating the event that triggers the validator."},
{ "name": "triggerEvent",
  "type": "Property",
  "class": "mx.events.NumericStepperEvent",
  "description": "If the value is changed in response to a user action, this property contains a value indicating the type of input action."},
{ "name": "triggerEvent",
  "type": "Property",
  "class": "mx.validators.Validator",
  "description": "Specifies the event that triggers the validation."},
{ "name": "triggerEvent",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Specifies the event that triggers the validation."},
{ "name": "triggerEvent",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "Indicates the type of input action."},
{ "name": "triggerEvent",
  "type": "Property",
  "class": "mx.events.CalendarLayoutChangeEvent",
  "description": "The event that triggered the change of the date; usually a <code>change</code> event."},
{ "name": "triggerEvent",
  "type": "Property",
  "class": "mx.events.IndexChangedEvent",
  "description": ""},
{ "name": "triggerEvent",
  "type": "Property",
  "class": "mx.events.TreeEvent",
  "description": "The low level MouseEvent or KeyboardEvent that triggered this event or <code>null</code> if this event was triggered programatically."},
{ "name": "trim",
  "type": "Method",
  "class": "org.apache.royale.utils.StringTrimmer",
  "description": ""},
{ "name": "trim",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": "Removes all whitespace characters from the beginning and end of the specified string."},
{ "name": "trim",
  "type": "Method",
  "class": "mx.utils.StringUtil",
  "description": "Removes all whitespace characters from the beginning and end of the specified string."},
{ "name": "trim",
  "type": "Method",
  "class": "mx.utils.RPCStringUtil",
  "description": "Removes all whitespace characters from the beginning and end of the specified string."},
{ "name": "trim",
  "type": "Method",
  "class": "org.apache.royale.utils.string",
  "description": "Trims all whitespace off the beginning and end of a string."},
{ "name": "trimArrayElements",
  "type": "Method",
  "class": "org.apache.royale.utils.StringTrimmer",
  "description": "Removes all whitespace characters from the beginning and end of each element in an Array, where the Array is stored as a String."},
{ "name": "trimArrayElements",
  "type": "Method",
  "class": "org.apache.royale.utils.StringUtil",
  "description": "Removes all whitespace characters from the beginning and end of each element in an Array, where the Array is stored as a String."},
{ "name": "trimArrayElements",
  "type": "Method",
  "class": "mx.utils.StringUtil",
  "description": "Removes all whitespace characters from the beginning and end of each element in an Array, where the Array is stored as a String."},
{ "name": "trimArrayElements",
  "type": "Method",
  "class": "mx.utils.RPCStringUtil",
  "description": "Removes all whitespace characters from the beginning and end of each element in an Array, where the Array is stored as a String."},
{ "name": "trimLeft",
  "type": "Method",
  "class": "org.apache.royale.utils.string",
  "description": "Checks that an index falls within the allowable range of an array."},
{ "name": "trimRight",
  "type": "Method",
  "class": "org.apache.royale.utils.string",
  "description": "Trims all whitespace off the end of a string."},
{ "name": "truncateToFit",
  "type": "Method",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "truncateToFit",
  "type": "Method",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "truncatedText",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.StringTextLineFactory",
  "description": "@private Gets the text that is composed in the preceding call to <code>createTextLines</code> If no truncation is performed, a string equal to <code>text</code> is returned."},
{ "name": "truncatedTextFlowCallback",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TextFlowTextLineFactory",
  "description": "@private Test hook: Sets a callback function for getting the truncated text flow."},
{ "name": "truncationIndicator",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TruncationOptions",
  "description": "A string used to indicate that content could not be fully displayed because of limits on the number of lines."},
{ "name": "truncationIndicatorFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TruncationOptions",
  "description": "The style applied to the truncation indicator string."},
{ "name": "truncationOptions",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "Specifies the options for truncating the text if it doesn't fit in the composition bounds."},
{ "name": "tt",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": ""},
{ "name": "turn",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "tween",
  "type": "Property",
  "class": "mx.effects.effectClasses.TweenEffectInstance",
  "description": "The Tween object, which determines the animation."},
{ "name": "tweenEnd",
  "type": "Event",
  "description": "Dispatched when the tween effect ends."},
{ "name": "tweenEnd",
  "type": "Event",
  "description": ""},
{ "name": "tweenStart",
  "type": "Event",
  "description": "Dispatched when the tween effect starts, which corresponds to the first call to the <code>onTweenUpdate()</code> method."},
{ "name": "tweenStart",
  "type": "Event",
  "description": ""},
{ "name": "tweenUpdate",
  "type": "Event",
  "description": "Dispatched every time the tween effect updates the target."},
{ "name": "tweenUpdate",
  "type": "Event",
  "description": ""},
{ "name": "tweens",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Sequence",
  "description": ""},
{ "name": "twoLine",
  "type": "Property",
  "class": "org.apache.royale.mdl.itemRenderers.ListItemRenderer",
  "description": "Activate \"mdl-list__item--two-line\" class selector, for use in list item."},
{ "name": "tx",
  "type": "Property",
  "class": "org.apache.royale.geom.Matrix",
  "description": ""},
{ "name": "ty",
  "type": "Property",
  "class": "org.apache.royale.geom.Matrix",
  "description": ""},
{ "name": "type",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Button",
  "description": "The button type"},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.effects.SeriesEffect",
  "description": "The type of transition this effect is being used for."},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesEffectInstance",
  "description": "The type of transition this effect is being used for."},
{ "name": "type",
  "type": "Property",
  "class": "mx.net.FileReference",
  "description": ""},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.ColumnChart",
  "description": "The type of the column chart."},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "The grouping behavior of this series."},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.series.ColumnSet",
  "description": "The grouping behavior of this series."},
{ "name": "type",
  "type": "Property",
  "class": "org.apache.royale.file.IFileModel",
  "description": "The type of the file"},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.series.BarSet",
  "description": "The grouping behavior of this series."},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.AreaChart",
  "description": "Type of area chart to render."},
{ "name": "type",
  "type": "Property",
  "class": "org.apache.royale.reflection.ParameterDefinition",
  "description": "The type of this parameter"},
{ "name": "type",
  "type": "Property",
  "class": "org.apache.royale.reflection.VariableDefinition",
  "description": "A TypeDefinition representing the type of the variable that this VariableDefinition represents"},
{ "name": "type",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Input",
  "description": "The input type"},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.series.AreaSet",
  "description": "The grouping behavior of this series."},
{ "name": "type",
  "type": "Property",
  "class": "org.apache.royale.file.beads.FileModel",
  "description": ""},
{ "name": "type",
  "type": "Property",
  "class": "org.apache.royale.file.FileProxy",
  "description": ""},
{ "name": "type",
  "type": "Property",
  "class": "mx.charts.BarChart",
  "description": "The type of bar chart to render."},
{ "name": "type",
  "type": "Property",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": "Event type, e."},
{ "name": "typeHierarchyCache",
  "type": "Property",
  "class": "mx.styles.StyleManagerImpl",
  "description": ""},
{ "name": "typeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "typeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Each FlowElement has a <code>typeName</code>."},
{ "name": "typeName",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ApplyElementTypeNameOperation",
  "description": "The type name assigned by this operation."},
{ "name": "typeNames",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "A list of type names."},
{ "name": "typeSelectorCache",
  "type": "Property",
  "class": "mx.styles.StyleManagerImpl",
  "description": ""},
{ "name": "typicalItem",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "typicalItem",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "The grid's layout ensures that columns whose width is not specified are wide enough to display an item renderer for this default data provider item."},
{ "name": "typicalLayoutElement",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Used by layouts when fixed row/column sizes are requested but a specific size isn't specified."},
{ "name": "typographicCase",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The type of typographic case used for this text."},
{ "name": "typographicCase",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The type of typographic case used for this text."},
{ "name": "typographicCase",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The type of typographic case used for this text."},
{ "name": "typographicCase",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "typographicCaseProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "uid",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "uid",
  "type": "Property",
  "class": "mx.controls.listClasses.BaseListData",
  "description": "The unique identifier for this item."},
{ "name": "uid",
  "type": "Property",
  "class": "mx.collections.ArrayList",
  "description": "Provides access to the unique id for this list."},
{ "name": "uid",
  "type": "Property",
  "class": "mx.core.IUID",
  "description": "The unique identifier for this object."},
{ "name": "uint",
  "type": "Method",
  "class": "org.apache.royale.utils.Language",
  "description": "uint()"},
{ "name": "uintOrEnum",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "uintProp",
  "type": "Method",
  "class": "org.apache.royale.textLayout.property.PropertyFactory",
  "description": ""},
{ "name": "unRegisterToUseBusyCursor",
  "type": "Method",
  "class": "mx.managers.ICursorManager",
  "description": ""},
{ "name": "unbind",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "unbindAll",
  "type": "Method",
  "class": "google.maps.MVCObject",
  "description": ""},
{ "name": "uncaughtError",
  "type": "Event",
  "description": "Dispatched when an uncaught error is caught by the Global Exception Handler"},
{ "name": "uncomposedTextLength",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "@private"},
{ "name": "underline",
  "type": "Property",
  "class": "mx.text.TextFormat",
  "description": ""},
{ "name": "underlineOffset",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "underlineThickness",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Reverses the previous operation."},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "Removes the next IOperation object from the undo stack and calls the performUndo() function of that object."},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "Reverses the operation."},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IMemento",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.SplitMemento",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.DeleteTextMemento",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.MoveElementMemento",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.MementoList",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.AddElementMemento",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.InternalSplitFGEMemento",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.JoinMemento",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": ""},
{ "name": "undo",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.mementos.RemoveElementsMemento",
  "description": ""},
{ "name": "undoAndRedoItemLimit",
  "type": "Property",
  "class": "org.apache.royale.utils.undo.IUndoManager",
  "description": "The maximum number of undoable or redoable operations to track."},
{ "name": "undoAndRedoItemLimit",
  "type": "Property",
  "class": "org.apache.royale.utils.undo.UndoManager",
  "description": ""},
{ "name": "undoManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "The UndoManager object assigned to this EditManager instance, if there is one."},
{ "name": "undoManager",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "The IUndoManager assigned to this edit manager."},
{ "name": "unfocusedCellSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The SelectionFormat object used to draw cell selections when they are not in a focused container, but are in the active window."},
{ "name": "unfocusedCellSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "unfocusedSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "The SelectionFormat object used to draw the selection when it is not in a focused container, but is in the active window."},
{ "name": "unfocusedSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "unfocusedSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IConfiguration",
  "description": "The initial selection format that Text Layout Framework uses to draw the selection when the window is active but none of the containers in the TextFlow have focus."},
{ "name": "unfocusedSelectionFormat",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.Configuration",
  "description": ""},
{ "name": "ungroupElements",
  "type": "Method",
  "class": "org.apache.royale.text.engine.GroupElement",
  "description": ""},
{ "name": "unicodeBidi",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "unicodeRange",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "uninitialize",
  "type": "Method",
  "class": "spark.components.gridClasses.DataGridEditor",
  "description": "The method is called to disable item editing on the <code>DataGrid</code>."},
{ "name": "union",
  "type": "Method",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "union",
  "type": "Method",
  "class": "google.maps.LatLngBounds",
  "description": ""},
{ "name": "unique",
  "type": "Property",
  "class": "mx.collections.ISort",
  "description": "Indicates if the sort should be unique."},
{ "name": "unique",
  "type": "Property",
  "class": "org.apache.royale.collections.ISort",
  "description": "Indicates if the sort should be unique."},
{ "name": "unique",
  "type": "Property",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "unique",
  "type": "Property",
  "class": "mx.collections.Sort",
  "description": ""},
{ "name": "unitSize",
  "type": "Property",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "The size of one unit of data as represented by this axis."},
{ "name": "unitSize",
  "type": "Property",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": ""},
{ "name": "unitSize",
  "type": "Property",
  "class": "mx.charts.DateTimeAxis",
  "description": "The width, in pixels, of a single data unit."},
{ "name": "unitsPerEm",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "unjustifiedTextWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "unjustifiedTextWidth",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The width of the line if it was not justified."},
{ "name": "unjustifiedTextWidth",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "unjustifiedTextWidth",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "unloadGraphics",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITextFlow",
  "description": ""},
{ "name": "unmaskElement",
  "type": "Method",
  "class": "org.apache.royale.svg.MaskBead",
  "description": ""},
{ "name": "unregisterDataTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Each DataTransform that makes use of an axis registers itself with that axis."},
{ "name": "unregisterDataTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.AxisBase",
  "description": ""},
{ "name": "unregisterSubscription",
  "type": "Method",
  "class": "mx.messaging.ConsumerMessageDispatcher",
  "description": "Unregisters a Consumer subscription."},
{ "name": "unscaledHeight",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A convenience method for determining the unscaled height of the component."},
{ "name": "unscaledWidth",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "A convenience method for determining the unscaled width of the component All of a component's drawing and child layout should be done within a bounding rectangle of this width, which is also passed as an argument to <code>updateDisplayList()</code>."},
{ "name": "unset",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "unsubscribe",
  "type": "Method",
  "class": "mx.messaging.AbstractConsumer",
  "description": "Unsubscribes from the remote destination."},
{ "name": "unwatchXML",
  "type": "Method",
  "class": "mx.utils.XMLNotifier",
  "description": "Given an XML or XMLList, remove the specified notification function."},
{ "name": "update",
  "type": "Method",
  "class": "mx.charts.chartClasses.IAxis",
  "description": "Updates the chart."},
{ "name": "update",
  "type": "Method",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "update",
  "type": "Event",
  "description": "Dispatched as requested via the delay and repeat count parameters in the constructor."},
{ "name": "update",
  "type": "Method",
  "class": "mx.resources.IResourceManager",
  "description": "Dispatches a <code>change</code> event from the ResourceManager."},
{ "name": "update",
  "type": "Method",
  "class": "mx.resources.ResourceManagerImpl",
  "description": ""},
{ "name": "update",
  "type": "Method",
  "class": "mx.charts.CategoryAxis",
  "description": ""},
{ "name": "update",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "updateAfterEvent",
  "type": "Method",
  "class": "mx.events.MouseEvent",
  "description": ""},
{ "name": "updateAllControllers",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.IEditManager",
  "description": "Updates the display after an operation has modified it."},
{ "name": "updateAllControllers",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Composes the content of the root element and updates the display."},
{ "name": "updateAllControllers",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Composes the content of the root element and updates the display."},
{ "name": "updateAllControllers",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.EditManager",
  "description": "@copy IEditManager."},
{ "name": "updateAllDataTips",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartBase",
  "description": "Displays all noninteractive data tips if <code>showAllDataTips</code> is set."},
{ "name": "updateAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.core.IItemRendererParent",
  "description": ""},
{ "name": "updateAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.jewel.supportClasses.table.TBodyContentArea",
  "description": "Refreshes the itemRenderers."},
{ "name": "updateAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": ""},
{ "name": "updateAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.html.beads.DataContainerView",
  "description": "Refreshes the itemRenderers."},
{ "name": "updateAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "updateAllItemRenderers",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.ChartDataGroup",
  "description": "Refreshes the itemRenderers."},
{ "name": "updateAxisOrder",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "updateButtonLabelFromData",
  "type": "Method",
  "class": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": ""},
{ "name": "updateButtonLabelFromData",
  "type": "Method",
  "class": "mx.controls.buttonBarClasses.TextButtonDataGridColumnItemRenderer",
  "description": ""},
{ "name": "updateChildren",
  "type": "Method",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "This method is called when the value might have changed and goes through and makes sure the children are updated."},
{ "name": "updateComplete",
  "type": "Event",
  "description": "Dispatched when an object has had its <code>commitProperties()</code>, <code>measure()</code>, and <code>updateDisplayList()</code> methods called (if needed)."},
{ "name": "updateComplete",
  "type": "Event",
  "description": "Dispatched by a ITextFlow object each time a container has had new DisplayObjects added or updated as a result of composition."},
{ "name": "updateComplete",
  "type": "Event",
  "description": "Dispatched by a TextFlow object each time a container has had new DisplayObjects added or updated as a result of composition."},
{ "name": "updateCompletePendingFlag",
  "type": "Property",
  "class": "mx.managers.ILayoutManagerClient",
  "description": "A flag that determines if an object is waiting to have its <code>updateComplete</code> event dispatched."},
{ "name": "updateCompletePendingFlag",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "updateComposition",
  "type": "Method",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "Callback for updating the contents of the inline editing session."},
{ "name": "updateCompositionShapes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "updateCompositionShapes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
  "description": ""},
{ "name": "updateCompositionShapes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Triggers drawing of composed cell contents"},
{ "name": "updateCompositionShapes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "updateCompositionShapes",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "updateContainer",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Updates the display; calls either the factory or updateAllControllers()."},
{ "name": "updateControl",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.MultiLine",
  "description": ""},
{ "name": "updateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Called when the underlying data that the series represents has changed and needs to be reloaded from the data provider."},
{ "name": "updateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "updateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "updateData",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "updateDataChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Updates the position of any child to the current canvas."},
{ "name": "updateDataChild",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Updates the position of any child to current canvas."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Draws the object and/or sizes and positions its children."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarChart",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.containers.ViewStack",
  "description": "Responds to size changes by setting the positions and sizes of this container's children."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.DataTip",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Sizes and positions the target's elements."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.Legend",
  "description": "Respond to size changes by setting the positions and sizes of this container's children."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.containers.Form",
  "description": "Responds to size changes by setting the positions and sizes of this container's children."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.containers.Grid",
  "description": "Sets the size and position of each child of the Grid."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.containers.Tile",
  "description": "Sets the positions and sizes of this container's children."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.containers.FormItem",
  "description": "Responds to size changes by setting the positions and sizes of this container's children."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.containers.GridRow",
  "description": "Sets the size and position of each child of the GridRow container."},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.series.PieSeries",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.AxisRenderer",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "spark.primitives.Rect",
  "description": ""},
{ "name": "updateDisplayList",
  "type": "Method",
  "class": "mx.charts.chartClasses.ChartLabel",
  "description": ""},
{ "name": "updateErrorTextDisplay",
  "type": "Method",
  "class": "spark.components.FormItem",
  "description": "Converts <code>elementErrorStrings</code> into a String, and assigns that String to the <code>errorTextDisplay</code> skin part for display."},
{ "name": "updateFilter",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Called when the underlying data the series represents needs to be filtered against the ranges represented by the axes of the associated data transform."},
{ "name": "updateFilter",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Called when the underlying data the canvas represents needs to be filtered against the ranges represented by the axes of the associated data transform."},
{ "name": "updateFilter",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "updateFilter",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Called when the underlying data the canvas represents needs to be filtered against the ranges represented by the axes of the associated data transform."},
{ "name": "updateFilter",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "updateGraphics",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": ""},
{ "name": "updateHitTests",
  "type": "Method",
  "class": "org.apache.royale.textLayout.events.FlowElementMouseEventManager",
  "description": "Create an array of all FlowElements that are currently visible and that have an active event mirror, plus all LinkElements by default, and update the hit test area for these FlowElements."},
{ "name": "updateHost",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.Disabled",
  "description": ""},
{ "name": "updateHost",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.datefield.DateFieldDisabled",
  "description": ""},
{ "name": "updateHost",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.combobox.ComboBoxDisabled",
  "description": ""},
{ "name": "updateHost",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": ""},
{ "name": "updateIMEAdornments",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.utils.AdornmentUtils",
  "description": ""},
{ "name": "updateLengths",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "updateLengths",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.FlowComposerBase",
  "description": ""},
{ "name": "updateLengths",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Update the lengths in the lines to maintain mapping to the TextFlow."},
{ "name": "updateMapping",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Called when the underlying data the series represents needs to be mapped to numeric representations."},
{ "name": "updateMapping",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "updateMapping",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "updateNode",
  "type": "Method",
  "class": "org.apache.royale.collections.FlattenedList",
  "description": "Singles to the node that its state has changed and it should update itself"},
{ "name": "updatePopUpPosition",
  "type": "Method",
  "class": "spark.components.SkinnablePopUpContainer",
  "description": "Positions the pop-up after the pop-up is added to PopUpManager but before any state transitions occur."},
{ "name": "updateRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "updateRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Update the FlowElement to account for text added before it."},
{ "name": "updateRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.TextRange",
  "description": "Update the range with new anchor or active position values."},
{ "name": "updateRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.edit.SelectionState",
  "description": "Updates the selection range with new anchor or active position values."},
{ "name": "updateRange",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.CellRange",
  "description": "Update the range with new anchor or active position values."},
{ "name": "updateRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "Invoke this function to force the itemRenderer to redraw."},
{ "name": "updateRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.FooterLinkItemMouseRenderer",
  "description": ""},
{ "name": "updateRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.MenuItemRenderer",
  "description": ""},
{ "name": "updateRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.NavigationLinkItemMouseRenderer",
  "description": ""},
{ "name": "updateRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": ""},
{ "name": "updateRenderer",
  "type": "Method",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": ""},
{ "name": "updateRenderer",
  "type": "Method",
  "class": "org.apache.royale.mdl.itemRenderers.TableRowItemSingleSelectionMouseRenderer",
  "description": ""},
{ "name": "updateScrollRect",
  "type": "Method",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Called by the target at the end of its <code>updateDisplayList</code> to have the layout update its scrollRect."},
{ "name": "updateSeries",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": ""},
{ "name": "updateSortCompareType",
  "type": "Method",
  "class": "mx.collections.ISortField",
  "description": "This changes the internal compare function used by the <code>SortField</code> based on the value of <code>sortCompareType</code>."},
{ "name": "updateSortCompareType",
  "type": "Method",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "updateSortCompareType",
  "type": "Method",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "updateSpectrum",
  "type": "Method",
  "class": "org.apache.royale.html.beads.ColorSpectrumView",
  "description": ""},
{ "name": "updateStacking",
  "type": "Method",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Iterates over the individual sub-series to build the stacked values."},
{ "name": "updateTerminatorSpan",
  "type": "Method",
  "class": "org.apache.royale.textLayout.elements.IParagraphElement",
  "description": ""},
{ "name": "updateThumb",
  "type": "Method",
  "class": "org.apache.royale.html.beads.HideColorSpectrumThumbWhenEmpty",
  "description": ""},
{ "name": "updateToController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.IFlowComposer",
  "description": "Composes and updates the display up to and including the container at the specified index."},
{ "name": "updateToController",
  "type": "Method",
  "class": "org.apache.royale.textLayout.compose.StandardFlowComposer",
  "description": "Composes and updates the display up to and including the container at the specified index."},
{ "name": "updateTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Called when the underlying data the series represents needs to be transformed from data to screen values by the axes of the associated data transform."},
{ "name": "updateTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": ""},
{ "name": "updateTransform",
  "type": "Method",
  "class": "mx.charts.series.BubbleSeries",
  "description": ""},
{ "name": "updateVisibleRectangle",
  "type": "Method",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "If scrolling, sets the scroll rectangle to the container rectangle so that any lines that are halfway in view are clipped to the scrollable region."},
{ "name": "upload",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileUploader",
  "description": "Upload a file to the specified url."},
{ "name": "upload",
  "type": "Method",
  "class": "org.apache.royale.file.beads.FileLoaderAndUploader",
  "description": "Upload a file to the specified url."},
{ "name": "uploadProgress",
  "type": "Method",
  "class": "org.apache.royale.net.URLBinaryUploader",
  "description": "Convenience function for upoad progress event to allow chaining."},
{ "name": "uploadProgress",
  "type": "Method",
  "class": "org.apache.royale.net.URLUploadStream",
  "description": "Convenience function for upload progress event to allow chaining."},
{ "name": "upperBoundCache",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": ""},
{ "name": "upperMargin",
  "type": "Property",
  "class": "mx.charts.chartClasses.BoundedValue",
  "description": "The margin, in pixels, required above the value in order to render properly."},
{ "name": "uri",
  "type": "Property",
  "class": "QName",
  "description": ""},
{ "name": "uri",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": "Provides access to the URI used to create the whole endpoint URI for this channel."},
{ "name": "uri",
  "type": "Property",
  "class": "Namespace",
  "description": ""},
{ "name": "uri",
  "type": "Property",
  "class": "mx.net.NetConnection",
  "description": "uri"},
{ "name": "urisEqual",
  "type": "Method",
  "class": "mx.utils.URLUtil",
  "description": "Tests whether two URI Strings are equivalent, ignoring case and differences in trailing slashes."},
{ "name": "url",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.core.IImageModel",
  "description": "The source URL for the image."},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ImageModel",
  "description": "The source of the image."},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.BinaryImageModel",
  "description": "The source of the image."},
{ "name": "url",
  "type": "Property",
  "class": "mx.core.Application",
  "description": "The URL from which this Application's SWF file was loaded."},
{ "name": "url",
  "type": "Property",
  "class": "mx.messaging.messages.HTTPRequestMessage",
  "description": "Contains the final destination for this request."},
{ "name": "url",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Location of the service."},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.net.URLRequest",
  "description": "The URL to be requested."},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.ImageModel",
  "description": "The source of the image."},
{ "name": "url",
  "type": "Property",
  "class": "mx.modules.ModuleLoader",
  "description": "The location of the module, expressed as a URL."},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.WebBrowserModel",
  "description": "The URL to load into the WebBrowser."},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.net.BinaryUploader",
  "description": "The url of the server."},
{ "name": "url",
  "type": "Property",
  "class": "spark.components.Application",
  "description": "The URL from which this Application's SWF file was loaded."},
{ "name": "url",
  "type": "Property",
  "class": "mx.messaging.config.LoaderConfig",
  "description": "If the LoaderConfig has been initialized, this should represent the top-level MovieClip's URL."},
{ "name": "url",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Location of the service."},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.html.WebBrowser",
  "description": "The location of the web page to display."},
{ "name": "url",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": ""},
{ "name": "urlParameters",
  "type": "Property",
  "class": "org.apache.royale.routing.URLParameterBead",
  "description": ""},
{ "name": "urlParameters",
  "type": "Property",
  "class": "org.apache.royale.routing.EscapedFragmentBead",
  "description": ""},
{ "name": "useCache",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": ""},
{ "name": "useChildWidth",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "description": "Determines whether or not each child's width is set from the column size (false) or uses its own width (true)."},
{ "name": "useChromeColor",
  "type": "Property",
  "class": "spark.skins.SparkSkin",
  "description": "Specifies whether or not this skin should be affected by the <code>chromeColor</code> style."},
{ "name": "useClipboardAnnotations",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextImporter",
  "description": "Controls whether or not the importer should handle the extra information necessary for the clipboard."},
{ "name": "useClipboardAnnotations",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ITextExporter",
  "description": "The <code>useClipboardAnnotations</code> property controls whether or not the importer should handle the extra information necessary for the clipboard."},
{ "name": "useClipboardAnnotations",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ConverterBase",
  "description": "@copy ITextImporter#useClipboardAnnotations()"},
{ "name": "useColor",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": ""},
{ "name": "useDecoration",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": "enables label decoration when filter"},
{ "name": "useFTE",
  "type": "Property",
  "class": "mx.core.UITextFormat",
  "description": "Determines how the <code>measureText()</code> and <code>measureHTMLText()</code> methods do text measurement."},
{ "name": "useHandCursor",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "From flash."},
{ "name": "useNegativeSign",
  "type": "Property",
  "class": "mx.formatters.NumberFormatter",
  "description": "If <code>true</code>, format a negative number by preceding it with a minus \"-\" sign."},
{ "name": "useNegativeSign",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "If <code>true</code>, format a negative number by preceding it with a minus \"-\" sign."},
{ "name": "usePadding",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": ""},
{ "name": "useProxy",
  "type": "Property",
  "class": "mx.rpc.http.HTTPMultiService",
  "description": "Specifies whether to use the Flex proxy service."},
{ "name": "useProxy",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "Specifies whether to use the Flex proxy service."},
{ "name": "useProxy",
  "type": "Property",
  "class": "mx.rpc.http.Operation",
  "description": ""},
{ "name": "useProxy",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "Specifies whether to use the Flex proxy service."},
{ "name": "useSmallMessages",
  "type": "Property",
  "class": "mx.messaging.Channel",
  "description": ""},
{ "name": "useSmallMessages",
  "type": "Property",
  "class": "mx.messaging.channels.NetConnectionChannel",
  "description": ""},
{ "name": "useSortOn",
  "type": "Property",
  "class": "org.apache.royale.collections.Sort",
  "description": ""},
{ "name": "useTableSelectionCursors",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "useThousandsSeparator",
  "type": "Property",
  "class": "mx.formatters.NumberFormatter",
  "description": "If <code>true</code>, split the number into thousands increments by using a separator character."},
{ "name": "useThousandsSeparator",
  "type": "Property",
  "class": "mx.formatters.CurrencyFormatter",
  "description": "If <code>true</code>, split the number into thousands increments by using a separator character."},
{ "name": "useVirtualLayout",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "A container can hold any number of children."},
{ "name": "useVirtualLayout",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "GridLayout only supports virtual layout, the value of this property can not be changed."},
{ "name": "useVirtualLayout",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "A container can hold any number of children."},
{ "name": "useWeakReference",
  "type": "Property",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Determines whether the reference to <code>handler</code> is strong or weak."},
{ "name": "userData",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ContentElement",
  "description": ""},
{ "name": "userData",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.FlowOperation",
  "description": "Arbitrary data associated with an element."},
{ "name": "userData",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "userData",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "userData",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextBlock",
  "description": ""},
{ "name": "userData",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableBlockContainer",
  "description": "A reference to the TextFlowTableBlock"},
{ "name": "userData",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextBlock",
  "description": ""},
{ "name": "userStyles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": ""},
{ "name": "userStyles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.FlowElement",
  "description": "Allows you to read and write user styles on a FlowElement object."},
{ "name": "userStyles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Returns the <code>userStyles</code> on this TextLayoutFormat."},
{ "name": "userStyles",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Allows you to read and write user styles on a ContainerController object."},
{ "name": "userZoom",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "usesDiscretionaryHyphens",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ConfigSettings",
  "description": ""},
{ "name": "usingCustomCompareFunction",
  "type": "Property",
  "class": "mx.collections.ISortField",
  "description": "True if this <code>ISortField</code> uses a custom comparator function."},
{ "name": "usingCustomCompareFunction",
  "type": "Property",
  "class": "mx.collections.SortField",
  "description": ""},
{ "name": "usingCustomCompareFunction",
  "type": "Property",
  "class": "org.apache.royale.collections.ISortField",
  "description": "True if this <code>ISortField</code> uses a custom comparator function."},
{ "name": "usingCustomCompareFunction",
  "type": "Property",
  "class": "org.apache.royale.collections.SortField",
  "description": ""},
{ "name": "v",
  "type": "Property",
  "class": "org.apache.royale.utils.HSV",
  "description": ""},
{ "name": "valid",
  "type": "Event",
  "description": "Dispatched when the component has finished its construction and has all initialization properties set."},
{ "name": "valid",
  "type": "Event",
  "description": "Dispatched when validation succeeds."},
{ "name": "valid",
  "type": "Event",
  "description": "Dispatched when the form validation succeeds."},
{ "name": "validPoints",
  "type": "Property",
  "class": "mx.charts.series.renderData.LineSeriesRenderData",
  "description": "The number of points in the cache that were not filtered out by the axes."},
{ "name": "validate",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Performs validation and optionally notifies the listeners of the result."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": "Determines whether a view is valid or not  defaults true if the form has no validation"},
{ "name": "validate",
  "type": "Method",
  "class": "mx.validators.IValidator",
  "description": "Performs validation and optionally notifies the listeners of the result."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Performs validation and return the result."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.FormValidator",
  "description": "Override of the base class validate() method to call all validators in the form."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.CheckBoxValidator",
  "description": "Override of the base class validate() method to validate if selected."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.DateValidator",
  "description": "Override of the base class validate() method to validate if selected."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.StringValidator",
  "description": "Override of the base class validate() method to validate a String."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.SelectedItemNullValidator",
  "description": "Override of the base class validate() method to validate if selected."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.RadioButtonValidator",
  "description": "Override of the base class validate() method to validate if selected."},
{ "name": "validate",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.EmailValidator",
  "description": "Override of the base class validate() method to validate a the host textinput as email."},
{ "name": "validateAll",
  "type": "Method",
  "class": "mx.validators.Validator",
  "description": "Invokes all the validators in the <code>validators</code> Array."},
{ "name": "validateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Calls the <code>updateData()</code> and <code>updateMapping()</code> methods of the series, if necessary."},
{ "name": "validateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Calls the <code>updateMapping()</code> and <code>updateFilter()</code> methods of the canvas, if necessary."},
{ "name": "validateData",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Calls the <code>updateMapping()</code> and <code>updateFilter()</code> methods of the canvas, if necessary."},
{ "name": "validateDisplayList",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "validateDisplayList",
  "type": "Method",
  "class": "spark.core.IGraphicElement",
  "description": "Called by the <code>IGraphicElementContainer</code> to redraw this element in its <code>displayObject</code> property."},
{ "name": "validateDisplayList",
  "type": "Method",
  "class": "mx.managers.ILayoutManagerClient",
  "description": "Validates the position and size of children and draws other visuals."},
{ "name": "validateEmail",
  "type": "Method",
  "class": "org.apache.royale.jewel.beads.validators.EmailValidator",
  "description": ""},
{ "name": "validateFunction",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "set your custom validation logic"},
{ "name": "validateNow",
  "type": "Method",
  "class": "mx.core.IInvalidating",
  "description": "Validates and updates the properties and layout of this object by immediately calling <code>validateProperties()</code>, <code>validateSize()</code>, and <code>validateDisplayList()</code>, if necessary."},
{ "name": "validateNow",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Validate and update the properties and layout of this object and redraw it, if necessary."},
{ "name": "validateProperties",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Used by layout logic to validate the properties of a component by calling the <code>commitProperties()</code> method."},
{ "name": "validateProperties",
  "type": "Method",
  "class": "spark.core.IGraphicElement",
  "description": "Called by the <code>IGraphicElementContainer</code> to validate the properties of this element."},
{ "name": "validateProperties",
  "type": "Method",
  "class": "mx.managers.ILayoutManagerClient",
  "description": "Validates the properties of a component."},
{ "name": "validateSize",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": ""},
{ "name": "validateSize",
  "type": "Method",
  "class": "spark.core.IGraphicElement",
  "description": "Called by the <code>IGraphicElementContainer</code> to validate the size of this element."},
{ "name": "validateSize",
  "type": "Method",
  "class": "mx.managers.ILayoutManagerClient",
  "description": "Validates the measured size of the component If the <code>LayoutManager."},
{ "name": "validateString",
  "type": "Method",
  "class": "mx.validators.StringValidator",
  "description": "Convenience method for calling a validator."},
{ "name": "validateTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.Series",
  "description": "Calls the <code>updateFilter()</code> and <code>updateTransform()</code> methods of the series, if necessary."},
{ "name": "validateTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.PolarDataCanvas",
  "description": "Calls the <code>updateTransform()</code> method of the canvas, if necessary."},
{ "name": "validateTransform",
  "type": "Method",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Calls the <code>updateTransform()</code> method of the canvas, if necessary."},
{ "name": "validationResultHandler",
  "type": "Method",
  "class": "mx.validators.IValidatorListener",
  "description": "Handles both the <code>valid</code> and <code>invalid</code> events from a  validator assigned to this component."},
{ "name": "validationResultHandler",
  "type": "Method",
  "class": "mx.core.UIComponent",
  "description": "Handles both the <code>valid</code> and <code>invalid</code> events from a validator assigned to this component."},
{ "name": "validationSubField",
  "type": "Property",
  "class": "mx.validators.IValidatorListener",
  "description": "Used by a validator to assign a subfield."},
{ "name": "validationSubField",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "Used by a validator to associate a subfield with this component."},
{ "name": "validity",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "validity",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The validity of the line."},
{ "name": "validity",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ITextLine",
  "description": ""},
{ "name": "validity",
  "type": "Property",
  "class": "org.apache.royale.text.html.TextLine",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.jewel.NumericStepper",
  "description": "The current value of the control."},
{ "name": "value",
  "type": "Property",
  "class": "mx.events.NumericStepperEvent",
  "description": "The value of the NumericStepper control when the event was dispatched."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.jewel.Slider",
  "description": "The current value of the Slider."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.Slider",
  "description": "The current value of the Slider."},
{ "name": "value",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.jewel.RadioButton",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Button",
  "description": "The current value of the control"},
{ "name": "value",
  "type": "Property",
  "class": "mx.controls.RadioButton",
  "description": "Optional user-defined value that is associated with a RadioButton control."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.RadioButton",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "spark.components.RadioButton",
  "description": "Optional user-defined value that is associated with a RadioButton component."},
{ "name": "value",
  "type": "Property",
  "class": "mx.charts.series.items.PieSeriesItem",
  "description": "The value this wedge represents from the PieSeries' dataProvider."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.events.ValueEvent",
  "description": "The value."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.core.IRangeModel",
  "description": "The current value."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModel",
  "description": "The current value of the range, between the minimum and maximum values."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.RangeModelExtended",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.net.URLRequestHeader",
  "description": "A value of an HTTPRequestHeader"},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.states.SetProperty",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "mx.controls.NumericStepper",
  "description": "Current value displayed in the text area of the NumericStepper control."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.jewel.Spinner",
  "description": "The current value of the Spinner."},
{ "name": "value",
  "type": "Property",
  "class": "mx.collections.CursorBookmark",
  "description": "The underlying marker representation of the bookmark."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Progress",
  "description": "A Number value that reflects the current value; if the progress bar is an indeterminate progress bar, it returns 0."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.mdl.RadioButton",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.NumericStepper",
  "description": "The current value of the control."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": "The current value of the range, between the minimum and maximum values."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.RangeStepper",
  "description": "The value selected or set."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.core.IValueToggleButtonModel",
  "description": "A value associated with this instance of the ToggleButton."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ValueToggleButtonModel",
  "description": "The current value of the button collection."},
{ "name": "value",
  "type": "Property",
  "class": "mx.events.SliderEvent",
  "description": "The new value of the slider."},
{ "name": "value",
  "type": "Property",
  "class": "mx.controls.ComboBase",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "mx.charts.chartClasses.BoundedValue",
  "description": "The value to be rendered."},
{ "name": "value",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": "Read-only property that contains the amount of progress that has been made - between the minimum and maximum values."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.elements.Input",
  "description": "The current value of the control"},
{ "name": "value",
  "type": "Property",
  "class": "mx.events.TweenEvent",
  "description": "For a <code>tweenStart</code> or <code>tweenUpdate</code> event, the value passed to the <code>onTweenUpdate()</code> method; for a <code>tweenEnd</code> event, the value passed to the <code>onTweenEnd()</code> method."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.mdl.CheckBox",
  "description": "The value associated with the CheckBox."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.SliderRangeModel",
  "description": "The current value of the range, between the minimum and maximum values."},
{ "name": "value",
  "type": "Property",
  "class": "spark.components.supportClasses.Range",
  "description": "The current value for this range."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.mdl.beads.models.SliderRangeModel",
  "description": "The current value of the range, between the minimum and maximum values."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPHeader",
  "description": "The value for the header."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "The value of whatever it is we are watching."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.mdl.Slider",
  "description": "The current value of the Slider."},
{ "name": "value",
  "type": "Property",
  "class": "mx.charts.AxisLabel",
  "description": "The value that the label represents."},
{ "name": "value",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianCanvasValue",
  "description": ""},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.html.Spinner",
  "description": "The current value of the Spinner."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.jewel.CheckBox",
  "description": "The value associated with the CheckBox."},
{ "name": "value",
  "type": "Property",
  "class": "org.apache.royale.reflection.MetaDataArgDefinition",
  "description": "the 'key' value of a metadata argument in [Event(name=\"boom\")] the value for the 1st (only) argument is 'boom'"},
{ "name": "valueChange",
  "type": "Event",
  "description": ""},
{ "name": "valueChange",
  "type": "Event",
  "description": "Dispatched when Slider change its value."},
{ "name": "valueChange",
  "type": "Event",
  "description": ""},
{ "name": "valueChange",
  "type": "Event",
  "description": ""},
{ "name": "valueChange",
  "type": "Event",
  "description": ""},
{ "name": "valueChange",
  "type": "Event",
  "description": ""},
{ "name": "valueChanged",
  "type": "Method",
  "class": "org.apache.royale.binding.GenericBinding",
  "description": "The method that gets called by the watcher when the value may have changed."},
{ "name": "valueCommit",
  "type": "Event",
  "description": "Dispatched when values are changed programmatically or by user interaction."},
{ "name": "valueCommit",
  "type": "Event",
  "description": "Dispatched when values are changed programmatically or by user interaction."},
{ "name": "valueField",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.VerticalLinearAxisBead",
  "description": "The name of field within the chart data the holds the value being mapped to this axis."},
{ "name": "valueField",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.HorizontalLinearAxisBead",
  "description": "The name of field within the chart data the holds the value being mapped to this axis."},
{ "name": "valueOf",
  "type": "Method",
  "class": "Namespace",
  "description": ""},
{ "name": "values",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleValuesImpl",
  "description": "The map of values."},
{ "name": "values",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "The map of values."},
{ "name": "valuesAreSubsetOfObject",
  "type": "Method",
  "class": "mx.utils.ObjectUtil",
  "description": "Verifies if the first object is dynamic and is a subset of the second object."},
{ "name": "valuesImpl",
  "type": "Property",
  "class": "org.apache.royale.core.Application",
  "description": "The org."},
{ "name": "valuesImpl",
  "type": "Property",
  "class": "mx.core.Application",
  "description": "The org."},
{ "name": "valuesImpl",
  "type": "Property",
  "class": "org.apache.royale.html.UIModule",
  "description": "The org."},
{ "name": "valuesImpl",
  "type": "Property",
  "class": "org.apache.royale.createjs.Application",
  "description": "The org."},
{ "name": "valuesImpl",
  "type": "Property",
  "class": "org.apache.royale.jewel.Application",
  "description": "The org."},
{ "name": "valuesImpl",
  "type": "Property",
  "class": "spark.components.Application",
  "description": "The org."},
{ "name": "valuesImpl",
  "type": "Property",
  "class": "org.apache.royale.core.ValuesManager",
  "description": "The implementation of IValuesImpl where you can get default values and shared instances."},
{ "name": "valuesImpl",
  "type": "Property",
  "class": "org.apache.royale.jewel.Module",
  "description": "The org."},
{ "name": "variableColumnWidth",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "If <code>true</code>, specifies that layout elements are to be allocated their preferred width."},
{ "name": "variableRowHeight",
  "type": "Property",
  "class": "spark.components.DataGrid",
  "description": ""},
{ "name": "variableRowHeight",
  "type": "Property",
  "class": "mx.controls.listClasses.ListBase",
  "description": "A flag that indicates whether the individual rows can have different height."},
{ "name": "variableRowHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensions",
  "description": "If variableRowHeight is false, calling getRowHeight will return the value of defaultRowHeight."},
{ "name": "variableRowHeight",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "variableRowHeight",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "Specifies whether layout elements are allocated their preferred height."},
{ "name": "variableRowHeight",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": "If <code>true</code>, each row's height is the maximum of preferred heights of the cells displayed so far."},
{ "name": "variables",
  "type": "Property",
  "class": "org.apache.royale.reflection.TypeDefinition",
  "description": "The instance variables associated with a \"class\" kind TypeDefinition An array of VariableDefinition instances"},
{ "name": "variant",
  "type": "Property",
  "class": "mx.resources.Locale",
  "description": "The variant part of this Locale instance."},
{ "name": "version",
  "type": "Property",
  "class": "org.apache.royale.utils.BrowserInfo",
  "description": "The browser version."},
{ "name": "version",
  "type": "Property",
  "class": "org.apache.royale.net.remoting.messages.ActionMessage",
  "description": "The version of the ActionMessage."},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Vertical alignment or justification (adopts default value if undefined during cascade)."},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Vertical alignment or justification (adopts default value if undefined during cascade)."},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Vertical alignment or justification (adopts default value if undefined during cascade)."},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "mx.core.Container",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "spark.layouts.VerticalLayout",
  "description": "The vertical alignment of the content relative to the container's height."},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "spark.components.Label",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "spark.layouts.HorizontalLayout",
  "description": "The vertical alignment of layout elements."},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "org.apache.royale.core.SimpleCSSStyles",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStyles",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "spark.components.HGroup",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "mx.controls.Image",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Specifies how to align the elements within the cells in the vertical direction."},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "spark.components.VGroup",
  "description": ""},
{ "name": "verticalAlign",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "verticalAlignProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.StackedSeries",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianDataCanvas",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxis",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "Defines the labels, tick marks, and data position for items on the y-axis."},
{ "name": "verticalAxisBead",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.layouts.ChartBaseLayout",
  "description": "The vertical axis bead or null if one is not present."},
{ "name": "verticalAxisGroup",
  "type": "Property",
  "class": "org.apache.royale.charts.beads.ChartView",
  "description": "The IAxisGroup that represents the vertical axis."},
{ "name": "verticalAxisRatio",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Determines the width limit of the vertical axis."},
{ "name": "verticalAxisRenderer",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Specifies how data appears along the y-axis of a chart."},
{ "name": "verticalAxisRenderers",
  "type": "Property",
  "class": "mx.charts.chartClasses.CartesianChart",
  "description": "Specifies how data appears along the y-axis of a chart."},
{ "name": "verticalCenter",
  "type": "Property",
  "class": "mx.core.ILayoutElement",
  "description": "The vertical distance in pixels from the center of the component to the center of the anchor target's content area."},
{ "name": "verticalCenter",
  "type": "Property",
  "class": "mx.core.UIComponent",
  "description": "<p>For components, this layout constraint property is a facade on top of the similarly-named style."},
{ "name": "verticalCenter",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": ""},
{ "name": "verticalFocus",
  "type": "Property",
  "class": "mx.charts.effects.effectClasses.SeriesZoomInstance",
  "description": "Defines the location of the focul point of the zoom."},
{ "name": "verticalFocus",
  "type": "Property",
  "class": "mx.charts.effects.SeriesZoom",
  "description": "Defines the location of the focal point of the zoom."},
{ "name": "verticalGap",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "Number of pixels between children in the vertical direction."},
{ "name": "verticalGap",
  "type": "Property",
  "class": "mx.core.FlexCSSStyles",
  "description": ""},
{ "name": "verticalGap",
  "type": "Property",
  "class": "spark.layouts.TileLayout",
  "description": "Vertical space between rows, in pixels."},
{ "name": "verticalGap",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The verticalGap between items."},
{ "name": "verticalGap",
  "type": "Property",
  "class": "spark.components.TileGroup",
  "description": ""},
{ "name": "verticalScrollPolicy",
  "type": "Property",
  "class": "mx.core.ScrollControlBase",
  "description": "A property that indicates whether the vertical scroll bar is always on, always off, or automatically changes based on the parameters passed to the <code>setScrollBarProperties()</code> method."},
{ "name": "verticalScrollPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "verticalScrollPolicy",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "A property that indicates whether the vertical scroll bar is always on, always off, or automatically changes based on the parameters passed to the <code>setScrollBarProperties()</code> method."},
{ "name": "verticalScrollPolicy",
  "type": "Property",
  "class": "mx.controls.Menu",
  "description": ""},
{ "name": "verticalScrollPolicy",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Specifies whether the vertical scroll bar is always present, always absent, or automatically added when needed."},
{ "name": "verticalScrollPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": "Controls whether the factory generates all text lines or stops when the container bounds are filled."},
{ "name": "verticalScrollPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.factory.TextLineFactoryBase",
  "description": "Specifies how lines are created when the composition bounds are not large enough."},
{ "name": "verticalScrollPolicy",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Specifies the vertical scrolling policy, which you can set by assigning one of the constants of the ScrollPolicy class: ON, OFF, or, AUTO."},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "mx.core.ScrollControlBase",
  "description": "The offset into the content from the top edge."},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "spark.components.supportClasses.GroupBase",
  "description": ""},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.IContainerController",
  "description": ""},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": ""},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "The current position of the vertical scroll bar."},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.TextContainerManager",
  "description": ""},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.core.IScrollingViewport",
  "description": "Vertical scroll position."},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport",
  "description": ""},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.container.ContainerController",
  "description": "Specifies the current vertical scroll location on the stage."},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.ScrollingViewport",
  "description": ""},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "spark.components.Grid",
  "description": ""},
{ "name": "verticalScrollPosition",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.HScrollViewport",
  "description": ""},
{ "name": "verticalScrollingLocked",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": ""},
{ "name": "verticalTextLayout",
  "type": "Property",
  "class": "org.apache.royale.text.ime.IIMEClient",
  "description": "Indicates whether the text in the component is vertical or not."},
{ "name": "view",
  "type": "Property",
  "class": "org.apache.royale.core.IStrandWithModelView",
  "description": "Each Strand has an view object."},
{ "name": "view",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": "An IBeadView that serves as the view for the component."},
{ "name": "view",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "view",
  "type": "Property",
  "class": "mx.collections.IViewCursor",
  "description": "A reference to the ICollectionView with which this cursor is associated."},
{ "name": "view",
  "type": "Property",
  "class": "mx.collections.LeafNodeCursor",
  "description": ""},
{ "name": "view",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": "The view."},
{ "name": "view",
  "type": "Property",
  "class": "mx.controls.treeClasses.HierarchicalViewCursor",
  "description": ""},
{ "name": "view",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": "The view."},
{ "name": "view",
  "type": "Property",
  "class": "mx.collections.HierarchicalCollectionViewCursor",
  "description": ""},
{ "name": "view",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": ""},
{ "name": "viewBead",
  "type": "Property",
  "class": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": ""},
{ "name": "viewBead",
  "type": "Property",
  "class": "org.apache.royale.html.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "viewBead",
  "type": "Property",
  "class": "org.apache.royale.html.beads.KeepComboPopupWithinParentBounds",
  "description": ""},
{ "name": "viewBead",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "viewChanged",
  "type": "Event",
  "description": "Dispatched at startup after the initial view has been put on the display list."},
{ "name": "viewChanged",
  "type": "Event",
  "description": "Dispatched at startup after the initial view has been put on the display list."},
{ "name": "viewChanged",
  "type": "Event",
  "description": "Event dispatched when the current (selected) view changes."},
{ "name": "viewChanged",
  "type": "Event",
  "description": ""},
{ "name": "viewChanged",
  "type": "Event",
  "description": ""},
{ "name": "viewChanged",
  "type": "Event",
  "description": "Dispatched at startup after the initial view has been put on the display list."},
{ "name": "viewChanged",
  "type": "Event",
  "description": "Dispatched at startup after the initial view has been put on the display list."},
{ "name": "viewColumnCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "viewColumnCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "The number of columns displayed by the target GridView."},
{ "name": "viewColumnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "viewColumnIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "The column index origin of the grid region displayed by the target GridView."},
{ "name": "viewManager",
  "type": "Property",
  "class": "org.apache.royale.mobile.IViewManagerView",
  "description": "The parent view manager."},
{ "name": "viewManager",
  "type": "Property",
  "class": "org.apache.royale.mobile.TitleView",
  "description": ""},
{ "name": "viewManager",
  "type": "Property",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": "This view manager's parent view manager, if any."},
{ "name": "viewMetrics",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Returns an object that has four properties: <code>left</code>, <code>top</code>, <code>right</code>, and <code>bottom</code>."},
{ "name": "viewMetricsAndPadding",
  "type": "Property",
  "class": "mx.core.Container",
  "description": "Returns an object that has four properties: <code>left</code>, <code>top</code>, <code>right</code>, and <code>bottom</code>."},
{ "name": "viewMetricsAndPadding",
  "type": "Property",
  "class": "mx.charts.Legend",
  "description": "Returns an object that has four properties: <code>left</code>, <code>top</code>, <code>right</code>, and <code>bottom</code>."},
{ "name": "viewOriginX",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": "Return the Grid X coordinate of the GridDimensionView's viewRow,ColumnIndex origin."},
{ "name": "viewOriginY",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": "Return the Grid Y coordinate of the GridDimensionView's viewRow,ColumnIndex origin."},
{ "name": "viewRowCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "viewRowCount",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "The number of rows displayed by the target GridView."},
{ "name": "viewRowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.GridDimensionsView",
  "description": ""},
{ "name": "viewRowIndex",
  "type": "Property",
  "class": "spark.components.gridClasses.GridViewLayout",
  "description": "The row index origin of the grid region displayed by the target GridView."},
{ "name": "viewSelector",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": "The button to display month and year and select from a list of years"},
{ "name": "viewState",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "0 - days (calendar view): Select a day in a month calendar view, can navigate by months 1 - years (year view): Select a year from a list of years, can navigate by group of years 2 - months (months view): Select a month from the list of all months, there is no navigation"},
{ "name": "viewport",
  "type": "Property",
  "class": "org.apache.royale.html.beads.ContainerView",
  "description": "The viewport used to present the content and may display scroll bars (depending on the actual type of viewport)."},
{ "name": "viewport",
  "type": "Property",
  "class": "spark.components.Scroller",
  "description": "The viewport component to be scrolled."},
{ "name": "views",
  "type": "Property",
  "class": "org.apache.royale.mobile.ViewManagerBase",
  "description": "The current set of views in the stack."},
{ "name": "views",
  "type": "Property",
  "class": "org.apache.royale.mobile.StackedViewManager",
  "description": "The current set of views in the stack."},
{ "name": "views",
  "type": "Property",
  "class": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The array of views displayed in the contentArea of the ViewManager."},
{ "name": "virtualLayoutSupported",
  "type": "Property",
  "class": "spark.layouts.supportClasses.LayoutBase",
  "description": "Specifies whether this layout supports virtual layout."},
{ "name": "virtualLayoutSupported",
  "type": "Property",
  "class": "spark.layouts.BasicLayout",
  "description": ""},
{ "name": "visibility",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "org.apache.royale.core.IUIBase",
  "description": "Whether the component is visible."},
{ "name": "visible",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "mx.core.IVisualElement",
  "description": "Controls the visibility of this visual element."},
{ "name": "visible",
  "type": "Property",
  "class": "spark.components.supportClasses.TextBase",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "mx.controls.ProgressBar",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "If <code>true</code>, the column is visible."},
{ "name": "visible",
  "type": "Property",
  "class": "org.apache.royale.mdl.Dialog",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "spark.primitives.Path",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "visible",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "If <code>true</code>, then display this column."},
{ "name": "visibleRect",
  "type": "Property",
  "class": "org.apache.royale.effects.PlatformWiper",
  "description": "The visible rectangle."},
{ "name": "visibleRegion",
  "type": "Property",
  "class": "mx.charts.chartClasses.RenderData",
  "description": "The rectangle describing the possible coordinate range that a series can display on screen."},
{ "name": "visualization",
  "type": "Method",
  "class": "google.maps.visualization",
  "description": ""},
{ "name": "visualization",
  "type": "Class",
  "description": ""},
{ "name": "vjBeginLineIndex",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": ""},
{ "name": "vjDisableThisParcel",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ComposeState",
  "description": ""},
{ "name": "vmax",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "vmin",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "vsMinHeight",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": ""},
{ "name": "vsPreferredHeight",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": ""},
{ "name": "vsPreferredWidth",
  "type": "Property",
  "class": "mx.containers.ViewStack",
  "description": ""},
{ "name": "waitForRoyaleClientId",
  "type": "Property",
  "class": "mx.messaging.RoyaleClient",
  "description": ""},
{ "name": "warn",
  "type": "Method",
  "class": "mx.logging.ILogger",
  "description": "Logs the specified data using the <code>LogEventLevel."},
{ "name": "warn",
  "type": "Method",
  "class": "mx.logging.LogLogger",
  "description": ""},
{ "name": "wasLastCall",
  "type": "Method",
  "class": "mx.rpc.ActiveCalls",
  "description": ""},
{ "name": "watch",
  "type": "Method",
  "class": "mx.binding.utils.ChangeWatcher",
  "description": "Creates and starts a ChangeWatcher instance."},
{ "name": "watchXML",
  "type": "Method",
  "class": "mx.utils.XMLNotifier",
  "description": "Given an XML or XMLList, add the notification function to watch for changes."},
{ "name": "watchedProperty",
  "type": "Property",
  "class": "org.apache.royale.html.beads.layouts.LayoutChangeNotifier",
  "description": "The value of the property being watched."},
{ "name": "watcherChain",
  "type": "Property",
  "class": "org.apache.royale.binding.ChainBinding",
  "description": "The watcher for the component at document[source[0]]"},
{ "name": "waterfall",
  "type": "Property",
  "class": "org.apache.royale.mdl.Header",
  "description": "A boolean flag to activate \"mdl-layout__header--waterfall\" effect selector."},
{ "name": "weather",
  "type": "Method",
  "class": "google.maps.weather",
  "description": ""},
{ "name": "weather",
  "type": "Class",
  "description": ""},
{ "name": "weight",
  "type": "Property",
  "class": "org.apache.royale.graphics.IStroke",
  "description": ""},
{ "name": "weight",
  "type": "Property",
  "class": "mx.graphics.IStroke",
  "description": "The line weight, in pixels."},
{ "name": "weight",
  "type": "Property",
  "class": "mx.graphics.Stroke",
  "description": ""},
{ "name": "weight",
  "type": "Property",
  "class": "mx.graphics.SolidColorStroke",
  "description": ""},
{ "name": "weight",
  "type": "Property",
  "class": "org.apache.royale.graphics.SolidColorStroke",
  "description": "A color value."},
{ "name": "whiteSpace",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "whiteSpaceCollapse",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Collapses or preserves whitespace when importing text into a TextFlow."},
{ "name": "whiteSpaceCollapse",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Collapses or preserves whitespace when importing text into a TextFlow."},
{ "name": "whiteSpaceCollapse",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Collapses or preserves whitespace when importing text into a TextFlow."},
{ "name": "whiteSpaceCollapse",
  "type": "Property",
  "class": "org.apache.royale.textLayout.conversion.ImportExportConfiguration",
  "description": "Whitespace collapse export setting"},
{ "name": "whiteSpaceCollapseProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "wideScreenDenominator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The Y Number for \"widescreen-col-X-Y\" effect selector."},
{ "name": "wideScreenDenominator",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "The Y Number for \"widescreen-col-X-Y\" effect selector."},
{ "name": "wideScreenNumerator",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The X Number for \"widescreen-col-X-Y\" effect selector."},
{ "name": "wideScreenNumerator",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "The X Number for \"widescreen-col-X-Y\" effect selector."},
{ "name": "wideScreenVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.ResponsiveVisibility",
  "description": "Makes the component to be visible or hidden in phone size Uses \"visible-widescreen\" and \"hidden-widescreen\" effect selectors."},
{ "name": "wideScreenVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "Makes the cell to be visible or hidden in phone size Uses \"visible-widescreen\" and \"hidden-widescreen\" effect selectors."},
{ "name": "wideScreenVisible",
  "type": "Property",
  "class": "org.apache.royale.jewel.GridCell",
  "description": "Makes the cell to be visible or hidden in phone size Uses \"visible-widescreen\" and \"hidden-widescreen\" effect selectors."},
{ "name": "widows",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.core.IUIBase",
  "description": "The width of the bounding box."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.core.ILayoutView",
  "description": "Returns the width of the layout object's content area."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.CreateJSBase",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.core.ApplicationBase",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "mx.core.IVisualElement",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The display width for the itemRenderer."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.core.IContentView",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "spark.primitives.BitmapImage",
  "description": "The width of the graphic element."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGBoxItemRenderer",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.core.TextLineMetrics",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.InsertInlineGraphicOperation",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "mx.containers.utilityClasses.FlexChildInfo",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "mx.controls.colorPickerClasses.SwatchPanel",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "spark.components.Group",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "The width of the bounding box."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.svg.Ellipse",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.core.styles.BorderStyles",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableElement",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": "Returns the table width"},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Sets the width of the container"},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "The width of the bounding box."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IInlineGraphicElement",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "mx.controls.dataGridClasses.DataGridColumn",
  "description": "The width of the column, in pixels."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": "Gets the width."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.operations.ModifyInlineGraphicOperation",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.geom.Size",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Slug",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "The width of the bounding box."},
{ "name": "width",
  "type": "Property",
  "class": "spark.components.gridClasses.GridColumn",
  "description": "The width of this column in pixels."},
{ "name": "width",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": "The width of the graphic."},
{ "name": "width",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": "Number that specifies the width of the ConstraintColumn instance, in pixels, in the parent container's coordinates."},
{ "name": "widthBy",
  "type": "Property",
  "class": "org.apache.royale.effects.Resize",
  "description": "The change in width."},
{ "name": "widthFrom",
  "type": "Property",
  "class": "org.apache.royale.effects.Resize",
  "description": "Starting width value."},
{ "name": "widthInChars",
  "type": "Property",
  "class": "spark.components.RichEditableText",
  "description": "The default width of the control, measured in em units."},
{ "name": "widthInChars",
  "type": "Property",
  "class": "spark.components.TextInput",
  "description": "The default width of the control, measured in em units."},
{ "name": "widthPropertyDefinition",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.InlineGraphicElement",
  "description": ""},
{ "name": "widthTo",
  "type": "Property",
  "class": "org.apache.royale.effects.Resize",
  "description": "Ending width value."},
{ "name": "widthType",
  "type": "Property",
  "class": "org.apache.royale.html.ButtonBar",
  "description": ""},
{ "name": "widthType",
  "type": "Property",
  "class": "mx.controls.ToggleButtonBar",
  "description": ""},
{ "name": "widthType",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.ButtonBarModel",
  "description": "Indicates how to interpret the values of the buttonWidths array."},
{ "name": "willChange",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "willTrigger",
  "type": "Method",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "willTrigger",
  "type": "Method",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "windowActive",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.ISelectionManager",
  "description": "Indicates whether the window associated with the text flow is active."},
{ "name": "windowActive",
  "type": "Property",
  "class": "org.apache.royale.textLayout.edit.SelectionManager",
  "description": ""},
{ "name": "withCredentials",
  "type": "Property",
  "class": "org.apache.royale.net.beads.CORSCredentialsBead",
  "description": "Pass the user credentials or not."},
{ "name": "withCredentials",
  "type": "Property",
  "class": "org.apache.royale.net.HTTPService",
  "description": "Allows Javascript cross-site Access-Control requests to be made using credentials such as cookies or authorization headers"},
{ "name": "wizard",
  "type": "Property",
  "class": "org.apache.royale.jewel.WizardPage",
  "description": ""},
{ "name": "wizard",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.WizardView",
  "description": "The org."},
{ "name": "wizard",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controllers.WizardController",
  "description": "The org."},
{ "name": "wordBreak",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "wordSpacing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "Specifies the optimum, minimum, and maximum spacing (as a multiplier of the width of a normal space) between words to use during justification."},
{ "name": "wordSpacing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: Specifies the optimum, minimum, and maximum spacing (as a multiplier of the width of a normal space) between words to use during justification."},
{ "name": "wordSpacing",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "Specifies the optimum, minimum, and maximum spacing (as a multiplier of the width of a normal space) between words to use during justification."},
{ "name": "wordSpacing",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "wordSpacingProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "wordWrap",
  "type": "Property",
  "class": "mx.controls.listClasses.AdvancedListBase",
  "description": "A flag that indicates whether text in the row should be word wrapped."},
{ "name": "wordWrap",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "wordWrap",
  "type": "Property",
  "class": "mx.controls.advancedDataGridClasses.AdvancedDataGridColumn",
  "description": "Set to <code>false</code> to wrap the text in a row of this column because it does not fit on one line If <code>undefined</code>, the AdvancedDataGrid control's <code>wordWrap</code> property is used."},
{ "name": "wordWrap",
  "type": "Property",
  "class": "mx.core.IUITextField",
  "description": ""},
{ "name": "wordWrap",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "wordWrap",
  "type": "Property",
  "class": "mx.controls.TextArea",
  "description": "Indicates whether the text automatically wraps at the end of a line."},
{ "name": "workingLine",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.SimpleCompose",
  "description": ""},
{ "name": "wrapEvent",
  "type": "Method",
  "class": "org.apache.royale.events.IBrowserEvent",
  "description": ""},
{ "name": "wrapEvent",
  "type": "Method",
  "class": "org.apache.royale.events.KeyboardEvent",
  "description": ""},
{ "name": "wrapEvent",
  "type": "Method",
  "class": "mx.events.FocusEvent",
  "description": ""},
{ "name": "wrapEvent",
  "type": "Method",
  "class": "org.apache.royale.events.MouseEvent",
  "description": ""},
{ "name": "wrapEvent",
  "type": "Method",
  "class": "org.apache.royale.events.FocusEvent",
  "description": ""},
{ "name": "wrapEvent",
  "type": "Method",
  "class": "org.apache.royale.events.BrowserEvent",
  "description": ""},
{ "name": "wrapUpdate",
  "type": "Method",
  "class": "org.apache.royale.binding.WatcherBase",
  "description": "Calls a function inside a try catch block to try to update the value."},
{ "name": "wrappedCollection",
  "type": "Property",
  "class": "mx.controls.Tree",
  "description": "A hook for accessibility"},
{ "name": "wrapsKnockOut",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Slug",
  "description": ""},
{ "name": "writeBinaryData",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeBinaryData",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Writes a sequence of <code>length</code> bytes from the <code>source</code> BinaryData, starting at <code>offset</code> (zero-based index) bytes into the source BinaryData."},
{ "name": "writeBoolean",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeBoolean",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Write a Boolean value (as a single byte) at the current position"},
{ "name": "writeByte",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeByte",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Write a byte of binary data at the current position"},
{ "name": "writeByteAt",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Writes a byte of binary data at the specified index."},
{ "name": "writeBytes",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": ""},
{ "name": "writeDouble",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeDouble",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Writes an IEEE 754 double-precision (64-bit) floating-point number to the BinaryData at the current position"},
{ "name": "writeDynamicProperties",
  "type": "Method",
  "class": "org.apache.royale.utils.net.IDynamicPropertyWriter",
  "description": "Writes the name and value of an IDynamicPropertyOutput object to an object with dynamic properties."},
{ "name": "writeDynamicProperty",
  "type": "Method",
  "class": "org.apache.royale.utils.net.IDynamicPropertyOutput",
  "description": "Adds a dynamic property to the binary output of a serialized object."},
{ "name": "writeExternal",
  "type": "Method",
  "class": "org.apache.royale.utils.net.IExternalizable",
  "description": ""},
{ "name": "writeExternal",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.CommandMessageExt",
  "description": ""},
{ "name": "writeExternal",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.AsyncMessageExt",
  "description": ""},
{ "name": "writeExternal",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.messages.AcknowledgeMessageExt",
  "description": ""},
{ "name": "writeExternal",
  "type": "Method",
  "class": "mx.messaging.messages.AsyncMessageExt",
  "description": ""},
{ "name": "writeExternal",
  "type": "Method",
  "class": "mx.messaging.messages.AcknowledgeMessageExt",
  "description": ""},
{ "name": "writeExternal",
  "type": "Method",
  "class": "mx.messaging.messages.CommandMessageExt",
  "description": ""},
{ "name": "writeFloat",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeFloat",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Writes an IEEE 754 single-precision (32-bit) floating-point number to the BinaryData at the current position"},
{ "name": "writeInt",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeInt",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Write a signed int (32 bits) of binary data at the current position"},
{ "name": "writeObject",
  "type": "Method",
  "class": "org.apache.royale.utils.net.IDataOutput",
  "description": ""},
{ "name": "writeObject",
  "type": "Method",
  "class": "org.apache.royale.net.remoting.amf.AMFBinaryData",
  "description": ""},
{ "name": "writeShort",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeShort",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Write a short integer (16 bits, typically represented by a 32 bit int parameter between -32768 and 65535) of binary data at the current position"},
{ "name": "writeText",
  "type": "Method",
  "class": "org.apache.royale.storage.file.IDataOutput",
  "description": ""},
{ "name": "writeText",
  "type": "Method",
  "class": "org.apache.royale.storage.file.DataOutputStream",
  "description": "Writes a chunk of text into the file."},
{ "name": "writeTextToDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.IPermanentStorageProvider",
  "description": "A convenience function write a string into a file that resides in the application's data storage directory."},
{ "name": "writeTextToDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.WebStorageProvider",
  "description": "A convenience function write a string into a file that resides in the application's data storage directory."},
{ "name": "writeTextToDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AndroidExternalStorageProvider",
  "description": "A convenience function write a string into a file that resides in the application's data storage directory."},
{ "name": "writeTextToDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.IPermanentStorage",
  "description": "A convenience function write a string into a file that resides in the application's data storage directory."},
{ "name": "writeTextToDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.PermanentStorage",
  "description": "A convenience function write a string into a file that resides in the application's data storage directory."},
{ "name": "writeTextToDataFile",
  "type": "Method",
  "class": "org.apache.royale.storage.providers.AirStorageProvider",
  "description": "A convenience function write a string into a file that resides in the application's data storage directory."},
{ "name": "writeUTF",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeUTF",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Writes a UTF-8 string to the byte stream."},
{ "name": "writeUTFBytes",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeUTFBytes",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Writes a UTF-8 string to the BinaryData."},
{ "name": "writeUnsignedInt",
  "type": "Method",
  "class": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "writeUnsignedInt",
  "type": "Method",
  "class": "org.apache.royale.utils.BinaryData",
  "description": "Write an unsigned int (32 bits) of binary data at the current position"},
{ "name": "writingMode",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": "The distance by which to translate each point along the x axis."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.core.IUIBase",
  "description": "The x co-ordinate or left side position of the bounding box."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.CreateJSBase",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "mx.core.IVisualElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.createjs.graphics.Circle",
  "description": "The center X position of the circle."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The x display position for the itemRenderer."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.core.IContentView",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.core.TextLineMetrics",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IVerticalJustificationLine",
  "description": "The horizontal position of the line relative to its container, expressed as the offset in pixels from the left of the container."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The horizontal position of the line relative to its container, expressed as the offset in pixels from the left of the container."},
{ "name": "x",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "Specifies the X coordinate of the data item on the screen."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the  x value added to the transform"},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The x value of the transform."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Sets the x position of the container"},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The x value of this item converted into screen coordinates."},
{ "name": "x",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The x value of this item converted into screen coordinates."},
{ "name": "x",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The x value of this item converted into screen coordinates."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableColElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableColElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.core.TransformMoveXModel",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "The x value of this item converted into screen coordinates."},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "mx.containers.gridClasses.GridColumnInfo",
  "description": "Output: the actual position of each column, as determined by updateDisplayList()."},
{ "name": "x",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The x value of this item converted into screen coordinates."},
{ "name": "x",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The x value of this item converted into screen coordinates."},
{ "name": "x",
  "type": "Property",
  "class": "mx.core.UITextField",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "x",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The x value of this item converted into screen coordinates."},
{ "name": "x",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintColumn",
  "description": ""},
{ "name": "x2",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IConnectedItemRenderer",
  "description": "The x-coordinate of the second point to connect."},
{ "name": "xAxis",
  "type": "Property",
  "class": "org.apache.royale.charts.core.CartesianChart",
  "description": "The X Axis is typically the horizontal axis for a Cartesian chart."},
{ "name": "xBy",
  "type": "Property",
  "class": "org.apache.royale.effects.Move",
  "description": "The change in x."},
{ "name": "xField",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Specifies the field of the data provider that determines the x-axis location of the top of each bar."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The name of the field containing the X-axis value found in the data property."},
{ "name": "xField",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Specifies the field of the data provider that determines the x-axis location of the column."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGBoxItemRenderer",
  "description": "The name of the field containing the value for the X axis."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": ""},
{ "name": "xField",
  "type": "Property",
  "class": "mx.charts.chartClasses.HLOCSeriesBase",
  "description": "Specifies the field of the data provider that determines the x-axis location of the element."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": "The name of the field containing the value for the X axis."},
{ "name": "xField",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Specifies the field of the data provider that determines the x-axis location of each data point."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartSeries",
  "description": "The name field that represents the X-axis value for the chart series."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.PieSeries",
  "description": ""},
{ "name": "xField",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": "Specifies the field of the data provider that determines the x-axis location of each data point."},
{ "name": "xField",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "Specifies the field of the data provider that determines the x-axis location of each data point."},
{ "name": "xField",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "Specifies the field of the data provider that determines the position of the data points on the horizontal axis."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": ""},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": "The name of the field containing the value for the X axis."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.ColumnSeries",
  "description": ""},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": "The name of the field containing the value for the X axis."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BarSeries",
  "description": "The name of the field corresponding to the X or horizontal value for an item in the chart."},
{ "name": "xField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSeries",
  "description": "The name of the field corresponding to the X or horizontal value for an item in the chart."},
{ "name": "xFilter",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The x value of this item, filtered against the horizontal axis of the containing chart."},
{ "name": "xFilter",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The x value of this item, filtered against the horizontal axis of the containing chart."},
{ "name": "xFilter",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The x value of this item, filtered against the horizontal axis of the containing chart."},
{ "name": "xFilter",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "The x value of this item, filtered against the horizontal axis of the containing chart."},
{ "name": "xFilter",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The x value of this item, filtered against the horizontal axis of the containing chart."},
{ "name": "xFilter",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The x value of this item, filtered against the horizontal axis of the containing chart."},
{ "name": "xFilter",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The x value of this item, filtered against the horizontal axis of the containing chart."},
{ "name": "xFrom",
  "type": "Property",
  "class": "org.apache.royale.effects.Move",
  "description": "Starting x value."},
{ "name": "xFrom",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": "Starting x value."},
{ "name": "xFrom",
  "type": "Property",
  "class": "spark.primitives.Line",
  "description": "The starting x position for the line."},
{ "name": "xHeight",
  "type": "Property",
  "class": "org.apache.royale.text.engine.FontMetrics",
  "description": ""},
{ "name": "xNumber",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The x value of this item, converted to a number by the horizontal axis of the containing chart."},
{ "name": "xNumber",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The x value of this item, converted to a number by the horizontal axis of the containing chart."},
{ "name": "xNumber",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The x value of this item, converted to a number by the horizontal axis of the containing chart."},
{ "name": "xNumber",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "The x value of this item, converted to a number by the horizontal axis of the containing chart."},
{ "name": "xNumber",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The x value of this item, converted to a number by the horizontal axis of the containing chart."},
{ "name": "xNumber",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The x value of this item, converted to a numeric representation by the horizontal axis of the containing chart."},
{ "name": "xNumber",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The x value of this item, converted to a number by the horizontal axis of the containing chart."},
{ "name": "xPos",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": "Sets the tooltip y relative position to one of LEFT, MIDDLE or RIGHT."},
{ "name": "xPos",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": "Sets the tooltip y relative position to one of LEFT, MIDDLE or RIGHT."},
{ "name": "xPos",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Sets the errortip y relative position to one of LEFT, MIDDLE or RIGHT."},
{ "name": "xScale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The horizontal scale of the text as a multiplier."},
{ "name": "xScale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": "The horizontal scale of the text as a multiplier."},
{ "name": "xScale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The horizontal scale of the text as a multiplier."},
{ "name": "xScale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The horizontal scale of the text as a multiplier."},
{ "name": "xScale",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "xScaleProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "xTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "xTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "xTo",
  "type": "Property",
  "class": "org.apache.royale.effects.Move",
  "description": "Ending x value."},
{ "name": "xTo",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": "Ending x value."},
{ "name": "xTo",
  "type": "Property",
  "class": "spark.primitives.Line",
  "description": "The ending x position for the line."},
{ "name": "xValue",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The x value of this item."},
{ "name": "xValue",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The x value of this item."},
{ "name": "xValue",
  "type": "Property",
  "class": "mx.charts.series.items.HLOCSeriesItem",
  "description": "The x value of this item."},
{ "name": "xValue",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "The x value of this item."},
{ "name": "xValue",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The x value of this item."},
{ "name": "xValue",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The x value of this item."},
{ "name": "xValue",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The x value of this item."},
{ "name": "xhr",
  "type": "Property",
  "class": "org.apache.royale.net.URLStream",
  "description": ""},
{ "name": "xml",
  "type": "Property",
  "class": "mx.messaging.config.ServerConfig",
  "description": "The XML configuration; this value must contain the relevant portions of the &lt;services&gt; tag from the services-config."},
{ "name": "xmlCompare",
  "type": "Method",
  "class": "mx.collections.SortField",
  "description": "Pull the values out fo the XML object, then compare using the string or numeric comparator depending on the numeric flag."},
{ "name": "xmlCompare",
  "type": "Method",
  "class": "spark.collections.SortField",
  "description": "Pull the values out fo the XML object, then compare using the string or numeric comparator depending on the numeric flag."},
{ "name": "xmlCompare",
  "type": "Method",
  "class": "org.apache.royale.collections.SortField",
  "description": "Pull the values out fo the XML object, then compare using the string or numeric comparator depending on the numeric flag."},
{ "name": "xmlDecode",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "ActionScript function used to decode a service result from XML."},
{ "name": "xmlDecode",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "ActionScript function used to decode a service result from XML."},
{ "name": "xmlEncode",
  "type": "Property",
  "class": "mx.rpc.http.AbstractOperation",
  "description": "ActionScript function used to encode a service request as XML."},
{ "name": "xmlEncode",
  "type": "Property",
  "class": "mx.rpc.http.HTTPService",
  "description": "ActionScript function used to encode a service request as XML."},
{ "name": "xmlNotification",
  "type": "Method",
  "class": "mx.collections.XMLListAdapter",
  "description": "Called whenever an XML object contained in our list is updated in some way."},
{ "name": "xmlNotification",
  "type": "Method",
  "class": "mx.controls.treeClasses.HierarchicalCollectionView",
  "description": "Called whenever an XML object contained in our list is updated in some way."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.graphics.GradientBase",
  "description": "The distance by which to translate each point along the y axis."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.core.IUIBase",
  "description": "The y co-ordinate or top position of the bounding box."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.core.UIBase",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.UIBase",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.createjs.core.CreateJSBase",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "mx.core.IFlexDisplayObject",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "mx.core.IVisualElement",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.createjs.graphics.Circle",
  "description": "The center Y position of the circle."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The y display position for the itemRenderer."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.core.IContentView",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.svg.FilterElement",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.IVerticalJustificationLine",
  "description": "The vertical position of the line relative to its container, expressed as the offset in pixels from the top of the container."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "The vertical position of the line relative to its container, expressed as the offset in pixels from the top of the container."},
{ "name": "y",
  "type": "Property",
  "class": "mx.charts.HitData",
  "description": "Specifies the Y coordinate of the data item on the screen."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.geom.Rectangle",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the y value added to the transform"},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The y value of the transform."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableElement",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowTableBlock",
  "description": "Sets the y value of the container"},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableDataCellElement",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableRowElement",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The y value of this item converted into screen coordinates."},
{ "name": "y",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The y value of this item converted into screen coordinates."},
{ "name": "y",
  "type": "Property",
  "class": "mx.containers.gridClasses.GridRowInfo",
  "description": "Output: The actual position of each row, as determined by updateDisplayList()."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.core.TransformMoveYModel",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.ITableCellElement",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.TableCellElement",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.geom.Point",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "The y value of this item converted into screen coordinates."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The y value of this item converted into screen coordinates"},
{ "name": "y",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The y value of this item converted into screen coordinates."},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.Parcel",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.svg.GraphicContainer",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "mx.containers.utilityClasses.ConstraintRow",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.FloatCompositionData",
  "description": ""},
{ "name": "y",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The y value of this item converted into screen coordinates"},
{ "name": "y2",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IConnectedItemRenderer",
  "description": "The y-coordinate of the second point to connect."},
{ "name": "yAxis",
  "type": "Property",
  "class": "org.apache.royale.charts.core.CartesianChart",
  "description": "The Y Axis is typically the vertical axis for a Cartesian chart."},
{ "name": "yBy",
  "type": "Property",
  "class": "org.apache.royale.effects.Move",
  "description": "The change in y."},
{ "name": "yField",
  "type": "Property",
  "class": "mx.charts.series.BarSeries",
  "description": "Specifies the field of the data provider that determines the y-axis location of the bottom of each bar in the chart."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The name of the field containing the Y-axis value found in the data property."},
{ "name": "yField",
  "type": "Property",
  "class": "mx.charts.series.ColumnSeries",
  "description": "Specifies the field of the data provider that determines the y-axis location of the top of a column."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGBoxItemRenderer",
  "description": "The name of the field containing the value for the Y axis."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": ""},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": "The name of the field containing the value for the Y axis."},
{ "name": "yField",
  "type": "Property",
  "class": "mx.charts.series.LineSeries",
  "description": "Specifies the field of the data provider that determines the y-axis location of each data point."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.core.IChartSeries",
  "description": "The name field that represents the Y-axis value for the chart series."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.PieSeries",
  "description": ""},
{ "name": "yField",
  "type": "Property",
  "class": "mx.charts.series.PlotSeries",
  "description": "Specifies the field of the data provider that determines the y-axis location of each data point."},
{ "name": "yField",
  "type": "Property",
  "class": "mx.charts.series.BubbleSeries",
  "description": "Specifies the field of the data provider that determines the y-axis location of each data point."},
{ "name": "yField",
  "type": "Property",
  "class": "mx.charts.series.AreaSeries",
  "description": "Specifies the field of the data provider that determines the position of the data point on the vertical axis."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": ""},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": "The name of the field containing the value for the Y axis."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.ColumnSeries",
  "description": "The name of the field that provides the Y or vertical value for an item in the chart."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": "The name of the field containing the value for the Y axis."},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.BarSeries",
  "description": ""},
{ "name": "yField",
  "type": "Property",
  "class": "org.apache.royale.charts.supportClasses.LineSeries",
  "description": "The name of the field that provides the Y or vertical value for an item in the chart."},
{ "name": "yFilter",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The y value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "yFilter",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The y value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "yFilter",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "The y value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "yFilter",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The y value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "yFilter",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The y value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "yFilter",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The y value of this item, filtered against the vertical axis of the containing chart."},
{ "name": "yFrom",
  "type": "Property",
  "class": "org.apache.royale.effects.Move",
  "description": "Starting y value."},
{ "name": "yFrom",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": "Starting y value."},
{ "name": "yFrom",
  "type": "Property",
  "class": "spark.primitives.Line",
  "description": "The starting y position for the line."},
{ "name": "yNumber",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The y value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "yNumber",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The y value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "yNumber",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "The y value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "yNumber",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The y value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "yNumber",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The y value of this item, converted to a numeric representation by the vertical axis of the containing chart."},
{ "name": "yNumber",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The y value of this item, converted to a number by the vertical axis of the containing chart."},
{ "name": "yPos",
  "type": "Property",
  "class": "org.apache.royale.html.accessories.ToolTipBead",
  "description": "Sets the tooltip y relative position to one of TOP, MIDDLE or BOTTOM."},
{ "name": "yPos",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": "Sets the tooltip y relative position to one of TOP, MIDDLE or BOTTOM."},
{ "name": "yPos",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "Sets the errortip y relative position to one of TOP, MIDDLE or BOTTOM."},
{ "name": "yScale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
  "description": "The vertical scale of the text as a multiplier."},
{ "name": "yScale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.elements.IFlowElement",
  "description": "The vertical scale of the text as a multiplier."},
{ "name": "yScale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormatBase",
  "description": "TextLayoutFormat: The vertical scale of the text as a multiplier."},
{ "name": "yScale",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": "The vertical scale of the text as a multiplier."},
{ "name": "yScale",
  "type": "Property",
  "class": "org.apache.royale.text.engine.ElementFormat",
  "description": ""},
{ "name": "yScaleProperty",
  "type": "Property",
  "class": "org.apache.royale.textLayout.formats.TextLayoutFormat",
  "description": ""},
{ "name": "yTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.ITextFlowLine",
  "description": ""},
{ "name": "yTW",
  "type": "Property",
  "class": "org.apache.royale.textLayout.compose.TextFlowLine",
  "description": "@private"},
{ "name": "yTo",
  "type": "Property",
  "class": "org.apache.royale.effects.Move",
  "description": "Ending y value."},
{ "name": "yTo",
  "type": "Property",
  "class": "org.apache.royale.createjs.tween.Tween",
  "description": "Ending y value."},
{ "name": "yTo",
  "type": "Property",
  "class": "spark.primitives.Line",
  "description": "The ending y position for the line."},
{ "name": "yValue",
  "type": "Property",
  "class": "mx.charts.series.items.BarSeriesItem",
  "description": "The y value of this item."},
{ "name": "yValue",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The y value of this item."},
{ "name": "yValue",
  "type": "Property",
  "class": "mx.charts.series.items.LineSeriesItem",
  "description": "The y value of this item."},
{ "name": "yValue",
  "type": "Property",
  "class": "mx.charts.series.items.PlotSeriesItem",
  "description": "The y value of this item."},
{ "name": "yValue",
  "type": "Property",
  "class": "mx.charts.series.items.AreaSeriesItem",
  "description": "The y value of this item."},
{ "name": "yValue",
  "type": "Property",
  "class": "mx.charts.series.items.ColumnSeriesItem",
  "description": "The y value of this item."},
{ "name": "yearNavigationEnabled",
  "type": "Property",
  "class": "mx.controls.DateChooser",
  "description": "Enables year navigation."},
{ "name": "yearNavigationEnabled",
  "type": "Property",
  "class": "mx.controls.DateField",
  "description": "Enables year navigation."},
{ "name": "years",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The array of year in date form used in year view the number of years in view comes from NUM_YEARS_VIEW"},
{ "name": "yesButton",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.views.AlertView",
  "description": ""},
{ "name": "yesButton",
  "type": "Property",
  "class": "org.apache.royale.html.beads.AlertView",
  "description": ""},
{ "name": "yesLabel",
  "type": "Property",
  "class": "org.apache.royale.core.IAlertModel",
  "description": "The label for the Yes button in an Alert."},
{ "name": "yesLabel",
  "type": "Property",
  "class": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The label to use for the Yes button."},
{ "name": "yesLabel",
  "type": "Property",
  "class": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The label to use for the Yes button."},
{ "name": "z",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "the z value added to the transform"},
{ "name": "z",
  "type": "Property",
  "class": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "The z value of the transform."},
{ "name": "z",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The z value of this item converted into a pixel-based radius."},
{ "name": "zFilter",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The z value of this item, filtered against the radius axis of the containing chart."},
{ "name": "zIndex",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "zNumber",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The z value of this item, converted to a number by the radius axis of the containing chart."},
{ "name": "zValue",
  "type": "Property",
  "class": "mx.charts.series.items.BubbleSeriesItem",
  "description": "The z value of this item."},
{ "name": "zeroValue",
  "type": "Property",
  "class": "mx.charts.chartClasses.NumericAxis",
  "description": ""},
{ "name": "zoom",
  "type": "Property",
  "class": "org.apache.royale.maps.google.models.MapModel",
  "description": "The current zoom level."},
{ "name": "zoom",
  "type": "Property",
  "class": "org.apache.royale.textLayout.dummy.ContextMenuBuiltInItems",
  "description": ""},
{ "name": "zoom",
  "type": "Property",
  "class": "org.apache.royale.core.AllCSSStyles",
  "description": ""},
{ "name": "zoomChanged",
  "type": "Event",
  "description": ""}]}