{  "classes": [{ "name": "BasicClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "BindingClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "CSSClass",
  "description": ""},
{ "name": "CSSDataType",
  "description": ""},
{ "name": "CSSFactory",
  "description": ""},
{ "name": "ChainWatcher",
  "description": ""},
{ "name": "ChartsClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "CollectionsClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "CordovaClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "CoreClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependency analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "CreateJSClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "CubicBezierSegment",
  "description": "The CubicBezierSegment draws a cubic bezier curve from the current pen position to x, y. The control1X and control1Y properties specify the first control point; the control2X and control2Y properties specify the second control point.  <p>Cubic bezier curves are not natively supported in Flash Player. This class does an approximation based on the fixed midpoint algorithm and uses 4 quadratic curves to simulate a cubic curve.</p>  <p>For details on the fixed midpoint algorithm, see:<br/> http://timotheegroleau.com/Flash/articles/cubic_bezier_in_flash.htm</p>",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0", "3.0"]}  ]},
{ "name": "CursorData",
  "description": ""},
{ "name": "DragDropClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "EffectsClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "EllipticalArcSegment",
  "description": "The EllipticalArcSegment draws an arc from the current point to a specified point. The arc command begins with the x and y radius and ends with the ending point of the arc. Between these are three other values: x axis rotation, large arc flag and sweep flag. The x axis rotation is used to rotate the ellipse that the arc is created from. This rotation maintains the start and end points, whereas a rotation with the transform attribute (outside the path description) would cause the entire path, including the start and end points, to be rotated. The large arc flag and sweep flag control which part of the ellipse is used to cut the arc. These are needed because there's more than one way to place an ellipse so that it includes the start and end points.   Derieved from the svgweb library Original found here https://code.google.com/p/svgweb/source/browse/trunk/src/org/svgweb/utils/EllipticalArc.as?r=1251",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0", "3.0"]}  ]},
{ "name": "Enforcer",
  "description": ""},
{ "name": "ExpressClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "ExternallySetDynamicPropertyWriter",
  "description": ""},
{ "name": "FormattersClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "GraphicGroup",
  "description": ""},
{ "name": "GraphicsClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "HTML5Classes",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "HTMLClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "IconsClasses",
  "description": "This class is used to link additional classes into icons.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "JQueryClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "JewelClasses",
  "description": "This class is used to link additional classes into jewel.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "LineSegment",
  "description": "The LineSegment draws a line from the current pen position to the coordinate located at x, y.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0", "3.0"]}  ]},
{ "name": "MaterialIconType",
  "description": "The MaterialIconType class list all possible icons found in https://material.io/icons/ to use with the Icon class.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "MobileClasses",
  "description": "This class is used to link additional classes into rpc.swc beyond those that are found by dependecy analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "MoveSegment",
  "description": "The MoveSegment moves the pen to the x,y position. This class calls the <code>Graphics.moveTo()</code> method from the <code>draw()</code> method.",
"tags": [
{  "tagName": "see",
       "values": ["flash.display.Graphics", "flash.display.Graphics", "flash.display.Graphics"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0", "3.0"]}  ]},
{ "name": "NetworkClasses",
  "description": "This class is used to link additional classes into Network.swc beyond those that are found by dependency analysis starting from the classes specified in manifest.xml.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "PathSegment",
  "description": "The PathSegment class is the base class for a segment of a path. This class is not created directly. It is the base class for MoveSegment, LineSegment, CubicBezierSegment and QuadraticBezierSegment.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0", "3.0"]}  ]},
{ "name": "PathSegmentsCollection",
  "description": "Helper class that takes in a string and stores and generates a vector of Path segments. Provides methods for generating GraphicsPath and calculating bounds."},
{ "name": "Promise",
  "description": ""},
{ "name": "QuadraticBezierSegment",
  "description": "The QuadraticBezierSegment draws a quadratic curve from the current pen position to x, y.  Quadratic bezier is the native curve type in Flash Player.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0", "3.0"]}  ]},
{ "name": "QuadraticPoints",
  "description": "Utility class to store the computed quadratic points.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0", "3.0"]}  ]},
{ "name": "dialogPolyfill",
  "description": "",
"tags": [
{  "tagName": "externs",
       "values": []}  ]},
{ "name": "google.maps.Animation",
  "description": "",
"tags": [
{  "tagName": "see",
       "values": ["[google_maps_api_v3_11]", "[google_maps_api_v3_11]"]}  ]},
{ "name": "google.maps.LatLng",
  "description": "",
"tags": [
{  "tagName": "see",
       "values": ["[google_maps_api_v3_11]", "[google_maps_api_v3_11]"]}  ]},
{ "name": "google.maps.MVCObject",
  "description": "",
"tags": [
{  "tagName": "see",
       "values": ["[google_maps_api_v3_11]", "[google_maps_api_v3_11]"]}  ]},
{ "name": "google.maps.MapsEventListener",
  "description": "",
"tags": [
{  "tagName": "see",
       "values": ["[google_maps_api_v3_11]", "[google_maps_api_v3_11]"]}  ]},
{ "name": "google.maps.Marker",
  "description": "",
"tags": [
{  "tagName": "see",
       "values": ["[google_maps_api_v3_11]", "[google_maps_api_v3_11]"]}  ]},
{ "name": "org.apache.royale.binding.ApplicationDataBinding",
  "description": "The ApplicationDataBinding class implements databinding for Application instances. When you want to use databinding within the MXML file that has Application as its root tag, include the ApplicationDataBinding tag as well.  Different classes can have different databinding implementation that optimize for the different lifecycles.  For example, an item renderer databinding implementation can wait to execute databindings until the data property is set.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.ChainBinding",
  "description": "The ChainBinding class is used to track changes of nested properties.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.ConstantBinding",
  "description": "The ConstantBinding class is lightweight data-binding class that is optimized for simple assignments of one object's constant to another object's property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.ContainerDataBinding",
  "description": "The ContainerDataBinding class implements databinding for Container instances.  Place a ContainerDataBinding tag into the MXML file that has Container as its root tag. Different classes can have different databinding implementation that optimize for the different lifecycles.  For example, an item renderer databinding implementation can wait to execute databindings until the data property is set.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.DataBindingBase",
  "description": "The DataBindingBase class is the base class for custom data binding implementations that can be cross-compiled.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.GenericBinding",
  "description": "The GenericBinding class is the data-binding class that applies changes to properties of source objects to a property of the destination object.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.binding.ItemRendererDataBinding",
  "description": "The ItemRendererDataBinding class implements databinding for ItemRenderer instances.  Different classes can have different databinding implementation that optimize for the different lifecycles.  For example, an item renderer databinding implementation can wait to execute databindings until the data property is set.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.ItemRendererSimpleBinding",
  "description": "The SimpleBinding class is lightweight data-binding class that is optimized for simple assignments of one object's property to another object's property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.MXMLBeadViewDataBinding",
  "description": "The MXMLBeadViewDataBinding class implements databinding for MXMLBeadView instances.  Different classes can have different databinding implementation that optimize for the different lifecycles.  For example, an item renderer databinding implementation can wait to execute databindings until the data property is set.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.PropertyWatcher",
  "description": "The PropertyWatcher class is the data-binding class that watches for changes to various properties in objects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.binding.SimpleBinding",
  "description": "The SimpleBinding class is lightweight data-binding class that is optimized for simple assignments of one object's property to another object's property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.ViewDataBinding",
  "description": "The ViewDataBinding class implements databinding for View instances.  Different classes can have different databinding implementation that optimize for the different lifecycles.  For example, an item renderer databinding implementation can wait to execute databindings until the data property is set.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.binding.WatcherBase",
  "description": "The WatcherBase class is the base class for data-binding classes that watch various properties and styles for changes.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.charts.BarChart",
  "description": "The BarChart class draws a multi-series graph of data using vertical columns. The series property is an array of BarChartSeries instances that represent the data in the model.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.ColumnChart",
  "description": "The ColumnChart displays a histogram chart where each series in in the chart is a vertical column placed side by side.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.LineChart",
  "description": "The LineChart displays a series of line graphs with optional graphics at each vertex.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.PieChart",
  "description": "The PieChart displays data as a percentage of pie.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.StackedBarChart",
  "description": "The StackedBarChart displays a histogram chart where each series in the chart is stack next to each other.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.StackedColumnChart",
  "description": "The StackedColumnChart displays a histogram chart where each series in the chart is stack on top of each other.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.AxisBaseBead",
  "description": "The AxisBaseBead is the base class for the chart axis beads.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.ChartItemRendererFactory",
  "description": "The ChartItemRendererFactory class implements IDataProviderItemRendererMapper and creats the itemRenderers for each series in a chart. The itemRenderer class is identified on each series either through a property or through a CSS style. Once all of the itemRenderers are created, an itemsCreated event is dispatched causing the layout associated with the chart to size and position the items.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.ChartView",
  "description": "The ChartView class provides the visual elemental structure for a chart. This includes the axis areas and the chart data area where the graphs are drawn.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.DataItemRendererFactoryForSeriesArrayListData",
  "description": "The DataItemRendererFactoryForSeriesData creates the itemRenderers necessary for series-based charts.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.DataItemRendererFactoryForSeriesData",
  "description": "The DataItemRendererFactoryForSeriesData creates the itemRenderers necessary for series-based charts.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.DataTipBead",
  "description": "The DataTipBead can be added to a chart to produce a helpful tip when the moves over an itemRenderer.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.HorizontalCategoryAxisBead",
  "description": "The HorizontalCategoryAxisBead displays a horizontal axis with tick marks corresponding to data points identified by the categoryField property. This type of axis is useful for non-numeric plots.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.HorizontalCategoryAxisForArrayListBead",
  "description": "The HorizontalCategoryAxisForArrayListBead displays a horizontal axis with tick marks corresponding to data points identified by the categoryField property. This type of axis is useful for non-numeric plots.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.HorizontalLinearAxisBead",
  "description": "The HorizontalLinearAxisBead class provides a horizontal axis that uses a numeric range.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.HorizontalLinearAxisForArrayListBead",
  "description": "The HorizontalLinearAxisForArrayListBead class provides a horizontal axis that uses a numeric range.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.VerticalCategoryAxisBead",
  "description": "The VerticalCategoryAxisBead displays a vertical axis with tick marks corresponding to data points identified by the categoryField property. This type of axis is useful for non-numeric plots.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.VerticalCategoryAxisForArrayListBead",
  "description": "The VerticalCategoryAxisForArrayListBead displays a vertical axis with tick marks corresponding to data points identified by the categoryField property. This type of axis is useful for non-numeric plots.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.VerticalLinearAxisBead",
  "description": "The VerticalLinearAxisBead class provides a vertical axis that uses a numeric range.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.VerticalLinearAxisForArrayListBead",
  "description": "The VerticalLinearAxisBead class provides a vertical axis that uses a numeric range.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.controllers.ChartSeriesMouseController",
  "description": ""},
{ "name": "org.apache.royale.charts.beads.layouts.BarChartLayout",
  "description": "The BarChartLayout class calculates the size and position of all of the itemRenderers for all of the series in a BarChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.BarChartLayoutForArrayList",
  "description": "The BarChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for all of the series in a BarChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.ChartBaseLayout",
  "description": ""},
{ "name": "org.apache.royale.charts.beads.layouts.ColumnChartLayout",
  "description": "The ColumnChartLayout arranges the graphics in vertical columns (or whatever shape the renderer uses) using a category axis horizontally and a linear axis vertically.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.ColumnChartLayoutForArrayList",
  "description": "The ColumnChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for all of the series in a BarChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.LineChartCategoryVsLinearLayout",
  "description": "The LineChartCategoryVsLinearLayout displays a line graph of plot points where the horizontal axis is category value and the vertical axis is numeric.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.LineChartLinearVsLinearLayout",
  "description": "The LineChartLinearVsLinearLayout displays a line graph of plot points where both axes are numeric values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.PieChartLayout",
  "description": "The PieChartLayout class calculates the size and position of all of the itemRenderers for a PieChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.PieChartLayoutForArrayList",
  "description": "The PieChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for a PieChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.StackedBarChartLayout",
  "description": "The StackedBarChartLayout class calculates the size and position of all of the itemRenderers for all of the series in a StackedBarChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.StackedBarChartLayoutForArrayList",
  "description": "The StackedBarChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for all of the series in a BarChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.StackedColumnChartLayout",
  "description": "The StackedColumnChartLayout class calculates the size and position of all of the itemRenderers for all of the series in a StackedColumnChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.layouts.StackedColumnChartLayoutForArrayList",
  "description": "The StackedColumnChartLayoutForArrayList class calculates the size and position of all of the itemRenderers for all of the series in a BarChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.models.ChartArrayListSelectionModel",
  "description": "The ArraySelectionModel class is a selection model for a dataProvider that is an array. It assumes that items can be fetched from the dataProvider dataProvider[index].  Other selection models would support other kinds of data providers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.beads.models.ChartArraySelectionModel",
  "description": "The ArraySelectionModel class is a selection model for a dataProvider that is an array. It assumes that items can be fetched from the dataProvider dataProvider[index].  Other selection models would support other kinds of data providers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.CartesianChart",
  "description": "This class provides the basis for standard X-Y plots and anything the requires a two-dimensional function graph.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.ChartBase",
  "description": "The ChartBase class contains all of the properties common to most charts. Some charts may not make any or full use of the properties however.  A chart is based on List which provides data and item renderers to draw the chart graphics. Charts are essentially lists with a different visualization.  Similar to a List, the chart's layout provides the structure of chart while the itemRenderers take care of the actual drawing.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IAxisBead",
  "description": ""},
{ "name": "org.apache.royale.charts.core.IAxisGroup",
  "description": "The IAxisGroup defines the interface for classes that provide drawing space for chart axis objects, such as tick marks and lines.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.ICartesianChartLayout",
  "description": "This interface is implemented by any Cartesian-style chart layout bead.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IChart",
  "description": "The IChart interface is the basic interface for every chart component. All charts have a least one \"series\" - a collection of data values for each axis of the chart (a PieChart follows this pattern, too, since the total number of items in its series represents 100% of the pie and each item contributes some percentage). A Chart then uses a set of beads particular to that chart type.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IChartDataGroup",
  "description": "The IChartDataGroup is the interface for the parent element of chart itemRenderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IChartDataModel",
  "description": "The IChartDataModel provides extensions to the standard ISelectionModel to include the series selected (or rolled over).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IChartItemRenderer",
  "description": "The IChartItemRenderer interface is the interface implemented by any class that draws chart graphics.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IChartSeries",
  "description": "The IChartSeries interface is the basic interface for any type of chart data series.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IConnectedItemRenderer",
  "description": "The IConnectedItemRenderer interface is the interface used to connect data points on a chart. This interface adds a connection point, (x2,y2), to the (x,y) already supplied by IChartItemRenderer.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IHorizontalAxisBead",
  "description": "The IHorizontalAxisBead interface is a marker for any class that draws a horizontal axis. The XAxisBead is an example that implements this interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.IVerticalAxisBead",
  "description": "The IHorizontalAxisBead interface is a marker for any class that draws a verical axis. The YAxisBead is an example that implements this interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.core.PolarChart",
  "description": "This class provides the basis for circular, or polar, charts. These types of charts, which include PieCharts, may be zero or more radial axes (or 'radii').",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.optimized.SVGBoxItemRenderer",
  "description": "The SVGBoxItemRenderer draws its graphics directly into a SVGChartDataGroup (CompoundGraphic).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.optimized.SVGChartAxisGroup",
  "description": "The SVGChartAxisGroup provides a CompoundGraphic whose drawing functions can be used to display a chart's axis graphics without resorting to the creation of extra objects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.optimized.SVGChartDataGroup",
  "description": "The SVGChartDataGroup serves as the drawing canvas for SVG itemRenderers. Rather than having individual itemRenderer objects in the display list, this class provides a canvas where the itemRenderers can draw directly using the flex.core.graphics package.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.optimized.SVGLineSegmentItemRenderer",
  "description": "The SVGLineSegmentItemRenderer draws its graphics directly into a SVGChartDataGroup (a CompoundGraphic).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.optimized.SVGWedgeItemRenderer",
  "description": "The SVGWedgeItemRenderer draws its graphics directly into a SVGChartDataGroup (a CompoundGraphic).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.BarSeries",
  "description": "The BarSeries defines what field is being plotted from the chart's dataProvider. For BarChartSeries, only the xField is used.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.BoxItemRenderer",
  "description": "The BoxItemRenderer displays a colored rectangular area suitable for use as an itemRenderer for a BarChartSeries. This class implements the org.apache.royale.charts.core.IChartItemRenderer interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.ChartAxisGroup",
  "description": "The ChartAxisGroup provides a space where the objects for a chart's axis can be placed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.ChartDataGroup",
  "description": "The ChartDataGroup class provides the actual space for rendering the chart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.ColumnSeries",
  "description": "The ColumnSeries defines what field is being plotted from the chart's dataProvider. For ColumnSeries, only the yField is used.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.ILineSegmentItemRenderer",
  "description": "The ILineSegmentItemRenderer interface must be implemented by any class that will become an line segment itemRenderer for a LineSeries.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.IWedgeItemRenderer",
  "description": "The IWedgeItemRenderer interface must be implemented by any class that is used as an itemRenderer for a PieSeries.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.LineSegmentItemRenderer",
  "description": "The LineSegmentItemRenderer class draws a line between the vertices of a LineSeries.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.LineSeries",
  "description": "The LineChartSeries represents a pair of X and Y values to be drawn within a org.apache.royale.charts.LineChart.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.charts.supportClasses.PieSeries",
  "description": ""},
{ "name": "org.apache.royale.charts.supportClasses.WedgeItemRenderer",
  "description": "The WedgeItemRenderer draws a single slide of a PieSeries.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.ArrayList",
  "description": "The ArrayList class provides an event-driven wrapper for the standard Array. Events are dispatched when items are added, removed, or changed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.ArrayListView",
  "description": ""},
{ "name": "org.apache.royale.collections.Collection",
  "description": ""},
{ "name": "org.apache.royale.collections.CollectionUtils",
  "description": ""},
{ "name": "org.apache.royale.collections.CompareUtils",
  "description": ""},
{ "name": "org.apache.royale.collections.FlattenedList",
  "description": "The FlattenedList class takes a HierarchicalData object and \"flattens\" it using all of the open members.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.collections.HierarchicalData",
  "description": "Hierarchical data is data already in a structure of parent and child data items. The HierarchicalData class provides a default implementation for accessing and manipulating data.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.IArrayList",
  "description": "The ArrayList class provides an event-driven wrapper for the standard Array. Events are dispatched when items are added, removed, or changed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.IArrayListView",
  "description": ""},
{ "name": "org.apache.royale.collections.ICollection",
  "description": "The ICollection interface is the basic interface for an iterable collection of data items.  Other extension may offer the ability to modify the collection and dispatch change events.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.ICollectionView",
  "description": "The ICollectionView interface is implemented by classes that provide collection data."},
{ "name": "org.apache.royale.collections.IHierarchicalData",
  "description": "The IHierarchicalData interface defines the interface used to represent hierarchical data as the data provider for a Royale component. Hierarchical data is data in a structure of parent and child data items.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.ISort",
  "description": "The <code>ISort</code> interface defines the interface for classes that provide the sorting information required to sort the data of a collection view.",
"tags": [
{  "tagName": "see",
       "values": ["mx.collections.ICollectionView", "mx.collections.ISortField", "mx.collections.ICollectionView", "mx.collections.ISortField"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Flex 4.5", "Flex 4.5"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.ISortField",
  "description": "The <code>ISortField</code> interface defines the interface for classes that are used with <code>ISort</code> classes, to provide the sorting information required to sort the specific fields or property in a collection view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.IStringCollection",
  "description": "The IStringCollection interface is the basic interface for an iterable collection of strings.  Other extension may offer the ability to modify the collection and dispatch change events.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.ITreeData",
  "description": "The ITreeData interface is the basic interface for determining which items in a hierarchical collection should be displayed in the tree.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.LazyCollection",
  "description": "The LazyCollection class implements a collection whose items require conversion from a source data format to some other data type.  For example, converting SOAP or JSON to ActionScript data classes. The Flex SDK used to convert all of the data items when the source data arrived, which, for very large data sets or complex data classes, could lock up the user interface. The lazy collection converts items as they are fetched from the collection, resulting in significant performance savings in many cases.  Note that, if you need to compute a summary of data in the collection when the source data arrives, the computation can still lock up the user interface as you will have to visit and convert every data item.  Of course, it is possible to compute that summary in a worker or pseudo-thread. The LazyCollection class is designed to be a bead that attaches to a data retrieval strand that dispatches an Event.COMPLETE and has a \"data\" property that gets passed to the input parser.  This LazyCollection does not support adding/removing items from the collection or sending data back to the source.  Subclasses have that additional functionality.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.Sort",
  "description": "Provides the sorting information required to establish a sort on an existing view (<code>ICollectionView</code> interface or class that implements the interface). After you assign a <code>Sort</code> instance to the view's <code>sort</code> property, you must call the view's <code>refresh()</code> method to apply the sort criteria.  <p>Typically the sort is defined for collections of complex items, that is collections in which the sort is performed on one or more properties of the objects in the collection. The following example shows this use:</p> <pre><code> var col:ICollectionView = new ArrayCollection(); // In the real world, the collection would have more than one item. col.addItem({first:\"Anders\", last:\"Dickerson\"});  // Create the Sort instance. var sort:ISort = new Sort();  // Set the sort field; sort on the last name first, first name second. // Both fields are case-insensitive. sort.fields = [new SortField(\"last\",true), new SortField(\"first\",true)]; // Assign the Sort object to the view. col.sort = sort;  // Apply the sort to the collection. col.refresh(); </code></pre>  <p>There are situations in which the collection contains simple items, like <code>String</code>, <code>Date</code>, <code>Boolean</code>, etc. In this case, apply the sort to the simple type directly. When constructing a sort for simple items, use a single sort field, and specify a <code>null</code> <code>name</code> (first) parameter in the SortField object constructor. For example: <pre><code> var col:ICollectionView = new ArrayCollection(); col.addItem(\"California\"); col.addItem(\"Arizona\"); var sort:Sort = new Sort();  // There is only one sort field, so use a <code>null</code> // first parameter. sort.fields = [new SortField(null, true)]; col.sort = sort; col.refresh(); </code></pre> </p>  <p>The Flex implementations of the <code>ICollectionView</code> interface retrieve all items from a remote location before executing a sort. If you use paging with a sorted list, apply the sort to the remote collection before you retrieve the data. </p>  <p>By default this Sort class does not provide correct language specific sorting for strings.  For this type of sorting please see the <code>spark.collections.Sort</code> and <code>spark.collections.SortField</code> classes.</p>  Note: to prevent problems like <a href=\"https://issues.apache.org/jira/browse/FLEX-34853\">FLEX-34853</a> it is recommended to use SortField instances as immutable objects (by not changing their state).   <p>The <code>&lt;mx:Sort&gt;</code> tag has the following attributes:</p>  <pre> &lt;mx:Sort <b>Properties</b> compareFunction=\"<em>Internal compare function</em>\" fields=\"null\" unique=\"false | true\" /&gt; </pre>  <p>In case items have inconsistent data types or items have complex data types, the use of the default built-in compare functions is not recommended. Inconsistent sorting results may occur in such cases. To avoid such problem, provide a custom compare function and/or make the item types consistent.</p>  <p>Just like any other <code>AdvancedStyleClient</code>-based classes, the <code>Sort</code> and <code>SortField</code> classes do not have a parent-child relationship in terms of event handling. Locale changes in a <code>Sort</code> instance are not dispatched to its <code>SortField</code> instances automatically. The only exceptional case is the internal default <code>SortField</code> instance used when no explicit fields are provided. In this case, the internal default <code>SortField</code> instance follows the locale style that the owner <code>Sort</code> instance has.</p>",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.collections.IArrayListView", "org.apache.royale.collections.ISortField", "org.apache.royale.collections.Sort", "org.apache.royale.collections.SortField", "org.apache.royale.collections.IArrayListView", "org.apache.royale.collections.ISortField", "org.apache.royale.collections.Sort", "org.apache.royale.collections.SortField"]},
    {  "tagName": "mxml",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.SortField",
  "description": "Provides the sorting information required to establish a sort on a field or property in a collection view.  The SortField class is meant to be used with the Sort class.  Typically the sort is defined for collections of complex items, that is items in which the sort is performed on properties of those objects. As in the following example:  <pre><code> var col:ICollectionView = new ArrayListView(); col.addItem({first:\"Anders\", last:\"Dickerson\"}); var sort:Sort = new Sort(); sort.fields = [new SortField(\"first\", true)]; col.sort = sort; </code></pre>  There are situations in which the collection contains simple items, like <code>String</code>, <code>Date</code>, <code>Boolean</code>, etc. In this case, sorting should be applied to the simple type directly. When constructing a sort for this situation only a single sort field is required and should not have a <code>name</code> specified. For example:  <pre><code> var col:ICollectionView = new ArrayListView(); col.addItem(\"California\"); col.addItem(\"Arizona\"); var sort:Sort = new Sort(); sort.fields = [new SortField(null, true)]; col.sort = sort; </code></pre>  <p>By default the comparison provided by the SortField class does not provide correct language specific sorting for strings.  For this type of sorting please see the <code>spark.collections.Sort</code> and <code>spark.collections.SortField</code> classes.</p>  Note: to prevent problems like <a href=\"https://issues.apache.org/jira/browse/FLEX-34853\">FLEX-34853</a> it is recommended to use SortField instances as immutable objects (by not changing their state).   <p>The <code>&lt;mx:SortField&gt;</code> tag has the following attributes:</p>  <pre> &lt;mx:SortField <b>Properties</b> caseInsensitive=\"false\" compareFunction=\"<em>Internal compare function</em>\" descending=\"false\" name=\"null\" numeric=\"null\" /&gt; </pre>",
"tags": [
{  "tagName": "see",
       "values": ["mx.collections.ICollectionView", "mx.collections.Sort", "spark.collections.Sort", "spark.collections.SortField", "mx.collections.ICollectionView", "mx.collections.Sort", "spark.collections.Sort", "spark.collections.SortField"]},
    {  "tagName": "mxml",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.SortFieldCompareTypes",
  "description": "The SortFieldCompareTypes class defines the valid constant values for the <code>sortCompareType</code> property of the <code>SortField</code>.  <p>Designed to be used from a DataGrids column, but can be referenced directly on the <code>SortField</code></p>  <p>Use the constants in ActionsScript, as the following example shows:</p> <pre> column.sortCompareType = SortFieldCompareTypes.NUMERIC; </pre>  <p>In MXML, use the String value of the constants, as the following example shows:</p> <pre> &lt;s:GridColumn sortCompareType=\"numeric\" /&gt; </pre>",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 11.8", "AIR 3.8", "Flash 11.8", "AIR 3.8"]},
    {  "tagName": "productversion",
       "values": ["Flex 4.11", "Flex 4.11"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.TreeData",
  "description": "TreeData is used with tree or structured data classes. This class incorporates a HierarchicalData structure as its primary source, but then internally flattens it for presentation."},
{ "name": "org.apache.royale.collections.converters.IItemConverter",
  "description": "The IItemConverter interface is the basic interface for converting a serialized data item to a data class instance.  This interface is generally used in a LazyCollection.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.net.dataConverters.LazyCollection.", "org.apache.royale.net.dataConverters.LazyCollection."]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.converters.JSONItemConverter",
  "description": "The JSONItemConverter class parses a JSON structure into an ActionScript object.  Other variants would return a specific data class instance.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.parsers.IInputParser",
  "description": "The IInputParser interface is the basic interface for parsing data from a server or database into an array of items.  This interface is generally used in a LazyCollection.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.net.dataConverters.LazyCollection.", "org.apache.royale.net.dataConverters.LazyCollection."]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.collections.parsers.JSONInputParser",
  "description": "The JSONInputParser class parses a JSON structure into an array of JSON sub-structures.  It assumes the input JSON format is an array without sub-arrays. A more complex parser might be needed for more complex JSON structures.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.cordova.Application",
  "description": "A customized Application that dispatches the Cordova deviceReady event",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.cordova.Camera",
  "description": ""},
{ "name": "org.apache.royale.cordova.Weinre",
  "description": "A class that helps set up to use Weinre for debugging",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.cordova.geolocation.Geolocation",
  "description": "The Geolocation class implements Cordova geolocation plugin",
"tags": [
{  "tagName": "royalecordovaplugin",
       "values": ["cordova-plugin-geolocation", "cordova-plugin-geolocation"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "royaleignorecoercion",
       "values": ["FileEntry", "FileWriter", "window", "Blob", "FileEntry", "FileWriter", "window", "Blob"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.AirApplication",
  "description": "The AirApplication class should be used by Air applications as their main entry point.",
"tags": [
{  "tagName": "see",
       "values": ["Application", "Application"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.AllCSSStyles",
  "description": "The AllCSSStyles class contains all CSS style supported in HTML. It is not advisable to use this class in production code because it will unnecessarily inflate your code size. Rather, you should copy the class and trim it down in your app to the specific styles you use.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.core.AllCSSValuesImpl",
  "description": "The AllCSSValuesImpl class will eventually implement a full set of CSS lookup rules.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.Application",
  "description": "The Application class is the main class and entry point for a Royale application.  This Application class is different than the Flex SDK's mx:Application or spark:Application in that it does not contain user interface elements.  Those UI elements go in the views (ViewBase).  This Application class expects there to be a main model, a controller, and an initial view.",
"tags": [
{  "tagName": "see",
       "values": ["ViewBase", "ViewBase"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ApplicationBase",
  "description": "This is a platform-dependent base class for Application",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ApplicationFactory",
  "description": "This is a platform-dependent base class for Application",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.BeadViewBase",
  "description": "The BeadViewBase class is the base class for most view beads.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.BindableCSSStyles",
  "description": "The BindableCSSStyles class contains CSS style properties supported by SimpleCSSValuesImpl but dispatch change events when modified  The class implements IStyleObject which means the host object sets a reference onto this one, allowing us to reapply the styles to the host component when the style is changed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.BindableCSSStylesWithFlex",
  "description": "The BindableCSSStyles class contains CSS style properties supported by SimpleCSSValuesImpl but dispatch change events when modified  The class implements IStyleObject which means the host object sets a reference onto this one, allowing us to reapply the styles to the host component when the style is changed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.BrowserOrientation",
  "description": "The BrowserOrientation class listens for browser resizing (only in devices) and dispatchh orientation change events. - if orientation is portratit it dispatches: 'orientationPortrait' - if orientation is ladspace it dispatches: 'orientationLandscape'",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.BrowserResizeListener",
  "description": "The BrowserResizeListener class listens for browser resizing and resizes the application accordingly.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.BrowserScroller",
  "description": "The BrowserScroller class enables browser scrollbars when the application is larger than the screen.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.BrowserWindow",
  "description": "The BrowserWindow class opens a new browser window.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ByteArrayAsset",
  "description": "The ByteArrayAsset represents an arbitrary sequence of byte data that can be embedded in a Royale swf class.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.CSSClassList",
  "description": "The CSSClassList class is used to construct a list of class names to be applied.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.2", "Royale 0.9.2"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.CSSFontFaceBead",
  "description": "The CSSFontFaceBead class is the class that loads swfs of converted fonts so they can be used in Flash. It is just a stub in JS.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.CSSShape",
  "description": "The Border class is a class used internally by many controls to draw a border.  The border actually drawn is dictated by the IBeadView in the CSS.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.CSSSprite",
  "description": "The Border class is a class used internally by many controls to draw a border.  The border actually drawn is dictated by the IBeadView in the CSS.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.CSSTextField",
  "description": "The CSSTextField class implements CSS text styles in a TextField. Not every CSS text style is currently supported.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.CallLaterBead",
  "description": "The CallLater bead implements ways for a method to be called after other code has finished running.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ClassFactory",
  "description": "The ClassFactory class is the basic implementation of an IFactory that will generate multiple instances of item renderers or custom classes.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.core.ContainerBase",
  "description": "The ContainerBase class is the base class for most containers in Royale.  It is usable as the root tag of MXML documents and UI controls and containers are added to it.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ContainerBaseStrandChildren",
  "description": "The ContainerBaseStrandChildren class the provides a way for advanced components to place children directly into the strand unlike the addElement() APIs on the Container which place children into the contentView.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.core.DataContainerBase",
  "description": "The DataContainerBase class is the base class for components that that have generated content, like lists.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.DropType",
  "description": "The DropType class provides a set of constant values of types of drops in a drag/drop operation",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ElementWrapper",
  "description": ""},
{ "name": "org.apache.royale.core.EventLoggingBead",
  "description": "The EventLogging bead logs dispatches of certain events.  This can be useful in debugging type coercion errors when an event handler has the wrong type in the function signature.  Place this bead in the application.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.FilledRectangle",
  "description": "The FilledRectangle class draws a simple filled rectangle without a border and with square corners.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.FormatBase",
  "description": "The FormatBase class serves as a base class for custom formatters. It cannot be used as a base for an MXML document.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.GroupBase",
  "description": "The GroupBase class is the base class for most simple containers in Royale.  It is usable as the root tag of MXML documents and UI controls and containers are added to it.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.HTMLElementWrapper",
  "description": ""},
{ "name": "org.apache.royale.core.IAlertModel",
  "description": "The IAlertModel interface describes the minimum set of properties available to an Alert control.  More sophisticated Alert controls could have models that extend IAlertModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IApplicationView",
  "description": "The IApplicationView interface is the  interface for main view of the application.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBead",
  "description": "The IBead interface is the basic interface for plug-ins known as Beads. In Royale, the recommended pattern is to break out optional functionality into small plug-ins that can be re-used in other components, or replaced with different implementations optimized for different things such as size, performance, advanced features, debugging, etc.  Beads are told what host component or \"strand\" they ae attached to.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBeadController",
  "description": "The IBeadController interface is a \"marker\" interface for beads that are controllers.  A marker interface has no addtional APIs. It is used to find the controller on the strand via calls to getBeadByType.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.IStrand#getBeadByType", "org.apache.royale.core.IStrand#getBeadByType"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBeadLayout",
  "description": "The IBeadLayout interface is a \"marker\" interface for beads that manage the layout for a control.  A marker interface has no addtional APIs. It is used to find the layout bead on the strand via calls to getBeadByType.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.IStrand#getBeadByType", "org.apache.royale.core.IStrand#getBeadByType"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBeadModel",
  "description": "The IBeadModel interface is a \"marker\" interface for beads that represent the data model for a control.  A marker interface has no addtional APIs. It is used to find the model bead on the strand via calls to getBeadByType.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.IStrand#getBeadByType", "org.apache.royale.core.IStrand#getBeadByType"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBeadTransform",
  "description": "The IBeadTransform interface is the basic interface for the container views that transform drawable objects that implement ITransformHost",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBeadView",
  "description": "The IBeadView interface is the interface for beads that represent the view for a control. It is used to find the view bead on the strand via calls to getBeadByType.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.IStrand#getBeadByType", "org.apache.royale.core.IStrand#getBeadByType"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBinaryImage",
  "description": "The IBinaryImage interface describes the minimum set of properties available to an Image control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBinaryImageLoader",
  "description": "The IBinaryImageLoader interface marks classes that are used for loading binary data to image views",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBinaryImageModel",
  "description": "The IImageModel interface describes the minimum set of properties available to an Image control.  More sophisticated Image controls could have models that extend IImageModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBinding",
  "description": "IBinding interface is a \"marker\" for data-binding class that is optimized for simple assignments of one object's property to another object's property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBorderModel",
  "description": "The IBorderModel interface is the basic interface for a data model for drawing borders.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IBorderPaddingMarginValuesImpl",
  "description": "The IBorderPaddingMarginValuesImpl abstracts how to get data on the border, padding and margin of a component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ICSSImpl",
  "description": "A marker interface so the compiler knows whether to emit CSS"},
{ "name": "org.apache.royale.core.IChangePropagator",
  "description": "The IChangePropagator is a marker interface",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IChild",
  "description": "The IChild interface is the basic interface for a component that is parented by another component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IChrome",
  "description": "The IChrome interface is a \"marker\" interface. Items that implement IChrome are designating themselves as being attached to their parent in a way that's different from normal content. For example, to a Container, a child being added that's an IChrome implementor will be added outside of the content area.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IColorModel",
  "description": "The IColorModel interface describes the minimum set of properties available to a control that displays or edits color.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IColorSpectrumModel",
  "description": "The IColorSpectrumModel interface describes the minimum set of properties available to a control that displays a color spectrum",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IComboBoxModel",
  "description": "The IComboBoxModel interface describes the minimum set of properties available to a ComboBox control.  More sophisticated ComboBox controls could have models that extend IComboBoxModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IContainer",
  "description": "The IContainer interface is used to mark certain components as Containers. While most components are containers in the sense that they are composited from a set of child components, the term Container is commonly used in Flex to denote components that take an arbitrary set or sets of children and do not try to abstract away that fact.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IContainerBaseStrandChildrenHost",
  "description": "The IContainerBaseStrandChildrenHost interface is implemented by components that use a ContainerBaseStrandChildren to proxy addElement/removeElement calls to an internal child and has the following APIs so the View can set up the \"chrome\" around the internal child.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IContainerView",
  "description": "The IContainerView interface should be implemented by any view bead that acts as the primary view for a ContainerBase-derived class.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IContentView",
  "description": ""},
{ "name": "org.apache.royale.core.IContentViewHost",
  "description": "This interface is implemented by components that provide access to \"behind the scenes\" children that are not accessible through the addElement()/removeElement() APIs.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDataGrid",
  "description": "The IDataGrid interface is implemented by any component that supports being a \"DataGrid\" which means its content is generated by a factory and whose children are item renderers (IItemRenderer).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDataGridModel",
  "description": "The IDataGridModel interface describes the minimum set of properties available to an DataGrid control.  More sophisticated DataGrid controls could have models that extend IDataGridModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDataGridPresentationModel",
  "description": "The IDataGridPresentationModel interfaces defines the data needed to present a DataGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDataProviderItemRendererMapper",
  "description": "The IDataProviderItemRendererMapper interface is the interface for beads that know how to iterate through a dataProvider, generate item renderers, and assign items from the dataProvider to those item renderers.  In Royale, a wide range of data providers are allowed, from simple Arrays and Vectors on up to sophisticated data structures that dispatch change events. Different IDataProviderItemRendererMapper implements are often required to iterate through those different data structures.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDataProviderModel",
  "description": "The IDataProviderModel interface describes the minimum set of properties available to control that let the user choose within a set of items in a dataProvider.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDataProviderNotifier",
  "description": "The IDataProviderNotifier interface is a \"marker\" interface for beads that manage that dispatch events when data providers change.  A marker interface has no addtional APIs. It is used to find the notifier bead on the strand via calls to getBeadByType.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.IStrand#getBeadByType", "org.apache.royale.core.IStrand#getBeadByType"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDataProviderVirtualItemRendererMapper",
  "description": "The IDataProviderItemRendererMapper interface is the interface for beads that know how to iterate through a dataProvider, generate item renderers, and assign items from the dataProvider to those item renderers.  In Royale, a wide range of data providers are allowed, from simple Arrays and Vectors on up to sophisticated data structures that dispatch change events. Different IDataProviderItemRendererMapper implements are often required to iterate through those different data structures.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDateChooserModel",
  "description": "The IDateChooserModel interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDateControlConfigBead",
  "description": "The IDateControlConfigBead interface should be implemented by any bead that provides a locale configuration for date controls like DateField and DateChooser",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDateFormatter",
  "description": "The IDateFormatter interface should be implemented by any bead that provides formatting of a date.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDocument",
  "description": "The IDocument interface is the basic interface for objects that can be tags in an MXML document and need to know about the host document.  It is similar to the IMXMLObject interface in the Flex SDK.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IDragInitiator",
  "description": "The IDragInitiator interface is the basic interface for the object that wants to know if a drop was accepted in a drag/drop operation.  There are two methods instead of the usual one because in some scenarios the drag initiator needs to prepare the data before it gets dropped. For example, in a tree control, dragging from one node to another, the tree should un-parent the node before it is moved to the new parent node, so the tree would un-parent the node in acceptingDrop.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IEffectTimer",
  "description": "The IEffectTimer interface is the basic interface for the class that updates effects like tweens.  Different IEffectTimer implementations are tuned for various runtime environments like mobile, Flash, desktop, or even automated testing where the currentTime is controlled so the animation updates its target at predictable positions on the screen.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IFactory",
  "description": "The IFactory interface is the basic interface used as the type for properties that specify a factory for item renderers and other scenarios where multiple copies of a custom class are generated.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IFlexInfo",
  "description": "The IFlexInfo interface is an interface used to signal to the compiler that it should generate a data structure that contains information about the application such as its size, mixins, locale, etc.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IFormatter",
  "description": "The IFormatter interface should be implemented by any bead that provides a formatting service.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IIcon",
  "description": "IIcon interface provides abstraction for easiest way to implements custom icon class",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IIconSupport",
  "description": "Implement if a class will need ability to display an icon",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IId",
  "description": "The IId interface is the basic interface for components that must have an id or identifier for a concrete instance.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IImage",
  "description": "The IBinaryImage interface describes the minimum set of properties available to an Image control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IImageModel",
  "description": "The IImageModel interface describes the minimum set of properties available to an Image control.  More sophisticated Image controls could have models that extend IImageModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IImageView",
  "description": "The IImageView interface is the interface for beads that represent image views. It is used to find the view bead on the strand via calls to getBeadByType.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.IStrand#getBeadByType", "org.apache.royale.core.IStrand#getBeadByType"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IInitialViewApplication",
  "description": "The IInitialViewApplication interface is the interface for applications with a single initial views.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IItemRenderer",
  "description": "The IItemRenderer interface is the basic interface for item renderers. More complex item renderers may implements extensions of this interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IItemRendererClassFactory",
  "description": "The IItemRendererClassFactory interface is the basic interface for beads that generate instances of IItemRenderers.  Note that this is not the same as an org.apache.royale.core.IFactory which is a lower-level interface for generating an instance of just about anything.  IItemRendererClassFactory implementations often use IFactory to generate the actual item renderer instance, but the IItemRendererClassFactory bead allows for more computation about which renderer to instantiate. For example, the default implementation in org.apache.royale.core.ItemRendererClassFactory checks for an itemRenderer property on the strand, then looks for a default definition in CSS, but also handles the renderer being defined in MXML in sub tags of the ItemRendererClassFactory.  Other more advanced implementations could return different renderers based on the data item's type.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IItemRendererParent",
  "description": "The IItemRendererParent interface is the basic interface for the container that parents item renderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IItemRendererProvider",
  "description": "The IItemRendererProvider interface is implemented by classes that provide a ClassFactory for itemRenderers.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.IItemRenderer", "org.apache.royale.core.IItemRenderer"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ILayoutChild",
  "description": "The IChild interface is the basic interface for a component that is parented by another component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ILayoutHost",
  "description": "The ILayoutHost interface is the basic interface for the container views that have an IBeadLayout.  The layout implementation often needs to know certain things about other objects in the view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ILayoutParent",
  "description": "The ILayoutParent interface is implemented by those components that allow their children to be manipulated by a layout.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ILayoutView",
  "description": "The ILayoutView interface is implemented by any component that has ILayoutChild children.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IList",
  "description": "The IList interface is implemented by any component that supports being a \"list\" which means its content is generated by a factory and whose children are item renderers (IItemRenderer).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IListPresentationModel",
  "description": "The IListPresentationModel interface holds key values for the display of lists.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IListWithPresentationModel",
  "description": "The IListWithPresentationModel interface is implemented by any IList that supports a separate IListPresentationModel",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ILocalizedValuesImpl",
  "description": "The ILocalizedValuesImpl interface is the basic interface for the subsystem that provides localized values to components.  In Royale, different interfaces and implementations will handle different aspects of localization.  For example, implementations of this interface returns strings and possibly other values stored in the application, whereas a different interface will tackle date formatting, yet another may take on date parsing, because, per the pay-as-you-go (PAYG) principle, applications don't need to carry every localization feature if they don't need them.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.SimpleLocalizedValuesImpl", "org.apache.royale.core.SimpleLocalizedValuesImpl"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IMXMLDocument",
  "description": "The IMXMLDocument interface is an interface for a component that supports being written in MXML.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IMeasurementBead",
  "description": "The IMeasurementBead interface is the basic interface for the bead that can compute and report the measurements of the contents of a component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IMenu",
  "description": ""},
{ "name": "org.apache.royale.core.IMenuBarModel",
  "description": "The IComboBoxModel interface describes the minimum set of properties available to a ComboBox control.  More sophisticated ComboBox controls could have models that extend IComboBoxModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IModule",
  "description": "The compiler checks the main class to see if it implements the IModule interface and generates bootstrapping code for a module instead of an application.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IPanelModel",
  "description": "The IPanelModel interface describes the minimum set of properties available to a Panel control.  More sophisticated Panel controls could have models that extend IPanelModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IParent",
  "description": "The IParent interface is the basic interface for a component that contains subcomponents, including the application class.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IParentIUIBase",
  "description": "The IParentIUIBase interface is a convenience interface for IUIBase components that contains subcomponents.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IPopUp",
  "description": "The IPopUp interface is a \"marker\" interface for a component that should be floated above other components that aren't an IPopUp.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IPopUpHost",
  "description": "The IPopUpHost interface is a \"marker\" interface for a component that parents components that implement IPopUp.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IPopUpHostParent",
  "description": "The IPopUpHostParent is the effective parent of popups. The actual parent may not be the effective parent in some implementations, so the effective parent provides a reference back to the IPopUpHost for removing",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IRangeModel",
  "description": "The IRangeModel interface describes the minimum set of properties available to control that let the user select from within a range of numbers like NumericStepper and Slider.  More sophisticated controls could have models that extend IRangeModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IRenderedObject",
  "description": "The IRenderedObject interface is the basic interface for a component that has been rendered.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IRollOverModel",
  "description": "The IRollOverModel interface describes the minimum set of properties available to control that supports rollover highlighting of an item within a set of items.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IRuntimeSelectableItemRenderer",
  "description": "The IItemRenderer interface is the basic interface for item renderers. More complex item renderers may implements extensions of this interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ISWFApplication",
  "description": "Interface for bootstrapping SWF Applications.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IScrollBarModel",
  "description": "The IScrollBarModel interface describes the minimum set of properties available to control that let the user select from within a range of numbers like ScrollBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IScrollingLayoutParent",
  "description": "The IScrollingLayoutParent interface is an ILayoutParent that has traditional scrollbars.  The layout implementation often needs to know certain things about other objects in the component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IScrollingViewport",
  "description": "A ScrollingViewport is a Viewport that scrolls overflow content."},
{ "name": "org.apache.royale.core.ISelectable",
  "description": "The ISelectable interface is a marker interface for indicating a class has a selected property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ISelectableItemRenderer",
  "description": "The IItemRenderer interface is the basic interface for item renderers. More complex item renderers may implements extensions of this interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ISelectionModel",
  "description": "The ISelectionModel interface describes the minimum set of properties available to control that let the user select from within a set of items in a dataProvider.  A more sophisticated model would support multiple selection.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IState",
  "description": "The IState interface is a basic interface for States that are handled by various IStatesImpls.  IStatesImpls watche for the currentState property to change and executes changes accordingly.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IStatesImpl",
  "description": "The IStatesImpl interface is a \"marker\" interface for the implementation view states in a View like ViewBase.  The implementation watches for the currentState property to change and executes changes accordingly.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IStatesObject",
  "description": "The IStatesObject interface is the interface for an object that supports states.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IStrand",
  "description": "The IStrand interface is the basic interface for a host component for a set of plug-ins known as Beads. In Royale, the recommended pattern is to break out optional functionality into small plug-ins that can be re-used in other components, or replaced with different implementations optimized for different things such as size, performance, advanced features, debugging, etc.  Beads are added to and removed from a Strand and can find and coordinate with other beads on the strand.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IStrandWithModel",
  "description": "The IStrand interface is the basic interface for a host component for a set of plug-ins known as Beads. In Royale, the recommended pattern is to break out optional functionality into small plug-ins that can be re-used in other components, or replaced with different implementations optimized for different things such as size, performance, advanced features, debugging, etc.  Beads are added to and removed from a Strand and can find and coordinate with other beads on the strand.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IStrandWithModelView",
  "description": "The IStrandWithModelView interface is the basic interface for a host component for a set of plug-ins known as Beads where two of the plugins are a model and a view. In Royale, the recommended pattern is to break out optional functionality into small plug-ins that can be re-used in other components, or replaced with different implementations optimized for different things such as size, performance, advanced features, debugging, etc.  Beads are added to and removed from a Strand and can find and coordinate with other beads on the strand.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IStrandWithPresentationModel",
  "description": "The IStrandWithPresentationModel interface is implemented by any IStrand that supports a separate bead that is a presentationModel.  A presentationModel is a set of properties that act as parameters to the View as opposed to the regular model that is the data to be displayed by the view.  A simple example is the rowHeight of a vertical list.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IStyleObject",
  "description": "The IStyleObject interface is the interface for objects that contain style properties.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IStyleableObject",
  "description": "The IStyleableObject interface is the interface for objects that support style properties.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ITextModel",
  "description": "The ITextModel interface describes the minimum set of properties available to control that displays text.  More sophisticated controls often have models that extend ITextModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ITitleBarModel",
  "description": "The ITitleBarModel interface describes the minimum set of properties available to control that displays a title bar.  More sophisticated controls often have models that extend ITitleBarModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IToggleButtonModel",
  "description": "The IToggleButtonModel interface describes the minimum set of properties available to ToggleButton that displays a text label.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ITransformHost",
  "description": "The ITransformHost interface is the basic interface for the container views that have an IBeadTransform.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ITransformModel",
  "description": "The ITransformModel interface describes the minimum set of properties needed to define a transformation on an object.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IUIBase",
  "description": "The IUIBase interface is the basic interface for user interface components.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IValueToggleButtonModel",
  "description": "The IValueToggleButtonModel interface describes the minimum set of properties available each ToggleButton in a group of ToggleButtons of which only one can be selected at a time.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IValuesImpl",
  "description": "The IValuesImpl interface is the basic interface for the subsystem that provides default values to components.  The most common implementation implements a simple version of CSS and uses data structures compiled from CSS files.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.core.SimpleCSSValuesImpl", "org.apache.royale.core.SimpleCSSValuesImpl"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.IViewport",
  "description": "A Viewport is a window onto an area of content. A viewport is given space in which to operate by a View bead. Viewports can control their area which is specified by the IViewportModel, adding scrollbars or whatever scrolling mechanism they want."},
{ "name": "org.apache.royale.core.IViewportModel",
  "description": "A Viewport is the area of a Container set aside for displaying content and any scrolling controls. The ViewportModel caches the offsets required to compute the size of the Viewport."},
{ "name": "org.apache.royale.core.IViewportScroller",
  "description": "The IViewportScroller interface describes an object that can be used to scroll or navigate around a system that uses an IViewport. This may be a traditional scroll bar, or it could be something completely different.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ImageBase",
  "description": "The ImageBase class serves as a base class for components that displays a bitmap. The Image uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the Image, including the url/binary property. org.apache.royale.core.IBeadView: constructs the visual elements of the component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ImageViewBase",
  "description": "The ImageView class creates the visual elements of the org.apache.royale.html.Image component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ItemRendererClassFactory",
  "description": "The ItemRendererClassFactory class is the default implementation of IItemRendererClassFactory.  This implementation checks for an itemRenderer property on the strand, then looks for a default definition in CSS, but also handles the renderer being defined in MXML in sub tags of the ItemRendererClassFactory.  Other more advanced implementations could return different renderers based on the data item's type.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.LayoutBase",
  "description": "This class is the base class for most, if not all, layouts.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.LayoutManager",
  "description": "The LayoutManager class is an all static class which allows queing up measuring of components and layouts to prevent layout thrashing",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ListBaseStrandChildren",
  "description": "The ListBaseStrandChildren exists so that Lists are compatible with the ListView/ContainerView beads.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.Lookalike",
  "description": "The UIElement class Takes an IRenderedObject and creates a new UIBase which has the *appearance* of the original object. It *does not* have any of the orginal object's functionality.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.MXMLDragInitiator",
  "description": "The MXMLDragInitiator is an IDragInitiator that dispatches events when the IDragInitiator methods are called to make it easier to handle in MXML.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ParentDocumentBead",
  "description": "The ParentDocumentBead class looks up the parent chain to find a parent that was written in MXML. Because it is usually rare for an application to need to know this information, an optional bead is used to compute it, instead of baking in the overhead of a recursive infrastucture to store this information.  It is intended to be used as a bead in the top-level tag of an MXML document.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "royaleignoreimport",
       "values": ["org.apache.royale.core.IChild", "org.apache.royale.core.IChild"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.SimpleApplication",
  "description": "The SimpleApplication class can be used as the main class and entry point for low-level ActionScript-only Royale applications.  It is not indended for use in MXML applications or most of the Royale components as they expect a certain application lifecycle in the org.apache.royale.core.Application class.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.SimpleCSSStyles",
  "description": "The SimpleCSSStyles class contains CSS style properties supported by SimpleCSSValuesImpl.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.core.SimpleCSSStylesWithFlex",
  "description": "The SimpleCSSStyles class contains CSS style properties supported by SimpleCSSValuesImpl.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.core.SimpleCSSValuesImpl",
  "description": "The SimpleCSSValuesImpl class implements a minimal set of CSS lookup rules that is sufficient for most applications and is easily implemented for SWFs. It does not support attribute selectors or descendant selectors or id selectors.  It will filter on a custom -royale-swf media query but not other media queries.  It can be replaced with other implementations that handle more complex selector lookups.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.SimpleLocalizedValuesImpl",
  "description": "The SimpleLocalizedValuesImpl class implements a simple getValue implementation that is sufficient for many very simple applications. Every key in every bundle must be provided in every locale.  There is no fall-through logic to the next locale.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.SimpleStatesImpl",
  "description": "The SimpleStatesImpl class implements a minimal set of view state functionality that is sufficient for most applications. It only supports AddItems and SetProperty changes at this time.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.SimpleValuesImpl",
  "description": "The SimpleValuesImpl class implements a simple lookup rules that is sufficient for many very simple applications.  Every value is essential global and shared by other instances.  Values are set via calls to setValue.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.StageProxy",
  "description": "The StageProxy class wraps the stage and presents it as a Royale IEventDispatcher.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.StatesWithTransitionsImpl",
  "description": "The StatesWithTransitionsImpl class implements a set of view state functionality that includes transitions between states. It only supports AddItems and SetProperty and SetEventHandler changes at this time.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "royaleignoreimport",
       "values": ["org.apache.royale.core.IStatesObject", "org.apache.royale.core.IStatesObject"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.Strand",
  "description": "The Strand class is the base class for non-display object that implement a strand.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.StyleChangeNotifier",
  "description": "The StyleChangeNotifier can be added to the bead list of any UI component that needs to react to dynamic changes to its styles.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.StyleableCSSTextField",
  "description": "The StyleableCSSTextField class implements more CSS text styles in a TextField. This makes it easier to use one in a \"shadow DOM\" in a complex skin.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.StyledMXMLItemRenderer",
  "description": "The StyledMXMLItemRenderer class is the base class for itemRenderers that are MXML-based and provides support for ClassSelectorList.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.StyledUIBase",
  "description": "The StyledUIBase is the base class for UIBase components that makes heavy use of styles",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.TextLineMetrics",
  "description": "The TextLineMetrics class contains font information about a line of text",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.core.TransformBeadBase",
  "description": ""},
{ "name": "org.apache.royale.core.TransformCompoundModel",
  "description": ""},
{ "name": "org.apache.royale.core.TransformModel",
  "description": ""},
{ "name": "org.apache.royale.core.TransformMoveXModel",
  "description": ""},
{ "name": "org.apache.royale.core.TransformMoveYModel",
  "description": ""},
{ "name": "org.apache.royale.core.TransformRotateModel",
  "description": ""},
{ "name": "org.apache.royale.core.TransformScaleModel",
  "description": ""},
{ "name": "org.apache.royale.core.UIBase",
  "description": "The UIBase class is the base class for most composite user interface components.  For the Flash Player, Buttons and Text controls may have a different base class and therefore may not extend UIBase. However all user interface components should implement IUIBase.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.UIButtonBase",
  "description": "The UIButtonBase class is the base class for most Buttons in a Royale application.  In Flash, these buttons extend SimpleButton and therefore do not support all of the Sprite APIs.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.UIHTMLElementWrapper",
  "description": "The UIHTMLElementWrapper class is the base class for most Buttons and other UI objects in a Royale application that do not have children. In Flash, these buttons extend SimpleButton and therefore do not support all of the Sprite APIs.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ValuesManager",
  "description": "The ValuesManager class is one of the few Singleton classes in Royale.  Instances of other things can be shared via IValuesImpl, but this class's API is its one static property where you get the instance of IValuesImpl by which other instances can be shared.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.View",
  "description": "The View class is the class for most views in a Royale application.  It is generally used as the root tag of MXML documents and UI controls and containers are added to it.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.ViewBase",
  "description": "The ViewBase class is the base class for most views in a Royale application.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.WrappedMovieClip",
  "description": ""},
{ "name": "org.apache.royale.core.WrappedShape",
  "description": ""},
{ "name": "org.apache.royale.core.WrappedSimpleButton",
  "description": ""},
{ "name": "org.apache.royale.core.WrappedSprite",
  "description": ""},
{ "name": "org.apache.royale.core.WrappedTextField",
  "description": ""},
{ "name": "org.apache.royale.core.layout.EdgeData",
  "description": "The EdgeData class is a utility class for holding four border and or padding of a component.  We don't use a Rectangle because Rectangle likes wants a width instead of a right value.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.layout.ILayoutStyleProperties",
  "description": "The ILayoutStyleProperties interface is the contract for layout beads that needs to retrieve style properties set in their host component and apply to itself.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.layout.LayoutData",
  "description": "The LayoutData class is a utility class for holding margins, border and padding of a component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.layout.MarginData",
  "description": "The MarginData class is a utility class for holding four margins of a component, plus a flag for if both left and right margin have been set to \"auto\".",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.styles.BorderStyles",
  "description": "The BorderStyles class is a utility class for getting the 3 main border styles (width, color, style)",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.core.supportClasses.StyledImageBase",
  "description": "The StyledImageBase class serves as a base class for components that displays a bitmap and used ClassSelectorList for set class selector names The Image uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the Image, including the url/binary property. org.apache.royale.core.IBeadView: constructs the visual elements of the component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.Application",
  "description": "The Application class is the main class and entry point for a Royale application.  This Application class is different than the Flex SDK's mx:Application or spark:Application in that it does not contain user interface elements.  Those UI elements go in the views (ViewBase).  This Application class expects there to be a main model, a controller, and an initial view.  This is the CreateJS Application class which must be used in place of the normal Royale Application. CreateJS uses the HTML5 &lt;canvas&gt;, rather than the HTML DOM. This class sets up the canvas and injects the necessary HTML elements into the index.html file to bootstrap CreateJS.",
"tags": [
{  "tagName": "see",
       "values": ["ViewBase", "ViewBase"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.CheckBox",
  "description": ""},
{ "name": "org.apache.royale.createjs.Container",
  "description": "Provides a nestable Container for CreateJS elements.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.Label",
  "description": "The Label class provides a static text string which may be colored.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.TextButton",
  "description": "The TextButton class provides a clickable button.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.core.CreateJSBase",
  "description": "This is the base class for CreateJS component wrappers used by Royale applications. This class provides standard properties that most of the Royale CreateJS wrapper classes use, such as a fill color.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.core.UIBase",
  "description": "The CreateJS framework provides its own version of UIBase. CreateJS uses the HTML 5 &lt;canvas&gt; for its work and does not use the HTML DOM like the most of Royale, so this replacement for UIBase allows the CreateJS wrapper classes for Royale to fit in.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.core.View",
  "description": "This version of View is specific for CreateJS since CreateJS does not use the HTML DOM.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.graphics.Circle",
  "description": "Creates a circle.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.graphics.GraphicShape",
  "description": "This is the base class for CreateJS graphic shape components such as Circle and Rect.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.graphics.Rect",
  "description": "Creates a rectangle.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.tween.Ease",
  "description": "This is the base class for the CreateJS/TweenJS effects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.tween.Effect",
  "description": "This is the base class for the CreateJS/TweenJS effects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.tween.Sequence",
  "description": "The Sequence effect plays a set of effects, one after the other.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.createjs.tween.Tween",
  "description": "The Tween effect animates an object from one place to another; it can also fade and object in and out by adjusting the object's alpha value. Once the target object is set, its starting position may be given (or its current location will be used) and an ending position given, the play() function is used to make the animation have effect.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.css2.Cursors",
  "description": "The Label class implements the basic control for labeling other controls.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.CompoundEffect",
  "description": "CompoundEffect implements ICompoundEffect by dispatching events that should be handled by pluggable beads.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.Effect",
  "description": "Effect is the base class for effects in Royale.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.Fade",
  "description": "The Fade effect animates a UI component's alpha or opacity.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.ICompoundEffect",
  "description": "ICompoundEffect aggregates several related effects. Implementors will decide on the order in which they're played.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.IEffect",
  "description": "IEffect is the lowest-level interface for effects in Royale.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.Move",
  "description": "The Move effect animates a UI component's x or y position.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.Parallel",
  "description": "The Parallel effect animates set of effects at the same time.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.PlatformWiper",
  "description": "Helper class for Wipe effects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.Resize",
  "description": "The Resize effect animates a UI component's width or height.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.Sequence",
  "description": "The Sequence effect animates set of effects one after the other.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.Tween",
  "description": "Tween is the underlying animation class for the effects in Royale.  The Tween class defines a tween, a property animation performed on a target object over a period of time. That animation can be a change in position, such as performed by the Move effect; a change in size, as performed by the Resize or Zoom effects; a change in visibility, as performed by the Fade or Dissolve effects; or other types of animations.  <p>A Tween instance accepts the <code>startValue</code>, <code>endValue</code>, and <code>duration</code> properties, and an optional easing function to define the animation.</p>",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.Wipe",
  "description": "The Fade effect animates a UI component's alpha or opacity.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.effects.beads.EasyAccordionCollapseBead",
  "description": ""},
{ "name": "org.apache.royale.effects.beads.ParallelPlayBead",
  "description": ""},
{ "name": "org.apache.royale.effects.beads.ParallelReverseBead",
  "description": ""},
{ "name": "org.apache.royale.effects.beads.SequencePlayBead",
  "description": ""},
{ "name": "org.apache.royale.events.CloseEvent",
  "description": "The CloseEvent class represents event objects specific to popup windows, such as the Alert control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.CollectionEvent",
  "description": "The CollectionEvent class is used for dispatching an collection events",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.0", "Royale 0.9.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.CustomEvent",
  "description": "MXML auto-imports flash.events.Event which then requires full qualification to use org.apache.royale.events.Event. Use CustomEvent to skip all that extra typing.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.DetailEvent",
  "description": "The DetailEvent class is used for dispatching an event that has a string with more information",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.DragEvent",
  "description": "Drag and Drop Events.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.DragEventBase",
  "description": "Drag and Drop Events.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.ElementEvents",
  "description": ""},
{ "name": "org.apache.royale.events.Event",
  "description": "This class simply wraps flash.events.Event so that no flash packages are needed on the JS side. At runtime, this class is not always the event object that is dispatched.  In most cases we are dispatching DOMEvents instead, so as long as you don't actually check the typeof(event) it will work",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.EventDispatcher",
  "description": "This class simply wraps flash.events.EventDispatcher so that no flash packages are needed on the JS side.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.FocusEvent",
  "description": "An object dispatches a FocusEvent object when the user changes the focus from one object in the display list to another  There are four types of focus events: FocusEvent.FOCUS_IN FocusEvent.FOCUS_OUT FocusEvent.KEY_FOCUS_CHANGE FocusEvent.MOUSE_FOCUS_CHANGE",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.IBrowserEvent",
  "description": ""},
{ "name": "org.apache.royale.events.IEventDispatcher",
  "description": "This class simply wraps flash.events.EventDispatcher so that no flash packages are needed on the JS side.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.IRoyaleEvent",
  "description": "This class simply wraps flash.events.Event so that no flash packages are needed on the JS side. At runtime, this class is not always the event object that is dispatched.  In most cases we are dispatching DOMEvents instead, so as long as you don't actually check the typeof(event) it will work",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.ItemAddedEvent",
  "description": "The ItemAddedEvent is dispatched by IItemRendererParent objects whenenver an itemRenderer is added.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.ItemClickedEvent",
  "description": "The ItemClickedEvent is a custom event issued by an itemRenderer to convey information about itself when it has determined that the event(s) happening to it constitute a 'click' on itself.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.ItemRemovedEvent",
  "description": "The ItemRemovedEvent is dispatched by IItemRendererParent objects whenenver an itemRenderer is removed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.ItemRendererEvent",
  "description": "The ItemRendererEvent is dispatched by DataItemRendererFactory classes under various conditions.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.KeyboardEvent",
  "description": "Keyboard events",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.MouseEvent",
  "description": "Mouse events",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.ProgressEvent",
  "description": "The ProgressEvent",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.StyleChangeEvent",
  "description": "Instances of the StyleChangeEvent class are dispatched by the StyleChangeNotifier when it detects changes to a component's style.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.ValueChangeEvent",
  "description": "The ValueChangeEvent class replaces the PropertyChangeEvent as the default event for property changes used in the databinding subsystem.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.ValueEvent",
  "description": "The ValueEvent class is used for dispatching an event that has one useful value",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.events.utils.EditingKeys",
  "description": "This class holds constants for editing keys See: https://w3c.github.io/uievents-key/#keys-editing See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#Editing_keys",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.IHandlesOriginalEvent",
  "description": "The presence of this interface indicates that the event.target being processed by a converter, such as MouseEventConverter, should be ignored.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.KeyConverter",
  "description": "Converts Keyboard Codes and key values into rational string equivalents.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.KeyboardEventConverter",
  "description": "Converts low level keyboard events to Royale KeyboardEvents",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.ModifierKeys",
  "description": "This class holds constants for modifier keys See: https://w3c.github.io/uievents-key/#keys-modifier See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#Modifier_keys",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.MouseEventConverter",
  "description": "Mouse events conversion.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.MouseUtils",
  "description": "This class maps common event functions for MouseEvent",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.NavigationKeys",
  "description": "This class holds constants for keyboard navigation See: https://w3c.github.io/uievents-key/#keys-navigation See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#Navigation_keys",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.SpecialKeys",
  "description": "This class holds constants for special keys See: https://w3c.github.io/uievents-key/#keys-special See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#Special_values",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.UIKeys",
  "description": "This class holds constants for special keys See: https://w3c.github.io/uievents-key/#keys-ui See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#UI_keys",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.events.utils.WhitespaceKeys",
  "description": "This class holds constants for special keys See: https://w3c.github.io/uievents-key/#keys-whitespace See: https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values#Whitespace_keys",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.express.Application",
  "description": "This class extends the standard Application and sets up the SimpleCSSValuesImpl (implementation) for convenience.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/Application.html", "https://flex.apache.org/asdoc/spark/components/Application.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.Application", "spark.components.Application"]},
    {  "tagName": "commentary",
       "values": ["Unlike Flex Application, Royale Application does not provide a user interface container. Instead, you create an instance of org.apache.royale.express.View as the Application's initialView property.", "The Express version of Application pre-packages some additional beads.", "Unlike Flex Application, Royale Application does not provide a user interface container. Instead, you create an instance of org.apache.royale.express.View as the Application's initialView property.", "The Express version of Application pre-packages some additional beads."]},
    {  "tagName": "example",
       "values": ["&lt;js:Application&gt;", "&nbsp;&nbsp;&lt;js:initialView&gt;", "&nbsp;&nbsp;&nbsp;&nbsp;&lt;local:MyInitialView /&gt;", "&nbsp;&nbsp;&lt;/js:initialView&gt;", "&lt;/js:Application&gt;", "&lt;js:Application&gt;", "&nbsp;&nbsp;&lt;js:initialView&gt;", "&nbsp;&nbsp;&nbsp;&nbsp;&lt;local:MyInitialView /&gt;", "&nbsp;&nbsp;&lt;/js:initialView&gt;", "&lt;/js:Application&gt;"]}  ]},
{ "name": "org.apache.royale.express.Container",
  "description": "This class extends the standard Container and adds the ContainerDataBinding bead and ScrollingViewport beads for convenience.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/Group.html", "https://flex.apache.org/asdoc/spark/components/Group.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.Group", "spark.components.Group"]},
    {  "tagName": "commentary",
       "values": ["In the Royale Express package, data binding is prepackaged into the Container component.", "Royale Express Container also includes support for scrolling.", "Royale Express also provides HContainer (horizontal layout) and VContainer (vertical layout) for convenience.", "In the Royale Express package, data binding is prepackaged into the Container component.", "Royale Express Container also includes support for scrolling.", "Royale Express also provides HContainer (horizontal layout) and VContainer (vertical layout) for convenience."]}  ]},
{ "name": "org.apache.royale.express.DataGrid",
  "description": "This class extends DataGrid and adds beads for drag and drop and column reordering.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/DataGrid.html", "https://flex.apache.org/asdoc/spark/components/DataGrid.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.DataGrid", "spark.components.DataGrid"]},
    {  "tagName": "commentary",
       "values": ["The Royale DataGrid is very similar to the Flex DataGrid. You define the DataGrid using DataGridColumn, assigning to each column a field in the data provider and an itemRenderer to display the data.", "The Royale Express DataGrid is packaged with support for drag-and-drop and column re-ordering.", "The Royale DataGrid is very similar to the Flex DataGrid. You define the DataGrid using DataGridColumn, assigning to each column a field in the data provider and an itemRenderer to display the data.", "The Royale Express DataGrid is packaged with support for drag-and-drop and column re-ordering."]},
    {  "tagName": "example",
       "values": ["&lt;js:DataGrid width=\"300\" height=\"400\"&gt;", "&nbsp;&nbsp;&lt;js:beads&gt;", "&nbsp;&nbsp;&nbsp;&lt;js:ConstantBinding", "&nbsp;&nbsp;&nbsp;&nbsp;sourceID=\"applicationModel\"", "&nbsp;&nbsp;&nbsp;&nbsp;sourcePropertyName=\"productList\"", "&nbsp;&nbsp;&nbsp;&nbsp;destinationPropertyName=\"dataProvider\" /&gt;", "&nbsp;&nbsp;&lt;/js:beads&gt;", "&nbsp;&nbsp;&lt;js:columns&gt;", "&nbsp;&nbsp;&nbsp;&lt;js:DataGridColumn label=\"Image\" dataField=\"image\" columnWidth=\"50\" itemRenderer=\"products.ProductItemRenderer\" /&gt;", "&nbsp;&nbsp;&nbsp;&lt;js:DataGridColumn label=\"Title\" dataField=\"title\" columnWidth=\"150\" /&gt;", "&nbsp;&nbsp;&nbsp;&lt;js:DataGridColumn label=\"Sales\" dataField=\"sales\" columnWidth=\"100\" /&gt;", "&nbsp;&nbsp;&lt;/js:columns&gt;", "&lt;/js:DataGrid&gt;", "&lt;js:DataGrid width=\"300\" height=\"400\"&gt;", "&nbsp;&nbsp;&lt;js:beads&gt;", "&nbsp;&nbsp;&nbsp;&lt;js:ConstantBinding", "&nbsp;&nbsp;&nbsp;&nbsp;sourceID=\"applicationModel\"", "&nbsp;&nbsp;&nbsp;&nbsp;sourcePropertyName=\"productList\"", "&nbsp;&nbsp;&nbsp;&nbsp;destinationPropertyName=\"dataProvider\" /&gt;", "&nbsp;&nbsp;&lt;/js:beads&gt;", "&nbsp;&nbsp;&lt;js:columns&gt;", "&nbsp;&nbsp;&nbsp;&lt;js:DataGridColumn label=\"Image\" dataField=\"image\" columnWidth=\"50\" itemRenderer=\"products.ProductItemRenderer\" /&gt;", "&nbsp;&nbsp;&nbsp;&lt;js:DataGridColumn label=\"Title\" dataField=\"title\" columnWidth=\"150\" /&gt;", "&nbsp;&nbsp;&nbsp;&lt;js:DataGridColumn label=\"Sales\" dataField=\"sales\" columnWidth=\"100\" /&gt;", "&nbsp;&nbsp;&lt;/js:columns&gt;", "&lt;/js:DataGrid&gt;"]}  ]},
{ "name": "org.apache.royale.express.HContainer",
  "description": "This class extends Container and adds the HorizontalLayout bead for convenience.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/Group.html", "https://flex.apache.org/asdoc/spark/components/Group.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.HGroup", "spark.components.HGroup"]},
    {  "tagName": "commentary",
       "values": ["In the Royale Express package, data binding is prepackaged into the HContainer component.", "Royale Express HContainer also includes support for scrolling.", "Royale Express also provides Container (basic layout) and VContainer (vertical layout) for convenience.", "In the Royale Express package, data binding is prepackaged into the HContainer component.", "Royale Express HContainer also includes support for scrolling.", "Royale Express also provides Container (basic layout) and VContainer (vertical layout) for convenience."]}  ]},
{ "name": "org.apache.royale.express.HSlider",
  "description": ""},
{ "name": "org.apache.royale.express.HView",
  "description": "This class extends View and adds the HorizontalLayout bead for convenience."},
{ "name": "org.apache.royale.express.ImageAndTextButton",
  "description": "This class extends ImageAndTextButton and adds the toolTip bead as a convenience."},
{ "name": "org.apache.royale.express.ImageButton",
  "description": "This class extends ImageButton and adds the toolTip bead as a convenience.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/Button.html", "https://flex.apache.org/asdoc/spark/components/Button.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.Button", "spark.components.Button"]},
    {  "tagName": "commentary",
       "values": ["In Royale, buttons that uses images should either be an ImageButton or a ImageAndTextButton.", "This class includes <ul><li>toolTip: String</li><li>enabled: Boolean</li></ul> properties.", "In Royale, buttons that uses images should either be an ImageButton or a ImageAndTextButton.", "This class includes <ul><li>toolTip: String</li><li>enabled: Boolean</li></ul> properties."]}  ]},
{ "name": "org.apache.royale.express.List",
  "description": "The List class is a component that displays multiple data items take from a data source.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/List.html", "https://flex.apache.org/asdoc/spark/components/List.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.List", "spark.components.List"]},
    {  "tagName": "commentary",
       "values": ["In Royale, the List component requires a data provider source and a class to be used as an itemRenderer to display the data.", "In the Royale Express package, data binding is prepackaged into the List component. The Royale Express List also includes support for scrolling as well as drag-and-drop.", "In Royale, the List component requires a data provider source and a class to be used as an itemRenderer to display the data.", "In the Royale Express package, data binding is prepackaged into the List component. The Royale Express List also includes support for scrolling as well as drag-and-drop."]},
    {  "tagName": "example",
       "values": ["&lt;js:List dataProvider=\"{employees}\" itemRenderer=\"local.EmployeeCard\" /&gt;", "&lt;js:List dataProvider=\"{employees}\" itemRenderer=\"local.EmployeeCard\" /&gt;"]}  ]},
{ "name": "org.apache.royale.express.MXMLItemRenderer",
  "description": "This class extends MXMLItemRenderer and adds ItemRendererDataBinding for convenience."},
{ "name": "org.apache.royale.express.MXMLViewer",
  "description": "This class extends the standard Label and allows MXML content (ie, XML or HTML) to be displayed."},
{ "name": "org.apache.royale.express.NumericStepper",
  "description": "The NumericStepper class is a component that displays a numeric value and up/down controls (using a org.apache.royale.html.Spinner) to increase and decrease the value by specific amounts. The NumericStepper uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the component of type org.apache.royale.core.IRangeModel. org.apache.royale.core.IBeadView: constructs the parts of the component. org.apache.royale.core.IBeadController: handles the input events.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.express.TextButton",
  "description": "This class extends TextButton and adds the toolTip bead as a convenience.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/Button.html", "https://flex.apache.org/asdoc/spark/components/Button.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.Button", "spark.components.Button"]},
    {  "tagName": "commentary",
       "values": ["The Royale Express TextButton is pre-packaged with beads to do:", "<ul><li>enabled: Boolean</li><li>toolTip: String</li><li>secure: Boolean</li></ul>See also the Royale Express ImageButton and the Royale Express ImageAndTextButton.", "The Royale Express TextButton is pre-packaged with beads to do:", "<ul><li>enabled: Boolean</li><li>toolTip: String</li><li>secure: Boolean</li></ul>See also the Royale Express ImageButton and the Royale Express ImageAndTextButton."]}  ]},
{ "name": "org.apache.royale.express.TextInput",
  "description": "This class extends the standard TextInput class and adds in the prompt, password, and numeric accessories (as needed) for convenience."},
{ "name": "org.apache.royale.express.VContainer",
  "description": "This class extends Container and adds the VerticalLayout bead for convenience.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/Group.html", "https://flex.apache.org/asdoc/spark/components/Group.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.VGroup", "spark.components.VGroup"]},
    {  "tagName": "commentary",
       "values": ["In the Royale Express package, data binding is prepackaged into the VContainer component.", "Royale Express VContainer also includes support for scrolling.", "Royale Express also provides Container (basic layout) and HContainer (horizontal layout) for convenience.", "In the Royale Express package, data binding is prepackaged into the VContainer component.", "Royale Express VContainer also includes support for scrolling.", "Royale Express also provides Container (basic layout) and HContainer (horizontal layout) for convenience."]}  ]},
{ "name": "org.apache.royale.express.VSlider",
  "description": ""},
{ "name": "org.apache.royale.express.VView",
  "description": "This class extends View and adds the VerticalLayout bead for convenience."},
{ "name": "org.apache.royale.express.View",
  "description": "This View extends the standard View and adds the ViewDataBinding bead for convenience.",
"tags": [
{  "tagName": "flexdocurl",
       "values": ["https://flex.apache.org/asdoc/spark/components/Application.html", "https://flex.apache.org/asdoc/spark/components/Application.html"]},
    {  "tagName": "flexcomponent",
       "values": ["spark.components.Application", "spark.components.Application"]},
    {  "tagName": "commentary",
       "values": ["Unlike Flex, the Royale Application has no visual aspect. Instead, Royale application's extend the View class which is most often the base class for application MXML components.", "The Royale Express View includes data binding. For convenience, Royale Express also provides HView (horizontal layout) and VView (vertical layout).", "Unlike Flex, the Royale Application has no visual aspect. Instead, Royale application's extend the View class which is most often the base class for application MXML components.", "The Royale Express View includes data binding. For convenience, Royale Express also provides HView (horizontal layout) and VView (vertical layout)."]}  ]},
{ "name": "org.apache.royale.express.beads.layouts.DataGridLayout",
  "description": "This DataGridLayout class sizes and positions all of the elements of the DataGrid in the Express package. The ButtonBar header, the container content area for the the list columns, and the positioning and sizing of the list columns within that container. On top of the contain a drawing layer is floating to allow for the graphics of a drag-and-drop indicator."},
{ "name": "org.apache.royale.express.beads.models.DataGridModel",
  "description": ""},
{ "name": "org.apache.royale.express.supportClasses.DataGridColumn",
  "description": "This class defines how a column in the DataGrid should look, including the label for the column and its width. In particular, the width may be given as a fixed pixel size (e.g., \"80\") or a percentage of the remaining space once all fixed-width columns have been taken into consideration (e.g., \"100%\"). That is, if the DataGrid has a width of 400 pixels with columns of \"50\", \"100%\", and \"80\", the \"100%\" column is the remainder of 400-50-80 or 260. If the DataGrid is resized to 500 pixels, the outer columns remain at 50 and 80 pixels, but the middle column expands to 360 pixels given its \"100%\" value."},
{ "name": "org.apache.royale.file.FileProxy",
  "description": "The FileProxy class is where beads regarding file operations are added. Information about operations can be queried in the file model, or by listenening to events dispatched by beads.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.file.IFileModel",
  "description": ""},
{ "name": "org.apache.royale.file.beads.FileBrowser",
  "description": "The FileBrowser class is a bead which adds to UploadImageProxy the ability to browse the file system and select a file.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.file.beads.FileBrowserWithFilter",
  "description": "The FileBrowserWithFilter adds a filtering option to FileBrowser",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.file.beads.FileLoader",
  "description": "The FileLoader class is a bead which adds to UploadImageProxy the ability to browse the file system and select a file.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.file.beads.FileLoaderAndUploader",
  "description": "The FileLoaderAndUploader is a compound bead that allows you to load a file and upload it in one operation.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.file.beads.FileModel",
  "description": "The FileModel class is a bead that contains basic information on the file referenced by FileProxy",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.file.beads.FileUploader",
  "description": "The FileUploader class is a bead which adds to FileProxy the ability to upload files.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.file.beads.FileUploaderWithResponseData",
  "description": "FileUploaderWithResponseData records responseData before dispatching the complete event",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.geom.Matrix",
  "description": "2D Matrix",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7", "Royale 0.7"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.geom.Point",
  "description": "The Point class is a utility class for holding x and y values, not that you can't use it to hold a width and height value.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.geom.Rectangle",
  "description": "The Rectangle class is a utility class for holding four coordinates of a rectangle",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.geom.Size",
  "description": "The Size class is a utility class for holding width and height values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.graphics.CubicCurve",
  "description": ""},
{ "name": "org.apache.royale.graphics.GradientBase",
  "description": ""},
{ "name": "org.apache.royale.graphics.GradientEntry",
  "description": ""},
{ "name": "org.apache.royale.graphics.ICircle",
  "description": ""},
{ "name": "org.apache.royale.graphics.ICompoundGraphic",
  "description": ""},
{ "name": "org.apache.royale.graphics.IDrawable",
  "description": ""},
{ "name": "org.apache.royale.graphics.IEllipse",
  "description": ""},
{ "name": "org.apache.royale.graphics.IFill",
  "description": ""},
{ "name": "org.apache.royale.graphics.IGraphicShape",
  "description": ""},
{ "name": "org.apache.royale.graphics.IPath",
  "description": ""},
{ "name": "org.apache.royale.graphics.IPathCommand",
  "description": ""},
{ "name": "org.apache.royale.graphics.IRect",
  "description": ""},
{ "name": "org.apache.royale.graphics.IStroke",
  "description": ""},
{ "name": "org.apache.royale.graphics.IText",
  "description": ""},
{ "name": "org.apache.royale.graphics.LineStyle",
  "description": ""},
{ "name": "org.apache.royale.graphics.LineTo",
  "description": ""},
{ "name": "org.apache.royale.graphics.MoveTo",
  "description": ""},
{ "name": "org.apache.royale.graphics.PathBuilder",
  "description": ""},
{ "name": "org.apache.royale.graphics.QuadraticCurve",
  "description": ""},
{ "name": "org.apache.royale.graphics.SolidColor",
  "description": ""},
{ "name": "org.apache.royale.graphics.SolidColorStroke",
  "description": ""},
{ "name": "org.apache.royale.graphics.beads.BlendBead",
  "description": "The BlendBead class translates HTML mixBlendMode CSS values to flash. The JS implementation is degenerated and exists only to enable output agnostic compilation.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "description": "Transform Offsets can be assigned to any Component or GraphicElement to modify the transform of the object beyond where its parent layout places it.",
"tags": [
{  "tagName": "private",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.CompoundTransform",
  "description": "A CompoundTransform represents a 2D or 3D matrix transform.  A compound transform represents a matrix that can be queried or set either as a 2D matrix, a 3D matrix, or as individual convenience transform properties such as x, y, scaleX, rotationZ, etc.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.IAssetLayoutFeatures",
  "description": "The IAssetLayoutFeatures interface defines the minimum properties and methods required for an Object to support advanced transforms in embedded assets.",
"tags": [
{  "tagName": "see",
       "values": ["mx.core.AdvancedLayoutFeatures", "mx.core.AdvancedLayoutFeatures"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0.1", "Royale 1.0.0.1"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.MatrixUtil",
  "description": "The MatrixUtil class is for internal use only. Class for matrix and geometric related math routines.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "org.apache.royale.graphics.utils.PathHelper",
  "description": ""},
{ "name": "org.apache.royale.graphics.utils.TransformOffsets",
  "description": "A CompoundTransform represents a 2D or 3D matrix transform. It can be used in the postLayoutTransformOffsets property on a UIComponent or GraphicElement.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.ColorBurnShader",
  "description": "Creates a blend shader that is equivalent to the 'Color Burn' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools. This blend mode is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  <p>The 'colorburn' blend mode can be set on Flex groups and graphic elements and the visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.</p>",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/ColorBurnShaderExample.mxml", "examples/ColorBurnShaderExample.mxml"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.ColorDodgeShader",
  "description": "Creates a blend shader that is equivalent to the 'Color Dodge' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools. This blend mode is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  <p>The 'colordodge' blend mode can be set on Flex groups and graphic elements. The visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.</p>",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/ColorDodgeShaderExample.mxml", "examples/ColorDodgeShaderExample.mxml"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.ColorShader",
  "description": "The ColorShader class creates a blend shader that is equivalent to the 'Color' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools. This blend mode is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  The 'color' blend mode can be set on Flex groups and graphic elements and the visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/ColorShaderExample.mxml", "examples/ColorShaderExample.mxml"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.ExclusionShader",
  "description": "Creates a blend shader that is equivalent to the 'Exclusion' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools. This blend mode is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  <p>The 'exclusion' blend mode can be set on Flex groups and graphic elements. The visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.</p>",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/ExclusionShaderExample.mxml", "examples/ExclusionShaderExample.mxml"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.HueShader",
  "description": "Creates a blend shader that is equivalent to the 'Hue' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools. This blend mode is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  <p>The 'hue' blend mode can be set on Flex groups and graphic elements. The visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.</p>",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/HueShaderExample.mxml", "examples/HueShaderExample.mxml"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.LuminosityMaskShader",
  "description": "Creates a blend shader that is equivalent to the luminosity masking option (also known as soft masking) available in Adobe Creative Suite tools. This mask type is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  <p>A luminosity mask type can be set on Flex groups and graphic elements. The visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.</p>",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/LuminosityMaskShaderExample.mxml", "examples/LuminosityMaskShaderExample.mxml"]},
    {  "tagName": "see",
       "values": ["spark.primitives.supportClasses.GraphicElement#maskType", "spark.components.supportClasses.GroupBase#maskType", "spark.primitives.supportClasses.GraphicElement#maskType", "spark.components.supportClasses.GroupBase#maskType"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.LuminosityShader",
  "description": "Creates a blend shader that is equivalent to the 'Luminosity' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools. This blend mode is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  <p>The 'luminosity' blend mode can be set on Flex groups and graphic elements. The visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.</p>",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/LuminosityShaderExample.mxml", "examples/LuminosityShaderExample.mxml"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.SaturationShader",
  "description": "Creates a blend shader that is equivalent to the 'Saturation' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools. This blend mode is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  <p>The 'saturation' blend mode can be set on Flex groups and graphic elements. The visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.</p>",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/SaturationShaderExample.mxml", "examples/SaturationShaderExample.mxml"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.graphics.utils.shaderClasses.SoftLightShader",
  "description": "Creates a blend shader that is equivalent to the 'Soft Light' blend mode for RGB premultiplied colors available in Adobe Creative Suite tools. This blend mode is not native to Flash, but is available in tools like Adobe Illustrator and Adobe Photoshop.  <p>The 'softlight' blend mode can be set on Flex groups and graphic elements. The visual appearance in tools like Adobe Illustrator and Adobe Photoshop will be mimicked through this blend shader.</p>",
"tags": [
{  "tagName": "includeExample",
       "values": ["examples/SoftLightShaderExample.mxml", "examples/SoftLightShaderExample.mxml"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Accordion",
  "description": "The Accordion class used to display a list of collapsible components All but the selected item are expected to be collapsed.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Alert",
  "description": "The Alert class is a component that displays a message and one or more buttons in a view that pops up over all other controls and views. The Alert component uses the AlertView bead to display a modal dialog with a title and a variety of buttons configured through the flag property of its show() static function. The Alert component uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the Alert. org.apache.royale.core.IBeadView: the bead used to create the parts of the Alert. org.apache.royale.core.IBeadController: the bead used to handle input events. org.apache.royale.html.beads.IBorderBead: if present, draws a border around the Alert. org.apache.royale.html.beads.IBackgroundBead: if present, places a solid color background below the Alert.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.BinaryImage",
  "description": "The Image class is a component that displays a bitmap. The Image uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the Image, including the url/binary property. org.apache.royale.core.IBeadView: constructs the visual elements of the component.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Button",
  "description": "The Button class is a simple button.  Use TextButton for buttons that should show text.  This is the lightest weight button used for non-text buttons like the arrow buttons in a Scrollbar or NumericStepper.  The most common view for this button is CSSButtonView that allows you to specify a backgroundImage in CSS that defines the look of the button.  However, when used in ScrollBar and when composed in many other components, it is more common to assign a custom view to the button.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ButtonBar",
  "description": "The ButtonBar class is a component that displays a set of Buttons. The ButtonBar is actually a List with a default horizontal layout and an itemRenderer that produces Buttons. The ButtonBar uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the ButtonBar, including the dataProvider. org.apache.royale.core.IBeadView: constructs the parts of the component. org.apache.royale.core.IBeadController: handles input events. org.apache.royale.core.IBeadLayout: sizes and positions the component parts. org.apache.royale.core.IDataProviderItemRendererMapper: produces itemRenderers. org.apache.royale.core.IItemRenderer: the class or class factory to use.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ButtonBase",
  "description": "The ButtonBase class is the base class for Button.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.CSSCheckBox",
  "description": "The CSSCheckBox class implements the common user interface control.  The CSSCheckBox includes its text label and is styleable using CSS. To style the checkbox control, a `checkClassName` should be specified which corresponds to a CSS class name.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.CascadingMenu",
  "description": "The CascadingMenu class displays a list of selections with a potential for displaying a sub-list and a sub-sub-list etc. depending on how the data is organized.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.CheckBox",
  "description": "The CheckBox class implements the common user interface control.  The CheckBox includes its text label.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.CloseButton",
  "description": "The CloseButton class is Button that displays an X and is commonly used in a Panel's TitleBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ColorPicker",
  "description": "The ColorPicker class is a component that lets you select a color",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ComboBox",
  "description": "The ComboBox class is a component that displays an input field and pop-up List with selections. Selecting an item from the pop-up List places that item into the input field of the ComboBox. The ComboBox uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, which includes the dataProvider, selectedItem, and so forth. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the component. org.apache.royale.core.IBeadController: the bead that handles input and output.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Container",
  "description": "The Container class implements a basic container for other controls and containers.  The position and size of the children are determined by a layout while the size of a Container can either be determined by its children or by specifying an exact size in pixels or as a percentage of the parent element.  This Container does not have a built-in scroll bar or clipping of its content should the content exceed the Container's boundaries. To have scroll bars and clipping, add the ScrollingView bead.  While the container is relatively lightweight, it should generally not be used as the base class for other controls, even if those controls are composed of children.  That's because the fundamental API of Container is to support an arbitrary set of children, and most controls only support a specific set of children.  And that's one of the advantages of beads: that functionality used in a Container can also be used in a Control as long as that bead doesn't assume that its strand is a Container.  For example, even though you can use a Panel to create the equivalent of an Alert control, the Alert is a control and not a Container because the Alert does not support an arbitrary set of children.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.layout", "org.apache.royale.html.supportClasses.ScrollingViewport", "org.apache.royale.html.beads.layout", "org.apache.royale.html.supportClasses.ScrollingViewport"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ControlBar",
  "description": "The ControlBar class is used within a Panel as a place to position additional controls. The ControlBar appears at the bottom of the org.apache.royale.html.Panel and is not part of the Panel's scrollable content area. The ControlBar is a Container and implements the org.apache.royale.core.IChrome interface, indicating that is outside of the Container's content area. The ControlBar uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the component. org.apache.royale.core.IMeasurementBead: helps determine the overlay size of the ControlBar for layout. org.apache.royale.html.beads.IBorderBead: if present, displays a border around the component. org.apache.royale.html.beads.IBackgroundBead: if present, displays a solid background below the ControlBar.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DataContainer",
  "description": "The DataContainer class is a component that displays multiple data items. The DataContainer uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, which includes the dataProvider. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the list. org.apache.royale.core.IBeadController: the bead that handles input and output. org.apache.royale.core.IBeadLayout: the bead responsible for the size and position of the itemRenderers. org.apache.royale.core.IDataProviderItemRendererMapper: the bead responsible for creating the itemRenders. org.apache.royale.core.IItemRenderer: the class or factory used to display an item in the list.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DataGrid",
  "description": "The DataGrid class displays a collection of data using columns and rows. Each column represents a specific field in the data set; each row represents a specific datum. The DataGrid is a composite component built with a org.apache.royale.html.ButtonBar for the column headers and a org.apache.royale.html.List for each column. The DataGrid's view bead (usually org.apache.royale.html.beads.DataGridView) constructs these parts while itemRenderer factories contruct the elements to display the data in each cell.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DataGridButtonBar",
  "description": "The DataGridButtonBar class extends ButtonBar and provides a class for styling the header region of the DataGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DataGridButtonBarTextButton",
  "description": "The DataGridButtonBarTextButton class extends TextButton so that the buttons used in the DataGrid header can be styled separately from normal TextButtons.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DateChooser",
  "description": "The DateChooser class is a component that displays a calendar.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DateField",
  "description": "The DateField class provides an input field where a date can be entered and a pop-up calendar control for picking a date as an alternative to the text field.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DividedContainer",
  "description": "The DividedContainer lays out its children (either horizontally or vertically, depending on which layout is used) separated by dividers. The dividers can be moved to grow and shrink the children.  This is the base class. See HDividedContainer and VDividedContainer for useful implementations.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DropDownList",
  "description": "The DropDownList class implements the basic equivalent of the <code>&lt;select&gt;</code> tag in HTML. The default implementation only lets the user see and choose from an array of strings.  More complex controls would display icons as well as strings, or colors instead of strings or just about anything.  The default behavior only lets the user choose one and only one item.  More complex controls would allow mutiple selection by not dismissing the dropdown as soon as a selection is made.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.DynamicDataGrid",
  "description": ""},
{ "name": "org.apache.royale.html.DynamicList",
  "description": ""},
{ "name": "org.apache.royale.html.Form",
  "description": "The Form class is a simple form.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Group",
  "description": "The Group class provides a light-weight container for visual elements. By default the Group does not have a layout, allowing its children to be sized and positioned using styles or CSS.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.layout", "org.apache.royale.html.supportClasses.ScrollingViewport", "org.apache.royale.html.beads.layout", "org.apache.royale.html.supportClasses.ScrollingViewport"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.HContainer",
  "description": "A Container that has a HorizontalLayout.  This is effectively the same as the pattern <code> <basic:Container xmlns:basic=\"library://ns.apache.org/royale/basic\"> <basic:layout> <basic:HorizontalLayout /> </basic:layout> </basic:Container> </code>",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.HDividedContainer",
  "description": "This sub-class of DividedContainer organizes its children into columns separated by movable dividers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.HGroup",
  "description": "This Group subclass uses HorizontalLayout as its default layout.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.layout", "org.apache.royale.html.beads.layout"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.HRule",
  "description": "The HRule class displays a horizontal line",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.HTMLText",
  "description": "The HTMLText class implements the basic control for adding HTML formatted text.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.HueSelector",
  "description": "The HueSelector is a slider that lets you select a hue for a color picker.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Image",
  "description": "Load Images.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ImageAndTextButton",
  "description": "The ImageTextButton class implements a basic button that displays and image and text.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ImageButton",
  "description": "The ImageButton class presents an image as a button.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Label",
  "description": "The Label class implements the basic control for labeling other controls.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.List",
  "description": "The List class is a component that displays multiple data items. The List uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, which includes the dataProvider, selectedItem, and so forth. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the list. org.apache.royale.core.IBeadController: the bead that handles input and output. org.apache.royale.core.IBeadLayout: the bead responsible for the size and position of the itemRenderers. org.apache.royale.core.IDataProviderItemRendererMapper: the bead responsible for creating the itemRenders. org.apache.royale.core.IItemRenderer: the class or factory used to display an item in the list.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.LoadIndicator",
  "description": "The loader class provides an animated indicator",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.MXMLBeadView",
  "description": "The MXMLBeadView class extends ContainerView and adds support for databinding and specification of children in MXML.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Menu",
  "description": "The Menu class builds pop-up menus that are presented as a list, displayed at a specific location. The dataProvider should be an Array of either Strings or Objects; if Objects, set the Menu's labelField to identify the property in the Object to use for the labels in the Menu.  Use createMenu to create a Menu and add an event listener to be triggered when a menu item is selected.  var menu:Menu = Menu.createMenu(dataProvider); menu.addEventListener(\"change\", handleSelection);  Present the menu using the show function: menu.show(component, xoffset, yoffset);  Pass a component to use a reference when calculating the position of the menu. Set an offset from the component's upper-left corner. If an item is selected the event listener will be called.  Remove the menu using menu.hide();  Note: submenus are not supported.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.MenuBar",
  "description": "The MenuBar class is a list that, when an item is tapped, displays a menu of selections.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.MultilineLabel",
  "description": "The MultilineLabel class implements the basic control for displaying multiline labels.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.NodeElementBase",
  "description": ""},
{ "name": "org.apache.royale.html.NumericStepper",
  "description": "The NumericStepper class is a component that displays a numeric value and up/down controls (using a org.apache.royale.html.Spinner) to increase and decrease the value by specific amounts. The NumericStepper uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the component of type org.apache.royale.core.IRangeModel. org.apache.royale.core.IBeadView: constructs the parts of the component. org.apache.royale.core.IBeadController: handles the input events.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Panel",
  "description": "The Panel class is a Container component capable of parenting other components. The Panel has a TitleBar.  If you want to a Panel with a ControlBar, use PanelWithControlBar which will instantiate, by default, an ControlBar. The Panel uses the following bead types:  org.apache.royale.core.IBeadModel: the data model for the Panel that includes the title and whether or not to display the close button. org.apache.royale.core.IBeadView: creates the parts of the Panel. org.apache.royale.html.beads.IBorderBead: if present, draws a border around the Panel. org.apache.royale.html.beads.IBackgroundBead: if present, provides a colored background for the Panel.",
"tags": [
{  "tagName": "see",
       "values": ["PanelWithControlBar", "ControlBar", "TitleBar", "PanelWithControlBar", "ControlBar", "TitleBar"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.PanelTitleBar",
  "description": ""},
{ "name": "org.apache.royale.html.PanelWithControlBar",
  "description": "The Panel class is a Container component capable of parenting other components. The Panel has a TitleBar and an optional org.apache.royale.html.ControlBar. The Panel uses the following bead types:  org.apache.royale.core.IBeadModel: the data model for the Panel that includes the title and whether or not to display the close button. org.apache.royale.core.IBeadView: creates the parts of the Panel. org.apache.royale.core.IBorderBead: if present, draws a border around the Panel. org.apache.royale.core.IBackgroundBead: if present, provides a colored background for the Panel.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.PopUpList",
  "description": "The PopUpList class is a List that can be popped up or floated over the view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.RadioButton",
  "description": "The RadioButton class is a component that displays a selectable Button. RadioButtons are typically used in groups, identified by the groupName property. RadioButton use the following beads:  org.apache.royale.core.IBeadModel: the data model, which includes the groupName. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the RadioButton..",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.RangeStepper",
  "description": "The RangeStepper control allows for the selection of a single value from multiple choices.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.SimpleAlert",
  "description": "The SimpleAlert class is a component that displays a message and an OK button. The SimpleAlert converts directly to window.alert() for HTML. SimpleAlert uses the following beads:  org.apache.royale.core.IBeadModel: the data model, which includes the message. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the Alert. org.apache.royale.core.IBeadController: the bead responsible for handling input events. org.apache.royale.html.beads.IBorderBead: a bead, if present, that draws a border around the control. org.apache.royale.html.beads.IBackgroundBead: a bead, if present, that creates a solid-color background.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.SimpleList",
  "description": "The SimpleList class is a component that displays data in a vertical column. This component differs from org.apache.royale.html.List in that it displays only string values and maps to the &lt;select&gt; HTML element.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Slider",
  "description": "The Slider class is a component that displays a range of values using a track and a thumb control. The Slider uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, typically an IRangeModel, that holds the Slider values. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the Slider. org.apache.royale.core.IBeadController: the bead that handles input. org.apache.royale.core.IThumbValue: the bead responsible for the display of the thumb control. org.apache.royale.core.ITrackView: the bead responsible for the display of the track.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Spacer",
  "description": "The Spacer class takes up space in the UI layout.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Spinner",
  "description": "The Spinner class is a component that displays a control for incrementing a value and a control for decrementing a value. The org.apache.royale.html.NumericStepper uses a Spinner as part of the component. Spinner uses the following beads:  org.apache.royale.core.IBeadModel: an IRangeModel to hold the properties. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the Spinner. org.apache.royale.core.IBeadController: a bead that handles the input events.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.SubAppLoader",
  "description": "The SubAppLoader class can load Flash or HTML content into a space within an application. Use SubAppLoader to identify where the application should appear, then use its loadApplication() function to load the application dynamically.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.layout", "org.apache.royale.html.supportClasses.ScrollingViewport", "org.apache.royale.html.beads.layout", "org.apache.royale.html.supportClasses.ScrollingViewport"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Table",
  "description": "The Table class represents an HTML <table> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TableCell",
  "description": "The TableCell class defines a table data cell in the Table component. This element may have nearly any type of Royale component as children.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TableHeader",
  "description": "The TableHeader class defines a table header cell in the Table component.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TableRow",
  "description": "The TableRow class defines a row of a Table. This will translate to a <tr> elemement",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TextArea",
  "description": "The TextArea class implements the basic control for multi-line text input.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TextButton",
  "description": "The TextButton class implements a basic button that displays text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TextInput",
  "description": "The TextInput class implements the basic control for single-line text input.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TextNode",
  "description": "The TextNode class represents an HTML Text node element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TextNodeContainerBase",
  "description": ""},
{ "name": "org.apache.royale.html.TitleBar",
  "description": "The TitleBar class is a Container component that displays a title and an optional close button. The TitleBar uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, which includes the title and showCloseButton values. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the component. org.apache.royale.core.IBeadLayout: the bead that handles size and position of the component parts (org.apache.royale.html.Label and org.apache.royale.html.Button). org.apache.royale.core.IMeasurementBead: a bead that helps determine the size of the org.apache.royale.html.TitleBar for layout.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ToggleTextButton",
  "description": "The ToggleButton class is a TextButton that supports a selected property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.ToolTip",
  "description": "The Label class implements the basic control for labeling other controls.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.Tree",
  "description": "The Tree component displays structured data. The Tree uses a HierarchicalData object as its data provider.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.TreeGrid",
  "description": "A TreeGrid is a combination of a Tree and a DataGrid. The first column of the TreeGrid is a Tree; the remaining columns are Lists. Each column of the TreeGrid is defined by the TreeGridColumn, which names the data field within each datum to be displayed. The dataProvider should be a HierarchicalData object with \"children\" properties to build the tree.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.UIModule",
  "description": "The UIModule class is the base class for modules of user interface controls in Royale.  It is usable as the root tag of MXML documents and UI controls and containers are added to it.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.UIModuleLoader",
  "description": "The UIModuleLoader class can load a UIModule.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.VContainer",
  "description": "A Container that has a VerticalLayout.  This is effectively the same as the pattern <code> <basic:Container xmlns:basic=\"library://ns.apache.org/royale/basic\"> <basic:layout> <basic:VerticalLayout /> </basic:layout> </basic:Container> </code>",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.VDividedContainer",
  "description": "This sub-class of DividedContainer organizes its children into rows separated by movable dividers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.VGroup",
  "description": "This Group subclass uses VerticalLayout as its default layout.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.layout", "org.apache.royale.html.beads.layout"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.VRule",
  "description": "The VRule class displays a vertical line",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.WebBrowser",
  "description": "The WebBrowser provides a space in which to display a web page within a Royale application. Use the url property to change the location of the web page being displayed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.AdaptiveToolTipBead",
  "description": "The AdaptiveToolTipBead class is a specialty bead that can be used with any control. The bead floats a string over a control if the user hovers over the control with a mouse. It contains logic to ensure the tooltip remains inside the window.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.CurrencyFormatter",
  "description": "The CurrencyFormatter class formats a value in separated groups. The formatter listens to a property on a model and when the property changes, formats it and dispatches a formatChanged event.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.DateAndTimeFormatter",
  "description": "The DateFormatter class wraps an IFormatter and adds an hour.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "royaleignoreimport",
       "values": ["org.apache.royale.core.IStrandWithModel", "org.apache.royale.core.IStrandWithModel"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.DateFormatDDMMYYYY",
  "description": "The DateFormatDDMMYYYY class formats the display of a DateField using DD/MM/YYYY format.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.DateFormatMMDDYYYY",
  "description": "The DateFormatMMDDYYYY class formats the display of a DateField using MM/DD/YYYY format.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.DateFormatYYYYMMDD",
  "description": "The DateFormatYYYYMMDD class formats the display of a DateField using YYYY-MM-DD format.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.NumberFormatter",
  "description": "The NumberFormatter class formats a value in separated groups. The formatter listens to a property on a model and when the property changes, formats it and dispatches a formatChanged event.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.NumericOnlyTextInputBead",
  "description": "The NumericOnlyTextInputBead class is a specialty bead that can be used with any TextInput control. The bead prevents non-numeric entry into the text input area.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.PasswordInputBead",
  "description": "The PasswordInput class is a specialty bead that can be used with any TextInput control. The bead secures the text input area by masking the input as it is typed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.PasswordInputRemovableBead",
  "description": "The PasswordInput class is a specialty bead that can be used with any TextInput control. The bead secures the text input area by masking the input as it is typed. PasswordInputRemovableBead adds the ability to remove the functionality at runtime.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.SimpleDateFormatter",
  "description": "The DateFormatter class formats the display of a DateField using a dateFormat.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "royaleignoreimport",
       "values": ["org.apache.royale.core.IStrandWithModel", "org.apache.royale.core.IStrandWithModel"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.StringDateFormatter",
  "description": "Formats a date from a string Because of the compleixities of date formatting, this formatter does not differentiate between single digit formats and double digit formats for days and months."},
{ "name": "org.apache.royale.html.accessories.TextPromptBead",
  "description": "The TextPromptBead class is a specialty bead that can be used with any TextInput control. The bead places a string into the input field when there is no value associated with the text property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.accessories.ToolTipBead",
  "description": "The ToolTipBead class is a specialty bead that can be used with any control. The bead floats a string over a control if the user hovers over the control with a mouse.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.AbsolutePositioningViewBeadBase",
  "description": "Use AbsolutePositioningViewBeadBase as the base class for custom control view beads. This class sets the strand's position style to \"relative\" (HTML platform) if it is not already set to either \"absolute\" or \"relative\". Then use this class's setAbsolutePosition(child, x, y) function to place children. The function not only set's the child's left and top styles (HTML platform), it also sets the child's position to \"absolute\" (HTML platform).  On the Flash platform, this class will only set the child's x and y properties without any other side effects.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.AccessibilityAltBead",
  "description": "The AccessibilityAltBead class is a bead that can be used with any Image control. The bead places add an alt text attribute on a image.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.AccordionCollapseBead",
  "description": ""},
{ "name": "org.apache.royale.html.beads.AccordionItemRendererView",
  "description": "This class creates and manages the contents of an AccordionItemRenderer",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.AccordionView",
  "description": "The AccordionView sets up the components for the Accordion component.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.AlertMeasurementBead",
  "description": "The AlertMeasureBead class provides boundary measurements for an org.apache.royale.html.Alert component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.AlertView",
  "description": "The AlertView class creates the visual elements of the org.apache.royale.html.Alert component. The job of the view bead is to put together the parts of the Alert, such as the title bar, message, and various buttons, within the space of the Alert component strand.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ApplicationParametersBead",
  "description": "The ApplicationParametersBead is used to get URL parameter values specified when loading an application.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.2", "Royale 0.9.2"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ApplicationParametersCaseInsensitiveBead",
  "description": "The ApplicationParametersCaseInsensitiveBead is used to get URL parameter values specified when loading an application. It's different than the ApplicationParametersBead in that URL parameter keys are case insensitive.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.2", "Royale 0.9.2"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.BackgroundImageBead",
  "description": "The BackgroundImageBead is used to render an image as the background to any component that supports it, such as Container.  Note that this bead is for ActionScript only since CSS/HTML allows this just by specifying a background image in the style selector. To use this bead, place a ClassReference to it",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "media",
       "values": ["-royale-swf { } group in the CSS declarations.", "-royale-swf { } group in the CSS declarations."]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.BinaryImageLoader",
  "description": "The ImageView class creates the visual elements of the org.apache.royale.html.Image component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ButtonBarReorderBead",
  "description": "The ButtonBarReorderBead bead can be added to a ButtonBar to re-order the buttons using drag-and-drop. This bead will add additional beads as necessary.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.SingleSelectionDropTargetBead.", "org.apache.royale.html.beads.SingleSelectionDropTargetBead."]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ButtonBarView",
  "description": "The ButtonBarView class creates the visual elements of the org.apache.royale.html.ButtonBar component. A ButtonBar is a type of List and ButtonBarView extends the ListView bead, adding a border.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CSSButtonView",
  "description": "The CSSButtonView class is the default view for the org.apache.royale.html.Button class. It allows the look of the button to be expressed in CSS via the background-image style.  This view does not display text.  Use CSSTextButtonView and TextButton instead.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CSSImageAndTextButtonView",
  "description": "The CSSTextButtonView class is the default view for the org.apache.royale.html.TextButton class. It allows the look of the button to be expressed in CSS via the background-image style and displays a text label.  This view does not support right-to-left text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CSSTextToggleButtonView",
  "description": "The CSSTextToggleButtonView class is the default view for the org.apache.royale.html.TextToggleButton class. It allows the look of the button to be expressed in CSS via the background-image style and displays a text label.  This view does not support right-to-left text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CascadingMenuFactory",
  "description": "This bead class generates instances of the CascadingMenu for use with MenuBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CenterElement",
  "description": "The CenterElement bead breaks the normal layout flow and forces a particlular element to stay centered.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CheckBoxView",
  "description": "The CheckBoxView class is the default view for the org.apache.royale.html.CheckBox class. It displays a simple checkbox with an 'x' if checked, and a label on the right.  There are no styles or properties to configure the look of the 'x' or the position of the label relative to the checkbox as there are no equivalents in the standard HTML checkbox.  A more complex CheckBox could implement more view configuration.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CloseButtonView",
  "description": "The CloseButtonView class is the view for the down arrow button in a ScrollBar and other controls.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CollectionChangeUpdateForArrayListData",
  "description": "Handles the update of an itemRenderer in a List component once the corresponding datum has been updated from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ColorPickerView",
  "description": "The ColorPickerView class creates the visual elements of the org.apache.royale.html.ColorPicker component. The job of the view bead is to put together the parts of the ComboBox such as the color container and org.apache.royale.html.Button to trigger the pop-up.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ColorPickerWithEmptyView",
  "description": "The ColorPickerWithEmptyView overrides ColorPickerView methods to visibly indicate that a selection is empty",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ColorSpectrumView",
  "description": "The ColorSpectrumView class is the view for the org.apache.royale.html.ColorSpectrum",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ComboBoxView",
  "description": "The ComboBoxView class creates the visual elements of the org.apache.royale.html.ComboBox component. The job of the view bead is to put together the parts of the ComboBox such as the TextInput control and org.apache.royale.html.Button to trigger the pop-up.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ContainerView",
  "description": "This class creates and manages the contents of a Container. On the ActionScript side, a Container has a contentView into which the offical children can be placed. When adding an element that implements IChrome, that element is not placed into the contentView, but is made a child of the Container directly.  Containers also have a layout associated with them which controls the size and placement of the elements in the contentView. When a Container does not have an explicit size (including a percent size), the content dictates the size of the Container.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ControlBarMeasurementBead",
  "description": "The ControlBarMeasurementBead class measures the size of a org.apache.royale.html.ControlBar component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.CrossBrowserFireListenerOverrideBead",
  "description": "Overrides default HTMLElementWrapper implementation to make sure events are converted on all browsers including IE.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.92", "Royale 0.92"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataContainerView",
  "description": "The DataContainerView provides the visual elements for the DataContainer.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataFieldProviderBead",
  "description": "The DataFieldProviderBead class is a model that holds dataField used mostly in item renderers for retrieve some value from dataProvider items.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridButtonBarViewForMovableColumns",
  "description": ""},
{ "name": "org.apache.royale.html.beads.DataGridColumnChangePropagator",
  "description": "The DataGridColumnChangePropagator picks up the dataProviderChanged event and lets the data grid columns know about it.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridColumnForceChangePropagator",
  "description": "The DataGridColumnForceChangePropagator picks up the dataProviderChanged event and lets the data grid columns know about it, whether or not the data provider object was changed.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridColumnReorderView",
  "description": "The DataGridColumnReorderView bead extends DataGridView and lists for changes to the model that is used to produce the column header. When this model changes, this view bead also changes the sub-components to match.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridColumnView",
  "description": "The DataGridColumnView class extends org.apache.royale.html.beads.ListView and provides properties to the org.apache.royale.html.List that makes a column in the org.apache.royale.html.DataGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridDragDropBead",
  "description": "The DataGridDragDropBead bead should be added to the DataGrid when drag and drop operations are required. Rather than using the drag and drop beads individually, this bead will add them as needed and monitor events to insure the drag and drop operations are handled property for the DataGrid.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridDrawingLayerBead",
  "description": "DataGridDrawingLayerBead places a graphic space into the DataGrid that is positioned above the Container used to hold the columns. This graphic space can be used to insert visualizations into the DataGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridLinesBead",
  "description": "The DataGridLinesBead is an add on bead for the DataGrid. This bead adds horizontal and vertical grid lines to a DataGrid. The size and color of the lines is specified by the stroke property (defaults to a thin dark line).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridListArea",
  "description": ""},
{ "name": "org.apache.royale.html.beads.DataGridPercentageView",
  "description": "The DataGridPercentageView class is the visual bead for the org.apache.royale.html.DataGrid. This class constructs the items that make the DataGrid: Lists for each column and a org.apache.royale.html.ButtonBar for the column headers. This class interprets the columnWidth value of each column to be a percentage rather than a pixel value.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridView",
  "description": "The DataGridView class is the visual bead for the org.apache.royale.html.DataGrid. This class constructs the items that make the DataGrid: Lists for each column and a org.apache.royale.html.ButtonBar for the column headers.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataGridWithDrawingLayerLayout",
  "description": "DataGridWithDrawingLayerLayout is a class that extends VerticalFlexLayout and positions the drawing layer created by a DataGridDrawingLayerBead.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayData",
  "description": "The DataItemRendererFactoryForArrayData class reads an array of data and creates an item renderer for every item in the array.  Other implementations of IDataProviderItemRendererMapper map different data structures or manage a virtual set of renderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataItemRendererFactoryForArrayList",
  "description": "The DataItemRendererFactoryForArrayList class uses an ArrayList and creates an item renderer for every item in the collection.  Other implementations of IDataProviderItemRendererMapper map different data structures or manage a virtual set of renderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataItemRendererFactoryForCollectionView",
  "description": "This class creates itemRenderer instances from the data contained within an ICollectionView"},
{ "name": "org.apache.royale.html.beads.DataItemRendererFactoryForColumnData",
  "description": "The DataItemRendererFactoryForColumnData class implents the org.apache.royale.core.IDataProviderItemRendererMapper interface and creates the itemRenderers for each cell in the org.apache.royale.html.DataGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataItemRendererFactoryForHierarchicalData",
  "description": "The DataItemRendererFactoryForHierarchicalData class reads a HierarchicalData object and creates an item renderer for every item in the array.  Other implementations of IDataProviderItemRendererMapper map different data structures or manage a virtual set of renderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataProviderChangeNotifier",
  "description": "The DataProviderChangeNotifier notifies listeners when a selection model's ArrayList dataProvider has changed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataProviderCollectionChangeNotifier",
  "description": "The DataProviderCollectionChangeNotifier notifies listeners when a selection model's ArrayList dataProvider disptached collectionChanged event.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DataProviderItemsChangeNotifier",
  "description": "The DataProviderItemsChangeNotifier notifies listeners when to selection model's ArrayList dataProvider item has been added, removed or updated.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DateChooserView",
  "description": "The DateChooserView class is a view bead for the DateChooser. This class creates the elements for the DateChooser: the buttons to move between months, the labels for the days of the week, and the buttons for each day of the month.",
"tags": [
{  "tagName": "viewbead",
       "values": []}  ]},
{ "name": "org.apache.royale.html.beads.DateFieldView",
  "description": "The DateFieldView class is a bead for DateField that creates the input and button controls. This class also handles the pop-up mechanics.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DecrementButtonView",
  "description": ""},
{ "name": "org.apache.royale.html.beads.DisableBead",
  "description": "The DisableBead class is a specialty bead that can be used with any UIBase. When disabled is true, the bead prevents interaction with the component. The appearance of the component when disabled is controlled by a separate bead.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DisableChildrenBead",
  "description": "The DisableChildrenBead class is a specialty bead that can be used with any UIBase. When disabled is true, the bead prevents interaction with the component and its children. The appearance of the component when disabled is controlled by a separate bead.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DisableLoaderBead",
  "description": "The DisableLoaderBead class is a specialty bead that can be used with any UIBase control which has a DisableBead attached.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DisabledAlphaBead",
  "description": "The DisabledAlphaBead class is a specialty bead that can be used with any UIBase control which has a DisableBead attached. The bead takes properties for enabledAplha and disabledAlpha.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DispatchInputFinishedBead",
  "description": "The DispatchInputFinishedBead class dispatched INPUT_FINISHED on strand when enter is pressed, or when foucus is out.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DispatchKeyboardEventBead",
  "description": "The DispatchKeyboardEventBead class dispatches a KeyboardEvent from a text input.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DividedContainerView",
  "description": "The DividedContainerView class is responsible for generating the DividedContainerSeparators between the children and placing them in the z-order between the children.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DownArrowButtonView",
  "description": "The DownArrowButtonView class is the view for the down arrow button in a ScrollBar and other controls.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DragDropListView",
  "description": ""},
{ "name": "org.apache.royale.html.beads.DropDownListView",
  "description": "The DropDownListView class is the default view for the org.apache.royale.html.DropDownList class. It displays a simple text label with what appears to be a down arrow button on the right, but really, the entire view is the button that will display or dismiss the dropdown.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DynamicAddItemRendererForArrayListData",
  "description": "Handles the adding of an itemRenderer once the corresponding datum has been added from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.0", "Royale 0.9.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DynamicItemsRendererFactoryForArrayListData",
  "description": "The DynamicItemsRendererFactoryForArrayListData class reads an array of data and creates an item renderer for every ISelectableItemRenderer in the array.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DynamicRemoveAllByNullItemRendererForArrayListData",
  "description": "Handles the removal of all itemRenderers once data source is being set to null.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.0", "Royale 0.9.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DynamicRemoveAllItemRendererForArrayListData",
  "description": "Handles the removal of all itemRenderers once the all items has been removed from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.0", "Royale 0.9.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DynamicRemoveItemRendererForArrayListData",
  "description": "Handles the removal of an itemRenderer once the corresponding datum has been removed from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.0", "Royale 0.9.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.DynamicUpdateItemRendererForArrayListData",
  "description": "Handles the update of an itemRenderer once the corresponding datum has been updated from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.0", "Royale 0.9.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.EasyDataProviderChangeNotifier",
  "description": "The EasyDataProviderChangeNotifier is similar to DataProviderChangeNotifier but allows the user to populate the data provider after it's been added. Also, no attributes are required. Just add <EasyDataProviderChangeNotifier/>. The dataProvider is assumed to be an ArrayList.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.EllipsisOverflow",
  "description": "The EllipsisOverflow class is a bead that can be used to stop the text from overflowing and display an ellipsis.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.FormatableLabelView",
  "description": "The FormatableLabelView class is a View bead that is capable of working with a format bead to display a formatted value. When the format bead has created a formatted string, it dispatches a formatChanged event that the FormatableLabelView class intercepts and displays in the label.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.FormatableTextInputView",
  "description": "The FormatableTextInputView class is a View bead that extends TextInputWithBorderView and is capable of working with a format bead. When a format bead dispatches a formatChanged event, the FormatableTextInputView bead copies the formatted string to to the text field.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.GetScrollbarWidth",
  "description": "The GetScrollbarWidth class detects the browser's default scrollbar width. This can be useful when changing the viewport width to avoid it being obstructed by the scrollbar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.GroupView",
  "description": "The GroupView is a bead that manages the layout bead (if any) attached to a Group. This class also provides support for background and border styles for a Group on the SWF platform.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.HRuleView",
  "description": "The ImageView class creates the visual elements of the org.apache.royale.html.Image component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.HScrollBarThumbView",
  "description": "The HScrollBarThumbView class is the view for the thumb button in a Horizontal ScrollBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.HScrollBarTrackView",
  "description": "The HScrollBarTrackView class is the view for the track in a Horizontal ScrollBar.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.HScrollBarView",
  "description": "The HScrollBarView class is the default view for the org.apache.royale.html.supportClasses.HScrollBar class. It implements the classic desktop-like HScrollBar. A different view would implement more modern scrollbars that hide themselves until hovered over with the mouse.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.HideColorSpectrumThumbWhenEmpty",
  "description": "The HideColorSpectrumThumbWhenEmpty bead can modifiy a color spectrum view to hide the thumb when it's empty",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.HideComboPopupOnMouseDownBead",
  "description": "The HideComboPopupOnMouseDownBead can be used with ComboBox to make sure mouse down events close an open popup. For this bead to work the application needs to be sized to the window size. See org.apache.royale.core.BrowserResizeListener for a way to achieve this.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 9.3", "Royale 9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IAccordionCollapseBead",
  "description": ""},
{ "name": "org.apache.royale.html.beads.IBackgroundBead",
  "description": "The IBackgroundBead interface is a marker interface for beads that draw backgrounds.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IBorderBead",
  "description": "The IBorderBead interface is a marker interface for beads that draw borders.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IComboBoxView",
  "description": "The IComboBoxView interface provides the protocol for any bead that creates the visual parts for a org.apache.royale.html.ComboBox control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IDataGridView",
  "description": "The IDataGridView interface marks as a component as being the bead that can create the visual pieces for a org.apache.royale.html.DataGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IDrawingLayerBead",
  "description": "The IDrawingLayerBead interface is implemented by beads that providing a a drawing surface within a component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IDropDownListView",
  "description": "The IDropDownListView interface is the interface for views for the org.apache.royale.html.DropDownList.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IEEventAdapterBead",
  "description": "The IEEventAdapterBead is used to enable correct handling of MouseEvents and KeyboardEvents in IE. This is needed because IE does not support the <code>name</code> property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.2", "Royale 0.9.2"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IGraphicsDrawing",
  "description": "The IGraphicsDrawing interface is a marker interface for beads that draw into the graphics layer.  This helps a bead determine if it is the first of many graphics drawing beads so it can know whether or not to clear the graphics layer before drawing.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IListView",
  "description": "The IListView interface provides the protocol for any bead that creates the visual parts for a org.apache.royale.html.List control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IScrollBarView",
  "description": "The IScrollBarView interface is the interface for views for the org.apache.royale.html.supportClasses.ScrollBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ISliderView",
  "description": "The ISliderView interface provides the protocol for any bead that creates the visual parts for a org.apache.royale.html.Slider control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ISpinnerView",
  "description": "The ISpinnerView interface provides the protocol for any bead that creates the visual parts for a org.apache.royale.html.Spinner control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ITextFieldView",
  "description": "The ITextFieldView interface is the interface for views for the use a CSSTextField to display text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ITextItemRenderer",
  "description": "The ITextItemRenderer interface is the interface for for org.apache.royale.core.IItemRenderer that display text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IViewWithPopUp",
  "description": "The IViewWithPopUp interface provides the protocol for any bead that creates visual parts that includes a popup.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ImageAndTextButtonView",
  "description": "The ImageButtonView class provides an image-only view for the standard Button. Unlike the CSSButtonView, this class does not support background and border; only images for the up, over, and active states.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ImageButtonView",
  "description": "The ImageButtonView class provides an image-only view for the standard Button. Unlike the CSSButtonView, this class does not support background and border; only images for the up, over, and active states.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ImageView",
  "description": "The ImageView class creates the visual elements of the org.apache.royale.html.Image component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.IncrementButtonView",
  "description": ""},
{ "name": "org.apache.royale.html.beads.InfiniteVScroller",
  "description": "InfiniteVScroller dispatches an event when the component scrolls to the bottom to allow loading more content dynamically.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.InnerHTML",
  "description": "The InnerText bead class adds innetHTML text to a html tag.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.KeepComboPopupWithinParentBounds",
  "description": "The KeepComboPopupWithinParentBounds can be used with ComboBox to make sure its popup does not overflow its parent bounds.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 9.6", "Royale 9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.LeftArrowButtonView",
  "description": "The LeftArrowButtonView class is the view for the left arrow button in a ScrollBar and other controls.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ListDrawingLayerBead",
  "description": "ListDrawingLayerBead places a graphic space into the List that is positioned the item renderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ListView",
  "description": ""},
{ "name": "org.apache.royale.html.beads.MenuFactory",
  "description": "This bead class generates instances of the Menu class for use with MenuBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.MenuView",
  "description": "Supplies the view for a menu.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.MultilineTextFieldView",
  "description": "The TextFieldView class is the default view for the org.apache.royale.html.Label class. It displays text using a TextField, so there is no right-to-left text support in this view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.NumericStepperView",
  "description": "The NumericStepperView class creates the visual elements of the org.apache.royale.html.NumericStepper component. A NumberStepper consists of a org.apache.royale.html.TextInput component to display the value and a org.apache.royale.html.Spinner to change the value.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.PanelView",
  "description": "The Panel class creates the visual elements of the org.apache.royale.html.Panel component. A Panel has a org.apache.royale.html.TitleBar, and content.  A different View, PanelWithControlBarView, can display a ControlBar.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.PanelWithControlBarView",
  "description": "The Panel class creates the visual elements of the org.apache.royale.html.Panel component. A Panel has a org.apache.royale.html.TitleBar, content, and an optional org.apache.royale.html.ControlBar.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.RadioButtonView",
  "description": "The RadioButtonView class creates the visual elements of the org.apache.royale.html.RadioButton component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.RangeStepperView",
  "description": "The RangeStepperView bead creates the visual elements of the RangeStepper. This includes an increment button, a decrement button, and label to display the value.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.RightArrowButtonView",
  "description": "The RightArrowButtonView class is the view for the right arrow button in a ScrollBar and other controls.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ScrollBarView",
  "description": "The ScrollBarView class is the default view for the org.apache.royale.html.supportClasses.ScrollBar class. It implements the classic desktop-like ScrollBar. A different view would implement more modern scrollbars that hide themselves until hovered over with the mouse.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SensitiveSingleSelectionDropTargetBead",
  "description": "The SensitiveSingleSelectionDropTargetBead enables items to be dropped onto single-selection List components. When the pointing device is in the first half of an item renderer it assumes the item is to be dropped on that item renderer. If it is on the second half it assumes the drop target is the next item renderer.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.SingleSelectionDropIndicatorBead", "org.apache.royale.html.beads.SingleSelectionDropIndicatorBead"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SimpleAlertView",
  "description": "The SimpleAlertView class creates the visual elements of the org.apache.royale.html.SimpleAlert component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SingleLineBorderBead",
  "description": "The SingleLineBorderBead class draws a single line solid border. The color and thickness can be specified in CSS.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SingleLineBorderWithChangeListenerBead",
  "description": "The SingleLineBorderWithChangeListenerBead adds the ability to react to changes in border style at runtime.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SingleSelectionContainerBead",
  "description": "Use SingleSelectionContainerBead is a bead which manages selection state of a component which contains a group of ISelectables. One such example would be a toggle button bar.  Only one of the elements can be selected at any one time.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SingleSelectionDragImageBead",
  "description": "The SingleSelectionDragImageBead produces a UIBase component that represents the item being dragged. It does this by taking the data associcated with the index of the item selected and running the toString() function on it, placing it inside of a Label that is inside of Group (which is given the className of \"DragImage\").  The createDragImage() function can be overridden and a different component returned.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.SingleSelectionDragSourceBead.", "org.apache.royale.html.beads.SingleSelectionDragSourceBead."]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SingleSelectionDragSourceBead",
  "description": "The SingleSelectionDragSourceBead brings drag capability to single-selection List components. By adding this bead, a user can drag a row of the List to a new location within the list. This bead should be used in conjunction with SingleSelectionDropTargetBead.  This bead adds a new event to the strand, \"dragImageNeeded\", which is dispatched on the strand just prior to the dragImage's appearance. An event listener can create its own dragImage if the default, taken from the data item, is not suitable.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.SingleSelectionDropTargetBead.", "org.apache.royale.html.beads.SingleSelectionDropTargetBead."]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SingleSelectionDropIndicatorBead",
  "description": "The SingleSelectionDropIndicatorBead provides a graphic used to help the user place the item being dropped.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.SingleSelectionDropTargetBead.", "org.apache.royale.html.beads.SingleSelectionDropTargetBead."]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SingleSelectionDropTargetBead",
  "description": "The SingleSelectionDropTargetBead enables items to be dropped onto single-selection List components. This bead can be used with SingleSelectionDragSourceBead to enable the re-arrangement of rows within the same list.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.html.beads.SingleSelectionDropIndicatorBead", "org.apache.royale.html.beads.SingleSelectionDropIndicatorBead"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SliderThumbView",
  "description": "The SliderThumbView class creates the draggable input element for the org.apache.royale.html.Slider component.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SliderTrackView",
  "description": "The SliderTrackView class creates the track area for the org.apache.royale.html.Slider component.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SliderView",
  "description": "The SliderView class creates the visual elements of the org.apache.royale.html.Slider component. The Slider has a track and a thumb control which are also created with view beads.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SolidBackgroundBead",
  "description": "The SolidBackgroundBead class draws a solid filled background. The color and opacity can be specified in CSS.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SolidBackgroundWithChangeListenerBead",
  "description": "Same as SolidBackgroundBead except it listens for StyleChangeEvent events and reacts by refreshing the background of its strand.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.SpinnerView",
  "description": "The SpinnerView class creates the visual elements of the org.apache.royale.html.Spinner component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.StyleInheritanceBead",
  "description": "The StyleInheritanceBead class forces descendadants of an IStylableObject to inherit a style",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 9.3", "Royale 9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.StyleInheritanceWithObserverBead",
  "description": "The StyleInheritanceWithObserverBead extends StyleInheritace and makes sure that new descendants inherit as well.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 9.3", "Royale 9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TableCellView",
  "description": "The TableCellView class is the view bead for TableCell. It has no function on the JS platform, but with SWF, it prevents the cell from shrinking to fit its content.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextAreaView",
  "description": "The TextAreaView class is the default view for the org.apache.royale.html.TextArea class. It implements the classic desktop-like TextArea with a border and scrollbars.  It does not support right-to-left text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextButtonMeasurementBead",
  "description": "The TextButtonMeasurementBead class helps measure a org.apache.royale.html.TextButton.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextButtonView",
  "description": "The TextButtonView class is the default view for the org.apache.royale.html.TextButton class.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextFieldLabelMeasurementBead",
  "description": "The TextFieldLabelMeasurementBead class helps to measure org.apache.royale.html.Label components.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextFieldView",
  "description": "The TextFieldView class is the default view for the org.apache.royale.html.Label class. It displays text using a TextField, so there is no right-to-left text support in this view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextFieldViewBase",
  "description": "The TextFieldViewBase class is the base class for the components that display text. It displays text using a TextField, so there is no right-to-left text support in this view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextInputView",
  "description": "The TextInputView class is the view for the org.apache.royale.html.TextInput in a ComboBox and other controls because it does not display a border. It displays text using a TextField, so there is no right-to-left text support in this view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextInputWithBorderView",
  "description": "The TextInputWithBorderView class is the default view for the org.apache.royale.html.TextInput. It displays text using a TextField, so there is no right-to-left text support in this view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextItemRendererFactoryForArrayData",
  "description": "The TextItemRendererFactoryForArrayData class is the IDataProviderItemRendererMapper for creating ITextItemRenderers and assigning them data from an array. Other IDataProviderItemRendererMapper implementations assign specific array or vector types to item renderers expecting those types.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TextItemRendererFactoryForStringVectorData",
  "description": "The TextItemRendererFactoryForStringVectorData class is the IDataProviderItemRendererMapper for creating ITextItemRenderers and assigning them data from an vector of Strings.  Other IDataProviderItemRendererMapper implementations assign specific array or vector types to item renderers expecting those types.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.ThrottleBead",
  "description": "The ThrottleBead class allows you to listen to an event only after a timeout has been reached. This can be useful in situations where events are thrown repeatedly but the application is only interested in the last dispatching.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TitleBarMeasurementBead",
  "description": "The TitleBarMeasurementBead class measures the overall size of a org.apache.royale.html.TitleBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.TitleBarTitle",
  "description": "A specially styled Label used in TitleBar"},
{ "name": "org.apache.royale.html.beads.TreeGridListArea",
  "description": ""},
{ "name": "org.apache.royale.html.beads.TreeGridView",
  "description": "The TreeGridView class is responsible for creating the sub-components of the TreeGrid: the ButtonBar header, the Tree (first column), and Lists (rest of the columns), as well as the container that holds the columns. This bead will also add in a TreeGridLayout if one has not already been created or specified in CSS.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.UnselectableElementBead",
  "description": "UnselectableElement bead prevents from text selection of html element",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.UpArrowButtonView",
  "description": "The UpArrowButtonView class is the view for the up arrow button in a ScrollBar and other controls.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.VRuleView",
  "description": "The ImageView class creates the visual elements of the org.apache.royale.html.Image component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.VScrollBarThumbView",
  "description": "The VScrollBarThumbView class is the view for the thumb button in a Vertical ScrollBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.VScrollBarTrackView",
  "description": "The VScrollBarTrackView class is the view for the track in a Vertical ScrollBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.VScrollBarView",
  "description": "The ScrollBarView class is the default view for the org.apache.royale.html.supportClasses.VScrollBar class. It implements the classic desktop-like VScrollBar. A different view would implement more modern scrollbars that hide themselves until hovered over with the mouse.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.VerticalAlignChildren",
  "description": "VerticalAlignChildren is a bead for groups and containers which specifiy the alignment property of the children. Alignment can be any of the valid css properties for vertical-align see https://developer.mozilla.org/en-US/docs/Web/CSS/vertical-align",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.VirtualDataContainerView",
  "description": "The DataContainerView provides the visual elements for the DataContainer.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.VirtualDataItemRendererFactoryForArrayData",
  "description": "The DataItemRendererFactoryForArrayData class reads an array of data and creates an item renderer for every item in the array.  Other implementations of IDataProviderItemRendererMapper map different data structures or manage a virtual set of renderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.VirtualListView",
  "description": "The List class creates the visual elements of the org.apache.royale.html.List component. A List consists of the area to display the data (in the dataGroup), any scrollbars, and so forth.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.WebBrowserView",
  "description": "The WebBrowserView creates an instance of HTMLLoader to load web pages into AIR application.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.AccordionItemRendererMouseController",
  "description": ""},
{ "name": "org.apache.royale.html.beads.controllers.AlertController",
  "description": "The AlertControler class bead handles the close event on the org.apache.royale.html.Alert by removing the org.apache.royale.html.Alert from the display.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.ButtonAutoRepeatController",
  "description": "The ButtonAutoRepeatController class adds autorepeat functionality to a button.  This version is simply waits a specified amount of time (default is 250ms), then repeats the button event at a specified interval, which defaults to 125 milliseconds.  Alternate implementations could have non-linear repeat timing, look for keyboard modifiers to choose different rates, etc.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.CascadingMenuSelectionMouseController",
  "description": "The CascadingMenuSelectionMouseController does the same job as the MenuSelectionMouseController except if the item in the menu that has been selected has children, in which case a new CascadingMenu is presented.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.ColorSpectrumMouseController",
  "description": "The ColorSpectrumMouseController class is a controller for the ColorSpecrum control. It's job is to detect the location where a user has clicked and change the model's selected color value accordingly.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.ComboBoxController",
  "description": ""},
{ "name": "org.apache.royale.html.beads.controllers.DateChooserMouseController",
  "description": "The DateChooserMouseController class is responsible for listening to mouse event related to the DateChooser. Events such as selecting a date or changing the calendar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.DateFieldMouseController",
  "description": "The DateFieldMouseController class is responsible for monitoring the mouse events on the elements of the DateField. A click on the DateField's menu button triggers the pop-up, for example.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.DragMouseController",
  "description": "The DragMouseController bead handles mouse events on the a component, looking for activity that constitutes the start of a drag drop operation.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "royaleignoreimport",
       "values": ["org.apache.royale.core.IDragInitiator", "org.apache.royale.core.IDragInitiator"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.DropDownListController",
  "description": "The DropDownListController class is the controller for org.apache.royale.html.DropDownList.  Controllers watch for events from the interactive portions of a View and update the data model or dispatch a semantic event. This controller watches for the click event and displays the dropdown/popup, and watches the dropdown/popup for change events and updates the selection model accordingly.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.DropMouseController",
  "description": "The DropMouseController bead handles mouse events on the a component, looking for events from a drag/drop operation.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "royaleignoreimport",
       "values": ["org.apache.royale.core.IDragInitiator", "org.apache.royale.core.IDragInitiator"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.EditableTextKeyboardController",
  "description": "The EditableTextKeyboardController class bead intercepts keyboard events on the component's text field and emits change events.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.HDividedContainerMouseController",
  "description": "This is the mouse controller for the HDividedContainer. This bead class tracks the mouse over a HDividedContainerDivider (its strand) causing the columns on either side of the divider to grow and shrink."},
{ "name": "org.apache.royale.html.beads.controllers.HScrollBarMouseController",
  "description": "The HScrollBarMouseController class is the controller for org.apache.royale.html.supportClasses.HScrollBar that acts as the Horizontal ScrollBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.HSliderMouseController",
  "description": "The HSliderMouseController class bead handles mouse events on the org.apache.royale.html.Slider's component parts (thumb and track) and dispatches change events on behalf of the Slider (as well as co-ordinating visual changes (such as moving the thumb when the track has been tapped or clicked). Use this controller for horizontally oriented Sliders.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.ItemRendererMouseController",
  "description": "The ItemRendererMouseController class can mouse events in itemRenderers. This includes roll-overs, mouse down, and mouse up. These platform-specific events are then re-dispatched as Royale events.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "royaleignoreimport",
       "values": ["goog.events.Event", "goog.events.Event"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.ListSingleSelectionMouseController",
  "description": "The ListSingleSelectionMouseController class is a controller for org.apache.royale.html.List.  Controllers watch for events from the interactive portions of a View and update the data model or dispatch a semantic event. This controller watches for events from the item renderers and updates an ISelectionModel (which only supports single selection).  Other controller/model pairs would support various kinds of multiple selection.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.MenuBarMouseController",
  "description": "The MenuBarMouseController handles mouse events for the MenuBar. While the menu bar is a list, selecting an item causes a Menu (or one of its subclasses) to appear.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.MenuSelectionMouseController",
  "description": "Listens for item selections on the component and translates them to external events. Also listens for events on the background and uses them to dismiss the menu.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.RangeStepperMouseController",
  "description": "The RangeStepperMouseController bead feeds mouse events to the RangeStepper and its components.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.ScrollBarMouseControllerBase",
  "description": "The ScrollBarMouseControllerBase class is the base class for ScrollBarMouseControllers such as VScrollBarMouseController.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.SpinnerMouseController",
  "description": "The SpinnerMouseController class bead handles mouse events on the org.apache.royale.html.Spinner's component buttons, changing the value of the Spinner.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.TreeSingleSelectionMouseController",
  "description": "The TreeSingleSelectionMouseController class is a controller for org.apache.royale.html.Tree. This controller watches for selection events on the tree item renderers and uses those events to open or close nodes of the tree.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.VDividedContainerMouseController",
  "description": "This is the mouse controller for the VDividedContainer. This bead class tracks the mouse over a VDividedContainerDivider (its strand) causing the rows above and below it to grow and shrink.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.VScrollBarMouseController",
  "description": "The VScrollBarMouseController class is the controller for org.apache.royale.html.supportClasses.ScrollBar that acts as the Vertical ScrollBar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.controllers.VSliderMouseController",
  "description": "The VSliderMouseController class bead handles mouse events on the org.apache.royale.html.Slider's component parts (thumb and track) and dispatches change events on behalf of the Slider (as well as co-ordinating visual changes (such as moving the thumb when the track has been tapped or clicked). Use this controller for vertically oriented Sliders.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.BasicLayout",
  "description": "The BasicLayout class is a simple layout bead.  It takes the set of children and lays them out as specified by CSS properties like left, right, top and bottom.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.ButtonBarLayout",
  "description": "The ButtonBarLayout class bead sizes and positions the button elements that make up a org.apache.royale.html.ButtonBar. This bead arranges the Buttons horizontally and makes them all the same width unless the buttonWidths property has been set in which case the values stored in that array are used.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.DataGridLayout",
  "description": "DataGridLayout is a class that handles the size and positioning of the elements of a DataGrid. This includes the ButtonBar used for the column headers and the Lists that are the columns.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.DataGridPercentageLayout",
  "description": "DataGridPercentageLayout is a class that handles the size and positioning of the elements of a DataGrid. This includes the ButtonBar used for the column headers and the Lists that are the columns. The columns are sized on their percentage of the width of the DataGrid space.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.FlexibleFirstChildHorizontalLayout",
  "description": "The FlexibleFirstChildHorizontalLayout class is a simple layout bead.  It takes the set of children and lays them out horizontally in one row, separating them according to CSS layout rules for margin and padding styles. But it will size the first child to take up as much or little room as possible.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.HDividedContainerLayout",
  "description": "This sub-class of DividedContainerLayout class is responsible for sizing and positioning the children of the DividedContainer into columns with separators between them.  In order to correctly size and place the children, the DividedContainerLayout relies on additional information contained in the DividedContainerModel. These adjustments (which default to zero) can be changed by interacting with the DividedContainerSeparators and their mouse controllers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.HScrollBarLayout",
  "description": "The HScrollBarLayout class is a layout bead that displays lays out the pieces of a horizontal ScrollBar like the thumb, track and arrow buttons.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.HorizontalFlexLayout",
  "description": ""},
{ "name": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "description": "The HorizontalFlowLayout class bead sizes and positions the elements it manages into rows and columns. It does this by seeing how many elements will fit horizontally and then flow the remainder onto the next lines. If an element does not already have an explicit or percentage size, a size is chosen for it based on the defaultColumnCount property which divides the layout space into equal number of cells as a default measurement.  The height of each row is determined by the tallest element in the row. The next row flows below that.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.HorizontalLayout",
  "description": "The HorizontalLayout class is a simple layout bead.  It takes the set of children and lays them out horizontally in one row, separating them according to CSS layout rules for margin and vertical-align styles.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.HorizontalLayoutWithPaddingAndGap",
  "description": "The HorizontalLayoutWithPaddingAndGap class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.HorizontalSliderLayout",
  "description": "Use the HorizontalSliderLayout with a Slider to orient the Slider horizontally.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.IDataGridLayout",
  "description": "DataGridLayout is a class that handles the size and positioning of the elements of a DataGrid. This includes the ButtonBar used for the column headers and the Lists that are the columns.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.IOneFlexibleChildLayout",
  "description": "IOneFlexibleChildLayout will flex one of the children to take up the space remaining in a container after the rest of the elements have been laid out according to CSS layout rules.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.LayoutChangeNotifier",
  "description": "The LayoutChangeNotifier notifies layouts when a property it is watching changes.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.LayoutOnShow",
  "description": "This bead ensures that IUIBase objects that are displayed are also laid out. Basic components can do without this behavior if it is known that the layout does not change.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.NoLayout",
  "description": "The NoLayout class allows specifying no layout to components which normally have a Layout bead.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayout",
  "description": "The OneFlexibleChildHorizontalLayout class is a simple layout bead.  It takes the set of children and lays them out horizontally in one row, separating them according to CSS layout rules for margin and padding styles. But it will size the one child to take up as much or little room as possible.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.OneFlexibleChildHorizontalLayoutForOverflow",
  "description": "The OneFlexibleChildHorizontalLayoutForOverflowis intended for building apps that clip and/or scroll the overflow, especially in a 3-pane view like the ASDoc examples.  It does not use FlexBox because FlexBox wants to grow to the size of the content without specifying width/height on the flexible child.  But then the children in the flexible child cannot use % sizing. This layout presumes the parent is a known size.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayout",
  "description": "The OneFlexibleChildVerticalLayout class is a simple layout bead.  It takes the set of children and lays them out vertically in one column, separating them according to CSS layout rules for margin and padding styles. But it will size the one child to take up as much or little room as possible.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.OneFlexibleChildVerticalLayoutForOverflow",
  "description": "The OneFlexibleChildVerticalLayoutForOverflow is intended for building apps that clip and/or scroll the overflow, especially in a 3-pane view like the ASDoc examples.  It does not use FlexBox because FlexBox wants to grow to the size of the content without specifying width/height on the flexible child.  But then the children in the flexible child cannot use % sizing. This layout presumes the parent is a known size.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.RemovableBasicLayout",
  "description": "The RemovableBasicLayout class is a simple layout bead.  It takes the set of children and lays them out as specified by CSS properties like left, right, top and bottom. It correctly handles removal and replacement between different strands, and null strand assignment",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.ScrollingFlexibleChild",
  "description": "The ScrollingFlexibleChild class allows flexible children to be scrollable.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 9.4", "Royale 9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.SimpleTableLayout",
  "description": "The SimpleTableLayout is the layout for the Table component. On the SWF platform it mimics the HTML <table> element and makes sure all the columns and rows are even. It does not support column or row spanning.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.TableCellLayout",
  "description": "The TableCellLayout is the default layout for TableCell items. It places the cell's contents vertically centered within the cell.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.TableHeaderLayout",
  "description": "The TableHeaderLayout is the default layout for TableHeader items. It places the cell's contents vertically and horizontally centered within the cell.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.TileLayout",
  "description": "The TileLayout class bead sizes and positions the elements it manages into rows and columns. The size of each element is determined either by setting TileLayout's columnWidth and rowHeight properties, or having the tile size determined by factoring the numColumns into the area assigned for the layout.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.TreeGridLayout",
  "description": "The TreeGridLayout class provides the sizing and positioning for the sub-components that make up the TreeGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.VDividedContainerLayout",
  "description": "This sub-class of DividedContainerLayout class is responsible for sizing and positioning the children of the DividedContainer into rows with separators between them.  In order to correctly size and place the children, the DividedContainerLayout relies on additional information contained in the DividedContainerModel. These adjustments (which default to zero) can be changed by interacting with the DividedContainerSeparators and their mouse controllers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.VScrollBarLayout",
  "description": "The VScrollBarLayout class is a layout bead that displays lays out the pieces of a vertical ScrollBar like the thumb, track and arrow buttons.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.VerticalColumnLayout",
  "description": "ColumnLayout is a class that organizes the positioning of children of a container into a set of columns where each column's width is set to the maximum size of all of the children in that column.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.VerticalFlexLayout",
  "description": ""},
{ "name": "org.apache.royale.html.beads.layouts.VerticalLayout",
  "description": "The VerticalLayout class is a simple layout bead.  It takes the set of children and lays them out vertically in one column, separating them according to CSS layout rules for margin and horizontal-align styles.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.VerticalLayoutWithPaddingAndGap",
  "description": "The VerticalLayoutWithPaddingAndGap class is a simple layout bead similar to VerticalLayout, but it adds support for padding and gap values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.VerticalSliderLayout",
  "description": "Use the VerticalSliderLayout with a Slider to orient the slider vertically.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.layouts.VirtualListVerticalLayout",
  "description": "The VerticalLayout class is a simple layout bead.  It takes the set of children and lays them out vertically in one column, separating them according to CSS layout rules for margin and horizontal-align styles.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.AlertModel",
  "description": "The AlertModel class bead implements the org.apache.royale.core.IAlertModel and holds the properties for an org.apache.royale.html.Alert such the buttons to use and message to display.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ArrayColorSelectionModel",
  "description": "The ArrayColorSelectionModel class is a color selection model for a dataProvider that is an array.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ArrayListSelectionModel",
  "description": "The ArrayListSelectionModel class is a selection model for a dataProvider that is an ArrayList. It assumes that items can be fetched from the dataProvider using dataProvider.getItemAt(index).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ArraySelectionModel",
  "description": "The ArraySelectionModel class is a selection model for a dataProvider that is an array. It assumes that items can be fetched from the dataProvider dataProvider[index].  Other selection models would support other kinds of data providers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.BinaryImageModel",
  "description": "The ImageModel class bead defines the data associated with an org.apache.royale.html.Image component, namely the source of the image.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ButtonBarModel",
  "description": "The ArraySelectionModel class is a selection model for a dataProvider that is an array. It assumes that items can be fetched from the dataProvider dataProvider[index].  Other selection models would support other kinds of data providers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.CascadingMenuModel",
  "description": ""},
{ "name": "org.apache.royale.html.beads.models.ColorModel",
  "description": "The ColorModel class is the most basic data model for a component that displays or edits a color.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ColorSpectrumModel",
  "description": "The ColorSpectrumModel class is the most basic data model for a component that displays or edits a color spectrum.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ComboBoxModel",
  "description": "The ComboBoxModel class bead extends org.apache.royale.html.beads.models.ArraySelectionModel and adds the text being displayed by the org.apache.royale.html.ComboBox's input field.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.DataGridCollectionViewModel",
  "description": "The DataGridCollectiomModel class bead extends org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel to facilitate using an ICollectionView as the dataProvider for the DataGrid. Use this with org.apache.royale.html.beads.DataItemRenderFactoryForCollectionView for each DataGridColumn.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.DataGridModel",
  "description": "The DataGridModel class bead extends org.apache.royale.html.beads.models.ArraySelectionModel to facilitate using an Array as the dataProvider for the DataGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.DataGridPresentationModel",
  "description": "The DataGridPresentationModel class contains the data to label the columns of the org.apache.royale.html.DataGrid along with the height of the rows.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.DataProviderModel",
  "description": "The DataProviderModel class is a model for a dataProvider and an optional labelField.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.DateChooserModel",
  "description": "The DateChooserModel is a bead class that manages the data for a DataChooser. This includes arrays of names for the months and days of the week as well the currently selected date.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.DividedContainerModel",
  "description": "The DividedContainerModel holds the information necessary for the DividedContainer to size and layout its children as well as to respond to changes in those sizes made by the DividedContainerDividers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ImageAndTextModel",
  "description": "The ImageAndTextModel class is associates and image with some text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ImageModel",
  "description": "The ImageModel class bead defines the data associated with an org.apache.royale.html.Image component, namely the source of the image.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ListPresentationModel",
  "description": "The ListPresentationModel holds values used by list controls for presenting their user interfaces.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.MenuBarModel",
  "description": "The model used by the MenuBar."},
{ "name": "org.apache.royale.html.beads.models.MenuModel",
  "description": "The model used to support menus.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.NonNullTextModel",
  "description": "The TextModel class is most basic data model for a component that displays text.  All Royale components that display text should also support HTML, although the Flash Player implementations may only support a subset of HTML.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.PanelModel",
  "description": "The PanelModel bead class holds the values for a org.apache.royale.html.Panel, such as its title.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.RangeModel",
  "description": "The RangeModel class bead defines a set of for a numeric range of values which includes a minimum, maximum, and current value.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.RangeModelExtended",
  "description": "The RangeModelExtended bead expands on the RangeModel and adds a function to display a value from the model.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ScrollBarModel",
  "description": "The ScrollBarModel class bead extends the org.apache.royale.html.beads.models.RangeModel and adds page size and page step sizes.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.SingleLineBorderModel",
  "description": "The SingleLineBorderModel class is a data model for a single line border. This model is very simple, it only stores the offsets from the edges of the component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.SingleSelectionCollectionViewModel",
  "description": "The SingleSelectionCollectionViewModel class is a selection model for a dataProvider that is an ICollectionView. It assumes that items can be fetched from the dataProvider using dataProvider.getItemAt(index).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.StringSelectionModel",
  "description": "The StringSelectionModel class is a selection model for selecting a single string from a vector of strings.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.TextModel",
  "description": "The TextModel class is most basic data model for a component that displays text.  All Royale components that display text should also support HTML, although the Flash Player implementations may only support a subset of HTML.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.TitleBarModel",
  "description": "The TitleBarModel class bead holds the values for the org.apache.royale.html.TitleBar's properties.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ToggleButtonModel",
  "description": "The ToggleButtonModel class bead holds values for org.apache.royale.html.Buttons that have a state.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.TreeGridModel",
  "description": "The data model for the TreeGrid. This contains the list of TreeGridColumn definitions.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.TreeModel",
  "description": "The TreeModel is used by Tree"},
{ "name": "org.apache.royale.html.beads.models.ValueToggleButtonModel",
  "description": "The ValueToggleButtonModel class bead extends the org.apache.royale.html.beads.models.ToggleButtonModel and adds value intended to represent a collection of similar org.apache.royale.html.Buttons such as org.apache.royale.html.RadioButtons.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.models.ViewportModel",
  "description": "",
"tags": [
{  "tagName": "copy",
       "values": ["org.apache.royale.core.IViewportModel", "org.apache.royale.core.IViewportModel"]}  ]},
{ "name": "org.apache.royale.html.beads.models.WebBrowserModel",
  "description": "The WebBrowserModel class bead defines the data associated with an org.apache.royale.html.WebBrowser component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.beads.plugin.IModalDisplay",
  "description": ""},
{ "name": "org.apache.royale.html.beads.plugin.ModalDisplay",
  "description": ""},
{ "name": "org.apache.royale.html.beads.plugin.ModalOverlay",
  "description": ""},
{ "name": "org.apache.royale.html.elements.A",
  "description": "The A(Anchor) class represents an HTML <a> anchor element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.B",
  "description": "The B(Bold) class represents an HTML <b> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Button",
  "description": "The Button class represents an HTML <button> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Caption",
  "description": "The Caption class represents an HTML <caption> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Code",
  "description": "The Code class represents an HTML <code> element",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Col",
  "description": "The Col class represents an HTML <col> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Colgroup",
  "description": "The Colgroup class represents an HTML <colgroup> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Div",
  "description": "The Div class represents an HTML <div> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Em",
  "description": "The Em(Emphasis) class represents an HTML <em> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Form",
  "description": "The Form class represents an HTML <form> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.H1",
  "description": "The H1 class represents an HTML <h1> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.H2",
  "description": "The H2 class represents an HTML <h2> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.H3",
  "description": "The H3 class represents an HTML <h3> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.H4",
  "description": "The H4 class represents an HTML <h4> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.H5",
  "description": "The H5 class represents an HTML <h5> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.H6",
  "description": "The H6 class represents an HTML <h6> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Hr",
  "description": "The Hr class represents an HTML <hr> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.I",
  "description": "The I(Italic) class represents an HTML <i> anchor element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Img",
  "description": "The Img class represents an HTML <img> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Input",
  "description": "The Input class represents an HTML <input> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Label",
  "description": "The Label class represents an HTML <label> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Li",
  "description": "The Li class represents an HTML <li> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Ol",
  "description": "The Ol class represents an HTML <ol> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Option",
  "description": "The Option class represents an HTML <option> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.P",
  "description": "The P class represents an HTML <p> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Pre",
  "description": "The PRE class represents an HTML <pre> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Progress",
  "description": "The Progress class represents an HTML <progress> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.5", "Royale 0.9.5"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.S",
  "description": "The S class represents an HTML <s> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Select",
  "description": "The Select class represents an HTML <select> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Small",
  "description": "The Small class represents an HTML <small> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Span",
  "description": "The Span class represents an HTML <span> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Strong",
  "description": "The Strong class represents an HTML <strong> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Table",
  "description": "The Table class represents an HTML <table> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Tbody",
  "description": "The Tbody class represents an HTML <tbody> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Td",
  "description": "The Td class represents an HTML <td> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Textarea",
  "description": "The Textarea class represents an HTML <textarea> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Tfoot",
  "description": "The Tfoot class represents an HTML <tfoot> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Th",
  "description": "The Th class represents an HTML <th> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Thead",
  "description": "The Thead class represents an HTML <thead> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Tr",
  "description": "The Tr class represents an HTML <tr> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.U",
  "description": "The U class represents an HTML <u> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.elements.Ul",
  "description": "The Ul class represents an HTML <ul> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.AccordionItemRenderer",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.AlternatingBackgroundColorStringItemRenderer",
  "description": "The AlternatingBackgroundColorStringItemRenderer class displays data in string form using the data's toString() function and alternates between two background colors.  This is the most simple implementation for immutable lists and will not handle adding/removing renderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.Border",
  "description": "The Border class is a class used internally by many controls to draw a border.  The border actually drawn is dictated by the IBeadView in the CSS.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ButtonBarButtonItemRenderer",
  "description": "The ButtonBarButtonItemRenderer class handles the display of each item for the org.apache.royale.html.ButtonBar component. This class uses a org.apache.royale.html.Button to represent the data.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.CascadingMenuItemRenderer",
  "description": "The CascadingMenuItemRenderer is the itemRenderer class for the elements of a CascadingMenu. Each item can either be a label or a separator (indicated by type:\"separator\" in the data for the item). If there is a sub-menu (indicated by menu:[array of items] in the data for the item), a sub-menu indicator is displayed next to the label.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.CheckBoxIcon",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.ClippingViewport",
  "description": "The ClippingViewport extends the Viewport class and makes sure that items extending outside the Container are hidden.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ColorItemRenderer",
  "description": "The ColorItemRenderer class displays a color as part of a color palette",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ColorPalette",
  "description": "The ColorPalette class is used in a ColorPicker. It contains a list of predefined colors.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ColorPickerPopUp",
  "description": "The ColorPickerPopUp class is used in ColorPicker. It contains a set of controls for picking a color.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ColorPickerPopUpWithPalette",
  "description": "The ColorPickerPopUpWithPalette class is used in ColorPicker. It contains a set of controls for picking a color, incluse a color palette.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ColorSpectrum",
  "description": "The ColorSpectrum class is use in a ColorPicker. It defines a base color and the spectrum of colors around it, ranging from black to transparent, and from that base color to white.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ComboBoxList",
  "description": "The ComboBoxList class is the List class used internally by ComboBox as the dropdown/popup.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ContainerContentArea",
  "description": "The ContainerContentArea class implements the contentView for a Container on the SWF platform.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DataGridButtonBarButtonItemRenderer",
  "description": "The ButtonBarButtonItemRenderer class handles the display of each item for the org.apache.royale.html.ButtonBar component. This class uses a org.apache.royale.html.Button to represent the data.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DataGridColumn",
  "description": "The DataGridColumn class is the collection of properties that describe a column of the org.apache.royale.html.DataGrid: which renderer to use for each cell in the column, the width of the column, the label for the column, and the name of the field in the data containing the value to display in the column.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DataGridColumnList",
  "description": "The DataGridColumnList class is the List class used internally by DataGrid for each column.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DataGroup",
  "description": "The DataGroup class is the IItemRendererParent used internally by org.apache.royale.html.List class.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DataItemRenderer",
  "description": "The DataItemRenderer class is the base class for most itemRenderers. This class extends org.apache.royale.html.supportClasses.UIItemRendererBase and includes row and column index values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DataProviderNotifierBase",
  "description": "Base class for all data provider notifiers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DateChooserButton",
  "description": "The DateChooserButton class is used for each button in the DateChooser. The button holds the day of the month the button is representing.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DateChooserHeader",
  "description": "The DateChooserHeader is the container for the days of the week labels in the DateChooser.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DateChooserList",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.DateFieldDateChooser",
  "description": "The DateFieldDateChooser class is the DateChooser class used internally by DateField as the dropdown/popup.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DateHeaderButton",
  "description": "The DateHeaderButton class is used for the buttons in the DateChooser's heading areas.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DateItemRenderer",
  "description": "The DateItemRenderer class renders date values for the DateChooser.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DayNameItemRenderer",
  "description": "The DayNameItemRenderer class renders the names of days of the week for the DateChooser.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DividedContainerDivider",
  "description": "The DividedContainerSeparator is a control that lays between the children of a DividedContainer. This is the base class for the HDividedContainerDivider and VDividedContainerDivider.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DropDownListList",
  "description": "The DropDownListList class is the List class used internally by DropDownList as the dropdown/popup.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.DynamicDataGridColumnList",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.GraphicsItemRenderer",
  "description": "The GraphicsItemRenderer provides a base class for itemRenderers that use graphics rather than components.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.HDividedContainerDivider",
  "description": "This sub-class of DividerBoxDivider sets up a vertical divider between the columns of an HDividedContainer.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.HDividedContainerGripper",
  "description": "The HDividedContainerGripper is a bead added to the HDividedContainerDivider to provide a visual cue that the divider can be grabbed and moved.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.HScrollBar",
  "description": "The ScrollBar class represents either a vertical or horizontal control that allows the user to quickly scan through a component that does not wholly fit within its container.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.HScrollViewport",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.ICollapsible",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.IColorPickerPopUp",
  "description": "All color picker pop-ups must implement this interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.IDataGridColumn",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.IDataGridColumnList",
  "description": "The IDataGridColumnList interface is a marker interface for DataGrid Column Lists",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.IDateChooser",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.IDividedContainerDivider",
  "description": "All DividerBoxDividers must implement this interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.IDividedContainerGripper",
  "description": "This interface defines a gripper bead control for a DividedContainer.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.MXMLItemRenderer",
  "description": "The MXMLItemRenderer class is the base class for itemRenderers that are MXML-based and provides support for a layout and a data object.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.MenuBarItemRenderer",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.MenuItemRenderer",
  "description": "The MenuItemRenderer class is the default itemRenderer for Menus.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.NestedStringItemRenderer",
  "description": "The NestedStringItemRenderer can be used with lists or DataGridColumns for items that are not at the top level of the data. For example, if the data is an Object having: {title: \"Something\", address:{street: \"Main\", zip: \"02118\"}} using NestedStringItemRenderer for the address field can extract any of its consitutents: labelField=\"address.zip\".",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.OverflowViewport",
  "description": "A OverflowViewport is the area of a Container set aside for displaying content. If the content exceeds the visible area of the viewport it will show.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.PanelContent",
  "description": "A Container specialized for the content area of a Panel. Needed for its type name"},
{ "name": "org.apache.royale.html.supportClasses.PanelLayoutProxy",
  "description": "The PanelLayoutProxy class is used by Panel in order for layouts to operate on the Panel itself. If Panel were being used, its numElements, getElementAt, etc. functions would actually redirect to its Container content. In order for a layout to work on the Panel directly (its TitleBar, Container, and ControlBar children), this proxy is used which will invoke the Panel's $numElements, $getElementAt, etc functions.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.RadioButtonIcon",
  "description": "The RadioButton class is a component that displays a selectable Button. RadioButtons are typically used in groups, identified by the groupName property. RadioButton use the following beads:  org.apache.royale.core.IBeadModel: the data model, which includes the groupName. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the RadioButton..",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ScrollBar",
  "description": "The ScrollBar class represents either a vertical or horizontal control that allows the user to quickly scan through a component that does not wholly fit within its container.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.ScrollingViewport",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.SpinnerButton",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.StringItemRenderer",
  "description": "The StringItemRenderer class displays data in string form using the data's toString() function.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.TextButtonItemRenderer",
  "description": "The TextButtonItemRenderer class extends TextButton and turns it into an itemRenderer suitable for use in most DataContainer/List/DataGrid applications.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.TextFieldItemRenderer",
  "description": "The TextFieldItemRenderer class provides a org.apache.royale.html.TextField as an itemRenderer.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.TreeGridColumn",
  "description": "A TreeGridColumn defines the property of a specific column in the TreeGrid.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.TreeGridControlItemRenderer",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.TreeItemRenderer",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.TreeListData",
  "description": "The TreeListData class contains information that Tree item renderers may find useful when displaying the data for a node in the tree.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "royaleignoreimport",
       "values": ["goog.events.Event", "goog.events.Event"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.html.supportClasses.TreeXMLItemRenderer",
  "description": "JS needs special handling for XML.  It can't do [] lookups.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.UIItemRendererBase",
  "description": "The UIItemRendererBase class is the base class for all itemRenderers. An itemRenderer is used to display a single datum within a collection of data. Components such as a List use itemRenderers to show their dataProviders.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.VDividedContainerDivider",
  "description": "This sub-class of DividedContainerDivider sets up a horizontal divider between the rows of a VDividedContainer.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.VDividedContainerGripper",
  "description": "The VDividedContainerGripper bead adds a visual cue to the VDividedContainerDivider to indicate where to start dragging to change the size of the elements.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.VScrollBar",
  "description": "The ScrollBar class represents either a vertical or horizontal control that allows the user to quickly scan through a component that does not wholly fit within its container.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html.supportClasses.VScrollViewport",
  "description": ""},
{ "name": "org.apache.royale.html.supportClasses.Viewport",
  "description": "A Viewport is the area of a Container set aside for displaying content. If the content exceeds the visible area of the viewport it will be clipped or hidden.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.html5.Button",
  "description": ""},
{ "name": "org.apache.royale.html5.CheckBox",
  "description": ""},
{ "name": "org.apache.royale.html5.ComboBox",
  "description": ""},
{ "name": "org.apache.royale.html5.DateField",
  "description": ""},
{ "name": "org.apache.royale.html5.DropDownList",
  "description": ""},
{ "name": "org.apache.royale.html5.Label",
  "description": "Label probably should extend TextField directly, but the player's APIs for TextLine do not allow direct instantiation, and we might want to allow Labels to be declared and have their actual view be swapped out."},
{ "name": "org.apache.royale.html5.List",
  "description": "Label probably should extend TextField directly, but the player's APIs for TextLine do not allow direct instantiation, and we might want to allow Labels to be declared and have their actual view be swapped out."},
{ "name": "org.apache.royale.html5.RadioButton",
  "description": ""},
{ "name": "org.apache.royale.html5.TextArea",
  "description": ""},
{ "name": "org.apache.royale.html5.TextButton",
  "description": ""},
{ "name": "org.apache.royale.html5.TextInput",
  "description": ""},
{ "name": "org.apache.royale.html5.TransformBead",
  "description": ""},
{ "name": "org.apache.royale.icons.FontIcon",
  "description": "Icons can be used alone or in buttons and other controls  This class could be used with any icon family out there and with its text property",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.icons.FontIconBase",
  "description": "FontIconBase is the base class to provide most common features for all kinds of text based icons",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.icons.ToggleFontIcon",
  "description": "Icons can be used alone or in buttons and other controls  This class could be used with any icon family out there and with its text property",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Alert",
  "description": "The Alert class is a component that displays a message and one or more buttons in a view that pops up over all other controls and views. The Alert component uses the AlertView bead to display a modal dialog with a title and a variety of buttons configured through the flag property of its show() static function. The Alert component uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the Alert. org.apache.royale.core.IBeadView: the bead used to create the parts of the Alert. org.apache.royale.core.IBeadController: the bead used to handle input events. org.apache.royale.core.IBorderBead: if present, draws a border around the Alert. org.apache.royale.core.IBackgroundBead: if present, places a solid color background below the Alert.  Note: Alert use the HTML <dialog> element, which currently has very limited cross-browser support. To ensure support across all modern browsers, we use use dialogPolyfill extern or creating your own. The required Dialog Polyfill lines are injected in the constructor",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Application",
  "description": "Jewel Application holds specific Jewel need in a Royale Application.  This class extends the standard Application and sets up the AllCSSValuesImpl (implementation) for convenience.  The Application class is the main class and entry point for a Royale application.  This Application class is different than the Flex SDK's mx:Application or spark:Application in that it does not contain user interface elements.  Those UI elements go in the views (ViewBase).  This Application class expects there to be a main model, a controller, and an initial view.",
"tags": [
{  "tagName": "see",
       "values": ["ViewBase", "ViewBase"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.ApplicationMainContent",
  "description": "The ApplicationMainContent class is a Container component capable of parenting the other organized content that implements ISelectableContent interface (i.e, a SectionContent)",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.ApplicationResponsiveView",
  "description": "The ApplicationResponsiveView class is the main Container component capable of parenting other components in an Application It normaly can host a TopAppBar, a Drawer and a Container with other organized content for navigation",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Bar",
  "description": "The Bar class is a container component for different items like a title, navigation icon, and/or icon buttons. Normaly is located at the top or bottom of a container and use to fill all horizontal availale space. It's responsive as screen size changes",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Button",
  "description": "The ButtonBase class is the base class for Button.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Card",
  "description": "The Card class is a container that surronds other components.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.CheckBox",
  "description": "The CheckBox class implements the common user interface control.  The CheckBox includes its text label.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.ComboBox",
  "description": "The ComboBox class is a component that displays an input field and pop-up List with selections. Selecting an item from the pop-up List places that item into the input field of the ComboBox. The ComboBox uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, which includes the dataProvider, selectedItem, and so forth. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the component. org.apache.royale.core.IBeadController: the bead that handles input and output.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Container",
  "description": "The Container class implements a basic container for other controls and containers.  The position and size of the children are determined by a layout while the size of a Container can either be determined by its children or by specifying an exact size in pixels or as a percentage of the parent element.  This Container does not have a built-in scroll bar or clipping of its content should the content exceed the Container's boundaries. To have scroll bars and clipping, add the ScrollingView bead.  While the container is relatively lightweight, it should generally not be used as the base class for other controls, even if those controls are composed of children.  That's because the fundamental API of Container is to support an arbitrary set of children, and most controls only support a specific set of children.  And that's one of the advantages of beads: that functionality used in a Container can also be used in a Control as long as that bead doesn't assume that its strand is a Container.  For example, even though you can use a Panel to create the equivalent of an Alert control, the Alert is a control and not a Container because the Alert does not support an arbitrary set of children.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.jewel.beads.layout", "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport", "org.apache.royale.jewel.beads.layout", "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.ControlBar",
  "description": "The ControlBar class is used within a Panel as a place to position additional controls. The ControlBar appears at the bottom of the org.apache.royale.html.Panel and is not part of the Panel's scrollable content area. The ControlBar is a Container and implements the org.apache.royale.core.IChrome interface, indicating that is outside of the Container's content area. The ControlBar uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the component. org.apache.royale.core.IMeasurementBead: helps determine the overlay size of the ControlBar for layout. org.apache.royale.core.IBorderBead: if present, displays a border around the component. org.apache.royale.core.IBackgroundBead: if present, displays a solid background below the ControlBar.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.DataContainer",
  "description": "The DataContainer class is a component that displays multiple data items. The DataContainer uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, which includes the dataProvider. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the list. org.apache.royale.core.IBeadController: the bead that handles input and output. org.apache.royale.core.IBeadLayout: the bead responsible for the size and position of the itemRenderers. org.apache.royale.core.IDataProviderItemRendererMapper: the bead responsible for creating the itemRenders. org.apache.royale.core.IItemRenderer: the class or factory used to display an item in the list.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.DateChooser",
  "description": "The DateChooser class is a component that displays a calendar.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.DateField",
  "description": "The DateField class provides an input field where a date can be entered and a pop-up calendar control for picking a date as an alternative to the text field.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Divider",
  "description": "The Divider class is a component that shows a clear separation between two zones",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Drawer",
  "description": "The Drawer class is a container component used for navigation can be opened with the menu icon.  It can be used in float or fixed modes.  float make the drawer appear over the screen without make anything change size and click outside the drawer will hide it. Usually clicking in some navigation option will hide it as well.  fixed will need some place and make the other content shrink. click on navigation option in the drawer usually doesn't hide it.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.DropDownList",
  "description": "The DropDownList class implements the basic equivalent of the <code>&lt;select&gt;</code> tag in HTML. The default implementation only lets the user see and choose from an array of strings.  More complex controls would display icons as well as strings, or colors instead of strings or just about anything.  The default behavior only lets the user choose one and only one item.  More complex controls would allow mutiple selection by not dismissing the dropdown as soon as a selection is made.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.FooterBar",
  "description": "The FooterBar class is a container component for different items like navigation icons and/or buttons. Normaly is located at the bottom of an application and use to fill all horizontal availale space. It's responsive as screen size changes",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Form",
  "description": "The Form class works with all validators, which implements IPopUpHost can host error tips. strand with FormValidator to dispatch invalid/valid event.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.FormHeading",
  "description": "FormHeading is a label, and option required indicator (no validation is implied) and a content with one or more controls"},
{ "name": "org.apache.royale.jewel.FormItem",
  "description": "FormItem is a label, and option required indicator (no validation is implied) and a content with one or more controls"},
{ "name": "org.apache.royale.jewel.Grid",
  "description": "The Grid class is a container that uses Grid Layout. Grid Layout need other immediate children to work as cells to host cell content.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.GridCell",
  "description": "The GridCell class is the inmediate container in a Grid Layout to host grid cell content.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Group",
  "description": "The Group class provides a light-weight container for visual elements. By default the Group does not have a layout, allowing its children to be sized and positioned using styles or CSS.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.jewel.beads.layout", "org.apache.royale.jewel.supportClasses.jewel.ScrollingViewport", "org.apache.royale.jewel.beads.layout", "org.apache.royale.jewel.supportClasses.jewel.ScrollingViewport"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.HGroup",
  "description": "This Group subclass uses HorizontalLayout as its default layout.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.jewel.beads.layouts", "org.apache.royale.jewel.beads.layouts"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.IconButton",
  "description": ""},
{ "name": "org.apache.royale.jewel.IconTextInput",
  "description": "The IconTextInput class implements is a TextInput that supports an icon that can be positionend to the left or to the right of text content",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Image",
  "description": "Load Images. For button images use ImageButton",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.ImageButton",
  "description": "The ImageButton class presents an image as a button. In html is an input type=\"image\", this shows the hand pointer cursor",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Label",
  "description": "The Label class implements the basic control for labeling other controls.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.List",
  "description": "The List class is a component that displays multiple data items. The List uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, which includes the dataProvider, selectedItem, and so forth. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the list. org.apache.royale.core.IBeadController: the bead that handles input and output. org.apache.royale.core.IBeadLayout: the bead responsible for the size and position of the itemRenderers. org.apache.royale.core.IDataProviderItemRendererMapper: the bead responsible for creating the itemRenders. org.apache.royale.core.IItemRenderer: the class or factory used to display an item in the list.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Navigation",
  "description": "The Navigation class is a List used for navigate other organized content in a Royale Application. In HTML is represented by a <nav> tag in HTML and It parents a list of links. By default it uses NavigationLinkItemRenderer class to define each item.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.NumericStepper",
  "description": "The NumericStepper class is a component that displays a numeric value and up/down controls (using a org.apache.royale.jewel.Spinner) to increase and decrease the value by specific amounts. The NumericStepper uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the component of type org.apache.royale.core.IRangeModel. org.apache.royale.core.IBeadView: constructs the parts of the component. org.apache.royale.core.IBeadController: handles the input events.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.PopUp",
  "description": "The PopUp class is a component that can popup another component declared as IPopUp",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.RadioButton",
  "description": "The Jewel radio button component in SWF is a specialized button.  A radio button consists of a small circle and, typically, text that clearly communicates a condition that will be set when the user clicks or touches it. Radio buttons always appear in groups of two or more and, while they can be individually selected, can only be deselected by selecting a different radio button in the same group (which deselects all other radio buttons in the group).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.ScrollableGrid",
  "description": "The ScrollableGrid class is a Grid with scroll capabilities",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.ScrollableSectionContent",
  "description": "The ScrollableSectionContent class is a scrollable container component capable of parenting other components. This class is used along with Tabs to separate content and present and organize data for the user.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.SectionContent",
  "description": "The SectionContent class is a Container component capable of parenting other components. This class is used along with Tabs to separate content and present and organize data for the user.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.SimpleTable",
  "description": "The SimpleTable class represents a simple HTML <table> element. This component is designed to be declarative in MXML (or AS3), Check Table component for a Table that uses itemRenderers, columns and a data provider.  This component uses the following jewel classes to generate the Table structure:  - Header: j:THead j:TableRow j:TableHeaderCell  - Body j:TBody j:TableRow j:TableCell  - Footer j:TFoot j:TableRow j:TableCell   As well, DataGrid is a more complex component",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Slider",
  "description": "The Slider class is a component that displays a range of values using a track and a thumb control. The Slider uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, typically an IRangeModel, that holds the Slider values. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the Slider. org.apache.royale.core.IBeadController: the bead that handles input. org.apache.royale.core.IThumbValue: the bead responsible for the display of the thumb control. org.apache.royale.core.ITrackView: the bead responsible for the display of the track.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Snackbar",
  "description": "The Snackbar class is a component that provide brief messages about app processes at the bottom that pops up over all other controls. The Snackbar component uses the SnackbarView bead to display messages and can contain a single action which configured through the action property. Because Snackbar disappear automatically, the action shouldn’t be “Dismiss” or “Cancel.” The Snackbar component uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the Snackbar. org.apache.royale.core.IBeadView: the bead used to create the parts of the Snackbar. org.apache.royale.core.IBeadController: the bead used to handle disappear automatically.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Spacer",
  "description": "The Spacer class takes up space in the UI layout. Setting width and/or height",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Spinner",
  "description": "The Spinner class is a component that displays a control for incrementing a value and a control for decrementing a value. The org.apache.royale.jewel.NumericStepper uses a Spinner as part of the component. Spinner uses the following beads:  org.apache.royale.core.IBeadModel: an IRangeModel to hold the properties. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the Spinner. org.apache.royale.core.IBeadController: a bead that handles the input events.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.TabBar",
  "description": "The TabBar class is a List used for navigate other organized content in a Royale Application. In HTML is represented by a <nav> tag in HTML and It parents a list of links. By default it uses TabBarButtonItemRenderer class to define each item.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.TabBarContent",
  "description": "The TabBarContent class is a Container component capable of parenting the other organized content that implements ISelectableContent interface (i.e, a SectionContent)",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Table",
  "description": "The Table class represents an HTML <table> element.  This Table component uses a data mapper and item renderers to generate a Table from a data source, in opposite to SimpleTable component that is a declarative mxml.  As well, DataGrid is a more complex component",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.TextArea",
  "description": "The TextArea class implements the basic control for single-line text input.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.TextInput",
  "description": "The TextInput class implements the basic control for single-line text input.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.TitleBar",
  "description": "The TitleBar class is a Container component that displays a title and an optional close button. The TitleBar uses the following bead types:  org.apache.royale.core.IBeadModel: the data model, which includes the title and showCloseButton values. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the component. org.apache.royale.core.IBeadLayout: the bead that handles size and position of the component parts (org.apache.royale.html.Label and org.apache.royale.html.Button). org.apache.royale.core.IMeasurementBead: a bead that helps determine the size of the org.apache.royale.html.TitleBar for layout.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.ToggleButton",
  "description": "The ToggleButton class is a Button that supports a selected property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.TopAppBar",
  "description": "The TopAppBar class is a container component for different items like application title, navigation icon, and/or icon buttons. Normaly is located at the top of an application and use to fill all horizontal availale space. It's responsive as screen size changes",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.VGroup",
  "description": "This Group subclass uses VerticalLayout as its default layout.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.jewel.beads.layouts", "org.apache.royale.jewel.beads.layouts"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.View",
  "description": "The View class is the class for most views in a Royale application.  It is generally used as the root tag of MXML documents and UI controls and containers are added to it.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.Wizard",
  "description": ""},
{ "name": "org.apache.royale.jewel.WizardContent",
  "description": "The WizardContent class is a Container component capable of parenting the other organized content that implements ISelectableContent interface (i.e, a SectionContent)",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.WizardPage",
  "description": "WizardPage is the main class for a page inside the WizardContent"},
{ "name": "org.apache.royale.jewel.beads.controllers.AlertController",
  "description": "The AlertControler class bead handles the close event on the org.apache.royale.jewwl.Alert by removing the org.apache.royale.jewel.Alert from the display.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.ComboBoxController",
  "description": "The ComboBoxController class is responsible for listening to mouse event related to ComboBox. Events such as selecting a item or changing the sectedItem.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.DateChooserMouseController",
  "description": "The DateChooserMouseController class is responsible for listening to mouse event related to the DateChooser. Events such as selecting a date or changing the calendar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.DateFieldMouseController",
  "description": "The DateFieldMouseController class is responsible for monitoring the mouse events on the elements of the DateField. A click on the DateField's menu button triggers the pop-up, for example.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.DropDownListController",
  "description": "The DropDownListController class is the controller for org.apache.royale.html.DropDownList.  Controllers watch for events from the interactive portions of a View and update the data model or dispatch a semantic event. This controller watches for the click event and displays the dropdown/popup, and watches the dropdown/popup for change events and updates the selection model accordingly.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.ItemRendererMouseController",
  "description": "The ItemRendererMouseController class can mouse events in itemRenderers. This includes roll-overs, mouse down, and mouse up. These platform-specific events are then re-dispatched as Royale events.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "royaleignoreimport",
       "values": ["goog.events.Event", "goog.events.Event"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.ListSingleSelectionMouseController",
  "description": "The ListSingleSelectionMouseController class is a controller for org.apache.royale.jewel.List.  Controllers watch for events from the interactive portions of a View and update the data model or dispatch a semantic event. This controller watches for events from the item renderers and updates an ISelectionModel (which only supports single selection).  Other controller/model pairs would support various kinds of multiple selection.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.PopUpMouseController",
  "description": "The PopUpMouseController class is responsible for monitoring the mouse events on the elements of the DateField. A click on the DateField's menu button triggers the pop-up, for example.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.SliderMouseController",
  "description": "The SliderMouseController class bead handles mouse events on the org.apache.royale.jewel.Slider's component parts (thumb and track) and dispatches change events on behalf of the Slider (as well as co-ordinating visual changes (such as moving the thumb when the track has been tapped or clicked). Use this controller for horizontally oriented Sliders.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.SnackbarController",
  "description": "The SnackbarController class bead handles duration of the Snackbar How long to show the Snackbar for.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.SpinnerMouseController",
  "description": "The SpinnerMouseController class bead handles mouse events on the org.apache.royale.jewel.Spinner's component buttons, changing the value of the Spinner.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.TableCellSelectionMouseController",
  "description": "The TableCellSelectionMouseController class is a controller for org.apache.royale.jewel.Table.  Controllers watch for events from the interactive portions of a View and update the data model or dispatch a semantic event. This controller watches for events from the item renderers and updates an ISelectionModel (which only supports single selection).  Other controller/model pairs would support various kinds of multiple selection.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controllers.WizardController",
  "description": "The WizardController class is the controller for org.apache.royale.jewel.Wizard.  Controllers watch for events from the interactive portions of a View and update the data model or dispatch a semantic event.  This controller watches for the click event in previous/next buttons and makes the wizard navigate to the corresponding view updates the selection model accordingly.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.Badge",
  "description": "The Badge class provides a small status descriptors for UI elements.  A Badge is an onscreen notification element consists of a small circle, typically containing a number or other characters, that appears in proximity to another object",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.Disabled",
  "description": "The Disabled bead class is a specialty bead that can be used to disable a Jewel control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.DispatchChangeOnStartup",
  "description": "The DispatchChangeOnStartup bead class is a specialty bead that can be used with components that implements ISelectionModel and uses dataProvider to dispatch a CHANGE event when the component is initialized",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.MultiLine",
  "description": "The MultiLine bead is a specialty bead that can be used with any IClassSelectorListSupport control to allow more than one line i.e: Button, DropDownList, ... Note that Label has multiline property baked since is very used on that component",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.NavigationActionNotifier",
  "description": "The NavigationActionNotifier notifies when a control's \"change\" or \"click\" event is thrown Other application parts can listen for \"navigationAction\" event to respond accordingly.  This bead should be used with Navigation, TabBar or a Button (that could be located in TobAppBar) or any other navigation component that triggers some navigation action  An example of use case is to use with CleanValidationErrors bead",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.SizeControl",
  "description": "The SizeControl bead class is a specialty bead that can be used to size a Jewel control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.TextAlign",
  "description": "The TextAlign bead class is a specialty bead that make text align left, right or center.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.ToolTip",
  "description": "The ToolTip class is a specialty bead that can be used with any control. The bead floats a string over a control if the user hovers over the control with a mouse.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.application.CleanValidationErrors",
  "description": "The CleanValidationErrors listen for \"navigationAction\" event signaling some navigation was performed and we want to clean all validation errors in that could be left in the previous content",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.combobox.ComboBoxDisabled",
  "description": "The ComboBoxDisabled bead class is a specialty bead that can be used to disable a Jewel ComboBox.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.combobox.ComboBoxTextPrompt",
  "description": "The ComboBoxTextPrompt class is a specialty bead that can be used with any ComboBox control. The bead places a string into the sub TextInput component when there is no value associated with the text property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.combobox.ComboLowerCase",
  "description": "The ComboLowerCase class is a specialty bead that can be used with a Jewel ComboBox control. The bead makes all text change to lower case Note: if you only need text to look lower case but wants the text remain unchanged you can use CSS text-transform: lowercase",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.combobox.ComboUpperCase",
  "description": "The ComboUpperCase class is a specialty bead that can be used with a Jewel ComboBox control. The bead makes all text change to upper case Note: if you only need text to look upper case but wants the text remain unchanged you can use CSS text-transform: uppercase",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.combobox.IComboBoxView",
  "description": "The IComboBoxView interface provides the protocol for any bead that creates the visual parts for a org.apache.royale.jewel.ComboBox control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.combobox.SearchFilter",
  "description": "The SearchFilter bead class is a specialty bead that can be used with a Jewel ComboBox to filter options as we type",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.5", "Royale 0.9.5"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.datefield.DateFieldDisabled",
  "description": "The DateFieldDisabled bead class is a specialty bead that can be used to disable a Jewel DateField control. This disables all the internal native controls.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.datefield.DateFieldMaskedTextInput",
  "description": "The DateFieldMaskedTextInput class is a specialty bead that is used by DateField control. The bead mask the input of the user to conform to numbers and slashes in the following pattern: 'NN/NN/NNNN'",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.datefield.DateFieldTextPrompt",
  "description": "The DateFieldTextPrompt class is a specialty bead that can be used with any DateField control. The bead places a string into the sub TextInput component when there is no value associated with the text property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.datefield.SpanishDateComponentConfig",
  "description": "The SpanishDateFieldConfig class is a specialty bead that is used by DateField or DateChooser control to configure to Spanish. You can use in combination with DateFormatDDMMYYYY Formatter",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.drawer.ResponsiveDrawer",
  "description": "The ResponsiveDrawer class is a bead to use with Jewel Drawer to make it fixed or float depending on the screen size.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.dropdownlist.DropDownListTextPrompt",
  "description": "The DropDownListTextPrompt class is a specialty bead that can be used with any DropDownList control. It fills the prompt property in the DropDownListView",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.dropdownlist.RequireSelection",
  "description": "The RequireSelection bead is a specialty bead that can be used with any DropDownList control to force a data item always be selected in the control",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.list.HorizontalListScroll",
  "description": "The HorizontalListScroll bead is a specialty bead that can be used with Jewel List control and gives horizontal scroll to the list",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.slider.ISliderView",
  "description": "The ISliderView interface provides the protocol for any bead that creates the visual parts for a org.apache.royale.html.Slider control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.spinner.ISpinnerView",
  "description": "The ISpinnerView interface provides the protocol for any bead that creates the visual parts for a org.apache.royale.jewel.Spinner control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.tabbar.AssignTabContent",
  "description": "The Disabled bead class is a specialty bead that can be used to disable a Jewel control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.textinput.LowerCase",
  "description": "The LowerCase class is a specialty bead that can be used with any Jewel TextInputBase control. The bead makes all text change to lower case Note: if you only need text to look lower case but wants the text remain unchanged you can use CSS text-transform: lowercase",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.textinput.MaxNumberCharacters",
  "description": "The MaxNumberCharacters class is a specialty bead that can be used with any TextInput control. The bead set the maximun number of characters the text input can hold.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.textinput.PasswordInput",
  "description": "The PasswordInput class is a specialty bead that can be used with any TextInput control. The bead secures the text input area by masking the input as it is typed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.textinput.Restrict",
  "description": "The Restrict bead class is a specialty bead that can be used with any Jewel TextInputBase control. The bead uses a reg exp pattern to validate input from user. A text property allows to configure error text.  pattern examples: Numeric ony pattern = [^0-9] Letters only pattern = [^a-zA-Z] Numeric and letters only pattern = [^0-9a-zA-Z]",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "description": "The SearchFilterForList bead class is a specialty bead that can be used with a Jewel TextInput to filter options in other List component  Notice that the filtering is only visual, and the underlaying dataProvider is not filtered itself. To get a filtered view of the dataProvider you should use ArrayListView API.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.textinput.TextPrompt",
  "description": "The TextPrompt class is a specialty bead that can be used with any TextInput control. The bead places a string into the input field when there is no value associated with the text property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.controls.textinput.UpperCase",
  "description": "The UpperCase class is a specialty bead that can be used with any Jewel TextInputBase control. The bead makes all text change to upper case Note: if you only need text to look upper case but wants the text remain unchanged you can use CSS text-transform: uppercase",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.AddListItemRendererForArrayListData",
  "description": "Handles the adding of an itemRenderer in a List component once the corresponding datum has been added from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.AddTableRowForArrayListData",
  "description": "Handles the adding of an itemRenderer in a Table component once the corresponding datum has been added from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.CollectionChangeUpdateForArrayListData",
  "description": "Handles the update of an itemRenderer in a List component once the corresponding datum has been updated from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.DataFieldProviderBead",
  "description": "The DataFieldProviderBead class is a model that holds dataField used mostly in item renderers for retrieve some value from dataProvider items.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForArrayData",
  "description": "The DataItemRendererFactoryForArrayData class reads an array of data and creates an item renderer for every item in the array.  Other implementations of IDataProviderItemRendererMapper map different data structures or manage a virtual set of renderers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.DataItemRendererFactoryForCollectionView",
  "description": "This class creates itemRenderer instances from the data contained within an ICollectionView"},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.DropDownListItemRendererFactoryForCollectionView",
  "description": "This class creates itemRenderer instances from the data contained within an ICollectionView"},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.IAlignItemRenderer",
  "description": "The IAlignItemRenderer interface is the interface for for org.apache.royale.core.IItemRenderer that display text aligned.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.ITextItemRenderer",
  "description": "The ITextItemRenderer interface is the interface for for org.apache.royale.core.IItemRenderer that display text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.RemoveAllItemRendererForArrayListData",
  "description": "Handles the removal of all itemRenderers once the all items has been removed from the IDataProviderModel. This works the same for List and Table components",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.RemoveListItemRendererForArrayListData",
  "description": "Handles the removal of an itemRenderer in a List component once the corresponding datum has been removed from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.RemoveTableRowForArrayListData",
  "description": "Handles the removal of an itemRenderer in a Table component once the corresponding datum has been removed from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.TableItemRendererFactoryForCollectionView",
  "description": "This class creates itemRenderer instances from the data contained within an ICollectionView and generates the appropiate table structure with thead, tbody and table rows and cells to hold the columns and data in cells."},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.UpdateListItemRendererForArrayListData",
  "description": "Handles the update of an itemRenderer in a List component once the corresponding datum has been updated from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.itemRenderers.UpdateTableRowForArrayListData",
  "description": "Handles the update of an itemRenderer in a Table component once the corresponding datum has been updated from the IDataProviderModel.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.BasicLayout",
  "description": "The BasicLayout class is a simple layout bead.  It takes the set of children and lays them out as specified by CSS properties like left, right, top and bottom.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.FormItemLayout",
  "description": "The BasicLayout class is a simple layout bead.  It takes the set of children and lays them out as specified by CSS properties like left, right, top and bottom.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.FormLayout",
  "description": "The BasicLayout class is a simple layout bead.  It takes the set of children and lays them out as specified by CSS properties like left, right, top and bottom.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.GridCellLayout",
  "description": "The GridCellLayout class is the layout used for childrens in a Grid",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.GridLayout",
  "description": "The GridLayout class sets its childrens in a grid with cells filling all the available space. The cells can be separated by gap.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.HorizontalCenteredLayout",
  "description": "The HorizontalCenteredLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.HorizontalFlowLayout",
  "description": "The HorizontalFlowLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.HorizontalLayout",
  "description": "The HorizontalLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.NullLayout",
  "description": "The NullLayout class is a layout class used to override other layout classes This class should be temporal and make Royale be able to pass ClassReference (null) in CSS to not use the layout defined in parent class",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.ResponsiveVisibility",
  "description": "The ResponsiveVisibility bead class is a specialty bead that can be used to show or hide a Jewel component depending on responsive rules.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.SimpleHorizontalLayout",
  "description": "The HorizontalLayout class is a simple layout bead.  It takes the set of children and lays them out horizontally in one row, separating them according to CSS layout rules for margin and vertical-align styles.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.SimpleVerticalLayout",
  "description": "The VerticalLayout class is a simple layout bead.  It takes the set of children and lays them out vertically in one column, separating them according to CSS layout rules for margin and horizontal-align styles.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.StyledLayoutBase",
  "description": "The StyledLayoutBase class is an extension of LayoutBase to define various common layout features for the rest of child classes",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.TableLayout",
  "description": "The TableLayout class is a simple layout bead.  It takes the set of children and lays them out as a Table.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.TileLayout",
  "description": "The TileLayout class bead sizes and positions the elements it manages into rows and columns. The size of each element is determined either by setting TileLayout's columnWidth and rowHeight properties, or having the tile size determined by factoring the numColumns into the area assigned for the layout.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.VerticalCenteredLayout",
  "description": "The VerticalCenteredLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.VerticalFlowLayout",
  "description": "The VerticalFlowLayout class is a simple layout bead similar to HorizontalLayout, but it adds support for padding and gap values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.layouts.VerticalLayout",
  "description": "The VerticalLayout class is a simple layout bead similar to VerticalLayout, but it adds support for padding and gap values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.AlertModel",
  "description": "The AlertModel class bead implements the org.apache.royale.core.IAlertModel and holds the properties for an org.apache.royale.html.Alert such the buttons to use and message to display.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.ArrayListSelectionModel",
  "description": "The ArrayListSelectionModel class is a selection model for a dataProvider that is an ArrayList. It assumes that items can be fetched from the dataProvider using dataProvider.getItemAt(index).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.ComboBoxModel",
  "description": "The ComboBoxModel class bead extends org.apache.royale.jewel.beads.models.ArrayListSelectionModel and adds the text being displayed by the org.apache.royale.jewel.ComboBox's input field.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.DataProviderModel",
  "description": "The DataProviderModel class is a model for a dataProvider and an optional labelField.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.DateChooserModel",
  "description": "The DateChooserModel is a bead class that manages the data for a DataChooser. This includes arrays of names for the months and days of the week as well the currently selected date.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.DropDownListModel",
  "description": "The DropDownListModel class defines the data associated with an org.apache.royale.jewel.DropDownListModel component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.FormItemModel",
  "description": "The FormItemModel bead class holds the values for a org.apache.royale.jewel.FormItem",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.IDropDownListModel",
  "description": "The IDropDownListModel interface is a marker interface",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.IJewelSelectionModel",
  "description": "The IJewelSelectionModel interface is a simple extension to core ISelectionModel",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.ImageModel",
  "description": "The ImageModel class bead defines the data associated with an org.apache.royale.jewel.Image component, namely the source of the image.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.ListPresentationModel",
  "description": "The ListPresentationModel holds values used by list controls for presenting their user interfaces.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.PopUpModel",
  "description": "The PopUpModel class bead defines the data associated with an org.apache.royale.jewel.PopUp component. This includes the duration - how long to show the view for.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.RangeModel",
  "description": "The RangeModel class bead defines a set of for a numeric range of values which includes a minimum, maximum, and current value.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.ScrollBarModel",
  "description": "The ScrollBarModel class bead extends the org.apache.royale.html.beads.models.RangeModel and adds page size and page step sizes.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.SliderRangeModel",
  "description": "The SliderRangeModel class bead defines a set of for a numeric range of values which includes a minimum, maximum, and current value.  It do not calculate any values for slider - just holds it.",
"tags": [
{  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.SnackbarModel",
  "description": "The SnackbarModel class bead defines the data associated with an org.apache.royale.jewel.Snackbar component. This includes a message, the action and duration - how long to show the view for.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.TableArrayListSelectionModel",
  "description": "The ArrayListSelectionModel class is a selection model for a dataProvider that is an ArrayList. It assumes that items can be fetched from the dataProvider using dataProvider.getItemAt(index).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.TableModel",
  "description": ""},
{ "name": "org.apache.royale.jewel.beads.models.TextModel",
  "description": "The TextModel class is most basic data model for a component that displays text.  All Royale components that display text should also support HTML, although the Flash Player implementations may only support a subset of HTML.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.TitleBarModel",
  "description": "The TitleBarModel class bead holds the values for the org.apache.royale.html.TitleBar's properties.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.WizardModel",
  "description": "The WizardModel bead class holds the values for a org.apache.royale.jewel.Wizard",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.models.WizardStep",
  "description": "The WizardModel bead class holds the values for a org.apache.royale.html.Panel, such as its title.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.validators.CheckBoxValidator",
  "description": "The CheckBoxValidator class is a specialty bead that can be used with Group control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.validators.DateValidator",
  "description": "The DateValidator class is a specialty bead that can be used with Group control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.validators.EmailValidator",
  "description": "The EmailValidator class is a specialty bead that can be used with TextInput control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.validators.FormValidator",
  "description": "The FormValidator class is a specialty bead that can be used with form control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.validators.RadioButtonValidator",
  "description": "The RadioButtonValidator class is a specialty bead that can be used with Group control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.validators.SelectedItemNullValidator",
  "description": "The SelectedItemNullValidator class is a specialty bead that can be used with Group control to validate if a component (normaly list based) has a selectedItem with null value",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.validators.StringValidator",
  "description": "The StringValidator class is a specialty bead that can be used with TextInput control.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.validators.Validator",
  "description": "The Validator class is the base class for all validators. This class implements the ability for create/destroy error tips, user should set custom validateFunction or use sub class for validation.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.AlertView",
  "description": "The AlertView class creates the visual elements of the org.apache.royale.jewel.Alert component. The job of the view bead is to put together the parts of the Alert, such as the title bar, message, and various buttons, within the space of the Alert component strand.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.ButtonView",
  "description": "The ButtonView class is the default view for the org.apache.royale.jewel.Button class. It allows the look of the button to be expressed in CSS via the background-image style and displays a text label.  This view does not support right-to-left text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.CheckBoxView",
  "description": "The CheckBoxView class is the default view for the org.apache.royale.html.CheckBox class. It displays a simple checkbox with an 'x' if checked, and a label on the right.  There are no styles or properties to configure the look of the 'x' or the position of the label relative to the checkbox as there are no equivalents in the standard HTML checkbox.  A more complex CheckBox could implement more view configuration.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.ComboBoxPopUpView",
  "description": "The ComboBoxPopUpView class is a view bead for the ComboBoxPopUp.  This class creates a list that will be pop up when the combo box needs to show the associated list",
"tags": [
{  "tagName": "viewbead",
       "values": []}  ]},
{ "name": "org.apache.royale.jewel.beads.views.ComboBoxView",
  "description": "The ComboBoxView class creates the visual elements of the org.apache.royale.jewel.ComboBox component. The job of the view bead is to put together the parts of the ComboBox such as the TextInput control and org.apache.royale.jewel.Button to trigger the pop-up.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.DateChooserView",
  "description": "The DateChooserView class is a view bead for the DateChooser.  This class creates the elements for the DateChooser: the buttons to move between months, the labels for the days of the week, and the buttons for each day of the month.",
"tags": [
{  "tagName": "viewbead",
       "values": []}  ]},
{ "name": "org.apache.royale.jewel.beads.views.DateFieldView",
  "description": "The DateFieldView class is a bead for DateField that creates the input and button controls. This class also handles the pop-up mechanics.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.DropDownListView",
  "description": "The DropDownListView class creates the visual elements of the org.apache.royale.jewel.DropDownList component. The job of the view bead is to put together the parts of the DropDownList such as the Select",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.FormHeadingView",
  "description": "The FormHeadingView class creates the visual elements of the org.apache.royale.jewel.FormHeading component. A FormHeading has two org.apache.royale.jewel.Labels.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.FormItemView",
  "description": "The FormItemView class creates the visual elements of the org.apache.royale.jewel.FormItem component. A FormItem has two org.apache.royale.jewel.Label (one for text and other to show requeriment), and content.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.ImageView",
  "description": "The ImageView class creates the visual elements of the org.apache.royale.jewel.Image component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.ListView",
  "description": ""},
{ "name": "org.apache.royale.jewel.beads.views.NumericStepperView",
  "description": "The NumericStepperView class creates the visual elements of the org.apache.royale.jewel.NumericStepper component. A NumberStepper consists of a org.apache.royale.jewel.TextInput component to display the value and a org.apache.royale.jewel.Spinner to change the value.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.PopUpView",
  "description": "The PopUpView class is a bead for PopUp that creates the dialog that holds the real component. This class also handles the pop-up mechanics.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.RadioButtonView",
  "description": "The RadioButtonView class creates the visual elements of the org.apache.royale.html.RadioButton component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.SliderThumbView",
  "description": "The SliderThumbView class creates the draggable input element for the org.apache.royale.jewel.Slider component.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.SliderTrackView",
  "description": "The SliderTrackView class creates the track area for the org.apache.royale.jewel.Slider component.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.SliderView",
  "description": "The SliderView class creates the visual elements of the org.apache.royale.jewel.Slider component. The Slider has a track and a thumb control which are also created with view beads.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.SnackbarView",
  "description": "The SnackbarView class creates the visual elements of the org.apache.royale.jewel.Snackbar component. The job of the view bead is to put together the parts of the Snackbar such as the message text and action clicked dispatches action event on behalf of the Snackbar.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.SpinnerView",
  "description": "The SpinnerView class creates the visual elements of the org.apache.royale.jewel.Spinner component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.TabBarView",
  "description": "The TabBarView class creates the visual elements of the org.apache.royale.jewel.TabBar component.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.TableView",
  "description": "The TableView class creates the visual elements of the org.apache.royale.jewel.Table component.  It creates a TBody, and defines THead and TFoot optional parts to be created by a mapper",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.TextFieldView",
  "description": "The TextFieldView class is the default view for the org.apache.royale.jewel.Label class. It displays text using a TextInput, so there is no right-to-left text support in this view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.beads.views.WizardView",
  "description": "The Wizard class creates the visual elements of the org.apache.royale.jewel.Wizard component. A Wizard has two org.apache.royale.jewel.Button, and content. The buttons navigate pages to previous or next.",
"tags": [
{  "tagName": "viewbead",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.debugger.ResponsiveSizeMonitor",
  "description": "The ResponsiveDrawer class is a bead to use with Jewel Drawer to make it fixed or float depending on the screen size.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.events.WizardEvent",
  "description": "Programmatic (not user/UI) based wizard navigation events."},
{ "name": "org.apache.royale.jewel.itemRenderers.DateItemRenderer",
  "description": "The DateItemRenderer class renders date values for the DateChooser.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.itemRenderers.DropDownListItemRenderer",
  "description": "The DropDownListItemRenderer class creates a DropDownList menu item",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.itemRenderers.ListItemRenderer",
  "description": "The ListItemRenderer defines the basic Item Renderer for a Jewel List Component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.itemRenderers.NavigationLinkItemRenderer",
  "description": "The NavigationLinkItemRenderer defines the basic Item Renderer for a Jewel Navigation List Component. It handles Objects with \"label\" and \"href\" data. Extend this (you can do it in MXML) to support more data like for example: icon data.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.itemRenderers.StringItemRenderer",
  "description": "The StringItemRenderer class displays data in string form using the data's toString() function.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.itemRenderers.TabBarButtonInidicatorRestrictedToContentItemRenderer",
  "description": "The TabBarButtonInidicatorRestrictedToContentItemRenderer is a TabBarButtonItemRenderer that restrict indicator to content",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.itemRenderers.TabBarButtonItemRenderer",
  "description": "The TabBarButtonItemRenderer defines the basic Item Renderer for a Jewel TabBar List Component. It handles Objects with \"label\" and \"href\" data. Extend this (you can do it in MXML) to support more data like for example: icon data.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.itemRenderers.TableItemRenderer",
  "description": "The TableItemRenderer class displays data in string form using the data's toString() function.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.DataContainerBase",
  "description": ""},
{ "name": "org.apache.royale.jewel.supportClasses.INavigationRenderer",
  "description": "INavigationRenderer is the interface that all item renderers used with Navigation List component must implement. Jewel supports a basic implementation with NavigationLinkItemRenderer",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.jewel.itemRenderers.NavigationLinkItemRenderer", "org.apache.royale.jewel.itemRenderers.NavigationLinkItemRenderer"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.ISelectableContent",
  "description": "ISelectableContent is the interface a container implements to mark as the current selected content",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.NoViewport",
  "description": "NoViewport is set when we need to avoid default Viewport in Container",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.ResponsiveSizes",
  "description": "The ResponsiveSizes declares consants that are related to SASS variables created to provide media queries for different screen sizes  by default:  // DEVICE DIMENSIONS $phone: 0px $tablet: 768px $desktop: 992px $widescreen: 1200px",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.Viewport",
  "description": "A Viewport is the area of a Container set aside for displaying content. If the content exceeds the visible area of the viewport it will be clipped or hidden.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.bar.BarRow",
  "description": "The BarRow class is a container component used with Bar or TopAppBar It represent a row. Bar and TopAppBar supports more than one row",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.bar.BarSection",
  "description": "The BarSection class is a container component for items in an Bar or TopAppBar row.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.bar.BarTitle",
  "description": "The BarTitle class is the title to use with a Bar or TopAppBar. The later use to be the application title",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.checkbox.CheckBoxIcon",
  "description": ""},
{ "name": "org.apache.royale.jewel.supportClasses.combobox.ComboBoxPopUp",
  "description": "The ComboBoxPopUp class is the popup that holds the List used internally by ComboBox as the dropdown/popup.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.datagrid.DataGridColumn",
  "description": "The DataGridColumn class is the collection of properties that describe a column of the org.apache.royale.jewel.DataGrid: which renderer to use for each cell in the column, the width of the column, the label for the column, and the name of the field in the data containing the value to display in the column.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.datagrid.IDataGridColumn",
  "description": ""},
{ "name": "org.apache.royale.jewel.supportClasses.datechooser.DateChooserTable",
  "description": ""},
{ "name": "org.apache.royale.jewel.supportClasses.drawer.DrawerBase",
  "description": "The DrawerBase class is the base class for a container component used for navigation.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.drawer.DrawerContent",
  "description": "The DrawerContent class is a Container component mainly used in Drawer to hold content like navigation, icons, or text.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.drawer.DrawerHeader",
  "description": "The DrawerHeader class is a Container component to hold Drawer Header content, for example a title or an Image icon logo",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.dropdownlist.DropDownListList",
  "description": "The DropDownListList class is the List class used internally by DropDownList as the dropdown/popup.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.formitem.FormItemLayoutProxy",
  "description": "The FormItemLayoutProxy class is used by Wizard in order for layouts to operate on the Wizard itself. If Wizard were being used, its numElements, getElementAt, etc. functions would actually redirect to its Container content. In order for a layout to work on the Wizard directly (its PreviousButton, NextButton and Container), this proxy is used which will invoke the Wizard's $numElements, $getElementAt, etc functions.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.list.DataGroup",
  "description": "The DataGroup class is the IItemRendererParent used internally by org.apache.royale.jewel.List class.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.popup.PopUpContent",
  "description": "The PopUpContent class is a component",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.radiobutton.RadioButtonIcon",
  "description": "The RadioButton class is a component that displays a selectable Button. RadioButtons are typically used in groups, identified by the groupName property. RadioButton use the following beads:  org.apache.royale.core.IBeadModel: the data model, which includes the groupName. org.apache.royale.core.IBeadView:  the bead that constructs the visual parts of the RadioButton..",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.scrollbar.HScrollBar",
  "description": "The ScrollBar class represents either a vertical or horizontal control that allows the user to quickly scan through a component that does not wholly fit within its container.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.scrollbar.ScrollBar",
  "description": "The ScrollBar class represents either a vertical or horizontal control that allows the user to quickly scan through a component that does not wholly fit within its container.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.scrollbar.ScrollingViewport",
  "description": ""},
{ "name": "org.apache.royale.jewel.supportClasses.scrollbar.VScrollBar",
  "description": "The ScrollBar class represents either a vertical or horizontal control that allows the user to quickly scan through a component that does not wholly fit within its container.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.table.TBody",
  "description": "The TBody class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <tbody> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.table.TBodyContentArea",
  "description": "The TBodyContentArea class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <tbody> element.  The body part in a table use to be the \"data\" part and can be scrollable for this reason is implemented as a ContainerContentArea and provided via CSS as the IContentView.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.table.TFoot",
  "description": "The TFoot class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <tfoot> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.table.THead",
  "description": "The THead class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <thead> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.table.TableCell",
  "description": "The TableCell class defines a table data cell in the Table component. This element may have nearly any type of Royale component as children.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.table.TableColumn",
  "description": "TableColumn is a DataGridColumn used in Jewel Table component with special table properties.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.table.TableHeaderCell",
  "description": "The TableHeaderCell class defines a table header cell in the Table component.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.table.TableRow",
  "description": "The TableRow class is a building block of Jewel SimpleTable and Table components, is used in TableView and represents an HTML <tr> element",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.textinput.ITextInput",
  "description": "ITextInput is the interface that all text jewel classes. It's used mainly in org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 9.2", "Royale 9.2"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.textinput.TextInputBase",
  "description": "The TextInputBase class is the base class for TextInput and TextArea Jewel controls",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.tooltip.ErrorTipLabel",
  "description": "The ErrorTipLabel class is the control used for ToolTip bead to popup an error text over a control",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "toplevel",
       "values": []},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.tooltip.ToolTipLabel",
  "description": "The ToolTipLabel class is the control used for ToolTip bead to popup a text over a control",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jewel.supportClasses.wizard.WizardLayoutProxy",
  "description": "The WizardLayoutProxy class is used by Wizard in order for layouts to operate on the Wizard itself. If Wizard were being used, its numElements, getElementAt, etc. functions would actually redirect to its Container content. In order for a layout to work on the Wizard directly (its PreviousButton, NextButton and Container), this proxy is used which will invoke the Wizard's $numElements, $getElementAt, etc functions.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.jquery.Application",
  "description": ""},
{ "name": "org.apache.royale.jquery.CheckBox",
  "description": ""},
{ "name": "org.apache.royale.jquery.RadioButton",
  "description": ""},
{ "name": "org.apache.royale.jquery.TextButton",
  "description": ""},
{ "name": "org.apache.royale.jquery.ToggleTextButton",
  "description": "The ToggleButton class is a TextButton that supports a selected property.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.maps.google.GoogleMap",
  "description": "The Map class displays a Google Map centered on lat/lng coordinates. The Map uses the following bead type:  org.apache.royale.maps.beads.MapView: Uses HTMLLoader to display the map.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "royaleignoreimport",
       "values": ["goog.bind", "google.maps.event", "goog.bind", "google.maps.event"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.maps.google.beads.GoogleMapView",
  "description": "The AS3 version of GoogleMapView is geared toward its use with HTMLLoader for AIR."},
{ "name": "org.apache.royale.maps.google.models.MapModel",
  "description": "The data model for the Map class, this holds the maps current center location, its current zoom level, the last marker selected, and any search results.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.DatePicker",
  "description": "The DatePicker presents a control for picking a date.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.IViewManager",
  "description": "The IViewManager interface is implemented by classes that manage or control IViews.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.IViewManagerView",
  "description": "The IViewManagerView interface is implemented by any class that can be managed by an IViewManager.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.ManagerBase",
  "description": "The ManagerBase is a base class for mobile display managers such as StackedViewManager and TabbedViewManager. This class encapsulates the features common to all view managers.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.StackedViewManager",
  "description": "The StackedViewManager displays a single View at a time from a collection of Views where views[0] is at the bottom and views[n-1] is at the top and displayed.  The StackedViewManager has an optional navigation bar at the top and an optional tool bar at the bottom. The views are displayed within the StackedViewManager's content area.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.TabbedViewManager",
  "description": "The TabbedViewManager displays a set of views, only one of which is active at a time. The other views are reachable via a set of tab buttons at the bottom of the view manager's space.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.TitleView",
  "description": "The TitleView class represents a view in a mobile app that has a title and is typically used in a ViewManager."},
{ "name": "org.apache.royale.mobile.ToggleSwitch",
  "description": "The ToggleSwitch is a UI control that displays on/off or yes/no states.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.ViewManagerBase",
  "description": "Base class for mobile navigation controls.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.DatePickerView",
  "description": "The DatePickerView bead creates the visual elements of the DatePicker. This is a set of three RangeSteppers (one each for month, day, and year).",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.DeviceSizeBead",
  "description": "The DeviceSizeBead.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.MobileWebBrowserView",
  "description": "The MobileWebBrowserView creates an instance of StageWebView to load web pages into a mobile application. This class is available only for AS3 compiled mode. Note that StageWebView is attached directly to the stage and may obscure other components.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.StackedViewManagerView",
  "description": "The StackedViewManagerView creates the visual elements of the StackedViewManager. This includes a NavigationBar, ToolBar, and contentArea.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.TabbedViewManagerView",
  "description": "The TabbedViewManagerView constructs the visual elements of the TabbedViewManager. The elements may be a navigation bar, a tab bar, and the contentArea.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.ToggleSwitchView",
  "description": "The ToggleSwitchView creates the element used to display the ToggleSwitch interface.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.TopTabbedViewManagerView",
  "description": "The TopTabbedViewManagerView constructs the visual elements of the TabbedViewManager. It always contains a tab bar and it's located at the top. It may contain a navigation bar at the bottom.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.ViewManagerViewBase",
  "description": "The ViewManagerViewBase creates the visual elements of the StackedViewManager. This includes a NavigationBar, ToolBar, and contentArea.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.beads.controllers.ToggleSwitchMouseController",
  "description": "The ToggleSwitchMouseController bead handles mouse events on the ToggleSwitch, allowing the user to use the mouse to change the state of the ToggleSwitch.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.chrome.NavigationBar",
  "description": "The NavigationBar class is part of the mobile view manager's chrome. When present, it provides a place for content at the top of the view, above the contentArea.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.chrome.TabBar",
  "description": "The TabBar class displays a set of buttons that can be used to switch between navigation panels.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.chrome.ToolBar",
  "description": "The ToolBar class provides a space below the contentArea of a view manager which can be used to house controls for the view.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.mobile.models.ViewManagerModel",
  "description": "The ViewManagerModel houses properties and values common to the components which make up view managers. These properties include the title, which view is currently active and selected.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.BinaryUploader",
  "description": "The BinaryUploader class is a class designed to upload binary data over HTTP.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.CompressedRemoteObject",
  "description": "A RemoteObject that performs automatic serialization/deserialization of results.  It deserializes the compressed ByteArray in order to optimize the transfer time. TOOD improve to serialize the sending."},
{ "name": "org.apache.royale.net.HTTPConstants",
  "description": ""},
{ "name": "org.apache.royale.net.HTTPHeader",
  "description": "The data class for HTTP headers in HTTP server communications.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.HTTPService",
  "description": "The HTTPService class is a class designed to transfer text over HTTP.  Use BinaryUploader for transferring non-text.",
"tags": [
{  "tagName": "see",
       "values": ["org.apache.royale.net.BinaryUploader.", "org.apache.royale.net.BinaryUploader."]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.HTTPServiceBase",
  "description": "The data class for HTTP headers in HTTP server communications.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.HTTPUtils",
  "description": ""},
{ "name": "org.apache.royale.net.RemoteObject",
  "description": "This is the RemoteObject that has a similar behaviour that Flex RemoteObject and can be use with BlazeDS, LCDS or CF backends"},
{ "name": "org.apache.royale.net.Responder",
  "description": ""},
{ "name": "org.apache.royale.net.SimpleRemoteObject",
  "description": "This is the most simple implementation os a RemoteObject it can be use with simple backends like AMFPHP. To use with BlazeDS better us RemoteObject since it manages clientId and small messages"},
{ "name": "org.apache.royale.net.URLBinaryLoader",
  "description": "The URLBinaryLoader class is a relatively low-level class designed to get binary data over HTTP the intent is to create similar classes for text and URL vars.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7.0", "Royale 0.7.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.URLBinaryUploader",
  "description": "The URLBinaryUploader class subclasses URLBinaryLoader to offer upload progress events.  This class is only used for JS implementations because Flash upload events need to be handled differently. In Flash, URLLoader does not dispatch upload events. It only dispatches download events. To get upload events in Flash, you need to use File/FileReference.upload() and attach event listeners to that.  Care should be taken when using this class because it attaches a progress listener to the xhr.upload object. Doing so causes browsers to send OPTIONS requests. This will return an unauthorized response from servers not configured to allow CORS OPTIONS requests. See this S.O. post for details. https://stackoverflow.com/a/17057853",
"tags": [
{  "tagName": "see",
       "values": ["URLBinaryLoader", "URLBinaryLoader"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.0", "Royale 0.9.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.URLLoader",
  "description": "The URLBinaryLoader class is a relatively low-level class designed to get binary data over HTTP the intent is to create similar classes for text and URL vars.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7.0", "Royale 0.7.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.URLLoaderBase",
  "description": "The URLLoader class is a base class for the specific flavors of loaders such as binary, text or variables",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7.0", "Royale 0.7.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.URLRequest",
  "description": "The URLRequest class captures all of the information in a single HTTP request. URLRequest objects are passed to the load() methods of the URLStream, and URLLoader classes, and to other loading operations, to initiate URL downloads.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7.0", "Royale 0.7.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.URLRequestHeader",
  "description": "A URLRequestHeader object represents an HTTP request header.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7.0", "Royale 0.7.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.URLStream",
  "description": "The URLStream class deals with the underlying platform-specifc architecture for HTTP Requests It makes the request and stores the response, dispatching events.",
"tags": [
{  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.URLUploadStream",
  "description": "The URLUploadStream extends the URLStream class to support upload progress events.  This class is only used for JS implementations because Flash upload events need to be handled differently. In Flash, URLLoader does not dispatch upload events. It only dispatches download events. To get upload events in Flash, you need to use File/FileReference.upload() and attach event listeners to that.  Care should be taken when using this class because it attaches a progress listener to the xhr.upload object. Doing so causes browsers to send OPTIONS requests. This will return an unauthorized response from servers not configured to allow CORS OPTIONS requests. See this S.O. post for details. https://stackoverflow.com/a/17057853",
"tags": [
{  "tagName": "see",
       "values": ["URLStream", "URLStream"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.0", "Royale 0.9.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.beads.CORSCredentialsBead",
  "description": ""},
{ "name": "org.apache.royale.net.events.FaultEvent",
  "description": "FaultEvents are returned from RPC requests to a remote endpoint when the server responds with a fault.",
"tags": [
{  "tagName": "royalesuppresspublicvarwarning",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.events.ResultEvent",
  "description": "ResultEvents are returned from RPC requests to a remote endpoint when the server response is ready.",
"tags": [
{  "tagName": "royalesuppresspublicvarwarning",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.remoting.Operation",
  "description": "used by RemoteObject implementation"},
{ "name": "org.apache.royale.net.remoting.SimpleOperation",
  "description": "used by SimpleRemoteObject implementation"},
{ "name": "org.apache.royale.net.remoting.amf.AMFBinaryData",
  "description": "A version of BinaryData specific to AMF.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.amf.AMFNetConnection",
  "description": "Send data via AMF to a server.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.remoting.messages.AbstractMessage",
  "description": "Abstract base class for all messages. Messages have two customizable sections; headers and body. The <code>headers</code> property provides access to specialized meta information for a specific message instance. The <code>headers</code> property is an associative array with the specific header name as the key. <p> The body of a message contains the instance specific data that needs to be delivered and processed by the remote destination. The <code>body</code> is an object and is the payload for a message. </p>  Note: readExternal and writeExternal methods compile but are not tested and maybe not work but is an initial work",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.remoting.messages.AcknowledgeMessage",
  "description": "An AcknowledgeMessage acknowledges the receipt of a message that was sent previously. Every message sent within the messaging system must receive an acknowledgement.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.remoting.messages.AcknowledgeMessageExt",
  "description": "",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.ActionMessage",
  "description": "The CommandMessage class provides a mechanism for sending commands to the server infrastructure, such as commands related to publish/subscribe messaging scenarios, ping operations, and cluster operations.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.AsyncMessage",
  "description": "AsyncMessage is the base class for all asynchronous messages. Note: readExternal and writeExternal methods compile but are not tested and maybe not work but is an initial work",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.remoting.messages.AsyncMessageExt",
  "description": "A special serialization wrapper for AsyncMessages. This wrapper is used to enable the externalizable form of an AsyncMessage for serialization. The wrapper must be applied just before the message is serialized as it does not proxy any information to the wrapped message.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.CommandMessage",
  "description": "The CommandMessage class provides a mechanism for sending commands to the server infrastructure, such as commands related to publish/subscribe messaging scenarios, ping operations, and cluster operations.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.CommandMessageExt",
  "description": "A special serialization wrapper for CommandMessage. This wrapper is used to enable the externalizable form of an CommandMessage for serialization. The wrapper must be applied just before the message is serialized as it does not proxy any information to the wrapped message.",
"tags": [
{  "tagName": "private",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.ErrorMessage",
  "description": "ErrorMessages are sometimes returned from RPC requests to a remote endpoint.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.IMessage",
  "description": "This interface defines the contract for message objects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.remoting.messages.ISmallMessage",
  "description": "A marker interface that is used to indicate that an IMessage has an alternative smaller form for serialization.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.remoting.messages.MessageBody",
  "description": "The MessageBody for an ActionMessage",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.MessageHeader",
  "description": "The MessageHeader for an ActionMessage",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.RemotingMessage",
  "description": "RemotingMessages are used to send RPC requests to a remote endpoint. These messages use the <code>operation</code> property to specify which method to call on the remote object. The <code>destination</code> property indicates what object/service should be used.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.net.remoting.messages.RoyaleClient",
  "description": "Singleton class that stores the global Id for this instance that is server assigned when the client makes its initial connection to the server.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.net.utils.RPCUIDUtil",
  "description": "The RPCUIDUtil class is a copy of UIDUtil without some functions that cause dependency problems when RPC messages are put in a bootstrap loader.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Flex 3", "Flex 3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.promises.enums.PromiseState",
  "description": ""},
{ "name": "org.apache.royale.promises.interfaces.IThenable",
  "description": ""},
{ "name": "org.apache.royale.promises.vo.Handler",
  "description": "The Handler class used with Promises.",
"tags": [
{  "tagName": "royalesuppresspublicvarwarning",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.AccessorDefinition",
  "description": "The description of a Class or Interface accessor (get and/or set)",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.CompilationData",
  "description": "Information about compiletime settings used when compiling the target class or instance",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.DefinitionBase",
  "description": "The base class for all definition types",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.DefinitionWithMetaData",
  "description": "The base class for definition types that can be decorated with metadata in actionscript source code",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.FunctionDefinition",
  "description": "The description of a Class or Interface",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.MemberDefinitionBase",
  "description": "The base class for definition types that can be decorated with metadata in actionscript source code",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.MetaDataArgDefinition",
  "description": "The description of a Class or Interface",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.MetaDataDefinition",
  "description": "The description of a MetaData tag attached to a class member or a class",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.MethodDefinition",
  "description": "The description of a method inside a class or interface",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.ParameterDefinition",
  "description": "The description of a Function parameter",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2S", "AIR 2.6", "Flash 10.2S", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.TypeDefinition",
  "description": "The description of a Class or Interface",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.VariableDefinition",
  "description": "The description of a Class or Interface variable",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.beads.ClassAliasBead",
  "description": "The ClassAliasBead class is the registers class aliases for serialization/deserialization. Place this bead in the strand of the Application. The compiler leaves information about class aliases on the Application's info object.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.reflection.beads.JSONReviver",
  "description": "The JSONReviver creates ActionScript classes when parsing JSON. Use the JSONReviver's parse function instead of calling JSON.parse(). This is a bead you place on the Application's strand, then call it from other code.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 0.0", "Royale 1.0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.routing.EscapedFragmentBead",
  "description": "The EscapedFragmentBead class handles a special URL parameter that Google Search Crawlers use to verify search results.  This technique is deprecated so use of this bead should be obsolete by 2nd quarter 2018.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.routing.HashChangeNotifierBead",
  "description": "The HashChangeNotifierBead class allows you to respond to the hash changing on the url.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.routing.HashChangeNotifierBeadWithTitle",
  "description": "The HashChangeNotifierBead class allows you to respond to the hash changing on the url.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.routing.URLParameterBead",
  "description": "The URLParameterBead class dispatches an event at startup when the URL parameters are ready to be processed.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.states.AddItems",
  "description": "The AddItems class is one of the classes in the view states subsystem.  Note that the Royale versions are simply data structures interpreted by a central States implementation.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.states.ItemAndDescriptor",
  "description": "A data structure to store an instance and its descriptor array.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.states.SetEventHandler",
  "description": "The SetEventHandler class is one of the classes in the view states subsystem.  Note that the Royale versions are simply data structures interpreted by a central States implementation.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.states.SetProperty",
  "description": "The SetProperty class is one of the classes in the view states subsystem.  Note that the Royale versions are simply data structures interpreted by a central States implementation.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.states.State",
  "description": "The State class is one of the classes in the view states subsystem.  It is used to declare a view state in an MXML document.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.states.Transition",
  "description": "The Transition class holds information describing what to do when changing from one state to another.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.AdjustBrightnessFilterElement",
  "description": "The AdjustBrightnessFilterElement adjusts the brightness of the filter",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.5", "Royale 0.9.5"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.BevelFilter",
  "description": "BevelFilter is a bead that injects a series of beads in the correct order and initialized them.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.5", "Royale 0.9.5"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.BinaryImage",
  "description": "The Image class is a component that displays a bitmap. The Image uses the following beads:  org.apache.royale.core.IBeadModel: the data model for the Image, including the url/binary property. org.apache.royale.core.IBeadView: constructs the visual elements of the component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.BlendFilterElement",
  "description": "The BlendFilterElement blends several filter elements",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.BlurFilterElement",
  "description": "The BlurFilterElement bead adds a blur to a filtered SVG element",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.Circle",
  "description": ""},
{ "name": "org.apache.royale.svg.ClipBead",
  "description": "The ClipBead bead allows you to clip a graphic Shape using a an arbitrary graphic path. The clipping path is defined in the path property using a PathBuilder object. This Bead will not work on the JS on components which are not implemented using SVG.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.ColorMatrixFilterElement",
  "description": "The ColorMatrixFilterElement bead adds an offset to a filtered SVG element",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.CompositeFilterElement",
  "description": "The CompositeFilterElement takes two objects and applies Porter/Duff operators",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.CompoundGraphic",
  "description": "CompoundGraphic is a surface on which you can draw various graphic elements such as Rect, Circle, Ellipse, Path etc. Use this class if you want to draw multiple graphic shapes on a single container."},
{ "name": "org.apache.royale.svg.DOMWrapper",
  "description": ""},
{ "name": "org.apache.royale.svg.DiffuseLightingFilterElement",
  "description": "The DiffuseLightingFilterElement",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.5", "Royale 0.9.5"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.DisableClipBead",
  "description": "The DisableClipBead bead allows you to disable a ClipBead.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.DropShadowFilter",
  "description": "DropShadowFilter is a bead that injects a series of beads in the correct order and initialized them.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.Ellipse",
  "description": ""},
{ "name": "org.apache.royale.svg.Filter",
  "description": "The Filter bead allows you to filter an SVG element. Filter elements should be added to the strand to achieve the desired effect.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.FilterElement",
  "description": "FilterElement abstracts some methods and vars for elements that can go in an SVG filter",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.FullAlphaFilterElement",
  "description": "The FullAlphaFilterElement",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.GraphicContainer",
  "description": "The default property uses when additional MXML content appears within an element's definition in an MXML file."},
{ "name": "org.apache.royale.svg.GraphicShape",
  "description": ""},
{ "name": "org.apache.royale.svg.IChainableFilter",
  "description": "The IChainableFilter interface describes a filter that can be a part of a chain of filters",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.Image",
  "description": ""},
{ "name": "org.apache.royale.svg.InvertFilterElement",
  "description": "The InvertFilterElement makes a filter inset",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.LinearGradient",
  "description": ""},
{ "name": "org.apache.royale.svg.MaskBead",
  "description": "The MaskBead transforms an IUIBase element into a mask definition and contains methods to attach an existing element to this mask definition.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.MergeFilterElement",
  "description": "The MergeFilterElement merges several filter elements",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.OffsetFilterElement",
  "description": "The OffsetFilterElement bead adds an filterElement to a filtered SVG element",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.Path",
  "description": ""},
{ "name": "org.apache.royale.svg.Rect",
  "description": ""},
{ "name": "org.apache.royale.svg.RetainColorBevelFilter",
  "description": "RetainColorBevelFilter extends BevelFilter to and darkens it somewhat in an attempt to retain the original colors in its graphic core. This is an exprimental component designed to emulate PhotoShop's behavior.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.5", "Royale 0.9.5"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.SpreadFilterElement",
  "description": "The SpreadFilterElement adjusts the spread of the filter",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.SuperimposeFilter",
  "description": "SuperimposeFilter composes superimposes several filters one on top of the other.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.Text",
  "description": "Draws a string of characters at a specific location using the fill value of color and alpha.  // TODO (aharui) ignore imports of external linkage interfaces?",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "royaleignoreimport",
       "values": ["SVGLocatable", "SVGLocatable"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.TextButton",
  "description": ""},
{ "name": "org.apache.royale.svg.TileFilterElement",
  "description": "The TileFilterElement fills up the filter by repeating the input",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.5", "Royale 0.9.5"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.TransformBead",
  "description": ""},
{ "name": "org.apache.royale.svg.TransformableCompoundGraphic",
  "description": "TransformableCompoundGraphic adds a <g> element in which drawn elements are nested. This is useful for applying transforms and other low level operations not available on SVG elements.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.svg.beads.ImageView",
  "description": "The ImageView class creates the visual elements of the org.apache.royale.svg.Image component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.AbsoluteLayoutTweener",
  "description": ""},
{ "name": "org.apache.royale.utils.AnimationUtil",
  "description": "The AnimationUtil class wraps callbacks to be called when the platform is ready for the next draw. (requestAnimationFrame in HTML and ENTER_FRAME in Flash)",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.8", "Royale 0.8"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.BinaryData",
  "description": "The BinaryData class is a class that represents binary data.  The way browsers handle binary data varies.  This class abstracts those differences..",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.BrowserInfo",
  "description": "The BrowserInfo class is a convenience class for getting info about the current browser environment. It uses browser sniffing which is generally considered a fragile way to get this info, but it's the best we have. You cannot instantiate your own instance of a BrowserInfo. To get the current environment use `BrowserInfo.current()` This will return a static instance which represents your current browser environment. This class contains blank values on Flash.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9", "Royale 0.9"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.BrowserUtils",
  "description": "The BrowserUtils class has convenience methods abstracting differences in executing browser code in Flash and HTML.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7.0", "Royale 0.7.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.CSSBorderUtils",
  "description": "The CSSBorderUtils class is shared code for getting the styles regarding borders and drawing one.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.CSSUtils",
  "description": "The CSSUtils class is a collection of static functions that provide utility features for managing CSS values.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.ClassSelectorList",
  "description": "The ClassSelectorList class is used to manage the list of class selectors applied to a component.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 2.6", "Flash 9", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.ColorUtil",
  "description": "The ColorUtil class is an all-static class with methods for working with RGB colors within Royale. You do not create instances of ColorUtil; instead you simply call static methods such as the <code>ColorUtil.adjustBrightness()</code> method.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.CompressionUtils",
  "description": ""},
{ "name": "org.apache.royale.utils.DisplayUtils",
  "description": "The SpriteUtils class is a collection of static functions that are useful for geometric operations on visible objects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7", "Royale 0.7"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.EffectTimer",
  "description": "The Timer class dispatches events based on a delay and repeat count.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.Endian",
  "description": "The endianness of the byte data.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7.0", "Royale 0.7.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.HSV",
  "description": "The HSV class stores colors in HSV format",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.6", "Royale 0.9.6"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]},
    {  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.utils.HTMLLoader",
  "description": "The Timer class dispatches events based on a delay and repeat count.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.IBinaryDataInput",
  "description": ""},
{ "name": "org.apache.royale.utils.IBinaryDataOutput",
  "description": ""},
{ "name": "org.apache.royale.utils.IClassSelectorListSupport",
  "description": "The IClassSelectorList interface stablish the contract methods for componnets that use ClassSelectorList to deal with class selector names",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.3", "Royale 0.9.3"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.IEffectsGenerator",
  "description": "The IEffectsGenerator interface is the basic interface for classes generating tweener effects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.IntUtil",
  "description": "Contains reusable methods for operations pertaining to int values."},
{ "name": "org.apache.royale.utils.JXON",
  "description": "JXON is a lightweight class for parsing and using simple XML. It gives access to children in the XML tree as an array of `children`. Attributes are an object `attribute` with the attribute key/value pairs. Namespaces are completely ignored. If you need more functionality such as E4X and advanced filtering, use the XML and XMLList classes instead. To parse XML, use JXON.parse(xmlStr) where xmlStr is a string of your XML.",
"tags": [
{  "tagName": "royalesuppresspublicvarwarning",
       "values": []}  ]},
{ "name": "org.apache.royale.utils.LayoutTweener",
  "description": "",
"tags": [
{  "tagName": "author",
       "values": ["Yishay", "Yishay"]}  ]},
{ "name": "org.apache.royale.utils.LocaleUtils",
  "description": "The LocaleUtils class is an all-static class with methods for getting informatiojn about the locale. You do not create instances of LocaleUtils; instead you call methods such as the <code>LocaleUtils.getLocale()</code> method.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 0.0", "Royale 1.0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.MD5",
  "description": ""},
{ "name": "org.apache.royale.utils.MXMLDataInterpreter",
  "description": "The MXMLDataInterpreter class is the class that interprets the encoded information generated by the compiler that describes the contents of an MXML document.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "royaleignoreimport",
       "values": ["goog.bind", "goog.bind"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.MixinManager",
  "description": "The MixinManager class is the class that instantiates mixins linked into the application.  Mixins are classes with [Mixin] metadata and are often linked in via the -includes option.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.MockContentView",
  "description": ""},
{ "name": "org.apache.royale.utils.MockLayoutChild",
  "description": ""},
{ "name": "org.apache.royale.utils.MockLayoutHost",
  "description": ""},
{ "name": "org.apache.royale.utils.MockLayoutParent",
  "description": ""},
{ "name": "org.apache.royale.utils.MockParent",
  "description": ""},
{ "name": "org.apache.royale.utils.MoveGenerator",
  "description": ""},
{ "name": "org.apache.royale.utils.OSUtils",
  "description": "The OSUtils class is an all-static class with methods for getting information about the host operating system. You do not create instances of OSUtils; instead you call methods such as the <code>OSUtils.getOS()</code> method.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 0.0", "Royale 1.0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.ObjectMap",
  "description": "The ObjectMap class is a hash class which supports weak keys and object keys on systems which support it. This includes Flash and most modern browsers. For browsers which do not support Map and WeakMap, it falls back to simple object hashes.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.1", "Royale 0.9.1"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.ObjectUtil",
  "description": "The ObjectUtil class contains static utility methods for analyzing and manipulating Objects. You do not create instances of ObjectUtil; instead you call methods such as the <code>ObjectUtil.toString(var)</code> method.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 0.0", "Royale 1.0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.PNGEncoder",
  "description": "The PNGEncoder class converts raw bitmap images into encoded images using Portable Network Graphics (PNG) lossless compression.  <p>For the PNG specification, see http://www.w3.org/TR/PNG/</p>.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 1.0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.PointUtils",
  "description": "The PointUtils class is a collection of static functions that convert Points between coordinate spaces.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.Proxy",
  "description": "The Proxy class calls methods when properties are set and read and deleted.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.ResizeGenerator",
  "description": ""},
{ "name": "org.apache.royale.utils.SolidBorderUtil",
  "description": "The SolidBorderUtil class is a utility class that draws a solid color border of a specified color, thickness and alpha.  This class is used to composite Flash equivalents of JS entities and has no JS equivalent.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.StringPadder",
  "description": "The StringPadder utility class is an all-static class with methods for working with String objects. You do not create instances of StringPadder; instead you call methods such as the <code>StringPadder.pad()</code> method.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 0.0", "Royale 1.0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.StringTrimmer",
  "description": "The StringTrimmer class is a collection of static functions that provide utility features for trimming whitespace off Strings.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.StringUtil",
  "description": "The StringUtil utility class is an all-static class with methods for working with String objects. You do not create instances of StringUtil; instead you call methods such as the <code>StringUtil.substitute()</code> method.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 0.0", "Royale 1.0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.Timer",
  "description": "The Timer class dispatches events based on a delay and repeat count.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.UIDUtil",
  "description": "The UIDUtil class is an all-static class with methods for working with UIDs (unique identifiers) within Royale. You do not create instances of UIDUtil; instead you simply call static methods such as the <code>UIDUtil.createUID()</code> method.  <p><b>Note</b>: If you have a dynamic object that has no [Bindable] properties (which force the object to implement the IUID interface), Royale adds an internal property that contains a UID to the object. To avoid having this field in your dynamic object, make it [Bindable], implement the IUID interface in the object class, or set a <coded>uid</coded> property with a value.</p>",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
    {  "tagName": "productversion",
       "values": ["Royale 1.0.0", "Royale 0.0", "Royale 1.0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.UIModuleUtils",
  "description": "The UIModuleUtils class can load a UIModule.",
"tags": [
{  "tagName": "toplevel",
       "values": []},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.UIUtils",
  "description": "The UIUtils class is a collection of static functions that provide utility features to UIBase objects.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.URLUtils",
  "description": "The URLUtils class is a collection of static functions that wrap dealing with object URLs in the browser.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.7", "Royale 0.7"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.ViewSourceContextMenuOption",
  "description": "The ViewSourceContextMenuOption class is a class that implements the \"View Source\" option in Flash for a Royale application.  There is no JS equivalent as browsers always display source.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.dbg.DOMPathUtil",
  "description": "The DOMPathUtil class is a tracks instances of display objects and provides a unique string for each one based on its position in the tree of display objects.  It is generally used for trace output.  If you think you need this for production applications you might want to re-think your design.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.net.IDataInput",
  "description": ""},
{ "name": "org.apache.royale.utils.net.IDataOutput",
  "description": ""},
{ "name": "org.apache.royale.utils.net.IDynamicPropertyOutput",
  "description": "This interface controls the serialization of dynamic properties of dynamic objects. You use this interface with the IDynamicPropertyWriter interface to create an implementation for configuring serialization of dynamic objects.  This interface is a placeholder for SWF, and cannot be used to with native serialization, because the native class (e.g. ByteArray) that supports serialization does not implement this interface (and that cannot change)"},
{ "name": "org.apache.royale.utils.net.IDynamicPropertyWriter",
  "description": "This interface controls the serialization of dynamic properties of dynamic objects. This interface is used with the IDynamicPropertyOutput interface to control the serialization of dynamic properties of dynamic objects. To use this interface, assign an object that implements the IDynamicPropertyWriter interface to the AMFObjectEncoding.dynamicPropertyWriter property."},
{ "name": "org.apache.royale.utils.net.IExternalizable",
  "description": ""},
{ "name": "org.apache.royale.utils.string.Base64",
  "description": "Base64 encoding/decoding that works cross browsers",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.9.4", "Royale 0.9.4"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.undo.IOperation",
  "description": "IOperation defines the interface for operations that can be undone and redone.",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.undo.IUndoManager",
  "description": "IUndoManager defines the interface for managing the undo and redo stacks.  <p>An undo manager maintains a stack of operations that can be undone and redone.</p>",
"tags": [
{  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]},
{ "name": "org.apache.royale.utils.undo.UndoManager",
  "description": "The UndoManager class manages the history of editing operations on a text flow so that these operations can be undone and redone.  <p>The undo manager maintains two stacks of IOperation objects. When a reversible operation is executed, it is placed on the undo stack. If that operation is undone, it is removed from the undo stack, reversed, and placed on the redo stack. Likewise, if that operation is then redone, it is removed from the redo stack, re-executed, and then placed onto the undo stack again. If another operation is executed first, the redo stack is cleared.</p>  <p>If the TextFlow is modified directly (not via calls to the edit manager, but directly via calls to the managed FlowElement objects), then the edit manager clears the undo stack to prevent the stack from getting out of sync with the current state.</p>",
"tags": [
{  "tagName": "see",
       "values": ["flashx.textLayout.edit.EditManager", "flashx.textLayout.edit.EditManager"]},
    {  "tagName": "playerversion",
       "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
    {  "tagName": "productversion",
       "values": ["Royale 0.0", "Royale 0.0"]},
    {  "tagName": "langversion",
       "values": ["3.0", "3.0"]}  ]}]}